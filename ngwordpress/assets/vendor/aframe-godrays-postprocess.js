!function(e){function s(i){if(r[i])return r[i].exports;var t=r[i]={exports:{},id:i,loaded:!1};return e[i].call(t.exports,t,t.exports,s),t.loaded=!0,t.exports}var r={};return s.m=e,s.c=r,s.p="",s(0)}([function(e,s,r){if(r(1),"undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerComponent("godrays-postprocess",{schema:{},multiple:!1,init:function(){this.el;this.sphereMesh,this.sunPosition=new THREE.Vector3(0,0,-5e3),this.screenSpacePosition=new THREE.Vector3,this.mouseX=0,this.mouseY=0,this.windowHalfX=window.innerWidth/2,this.windowHalfY=window.innerHeight/2,this.camera=this.el.sceneEl.camera,this.renderer=this.el.sceneEl.renderer,this.orbitRadius=200,this.bgColor=2818104,this.sunColor=16772608,this.postprocessing={enabled:!0},this.postprocessing.scene=new THREE.Scene,this.postprocessing.camera=new THREE.OrthographicCamera(window.innerWidth/-2,window.innerWidth/2,window.innerHeight/2,window.innerHeight/-2,-1e4,1e4),this.postprocessing.camera.position.z=100,this.postprocessing.scene.add(this.postprocessing.camera);var e={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat};this.postprocessing.rtTextureColors=new THREE.WebGLRenderTarget(window.innerWidth,window.innerHeight,e),this.postprocessing.rtTextureDepth=new THREE.WebGLRenderTarget(window.innerWidth,window.innerHeight,e);var s=window.innerWidth/4,r=window.innerHeight/4;this.postprocessing.rtTextureGodRays1=new THREE.WebGLRenderTarget(s,r,e),this.postprocessing.rtTextureGodRays2=new THREE.WebGLRenderTarget(s,r,e);var i=THREE.ShaderGodRays.godrays_generate;this.postprocessing.godrayGenUniforms=THREE.UniformsUtils.clone(i.uniforms),this.postprocessing.materialGodraysGenerate=new THREE.ShaderMaterial({uniforms:this.postprocessing.godrayGenUniforms,vertexShader:i.vertexShader,fragmentShader:i.fragmentShader});var t=THREE.ShaderGodRays.godrays_combine;this.postprocessing.godrayCombineUniforms=THREE.UniformsUtils.clone(t.uniforms),this.postprocessing.materialGodraysCombine=new THREE.ShaderMaterial({uniforms:this.postprocessing.godrayCombineUniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader});var o=THREE.ShaderGodRays.godrays_fake_sun;this.postprocessing.godraysFakeSunUniforms=THREE.UniformsUtils.clone(o.uniforms),this.postprocessing.materialGodraysFakeSun=new THREE.ShaderMaterial({uniforms:this.postprocessing.godraysFakeSunUniforms,vertexShader:o.vertexShader,fragmentShader:o.fragmentShader}),this.postprocessing.godraysFakeSunUniforms.bgColor.value.setHex(this.bgColor),this.postprocessing.godraysFakeSunUniforms.sunColor.value.setHex(this.sunColor),this.postprocessing.godrayCombineUniforms.fGodRayIntensity.value=.5,this.postprocessing.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(window.innerWidth,window.innerHeight),this.postprocessing.materialGodraysGenerate),this.postprocessing.quad.position.z=-9900,this.postprocessing.scene.add(this.postprocessing.quad)},update:function(e){},remove:function(){},tick:function(e){this.scene=this.el.sceneEl.object3D,this.renderer=this.el.sceneEl.renderer,this.renderer.autoClear=!1,this.renderer.sortObjects=!1,this.renderer.setClearColor(this.bgColor);Date.now()/4e3;if(this.camera.position.x+=.036*(this.mouseX-this.camera.position.x),this.camera.position.y+=.036*(-this.mouseY-this.camera.position.y),this.postprocessing.enabled){this.scene.children[2].scale.set(.001,.001,.001),this.screenSpacePosition.copy(this.sunPosition).project(this.camera),this.screenSpacePosition.x=(this.screenSpacePosition.x+1)/2,this.screenSpacePosition.y=(this.screenSpacePosition.y+1)/2,this.postprocessing.godrayGenUniforms.vSunPositionScreenSpace.value.x=this.screenSpacePosition.x,this.postprocessing.godrayGenUniforms.vSunPositionScreenSpace.value.y=this.screenSpacePosition.y,this.postprocessing.godraysFakeSunUniforms.vSunPositionScreenSpace.value.x=this.screenSpacePosition.x,this.postprocessing.godraysFakeSunUniforms.vSunPositionScreenSpace.value.y=this.screenSpacePosition.y,this.renderer.clearTarget(this.postprocessing.rtTextureColors,!0,!0,!1);var s=.74*window.innerHeight,r=.74*window.innerHeight;this.screenSpacePosition.x*=window.innerWidth,this.screenSpacePosition.y*=window.innerHeight,this.renderer.setScissor(this.screenSpacePosition.x-r/2,this.screenSpacePosition.y-s/2,r,s),this.renderer.setScissorTest(!0),this.postprocessing.godraysFakeSunUniforms.fAspect.value=window.innerWidth/window.innerHeight,this.postprocessing.scene.overrideMaterial=this.postprocessing.materialGodraysFakeSun,this.renderer.render(this.postprocessing.scene,this.postprocessing.camera,this.postprocessing.rtTextureColors),this.renderer.setScissorTest(!1),this.scene.overrideMaterial=null,this.renderer.render(this.scene,this.camera,this.postprocessing.rtTextureColors),this.scene.overrideMaterial=this.materialDepth,this.renderer.render(this.scene,this.camera,this.postprocessing.rtTextureDepth,!0);var i=1,t=6,o=1,n=i*Math.pow(t,-o);this.postprocessing.godrayGenUniforms.fStepSize.value=n,this.postprocessing.godrayGenUniforms.tInput.value=this.postprocessing.rtTextureDepth.texture,this.postprocessing.scene.overrideMaterial=this.postprocessing.materialGodraysGenerate,this.renderer.render(this.postprocessing.scene,this.postprocessing.camera,this.postprocessing.rtTextureGodRays2),o=2,n=i*Math.pow(t,-o),this.postprocessing.godrayGenUniforms.fStepSize.value=n,this.postprocessing.godrayGenUniforms.tInput.value=this.postprocessing.rtTextureGodRays2.texture,this.renderer.render(this.postprocessing.scene,this.postprocessing.camera,this.postprocessing.rtTextureGodRays1),o=3,n=i*Math.pow(t,-o),this.postprocessing.godrayGenUniforms.fStepSize.value=n,this.postprocessing.godrayGenUniforms.tInput.value=this.postprocessing.rtTextureGodRays1.texture,this.renderer.render(this.postprocessing.scene,this.postprocessing.camera,this.postprocessing.rtTextureGodRays2),this.postprocessing.godrayCombineUniforms.tColors.value=this.postprocessing.rtTextureColors.texture,this.postprocessing.godrayCombineUniforms.tGodRays.value=this.postprocessing.rtTextureGodRays2.texture,this.postprocessing.scene.overrideMaterial=this.postprocessing.materialGodraysCombine,this.renderer.render(this.postprocessing.scene,this.postprocessing.camera),this.postprocessing.scene.overrideMaterial=null}else this.renderer.clear(),this.renderer.render(this.scene,this.camera)},pause:function(){},play:function(){var e=this.el;e.sceneEl.renderer}})},function(e,s){THREE.ShaderGodRays={godrays_generate:{uniforms:{tInput:{value:null},fStepSize:{value:1},vSunPositionScreenSpace:{value:new THREE.Vector2(.5,.5)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#define TAPS_PER_PASS 6.0","varying vec2 vUv;","uniform sampler2D tInput;","uniform vec2 vSunPositionScreenSpace;","uniform float fStepSize;","void main() {","vec2 delta = vSunPositionScreenSpace - vUv;","float dist = length( delta );","vec2 stepv = fStepSize * delta / dist;","float iters = dist/fStepSize;","vec2 uv = vUv.xy;","float col = 0.0;","if ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;","uv += stepv;","if ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;","uv += stepv;","if ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;","uv += stepv;","if ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;","uv += stepv;","if ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;","uv += stepv;","if ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;","uv += stepv;","gl_FragColor = vec4( col/TAPS_PER_PASS );","gl_FragColor.a = 1.0;","}"].join("\n")},godrays_combine:{uniforms:{tColors:{value:null},tGodRays:{value:null},fGodRayIntensity:{value:.69},vSunPositionScreenSpace:{value:new THREE.Vector2(.5,.5)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["varying vec2 vUv;","uniform sampler2D tColors;","uniform sampler2D tGodRays;","uniform vec2 vSunPositionScreenSpace;","uniform float fGodRayIntensity;","void main() {","gl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );","gl_FragColor.a = 1.0;","}"].join("\n")},godrays_fake_sun:{uniforms:{vSunPositionScreenSpace:{value:new THREE.Vector2(.5,.5)},fAspect:{value:1},sunColor:{value:new THREE.Color(16772608)},bgColor:{value:new THREE.Color(0)}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["varying vec2 vUv;","uniform vec2 vSunPositionScreenSpace;","uniform float fAspect;","uniform vec3 sunColor;","uniform vec3 bgColor;","void main() {","vec2 diff = vUv - vSunPositionScreenSpace;","diff.x *= fAspect;","float prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );","prop = 0.35 * pow( 1.0 - prop, 3.0 );","gl_FragColor.xyz = mix( sunColor, bgColor, 1.0 - prop );","gl_FragColor.w = 1.0;","}"].join("\n")}}}]);