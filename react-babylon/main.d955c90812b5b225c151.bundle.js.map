{"version":3,"file":"main.d955c90812b5b225c151.bundle.js","sources":["webpack:///./src/stories/babylonjs/SingleAxisRotateMeshBehavior.js"],"sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { HostWithEvents, withBabylonJS } from 'react-babylonjs'\nimport { Axis } from 'babylonjs'\n\nclass SingleAxisRotateMeshBehavior extends Component {\n  componentWillUnmount () {\n    this.scene.onBeforeRenderObservable.remove(this.handler)\n  }\n\n  render () {\n    return (<HostWithEvents {...this.props} onParented={(scene, engine, parent) => {\n      this.scene = scene\n      this.handler = scene.onBeforeRenderObservable.add(() => {\n        // TODO: if parent.hostInstance.rotationQuaternion then .rotate(xxx, axis)\n        switch (this.props.axis) {\n          case Axis.X:\n            this.rotationProperty = 'x'\n            break\n          case Axis.Z:\n            this.rotationProperty = 'z'\n            break\n          default:\n            this.rotationProperty = 'y'\n            break\n        }\n        let deltaTimeInMillis = engine.getDeltaTime()\n        parent.hostInstance.rotation[this.rotationProperty] += ((this.props.rpm / 60) * Math.PI * 2 * (deltaTimeInMillis / 1000))\n      })\n    }\n\n    } />)\n  }\n}\n\n// Specifies the default values for props:\nSingleAxisRotateMeshBehavior.defaultProps = {\n  rpm: 1,\n  axis: Axis.Y\n}\n\nSingleAxisRotateMeshBehavior.propTypes = {\n  rpm: PropTypes.number,\n  axis: PropTypes.object\n}\n\nexport default withBabylonJS(SingleAxisRotateMeshBehavior)\n"],"mappings":"AAKA","sourceRoot":""}