/******/!function(e){function t(n){if(r[n])return r[n].exports;var i=r[n]={exports:{},id:n,loaded:!1};return e[n].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}// webpackBootstrap
/******/
var r={};return t.m=e,t.c=r,t.p="",t(0)}([function(e,t,r){"use strict";var n=r(1),i=r(2),s=r(3),o=r(4),a=r(5),l=r(6),h=r(7),c=r(8),u=r(9);angular.module("cloudbox",["ngAnimate","ngCookies","ngTouch","ngSanitize","ngMessages","ngAria","ngResource","ui.router","toastr"]).constant("malarkey",malarkey).constant("moment",moment).config(n.config).config(i.routerConfig).run(s.runBlock).service("githubContributor",h.GithubContributorService).service("webDevTec",c.WebDevTecService).service("_soundCloud",u.SoundCloudWrapper).controller("MainController",o.MainController).controller("HomeController",a.HomeController).controller("PlayController",l.PlayController)},function(e,t){"use strict";function r(e,t){"ngInject";e.debugEnabled(!0),t.allowHtml=!0,t.timeOut=3e3,t.positionClass="toast-top-right",t.preventDuplicates=!0,t.progressBar=!0}r.$inject=["$logProvider","toastrConfig"],Object.defineProperty(t,"__esModule",{value:!0}),t.config=r},function(e,t){"use strict";function r(e,t){"ngInject";e.state("main",{url:"/",templateUrl:"app/main/main.html",controller:"MainController",controllerAs:"main"}),e.state("play",{url:"/play/:id/:name",templateUrl:"app/play/play.html",controller:"PlayController",controllerAs:"play"}),t.otherwise("/")}r.$inject=["$stateProvider","$urlRouterProvider"],Object.defineProperty(t,"__esModule",{value:!0}),t.routerConfig=r},function(e,t){"use strict";function r(e){"ngInject";e.debug("runBlock end")}r.$inject=["$log"],Object.defineProperty(t,"__esModule",{value:!0}),t.runBlock=r},function(e,t){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),i=function(){function e(t,n,i,s,o){"ngInject";r(this,e),this.classAnimation="",this.creationDate=1454445734459,this._scope=i,this.loc=s,null==o.getSc()?(o.setSc({client_id:"b861cf4f67c435a1183dc13112b0f56f",promise:n.defer,processing:null,scope:i,tracksearchcallback:null}),this._sc=o.getSc()):this._sc=o.getSc(),this._sc._currentTrack=null,this.activate(t)}return e.$inject=["$timeout","$q","$scope","$location","_soundCloud"],n(e,[{key:"activate",value:function(e){this.reset(),this._scope.submit=function(e){this.loc.path("/home"),this._scope.$broadcast("grabSound",e)}.bind(this),this._scope.goVisualize=function(e){this._sc.setPlay(e),this.loc.path("/play/"+e.id+"/"+e.permalink)}.bind(this),setTimeout(function(){this.triggerSearch()}.bind(this),50)}},{key:"reset",value:function(){this._sc.destroyScene()}},{key:"triggerSearch",value:function(){null!=this._sc._currentSeach&&(this.loc.path("/home"),$("#tracksearchInput").val(this._sc._currentSeach),this._scope.$broadcast("grabSound",this._sc._currentSeach))}}]),e}();t.MainController=i},function(e,t){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var n=function i(e,t,n,s,o,a){"ngInject";r(this,i),this._scope=o,this._deferred=s.defer,this._sc=a.getSc(),this._scope.$on("grabSound",function(e){this._sc._scope=this._scope,(e.targetScope.tracksearch||""!=$("#tracksearchInput").val())&&(e.targetScope.tracksearch?this._scope.tracksearch=e.targetScope.tracksearch:this._scope.tracksearch=$("#tracksearchInput").val(),this._sc.getTracks(this._scope.tracksearch))}.bind(this))};n.$inject=["$timeout","webDevTec","toastr","$q","$scope","_soundCloud"],t.HomeController=n},function(e,t){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),i=function(){function e(t,n,i,s,o){"ngInject";r(this,e),this.classAnimation="",this.creationDate=1454445734459,this._scope=i,this.loc=s,this._sc=o.getSc(),this.activate(t),console.log(this)}return e.$inject=["$timeout","$q","$scope","$location","_soundCloud"],n(e,[{key:"activate",value:function(e){console.log(this._sc),this._sc.streamTrack(),this._scope.submit=function(e){this._sc._currentSeach=e,this.loc.path("/home"),this._scope.$broadcast("grabSound",e)}.bind(this)}}]),e}();t.PlayController=i},function(e,t){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),i=function(){function e(t,n){"ngInject";r(this,e),this.$log=t,this.$http=n,this.apiHost="https://api.github.com/repos/Swiip/generator-gulp-angular"}return e.$inject=["$log","$http"],n(e,[{key:"getContributors",value:function(e){var t=this;return e||(e=30),this.$http.get(this.apiHost+"/contributors?per_page="+e).then(function(e){return e.data})["catch"](function(e){t.$log.error("XHR Failed for getContributors.\n"+angular.toJson(e.data,!0))})}}]),e}();t.GithubContributorService=i},function(e,t){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),i=function(){function e(){"ngInject";r(this,e),this.data=[{title:"AngularJS",url:"https://angularjs.org/",description:"HTML enhanced for web apps!",logo:"angular.png"},{title:"BrowserSync",url:"http://browsersync.io/",description:"Time-saving synchronised browser testing.",logo:"browsersync.png"},{title:"GulpJS",url:"http://gulpjs.com/",description:"The streaming build system.",logo:"gulp.png"},{title:"Jasmine",url:"http://jasmine.github.io/",description:"Behavior-Driven JavaScript.",logo:"jasmine.png"},{title:"Karma",url:"http://karma-runner.github.io/",description:"Spectacular Test Runner for JavaScript.",logo:"karma.png"},{title:"Protractor",url:"https://github.com/angular/protractor",description:"End to end test framework for AngularJS applications built on top of WebDriverJS.",logo:"protractor.png"},{title:"ES6 (Babel formerly 6to5)",url:"https://babeljs.io/",description:"Turns ES6+ code into vanilla ES5, so you can use next generation features today.",logo:"babel.png"}]}return n(e,[{key:"getTec",value:function(){return this.data}}]),e}();t.WebDevTecService=i},function(e,t,r){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),s=(r(10),function(){function e(){"ngInject";n(this,e),this._sc=null}return i(e,[{key:"getSc",value:function(){return this._sc}},{key:"setSc",value:function(e){this._sc=new _SC(e)}}]),e}());t.SoundCloudWrapper=s},function(e,t,r){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var i=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),s=(r(11),function(){function e(){var t=arguments.length<=0||void 0===arguments[0]?{client_id:"b861cf4f67c435a1183dc13112b0f56f",promise:$q.defer,processing:processing,scopet:$scope,tracksearchcallback:null}:arguments[0];n(this,e),this._deferred=t.promise,this._processing=t.processing,this._ci=t.client_id,this._scope=t.scope,this._scope.tracks=[],this._defaultSelections=["massive attack","beastie boys","thievery corporation","david bowie","velvet underground"],this._trackSearchCallback=t.tracksearchcallback,this.getDefaultTrack(),this._currentArtist=null,this._BabylonSound=_BabylonSound,this._yDiff=240,this._zDiff=30,this._currentTrack=null,this._soundPlaing=null,this._currentSeach=null,this._defaultZoom=5}return i(e,[{key:"getCurrentArtist",value:function(){return this._currentArtist}},{key:"getRandomArr",value:function(e){return Math.floor(Math.random()*e.length)}},{key:"initScene",value:function(){}},{key:"destroyScene",value:function(){this._currentTrack=null,$("canvas").remove(),null!=this._soundPlaing&&(this._BabylonSound._milkDrop.stopPlaying(),this._soundPlaing.stop(),this._soundPlaing=null),this._BabylonSound=null,$(".soundscape").fadeIn("fast")}},{key:"initSoundCloud",value:function(){window.SC.initialize({client_id:this._ci})}},{key:"initDom",value:function(){TweenLite.set(jQuery("body"),{css:{transformPerspective:400,perspective:400,transformStyle:"preserve-3d"}}),jQuery(window).on("mousewheel",function(e){if(e.preventDefault(),e.stopPropagation(),!$(this).data("flag")){var t=this;$(this).data("timeout",window.setTimeout(function(){$(t).data("flag",!1)},800)),$(this).data("flag",!0),this.zoomPlane(e.deltaY)}}.bind(this)),$(window).keypress(function(e){119==e.charCode&&this.zoomPlane(5*this._defaultZoom++),115==e.charCode&&this.zoomPlane(5*this._defaultZoom--)}.bind(this))}},{key:"zoomPlane",value:function(e){for(var t=0;t<jQuery(".soundBlock").length;t++){var r=jQuery(".soundBlock")[t];TweenLite.to(r,1,{transform:"translateZ("+(parseInt(jQuery(r).attr("data-z"))+20*e)+"px)"}).eventCallback("onComplete",function(){r.isMoving=!1},[r])}}},{key:"debounce",value:function(e,t,r){var n;return function(){var i=this,s=arguments,o=function(){n=null,r||e.apply(i,s)},a=r&&!n;clearTimeout(n),n=setTimeout(o,t),a&&e.apply(i,s)}}},{key:"getDefaultTrack",value:function(){this.initDom();var e=this.getRandomArr(this._defaultSelections);this._currentArtist=this._defaultSelections[e],this.getTracks(this._currentArtist)}},{key:"getTracks",value:function(){var e=arguments.length<=0||void 0===arguments[0]?"st. vincent":arguments[0];this.initSoundCloud(),window.SC.get("/tracks",{q:e},function(t){this._currentSeach=e,this._scope.$apply(function(){this.resolveTrackPromise(t),this._scope.tracks=t.concat(this._scope.tracks),setTimeout(this.buildPlanes,5),null!=this._trackSearchCallback&&this._trackSearchCallback()}.bind(this))}.bind(this))}},{key:"resolveTrackPromise",value:function(e){return this._deferred().resolve(e),this._deferred().promise}},{key:"setPlay",value:function(e){this._currentTrack=e}},{key:"goVisualize",value:function(e){console.log("track id "+e)}},{key:"streamTrack",value:function(){null!=this._currentTrack&&window.SC.stream("/tracks/"+this._currentTrack.id,function(e){this._soundPlaing=e,this._BabylonSound=new _BabylonSound(e.url),$(".soundscape").fadeOut("fast")}.bind(this))}},{key:"buildPlanes",value:function(){for(var e=0;e<jQuery(".soundBlock").length;e++){var t=jQuery(".soundBlock")[e],r=20,n=-70+-(200*e);$(t).css("transform","translateY("+r+"px) translateZ("+n+"px)"),$(t).attr("data-z",n),$(t).attr("data-y",r),$(t).fadeIn("fast")}}},{key:"render",value:function(){}},{key:"postprocess",value:function(){}},{key:"resize",value:function(){}},{key:"wrapTexture",value:function(){}},{key:"analyzeTrack",value:function(){}},{key:"visualizeTrack",value:function(){}}]),e}());e.exports=s,window._SC=s},function(e,t){(function(e){"use strict";var t=t||{};!function(e,r){function n(e,t){function r(){}r.prototype=e;var n=new r;for(var i in t)n[i]=t[i];return t.toString!==Object.prototype.toString&&(n.toString=t.toString),n}function i(e,t){if(null==t)return null;null==t.__id__&&(t.__id__=kr++);var r;return null==e.hx__closures__?e.hx__closures__={}:r=e.hx__closures__[t.__id__],null==r&&(r=function(){return r.method.apply(r.scope,arguments)},r.scope=e,r.method=t,e.hx__closures__[t.__id__]=r),r}t.BABYLON=t.BABYLON||{};var s={},o=function(){return Re.__string_rec(this,"")},a=function(e,t){t=t.split("u").join(""),this.r=new RegExp(e,t)};s.EReg=a,a.__name__=["EReg"],a.prototype={match:function(e){return this.r.global&&(this.r.lastIndex=0),this.r.m=this.r.exec(e),this.r.s=e,null!=this.r.m},replace:function(e,t){return e.replace(this.r,t)},__class__:a};var l=function(){};s.HxOverrides=l,l.__name__=["HxOverrides"],l.cca=function(e,t){var r=e.charCodeAt(t);return r!=r?void 0:r},l.substr=function(e,t,r){return null!=t&&0!=t&&null!=r&&0>r?"":(null==r&&(r=e.length),0>t?(t=e.length+t,0>t&&(t=0)):0>r&&(r=e.length+r-t),e.substr(t,r))},l.indexOf=function(e,t,r){var n=e.length;for(0>r&&(r+=n,0>r&&(r=0));n>r;){if(e[r]===t)return r;r++}return-1},l.remove=function(e,t){var r=l.indexOf(e,t,0);return-1==r?!1:(e.splice(r,1),!0)},l.iter=function(e){return{cur:0,arr:e,hasNext:function(){return this.cur<this.arr.length},next:function(){return this.arr[this.cur++]}}};var h=t.BABYLON.Main=function(e){window.navigator.isCocoonJS=!0;var t=window.document;this.canvas=t.createElement("canvas"),this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight,window.document.body.appendChild(this.canvas),this.engine=new _(this.canvas,null,{antialias:!1}),this.engine.width=this.canvas.width,this.engine.height=this.canvas.height,this.scene=new b(this.engine),window.addEventListener("resize",i(this,this.resize)),window.addEventListener("orientationchange",i(this,this.resize)),this.canvas.addEventListener("mousedown",i(this,this.onMouseDown)),this.canvas.addEventListener("mouseup",i(this,this.onMouseUp)),this.canvas.addEventListener("mousemove",i(this,this.onMouseMove)),this.canvas.addEventListener("mousewheel",i(this,this.onMouseWheel)),this.canvas.addEventListener("keydown",i(this,this.onKeyDown)),this.canvas.addEventListener("keyup",i(this,this.onKeyUp)),null!=e&&(this.track=e),this._milkDrop=null,this.startDemo()};s.MainJS=h,h.__name__=["MainJS"],h.main=function(){window._BabylonSound=h},h.prototype={startDemo:function(){this._milkDrop=new Or(this.scene,this.track)},resize:function(e){this.engine.resize()},onKeyDown:function(e){for(var t=0,r=_.keyDown;t<r.length;){var n=r[t];++t,n(e.charCode)}},onKeyUp:function(e){for(var t=0,r=_.keyUp;t<r.length;){var n=r[t];++t,n(e.charCode)}},onMouseDown:function(e){for(var t=0,r=_.mouseDown;t<r.length;){var n=r[t];++t,n(e.clientX,e.clientY,0)}},onMouseMove:function(e){for(var t=0,r=_.mouseMove;t<r.length;){var n=r[t];++t,n(e.clientX,e.clientY)}},onMouseUp:function(e){for(var t=0,r=_.mouseUp;t<r.length;){var n=r[t];++t,n(e.clientX,e.clientY,0)}},onMouseWheel:function(e){for(var t=0,r=_.mouseWheel;t<r.length;){var n=r[t];++t,n(e.detail)}},render:function(){try{requestAnimationFrame(i(this,this.render)),CocoonJS_App_ForCocoonJS_WebViewIFrame.postMessage("update","*")}catch(t){t instanceof Ar&&(t=t.val),e.log(t)}},__class__:h},Math.__name__=["Math"];var c=function(){};s.Reflect=c,c.__name__=["Reflect"],c.field=function(e,t){try{return e[t]}catch(r){return r instanceof Ar&&(r=r.val),null}},c.setField=function(e,t,r){e[t]=r},c.getProperty=function(e,t){var r;return null==e?null:e.__properties__&&(r=e.__properties__["get_"+t])?e[r]():e[t]},c.setProperty=function(e,t,r){var n;e.__properties__&&(n=e.__properties__["set_"+t])?e[n](r):e[t]=r},c.isObject=function(e){if(null==e)return!1;var t=typeof e;return"string"==t||"object"==t&&null==e.__enum__||"function"==t&&null!=(e.__name__||e.__ename__)};var u=function(){};s.Std=u,u.__name__=["Std"],u.string=function(e){return Re.__string_rec(e,"")},u["int"]=function(e){return 0|e},u.parseInt=function(e){var t=parseInt(e,10);return 0!=t||120!=l.cca(e,1)&&88!=l.cca(e,1)||(t=parseInt(e)),isNaN(t)?null:t};var f=function(){this.b=""};s.StringBuf=f,f.__name__=["StringBuf"],f.prototype={add:function(e){this.b+=u.string(e)},__class__:f};var d=function(){};s.StringTools=d,d.__name__=["StringTools"],d.isSpace=function(e,t){var r=l.cca(e,t);return r>8&&14>r||32==r},d.ltrim=function(e){for(var t=e.length,r=0;t>r&&d.isSpace(e,r);)r++;return r>0?l.substr(e,r,t-r):e},d.rtrim=function(e){for(var t=e.length,r=0;t>r&&d.isSpace(e,t-r-1);)r++;return r>0?l.substr(e,0,t-r):e},d.trim=function(e){return d.ltrim(d.rtrim(e))},d.replace=function(e,t,r){return e.split(t).join(r)},d.hex=function(e,t){var r="",n="0123456789ABCDEF";do r=n.charAt(15&e)+r,e>>>=4;while(e>0);if(null!=t)for(;r.length<t;)r="0"+r;return r};var m=function(){};s.Type=m,m.__name__=["Type"],m.getClass=function(e){return null==e?null:Re.getClass(e)},m.getClassName=function(e){var t=e.__name__;return null==t?null:t.join(".")},m.resolveClass=function(e){var t=s[e];return null!=t&&t.__name__?t:null},m.createInstance=function(e,t){var r=t.length;switch(r){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3]);case 5:return new e(t[0],t[1],t[2],t[3],t[4]);case 6:return new e(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new e(t[0],t[1],t[2],t[3],t[4],t[5],t[6]);case 8:return new e(t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7]);default:throw new Ar("Too many arguments")}return null},m.createEmptyInstance=function(e){function t(){}return t.prototype=e.prototype,new t};var _=t.BABYLON.Engine=function(t,r,n,i){null==i&&(i=!1),null==r&&(r=!1),this.audioEngine=new z,this._canvasClientRect={x:0,y:0,width:800,height:600},this._uintIndicesCurrentlySet=!1,this._compiledEffects=new Er,this._activeTexturesCache=[],this._loadedTexturesCache=[],this._alphaMode=0,this._alphaState=new S,this._depthCullingState=new w,this.deltaTime=0,this.fps=60,this.previousFramesDuration=[],this.fpsRange=60,this._activeRenderLoops=[],this._renderingQueueLaunched=!1,this._drawCalls=0,this._runningLoop=!1,this._windowIsBackground=!1,this.scenes=[],this.renderEvenInBackground=!0,this.cullBackFaces=!0,this.isPointerLock=!1,this.isFullscreen=!1;var s=this;_.app=t,this._renderingCanvas=t,this._canvasClientRect.width=800,this._canvasClientRect.height=600,xr.context=Re.__cast(t,HTMLCanvasElement).getContext("webgl",n.antialiasing),n=null!=n?n:{},n.antialias=r,null==n.preserveDrawingBuffer&&(n.preserveDrawingBuffer=!1),this._onBlur=function(){s._windowIsBackground=!0},this._onFocus=function(){s._windowIsBackground=!1},i?this._hardwareScalingLevel=1/(window.devicePixelRatio||1):this._hardwareScalingLevel=1,this.resize(),this._caps=new p,this._caps.maxTexturesImageUnits=xr.context.getParameter(34930),this._caps.maxTextureSize=xr.context.getParameter(3379),this._caps.maxCubemapTextureSize=xr.context.getParameter(34076),this._caps.maxRenderTextureSize=xr.context.getParameter(34024),this._glVersion=xr.context.getParameter(7938),this._glExtensions=xr.context.getSupportedExtensions();try{if(this._caps.standardDerivatives=null!=xr.context.getExtension("OES_standard_derivatives"),this._caps.s3tc=xr.context.getExtension("WEBGL_compressed_texture_s3tc"),this._caps.textureFloat=null!=xr.context.getExtension("OES_texture_float"),this._caps.textureAnisotropicFilterExtension=xr.context.getExtension("EXT_texture_filter_anisotropic")||xr.context.getExtension("WEBKIT_EXT_texture_filter_anisotropic")||xr.context.getExtension("MOZ_EXT_texture_filter_anisotropic"),null!=this._caps.textureAnisotropicFilterExtension?this._caps.maxAnisotropy=xr.getParameter(this._caps.textureAnisotropicFilterExtension.MAX_TEXTURE_MAX_ANISOTROPY_EXT):this._caps.maxAnisotropy=0,this._caps.instancedArrays=xr.context.getExtension("ANGLE_instanced_arrays"),this._caps.uintIndices=null!=xr.context.getExtension("OES_element_index_uint"),this._caps.fragmentDepthSupported=null!=xr.context.getExtension("EXT_frag_depth"),this._caps.highPrecisionShaderSupported=!0,null!=xr.getShaderPrecisionFormat){var o=xr.context.getShaderPrecisionFormat(35632,36338);this._caps.highPrecisionShaderSupported=null!=o&&0!=o.precision}}catch(a){a instanceof Ar&&(a=a.val)}this._depthCullingState.set_depthTest(!0),this._depthCullingState.set_depthFunc(515),this._depthCullingState.set_depthMask(!0),this.isFullscreen=!1,this.isPointerLock=!1;var l="BabylonHx - Cross-Platform 3D Engine | "+(new Date).getFullYear()+" | www.babylonhx.com";l+=" | GL version: "+this._glVersion,e.log(l)};s["com.babylonhx.Engine"]=_,_.__name__=["com","babylonhx","Engine"],_.compileShader=function(e,t,r){var n=xr.context.createShader("vertex"==t?35633:35632);if(xr.context.shaderSource(n,(null!=r?r+"\n":"")+e),xr.context.compileShader(n),0==xr.context.getShaderParameter(n,35713))throw new Ar(xr.context.getShaderInfoLog(n));return n},_.getWebGLTextureType=function(e){return 1==e?5126:5121},_.getSamplingParameters=function(e,t){var r=9728,n=9728;return 2==e?(r=9729,n=t?9985:9729):3==e?(r=9729,n=t?9987:9729):1==e&&(r=9728,n=t?9986:9728),{min:n,mag:r}},_.prepareTexture=function(t,r,n,i,s,o,a,l,h,c){null==c&&(c=3);var u=n._engine,f=Ae.GetExponantOfTwo(i,u.getCaps().maxTextureSize),d=Ae.GetExponantOfTwo(s,u.getCaps().maxTextureSize);(f!=i||d!=s)&&e.log("Texture '"+t.url+"' is not power of two !"),xr.context.bindTexture(3553,t.data),t._baseWidth=i,t._baseHeight=s,t._width=f,t._height=d,t.isReady=!0,h(0|f,0|d);var m=_.getSamplingParameters(c,!a);xr.context.texParameteri(3553,10240,m.mag),xr.context.texParameteri(3553,10241,m.min),a||l||xr.context.generateMipmap(3553),xr.context.bindTexture(3553,null),u._activeTexturesCache=[],n._removePendingData(t)},_.partialLoad=function(e,t,r,n,i){},_.cascadeLoad=function(e,t,r,n){},_.isSupported=function(){try{if(window.navigator.isCocoonJS)return!0;var e=window.document.createElement("canvas"),t=e.getContext("webgl")||e.getContext("experimental-webgl");return null!=t&&!!window.WebGLRenderingContext}catch(r){return r instanceof Ar&&(r=r.val),!1}},_.prototype={get_drawCalls:function(){return this._drawCalls},getExtensions:function(){return this._glExtensions},getAspectRatio:function(e,t){null==t&&(t=!1);var r=e.viewport;return this.getRenderWidth(t)*r.width/(this.getRenderHeight(t)*r.height)},getRenderWidth:function(e){return null==e&&(e=!1),this.width},getRenderHeight:function(e){return null==e&&(e=!1),this.height},getRenderingCanvas:function(){return this._renderingCanvas},setHardwareScalingLevel:function(e){this._hardwareScalingLevel=e,this.resize()},getHardwareScalingLevel:function(){return this._hardwareScalingLevel},getLoadedTexturesCache:function(){return this._loadedTexturesCache},getCaps:function(){return this._caps},resetDrawCalls:function(){this._drawCalls=0},setDepthFunctionToGreater:function(){this._depthCullingState.set_depthFunc(516)},setDepthFunctionToGreaterOrEqual:function(){this._depthCullingState.set_depthFunc(518)},setDepthFunctionToLess:function(){this._depthCullingState.set_depthFunc(513)},setDepthFunctionToLessOrEqual:function(){this._depthCullingState.set_depthFunc(515)},stopRenderLoop:function(e){if(null==e)return void(this._activeRenderLoops=[]);var t=l.indexOf(this._activeRenderLoops,e,0);t>=0&&this._activeRenderLoops.splice(t,1)},_renderLoop:function(e){this._measureFps(),null!=this._renderFunction&&this._renderFunction(),window.requestAnimationFrame(i(this,this._renderLoop))},runRenderLoop:function(e){this._runningLoop=!0,this._renderFunction=e,this._renderLoop()},switchFullscreen:function(e){},clear:function(e,t,r){this._depthCullingState.apply(),this._alphaState.apply(),t&&(Re.__instanceof(e,Oe)?xr.clearColor(e.r,e.g,e.b,e.a):xr.clearColor(e.r,e.g,e.b,1)),r&&this._depthCullingState.get_depthMask()&&xr.context.clearDepth(1);var n=0;t&&(n|=16384),r&&this._depthCullingState.get_depthMask()&&(n|=256),xr.context.clear(n)},setViewport:function(e,t,r){null==r&&(r=0),null==t&&(t=0);var n;n=0==t?this.getRenderWidth():t;var i;i=0==r?this.getRenderHeight():r;var s=e.x,o=e.y;this._cachedViewport=e,xr.context.viewport(s*n|0,o*i|0,n*e.width|0,i*e.height|0)},setDirectViewport:function(e,t,r,n){this._cachedViewport=null,xr.context.viewport(e,t,r,n)},beginFrame:function(){this._measureFps()},endFrame:function(){},getFps:function(){return this.fps},getDeltaTime:function(){return this.deltaTime},_measureFps:function(){this.previousFramesDuration.push(u["int"](1e3*(De.stamp()-Ae.__startTime)));var e=this.previousFramesDuration.length;if(e>=2&&(this.deltaTime=this.previousFramesDuration[e-1]-this.previousFramesDuration[e-2]),e>=this.fpsRange){e>this.fpsRange&&(this.previousFramesDuration.splice(0,1),e=this.previousFramesDuration.length);for(var t=0,r=0,n=e-1;n>r;){var i=r++;t+=this.previousFramesDuration[i+1]-this.previousFramesDuration[i]}this.fps=1e3/(t/(e-1))}},resize:function(){var e;e=window.navigator.isCocoonJS?window.innerWidth:this._renderingCanvas.clientWidth;var t;t=window.navigator.isCocoonJS?window.innerHeight:this._renderingCanvas.clientHeight,this.setSize(e/this._hardwareScalingLevel|0,t/this._hardwareScalingLevel|0)},setSize:function(e,t){this._renderingCanvas.width=e,this._renderingCanvas.height=t;for(var r=0,n=this.scenes.length;n>r;)for(var i=r++,s=this.scenes[i],o=0,a=s.cameras.length;a>o;){var l=o++,h=s.cameras[l];h._currentRenderId=0}},bindFramebuffer:function(e,t){null==t&&(t=0),this._currentRenderTarget=e,xr.context.bindFramebuffer(36160,e._framebuffer),e.isCube?xr.context.framebufferTexture2D(36160,36064,34069+t,e.data,0):xr.context.framebufferTexture2D(36160,36064,3553,e.data,0),xr.context.viewport(0,0,e._width,e._height),this.wipeCaches()},unBindFramebuffer:function(e,t){null==t&&(t=!1),this._currentRenderTarget=null,e.generateMipMaps&&!t&&(xr.context.bindTexture(3553,e.data),xr.context.generateMipmap(3553),xr.context.bindTexture(3553,null)),xr.context.bindFramebuffer(36160,null)},generateMipMapsForCubemap:function(e){e.generateMipMaps&&(xr.context.bindTexture(34067,e.data),xr.context.generateMipmap(34067),xr.context.bindTexture(34067,null))},flushFramebuffer:function(){xr.context.flush()},restoreDefaultFramebuffer:function(){this._currentRenderTarget=null,xr.context.bindFramebuffer(36160,null),this.setViewport(this._cachedViewport,null,null),this.wipeCaches()},_resetVertexBufferBinding:function(){xr.context.bindBuffer(34962,null),this._cachedVertexBuffers=null},createVertexBuffer:function(e){var t=xr.context.createBuffer();xr.context.bindBuffer(34962,t),xr.bufferData(34962,new Float32Array(e),35044),xr.context.bindBuffer(34962,null),this._cachedVertexBuffers=null;var r=new Ot(t);return r.references=1,r},createDynamicVertexBuffer:function(e){var t=xr.context.createBuffer();xr.context.bindBuffer(34962,t),xr.bufferData(34962,new Float32Array(e),35048),xr.context.bindBuffer(34962,null),this._cachedVertexBuffers=null;var r=new Ot(t);return r.references=1,r},updateDynamicVertexBuffer:function(e,t,r){null==r&&(r=0),xr.context.bindBuffer(34962,e.buffer),t instanceof Array&&null==t.__enum__?xr.bufferSubData(34962,r,new Float32Array(t)):xr.bufferSubData(34962,r,t),xr.context.bindBuffer(34962,null),this._cachedVertexBuffers=null},_resetIndexBufferBinding:function(){xr.context.bindBuffer(34963,null),this._cachedIndexBuffer=null},createIndexBuffer:function(e){var t=xr.context.createBuffer();xr.context.bindBuffer(34963,t);var r=null,n=!1;if(this._caps.uintIndices){for(var i=0,s=e.length;s>i;){var o=i++;if(e[o]>65535){n=!0;break}}r=n?new Int32Array(e):new Int16Array(e)}else r=new Int16Array(e);xr.context.bufferData(34963,r,35044),xr.context.bindBuffer(34963,null),this._cachedIndexBuffer=null;var a=new Ot(t);return a.references=1,a.is32Bits=n,a},bindBuffers:function(e,t,r,n,i){if(this._cachedVertexBuffers!=e||this._cachedEffectForVertexBuffers!=i){this._cachedVertexBuffers=e,this._cachedEffectForVertexBuffers=i,xr.context.bindBuffer(34962,e.buffer);for(var s=0,o=0,a=r.length;a>o;){var l=o++,h=i._attributes[l];h>=0&&xr.context.vertexAttribPointer(h,r[l],5126,!1,n,s),s+=4*r[l]}}this._cachedIndexBuffer!=t&&(this._cachedIndexBuffer=t,xr.context.bindBuffer(34963,t.buffer),this._uintIndicesCurrentlySet=t.is32Bits)},bindMultiBuffers:function(e,t,r){if(this._cachedVertexBuffers!=e||this._cachedEffectForVertexBuffers!=r){this._cachedVertexBuffers=e,this._cachedEffectForVertexBuffers=r;for(var n=r._attributesNames,i=0,s=n.length;s>i;){var o=i++,a=r._attributes[o];if(a>=0){var l=e.get(n[o]);if(null==l)continue;var h=l._strideSize;xr.context.bindBuffer(34962,l._buffer.buffer),xr.context.vertexAttribPointer(a,h,5126,!1,4*h,0)}}}null!=t&&this._cachedIndexBuffer!=t&&(this._cachedIndexBuffer=t,xr.context.bindBuffer(34963,t.buffer),this._uintIndicesCurrentlySet=t.is32Bits)},_releaseBuffer:function(e){return e.references--,0==e.references?(xr.context.deleteBuffer(e.buffer),!0):!1},createInstancesBuffer:function(e){var t=new Ot(xr.context.createBuffer());return t.capacity=e,xr.context.bindBuffer(34962,t.buffer),xr.bufferData(34962,new Float32Array(e),35048),t},deleteInstancesBuffer:function(e){xr.context.deleteBuffer(e.buffer),e=null},updateAndBindInstancesBuffer:function(e,t,r){xr.context.bindBuffer(34962,e.buffer),xr.context.bufferSubData(34962,0,t);for(var n=0;4>n;){var i=n++,s=r[i];xr.context.enableVertexAttribArray(s),xr.context.vertexAttribPointer(s,4,5126,!1,64,16*i),this._caps.instancedArrays.vertexAttribDivisorANGLE(s,1)}},unBindInstancesBuffer:function(e,t){xr.context.bindBuffer(34962,e.buffer);for(var r=0;4>r;){var n=r++,i=t[n];xr.context.disableVertexAttribArray(i),this._caps.instancedArrays.vertexAttribDivisorANGLE(i,0)}},applyStates:function(){this._depthCullingState.apply(),this._alphaState.apply()},draw:function(e,t,r,n){null==n&&(n=-1),this._depthCullingState.apply(),this._alphaState.apply(),this._drawCalls++;var i;i=this._uintIndicesCurrentlySet?5125:5123;var s;return s=this._uintIndicesCurrentlySet?4:2,-1!=n?void this._caps.instancedArrays.drawElementsInstancedANGLE(e?4:1,r,i,t*s,n):void xr.context.drawElements(e?4:1,r,i,t*s)},drawPointClouds:function(e,t,r){return null==r&&(r=-1),this._depthCullingState.apply(),this._alphaState.apply(),this._drawCalls++,-1!=r?void this._caps.instancedArrays.drawArraysInstancedANGLE(0,e,t,r):void xr.context.drawArrays(0,e,t)},drawUnIndexed:function(e,t,r,n){return null==n&&(n=-1),this._depthCullingState.apply(),this._alphaState.apply(),this._drawCalls++,-1!=n?void this._caps.instancedArrays.drawArraysInstancedANGLE(e?4:1,t,r,n):void xr.context.drawArrays(e?4:1,t,r)},_releaseEffect:function(e){this._compiledEffects.exists(e._key)&&(this._compiledEffects.remove(e._key),null!=e._program&&xr.context.deleteProgram(e._program))},createEffect:function(e,t,r,n,i,s,o,a){var l;l=null!=e.vertexElement?e.vertexElement:null!=e.vertex?e.vertex:e;var h;h=null!=e.fragmentElement?e.fragmentElement:null!=e.fragment?e.fragment:e;var c=l+"+"+h+"@"+i;if(this._compiledEffects.exists(c))return this._compiledEffects.get(c);var u=new ct(e,t,r,n,this,i,s,o,a);return u._key=c,this._compiledEffects.set(c,u),u},createEffectForParticles:function(e,t,r,n,i,s,o){return null==n&&(n=""),null==t&&(t=[]),null==r&&(r=[]),this.createEffect({vertex:"particles",fragment:e},["position","color","options"],["view","projection"].concat(t),["diffuseSampler"].concat(r),n,i,s,o)},createShaderProgram:function(e,t,r){var n=_.compileShader(e,"vertex",r),i=_.compileShader(t,"fragment",r),s=xr.context.createProgram();xr.context.attachShader(s,n),xr.context.attachShader(s,i),xr.context.linkProgram(s);var o=xr.context.getProgramParameter(s,35714);if(0==o){var a=xr.context.getProgramInfoLog(s);if(""!=a)throw new Ar(a)}return xr.context.deleteShader(n),xr.context.deleteShader(i),s},getUniforms:function(e,t){for(var r=new Er,n=0;n<t.length;){var i=t[n];++n;var s=xr.context.getUniformLocation(e,i);null!=s&&(null!=Yr[i]?r.setReserved(i,s):r.h[i]=s)}return r},getAttributes:function(t,r){for(var n=[],i=0,s=r.length;s>i;){var o=i++;try{n.push(xr.context.getAttribLocation(t,r[o]))}catch(a){a instanceof Ar&&(a=a.val),
e.log("getAttributes() -> ERROR: "+u.string(a)),n.push(-1)}}return n},enableEffect:function(e){if(null==e||0==e._attributes.length||this._currentEffect==e)return void(null!=e&&null!=e.onBind&&e.onBind(e));null!=this._vertexAttribArrays?this._vertexAttribArrays=this._vertexAttribArrays:this._vertexAttribArrays=[],xr.context.useProgram(e._program);for(var t=0,r=this._vertexAttribArrays.length;r>t;){var n=t++;n>34338||!this._vertexAttribArrays[n]||(this._vertexAttribArrays[n]=!1,xr.context.disableVertexAttribArray(n))}for(var i=e._attributes.length,s=0;i>s;){var o=s++,a=e._attributes[o];a>=0&&(this._vertexAttribArrays[a]=!0,xr.context.enableVertexAttribArray(a))}this._currentEffect=e,null!=e.onBind&&e.onBind(e)},setArray:function(e,t){xr.uniform1fv(e,new Float32Array(t))},setArray2:function(e,t){t.length%2==0&&xr.uniform2fv(e,new Float32Array(t))},setArray3:function(e,t){t.length%3==0&&xr.uniform3fv(e,new Float32Array(t))},setArray4:function(e,t){t.length%4==0&&xr.uniform4fv(e,new Float32Array(t))},setMatrices:function(e,t){xr.context.uniformMatrix4fv(e,!1,t)},setMatrix:function(e,t){xr.context.uniformMatrix4fv(e,!1,t.m)},setMatrix3x3:function(e,t){xr.context.uniformMatrix3fv(e,!1,t)},setMatrix2x2:function(e,t){xr.context.uniformMatrix2fv(e,!1,t)},setFloat:function(e,t){xr.context.uniform1f(e,t)},setFloat2:function(e,t,r){xr.context.uniform2f(e,t,r)},setFloat3:function(e,t,r,n){xr.context.uniform3f(e,t,r,n)},setBool:function(e,t){xr.context.uniform1i(e,t?1:0)},setFloat4:function(e,t,r,n,i){xr.context.uniform4f(e,t,r,n,i)},setColor3:function(e,t){xr.context.uniform3f(e,t.r,t.g,t.b)},setColor4:function(e,t,r){xr.context.uniform4f(e,t.r,t.g,t.b,r)},setState:function(e,t,r,n){null==n&&(n=!1),null==r&&(r=!1),null==t&&(t=0);var i;i=n?1028:1029;var s;s=n?1029:1028;var o;o=this.cullBackFaces?i:s,(this._depthCullingState.get_cull()!=e||r||this._depthCullingState.get_cullFace()!=o)&&(e?(this._depthCullingState.set_cullFace(o),this._depthCullingState.set_cull(!0)):this._depthCullingState.set_cull(!1)),this._depthCullingState.set_zOffset(t)},setDepthBuffer:function(e){this._depthCullingState.set_depthTest(e)},getDepthWrite:function(){return this._depthCullingState.get_depthMask()},setDepthWrite:function(e){this._depthCullingState.set_depthMask(e)},setColorWrite:function(e){xr.context.colorMask(e,e,e,e)},setAlphaMode:function(e){if(this._alphaMode!=e){switch(e){case 0:this._depthCullingState.set_depthMask(!0),this._alphaState.set_alphaBlend(!1);break;case 2:this._depthCullingState.set_depthMask(!1),this._alphaState.setAlphaBlendFunctionParameters(770,771,1,1),this._alphaState.set_alphaBlend(!0);break;case 6:this._depthCullingState.set_depthMask(!1),this._alphaState.setAlphaBlendFunctionParameters(1,1,0,1),this._alphaState.set_alphaBlend(!0);break;case 1:this._depthCullingState.set_depthMask(!1),this._alphaState.setAlphaBlendFunctionParameters(770,1,0,1),this._alphaState.set_alphaBlend(!0);break;case 3:this._depthCullingState.set_depthMask(!1),this._alphaState.setAlphaBlendFunctionParameters(0,769,1,1),this._alphaState.set_alphaBlend(!0);break;case 4:this._depthCullingState.set_depthMask(!1),this._alphaState.setAlphaBlendFunctionParameters(774,0,1,1),this._alphaState.set_alphaBlend(!0);break;case 5:this._depthCullingState.set_depthMask(!1),this._alphaState.setAlphaBlendFunctionParameters(770,769,1,1),this._alphaState.set_alphaBlend(!0)}this._alphaMode=e}},getAlphaMode:function(){return this._alphaMode},setAlphaTesting:function(e){this._alphaTest=e},getAlphaTesting:function(){return this._alphaTest},wipeCaches:function(){this._activeTexturesCache=[],this._currentEffect=null,this._depthCullingState.reset(),this._alphaState.reset(),this._cachedVertexBuffers=null,this._cachedIndexBuffer=null,this._cachedEffectForVertexBuffers=null},setSamplingMode:function(e,t){xr.context.bindTexture(3553,e.data);var r=9728,n=9728;2==t?(r=9729,n=9729):3==t&&(r=9729,n=9987),xr.context.texParameteri(3553,10240,r),xr.context.texParameteri(3553,10241,n),xr.context.bindTexture(3553,null),e.samplingMode=t},createTexture:function(e,t,r,n,i,s,o,a){null==i&&(i=3);var h=new vt(e,xr.context.createTexture()),c="",u=null;if("data:"==l.substr(e,0,5)&&(u=!0),null==u)c=l.substr(e,e.length-4,4).toLowerCase();else{var f=e;u=f.split(":"),e=f,c=u[1].substr(u[1].length-4,4).toLowerCase()}var d=this.getCaps().s3tc&&".dds"==c,m=".tga"==c;n._addPendingData(h),h.url=e,h.noMipmap=t,h.references=1,h.samplingMode=i,this._loadedTexturesCache.push(h);var p=function(e){n._removePendingData(h),null!=o&&o()};if(m);else if(d);else{var v=function(e){_.prepareTexture(h,xr,n,e.width,e.height,r,t,!1,function(t,r){xr.context.texImage2D(3553,0,6408,t,r,0,6408,5121,e.data),null!=s&&s()},i)};u instanceof Array&&null==u.__enum__?Ae.LoadImage(a,v,p,n.database):Ae.LoadImage(e,v,p,n.database)}return h},createRawTexture:function(e,t,r,n,i,s,o,a){null==a&&(a="");var l=new vt("",xr.context.createTexture());l._baseWidth=t,l._baseHeight=r,l._width=t,l._height=r,l.references=1,this.updateRawTexture(l,e,n,s,a),xr.context.bindTexture(3553,l.data);var h=_.getSamplingParameters(o,i);return xr.context.texParameteri(3553,10240,h.mag),xr.context.texParameteri(3553,10241,h.min),xr.context.bindTexture(3553,null),l.samplingMode=o,this._loadedTexturesCache.push(l),l},updateRawTexture:function(e,t,r,n,i){null==i&&(i=""),null==n&&(n=!1);var s=6408;switch(r){case 0:s=6406;break;case 1:s=6409;break;case 2:s=6410;break;case 4:s=6407;break;case 5:s=6408}xr.context.bindTexture(3553,e.data),""!=i?xr.compressedTexImage2D(3553,0,c.getProperty(this.getCaps().s3tc,i),e._width,e._height,0,t):xr.context.texImage2D(3553,0,s,e._width,e._height,0,s,5121,t),e.generateMipMaps&&xr.context.generateMipmap(3553),xr.context.bindTexture(3553,null),this._activeTexturesCache=[],e.isReady=!0},createDynamicTexture:function(e,t,r,n){var i=new vt("",xr.context.createTexture());return e=Ae.GetExponantOfTwo(e,this._caps.maxTextureSize),t=Ae.GetExponantOfTwo(t,this._caps.maxTextureSize),this._activeTexturesCache=[],i._baseWidth=e,i._baseHeight=t,i._width=e,i._height=t,i.isReady=!1,i.generateMipMaps=r,i.references=1,i.samplingMode=n,this.updateTextureSamplingMode(n,i),this._loadedTexturesCache.push(i),i},updateDynamicTexture:function(e,t,r){xr.context.bindTexture(3553,e.data),xr.context.texImage2D(3553,0,6408,t.width,t.height,0,6408,5121,t.data),e.generateMipMaps&&xr.context.generateMipmap(3553),xr.context.bindTexture(3553,null),this._activeTexturesCache=[],e.isReady=!0},updateTextureSamplingMode:function(e,t){var r=_.getSamplingParameters(e,t.generateMipMaps);t.isCube?(xr.context.bindTexture(34067,t.data),xr.context.texParameteri(34067,10240,r.mag),xr.context.texParameteri(34067,10241,r.min),xr.context.bindTexture(34067,null)):(xr.context.bindTexture(3553,t.data),xr.context.texParameteri(3553,10240,r.mag),xr.context.texParameteri(3553,10241,r.min),xr.context.bindTexture(3553,null))},updateVideoTexture:function(e,t,r){},createRenderTargetTexture:function(t,r){var n=!1,i=!0,s=0,o=3;null!=r&&(n=null!=r.generateMipMaps?r.generateMipMaps:r,i=null!=r.generateDepthBuffer?r.generateDepthBuffer:!0,s=null==r.type?s:r.type,null!=r.samplingMode&&(o=r.samplingMode),1==s&&(o=1));var a=new vt("",xr.context.createTexture());xr.context.bindTexture(3553,a.data);var l;l=null!=t.width?t.width:t;var h;h=null!=t.height?t.height:t;var c=_.getSamplingParameters(o,n);1!=s||this._caps.textureFloat||(s=0,e.log("Float textures are not supported. Render target forced to TEXTURETYPE_UNSIGNED_BYTE type")),xr.context.texParameteri(3553,10240,c.mag),xr.context.texParameteri(3553,10241,c.min),xr.context.texParameteri(3553,10242,33071),xr.context.texParameteri(3553,10243,33071),xr.texImage2D(3553,0,6408,l,h,0,6408,_.getWebGLTextureType(s),null);var u=null;i&&(u=xr.context.createRenderbuffer(),xr.context.bindRenderbuffer(36161,u),xr.context.renderbufferStorage(36161,33189,l,h));var f=xr.context.createFramebuffer();return xr.context.bindFramebuffer(36160,f),i&&xr.context.framebufferRenderbuffer(36160,36096,36161,u),xr.context.bindTexture(3553,null),xr.context.bindRenderbuffer(36161,null),xr.context.bindFramebuffer(36160,null),a._framebuffer=f,i&&(a._depthBuffer=u),a._width=l,a._height=h,a.isReady=!0,a.generateMipMaps=n,a.references=1,a.samplingMode=o,this._activeTexturesCache=[],this._loadedTexturesCache.push(a),a},createRenderTargetCubeTexture:function(e,t){var r=new vt("",xr.context.createTexture()),n=!0,i=3;null!=t&&(n=null==t.generateMipMaps?t:t.generateMipMaps,null!=t.samplingMode&&(i=t.samplingMode)),r.isCube=!0,r.references=1,r.generateMipMaps=n,r.references=1,r.samplingMode=i;var s=_.getSamplingParameters(i,n);xr.context.bindTexture(34067,r.data);for(var o=0;6>o;){var a=o++;xr.texImage2D(34069+a,0,6408,e.width,e.height,0,6408,5121,null)}xr.context.texParameteri(34067,10240,s.mag),xr.context.texParameteri(34067,10241,s.min),xr.context.texParameteri(34067,10242,33071),xr.context.texParameteri(34067,10243,33071);var l=xr.context.createRenderbuffer();xr.context.bindRenderbuffer(36161,l),xr.renderbufferStorage(36161,33189,e.width,e.height);var h=xr.context.createFramebuffer();return xr.context.bindFramebuffer(36160,h),xr.context.framebufferRenderbuffer(36160,36096,36161,l),r.generateMipMaps&&(xr.context.bindTexture(34067,r.data),xr.context.generateMipmap(34067)),xr.context.bindTexture(34067,null),xr.context.bindRenderbuffer(36161,null),xr.context.bindFramebuffer(36160,null),r._framebuffer=h,r._depthBuffer=l,this._activeTexturesCache=[],r._width=e.width,r._height=e.height,r.isReady=!0,r},createCubeTexture:function(e,t,r,n){null==n&&(n=!1);var i=this,s=new vt(e,xr.context.createTexture());s.isCube=!0,s.url=e,s.references=1;var o=l.substr(e,e.length-4,4).toLowerCase(),a=this.getCaps().s3tc&&".dds"==o;if(a);else{var h,c=[34069,34071,34073,34070,34072,34074],u=[],f=function(e,t){i._workingCanvas=e,xr.context.texImage2D(c[t],0,6408,i._workingCanvas.width,i._workingCanvas.height,0,6408,5121,e.data)},d=function(){var e=Ae.GetExponantOfTwo(u[0].width,i._caps.maxCubemapTextureSize),t=e;xr.context.bindTexture(34067,s.data);for(var r=0,o=c.length;o>r;){var a=r++;f(u[a],a)}n||xr.context.generateMipmap(34067),xr.context.texParameteri(34067,10240,9729),xr.context.texParameteri(34067,10241,n?9729:9987),xr.context.texParameteri(34067,10242,33071),xr.context.texParameteri(34067,10243,33071),xr.context.bindTexture(34067,null),i._activeTexturesCache=[],s._width=e,s._height=t,s.isReady=!0},m=0,_=null;_=function(){Ae.LoadImage(e+r[m],function(e){u.push(e),++m==r.length?d():_()})},h=_,h()}return s},_releaseTexture:function(e){null!=e._framebuffer&&xr.context.deleteFramebuffer(e._framebuffer),null!=e._depthBuffer&&xr.context.deleteRenderbuffer(e._depthBuffer),xr.context.deleteTexture(e.data),this.unbindAllTextures();var t=l.indexOf(this._loadedTexturesCache,e,0);-1!=t&&this._loadedTexturesCache.splice(t,1),e=null},unbindAllTextures:function(){for(var e=0,t=this._caps.maxTexturesImageUnits;t>e;){var r=e++;xr.context.activeTexture(33984+r),xr.context.bindTexture(3553,null),xr.context.bindTexture(34067,null),this._activeTexturesCache[r]=null}},getGLTexture:function(e){return 33984+e},bindSamplers:function(e){xr.context.useProgram(e._program);for(var t=e._samplers,r=0,n=t.length;n>r;){var i=r++,s=e._uniforms.get(t[i]);xr.context.uniform1i(s,i)}this._currentEffect=null},_bindTexture:function(e,t){xr.context.activeTexture(33984+e),xr.context.bindTexture(3553,t.data),this._activeTexturesCache[e]=null},setTextureFromPostProcess:function(e,t){t._textures.length>0&&(xr.context.activeTexture(33984+e),xr.context.bindTexture(3553,t._textures.data[t._currentRenderTextureInd].data),this._activeTexturesCache[e]=null)},setTexture:function(e,t){if(!(0>e)){if(null==t||!t.isReady())return void(null!=this._activeTexturesCache[e]&&(xr.context.activeTexture(33984+e),xr.context.bindTexture(3553,null),xr.context.bindTexture(34067,null),this._activeTexturesCache[e]=null));if(Re.__instanceof(t,pt));else if(4==t.delayLoadState)return void t.delayLoad();if(this._activeTexturesCache[e]!=t){this._activeTexturesCache[e]=t;var r=t.getInternalTexture();if(xr.context.activeTexture(33984+e),r.isCube){if(xr.context.bindTexture(34067,r.data),r._cachedCoordinatesMode!=t.coordinatesMode){r._cachedCoordinatesMode=t.coordinatesMode;var n;n=3!=t.coordinatesMode&&5!=t.coordinatesMode?10497:33071,xr.context.texParameteri(34067,10242,n),xr.context.texParameteri(34067,10243,n)}this._setAnisotropicLevel(34067,t)}else{if(xr.context.bindTexture(3553,r.data),r._cachedWrapU!=t.wrapU){r._cachedWrapU=t.wrapU;var i=t.wrapU;switch(i){case 1:xr.context.texParameteri(3553,10242,10497);break;case 0:xr.context.texParameteri(3553,10242,33071);break;case 2:xr.context.texParameteri(3553,10242,33648)}}if(r._cachedWrapV!=t.wrapV){r._cachedWrapV=t.wrapV;var s=t.wrapV;switch(s){case 1:xr.context.texParameteri(3553,10243,10497);break;case 0:xr.context.texParameteri(3553,10243,33071);break;case 2:xr.context.texParameteri(3553,10243,33648)}}this._setAnisotropicLevel(3553,t)}}}},_setAnisotropicLevel:function(e,t){var r=this._caps.textureAnisotropicFilterExtension;null!=r&&t._cachedAnisotropicFilteringLevel!=t.anisotropicFilteringLevel&&(xr.texParameterf(e,r.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropicFilteringLevel,this._caps.maxAnisotropy)),t._cachedAnisotropicFilteringLevel=t.anisotropicFilteringLevel)},readPixels:function(e,t,r,n){var i=new jr(n*r*4);return xr.context.readPixels(e,t,r,n,6408,5121,i),i},dispose:function(){for(this.stopRenderLoop();this.scenes.length>0;)this.scenes[0].dispose(),this.scenes[0]=null,this.scenes.shift();for(var e=this._compiledEffects.keys();e.hasNext();){var t=e.next();xr.deleteProgram(this._compiledEffects.get(t)._program)}},__class__:_,__properties__:{get_drawCalls:"get_drawCalls"}};var p=t.BABYLON.EngineCapabilities=function(){};s["com.babylonhx.EngineCapabilities"]=p,p.__name__=["com","babylonhx","EngineCapabilities"],p.prototype={__class__:p};var v=t.BABYLON.IDisposable=function(){};s["com.babylonhx.IDisposable"]=v,v.__name__=["com","babylonhx","IDisposable"],v.prototype={__class__:v};var g=t.BABYLON.ISmartArrayCompatible=function(){};s["com.babylonhx.ISmartArrayCompatible"]=g,g.__name__=["com","babylonhx","ISmartArrayCompatible"],g.prototype={__class__:g};var x=function(){};s["com.babylonhx.NodeCache"]=x,x.__name__=["com","babylonhx","NodeCache"],x.prototype={__class__:x};var y=t.BABYLON.Node=function(e,t){this.__smartArrayFlags=[],this._parentRenderId=-1,this._currentRenderId=-1,this._isReady=!0,this._isEnabled=!0,this._childrenFlag=-1,this._ranges=new Er,this.animations=[],this.state="",this.name=e,this.id=e,this._scene=t,this._initCache()};s["com.babylonhx.Node"]=y,y.__name__=["com","babylonhx","Node"],y.__interfaces__=[g],y.ParseAnimationRanges=function(e,t,r){if(null!=t.ranges)for(var n=0,i=t.ranges.length;i>n;){var s=n++,o=t.ranges[s];e.createAnimationRange(o.name,o.from,o.to)}},y.prototype={getScene:function(){return this._scene},getEngine:function(){return this._scene._engine},getWorldMatrix:function(){return Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)},_initCache:function(){this._cache=new x,this._cache.parent=null},updateCache:function(e){null==e&&(e=!1),(e||!this.isSynchronized(null))&&(this._cache.parent=this.parent,this._updateCache())},_updateCache:function(e){null==e&&(e=!1)},_isSynchronized:function(){return!0},_markSyncedWithParent:function(){this._parentRenderId=this.parent._currentRenderId},isSynchronizedWithParent:function(){return null==this.parent?!0:this._parentRenderId!=this.parent._currentRenderId?!1:this.parent.isSynchronized(null)},isSynchronized:function(e){null==e&&(e=!1);var t=this.hasNewParent();return t=t||!this.isSynchronizedWithParent(),t=t||!this._isSynchronized(),e&&this.updateCache(!0),!t},hasNewParent:function(e){return null==e&&(e=!1),this._cache.parent==this.parent?!1:(e&&(this._cache.parent=this.parent),!0)},isReady:function(){return this._isReady},isEnabled:function(){return this._isEnabled?null!=this.parent?this.parent.isEnabled():!0:!1},setEnabled:function(e){this._isEnabled=e},isDescendantOf:function(e){return null!=this.parent?this.parent==e?!0:this.parent.isDescendantOf(e):!1},_getDescendants:function(e,t){for(var r=0,n=e.length;n>r;){var i=r++,s=e[i];s.isDescendantOf(this)&&t.push(s)}},getDescendants:function(){var e=[];return this._getDescendants(this._scene.meshes,e),this._getDescendants(this._scene.lights,e),this._getDescendants(this._scene.cameras,e),e},_setReady:function(e){if(e!=this._isReady){if(!e)return void(this._isReady=!1);this._isReady=!0,null!=this.onReady&&this.onReady(this)}},getAnimationByName:function(e){for(var t=0,r=this.animations.length;r>t;){var n=t++,i=this.animations[n];if(i.name==e)return i}return null},createAnimationRange:function(e,t,r){if(null==this._ranges.get(e)){var n=new N(e,t,r);this._ranges.set(e,n);for(var i=0,s=this.animations.length;s>i;){var o=i++;null!=this.animations[o]&&this.animations[o].createRange(e,t,r)}}},deleteAnimationRange:function(e,t){null==t&&(t=!0);for(var r=0,n=this.animations.length;n>r;){var i=r++;null!=this.animations[i]&&this.animations[i].deleteRange(e,t)}this._ranges.remove(e)},getAnimationRange:function(e){return this._ranges.get(e)},beginAnimation:function(e,t,r,n){null==r&&(r=1),null==t&&(t=!1);var i=this.getAnimationRange(e);return null==i?null:this._scene.beginAnimation(this,i.from,i.to,t,r,n)},serializeAnimationRanges:function(){for(var e=[],t=this._ranges.keys();t.hasNext();){var r=t.next(),n={};n.name=r,n.from=this._ranges.get(r).from,n.to=this._ranges.get(r).to,e.push(n)}return e},__class__:y};var b=t.BABYLON.Scene=function(e){this._headphone=!1,this._audioEnabled=!0,this.soundTracks=[],this._uniqueIdCounter=0,this._edgesRenderers=new pr(16),this._scaledVelocity=new L(0,0,0),this._scaledPosition=new L(0,0,0),this._transformMatrix=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._activeAnimatables=[],this._activeBones=0,this._softwareSkinnedMeshes=new pr(32),this._activeSkeletons=new pr(32),this._activeParticleSystems=new pr(256),this._renderTargets=new pr(256),this._processedMaterials=new pr(256),this._activeMeshes=new pr(256),this._onAfterRenderCallbacks=[],this._onBeforeRenderCallbacks=[],this._pendingData=[],this._onReadyCallbacks=[],this._toBeDisposed=new pr(256),this._executeWhenReadyTimeoutId=-1,this._renderId=0,this._animationStartDate=-1,this._animationRatio=0,this._spritesDuration=0,this._renderDuration=0,this._particlesDuration=0,this._renderTargetsDuration=0,this._evaluateActiveMeshesDuration=0,this._lastFrameDuration=0,this._activeParticles=0,this._activeIndices=0,this._totalVertices=0,this._proceduralTextures=[],this.proceduralTexturesEnabled=!0,this._meshesForIntersections=new pr(256),this._actionManagers=[],this.reflectionProbes=[],this.probesEnabled=!0,this.importedMeshesFiles=[],this.useDelayedTextureLoading=!1,this.customRenderTargets=[],this.dumpNextRenderTargets=!1,this.renderTargetsEnabled=!0,this.postProcessesEnabled=!0,this.gravity=new L(0,-9,0),this._workerCollisions=!1,this.collisionsEnabled=!0,this.lensFlareSystems=[],this.lensFlaresEnabled=!0,this.skeletons=[],this.skeletonsEnabled=!0,this.layers=[],this.spriteManagers=[],this.spritesEnabled=!0,this.particleSystems=[],this.particlesEnabled=!0,this.textures=[],this.texturesEnabled=!0,this.multiMaterials=[],this.materials=[],this._geometries=[],this.meshes=[],this.activeCameras=[],this.cameras=[],this.lights=[],this.lightsEnabled=!0,this.shadowsEnabled=!0,this.fogEnd=1e3,this.fogStart=0,this.fogDensity=.1,this.fogColor=new Ge(.2,.2,.2),this.fogMode=b.FOGMODE_NONE,this.fogEnabled=!0,this._startingPointerTime=0,this._startingPointerPosition=new Mt(0,0),this.cameraToUseForPointers=null,this.constantlyUpdateMeshUnderPointer=!1,this.animationsEnabled=!0,this.forceShowBoundingBoxes=!1,this.forcePointsCloud=!1,this.forceWireframe=!1,this.ambientColor=new Ge(0,0,0),this.clearColor=new Ge(.2,.2,.2),this.autoClear=!0,this._engine=e,e.scenes.push(this),this.defaultMaterial=new He("default material",this),this._renderingManager=new Ze(this),this.postProcessManager=new Jt(this),this.postProcessRenderPipelineManager=new sr,this._boundingBoxRenderer=new ar(this),this._outlineRenderer=new ur(this),this.attachControl(),this.simplificationQueue=new Yt,this.set_workerCollisions(!1),Object.defineProperty(this,"meshUnderPointer",{get:this.get_meshUnderPointer}),Object.defineProperty(this,"pointerX",{get:this.get_pointerX}),Object.defineProperty(this,"pointerY",{get:this.get_pointerY}),this.mainSoundTrack=new G(this,{mainTrack:!0})};s["com.babylonhx.Scene"]=b,b.__name__=["com","babylonhx","Scene"],b.prototype={set_workerCollisions:function(e){return this._workerCollisions=e,null!=this.collisionCoordinator&&this.collisionCoordinator.destroy(),this.collisionCoordinator=new se,this.collisionCoordinator.init(this),e},get_workerCollisions:function(){return this._workerCollisions},get_SelectionOctree:function(){return this._selectionOctree},get_meshUnderPointer:function(){return this._meshUnderPointer},get_pointerX:function(){return this._pointerX},get_pointerY:function(){return this._pointerY},getCachedMaterial:function(){return this._cachedMaterial},getBoundingBoxRenderer:function(){return this._boundingBoxRenderer},getOutlineRenderer:function(){return this._outlineRenderer},getEngine:function(){return this._engine},getTotalVertices:function(){return this._totalVertices},getActiveVertices:function(){return this._activeIndices},getActiveParticles:function(){return this._activeParticles},getActiveBones:function(){return this._activeBones},_updateAudioParameters:function(){if(this._audioEnabled&&(0!=this.mainSoundTrack.soundCollection.length||1!=this.soundTracks.length)){var e,t=this._engine.audioEngine;if(e=this.activeCameras.length>0?this.activeCameras[0]:this.activeCamera,null!=e&&t.canUseWebAudio){t.get_audioContext().listener.setPosition(e.position.x,e.position.y,e.position.z);var r=Le.Invert(e.getViewMatrix()),n=L.TransformNormal(new L(0,0,-1),r);n.normalize(),t.get_audioContext().listener.setOrientation(n.x,n.y,n.z,0,1,0);for(var i=0,s=this.mainSoundTrack.soundCollection.length;s>i;){var o=i++,a=this.mainSoundTrack.soundCollection[o];a.useCustomAttenuation&&a.updateDistanceFromListener()}for(var l=0,h=this.soundTracks.length;h>l;)for(var c=l++,u=0,f=this.soundTracks[c].soundCollection.length;f>u;){var d=u++,m=this.soundTracks[c].soundCollection[d];m.useCustomAttenuation&&m.updateDistanceFromListener()}}}},get_audioEnabled:function(){return this._audioEnabled},set_audioEnabled:function(e){this._audioEnabled=e,this._audioEnabled&&(this._audioEnabled?this._enableAudio():this._disableAudio())},_disableAudio:function(){for(var e=0,t=this.mainSoundTrack.soundCollection.length;t>e;){var r=e++;this.mainSoundTrack.soundCollection[r].pause()}for(var n=0,i=this.soundTracks.length;i>n;)for(var s=n++,o=0,a=this.soundTracks[s].soundCollection.length;a>o;){var l=o++;this.soundTracks[s].soundCollection[l].pause()}},_enableAudio:function(){for(var e=0,t=this.mainSoundTrack.soundCollection.length;t>e;){var r=e++;this.mainSoundTrack.soundCollection[r].isPaused&&this.mainSoundTrack.soundCollection[r].play()}for(var n=0,i=this.soundTracks.length;i>n;)for(var s=n++,o=0,a=this.soundTracks[s].soundCollection.length;a>o;){var l=o++;this.soundTracks[s].soundCollection[l].isPaused&&this.soundTracks[s].soundCollection[l].play()}},get_headphone:function(){return this._headphone},set_headphone:function(e){this._headphone=e,this._audioEnabled&&(this._headphone?this._switchAudioModeForHeadphones():this._switchAudioModeForNormalSpeakers())},_switchAudioModeForHeadphones:function(){this.mainSoundTrack.switchPanningModelToHRTF();for(var e=0,t=this.soundTracks.length;t>e;){var r=e++;this.soundTracks[r].switchPanningModelToHRTF()}},_switchAudioModeForNormalSpeakers:function(){this.mainSoundTrack.switchPanningModelToEqualPower();for(var e=0,t=this.soundTracks.length;t>e;){var r=e++;this.soundTracks[r].switchPanningModelToEqualPower()}},getLastFrameDuration:function(){return this._lastFrameDuration},getEvaluateActiveMeshesDuration:function(){return this._evaluateActiveMeshesDuration},getActiveMeshes:function(){return this._activeMeshes},getRenderTargetsDuration:function(){return this._renderTargetsDuration},getRenderDuration:function(){return this._renderDuration},getParticlesDuration:function(){return this._particlesDuration},getSpritesDuration:function(){return this._spritesDuration},getAnimationRatio:function(){return this._animationRatio},getRenderId:function(){return this._renderId},incrementRenderId:function(){this._renderId++},_updatePointerPosition:function(e,t){this._pointerX=e,this._pointerY=t,null!=this.cameraToUseForPointers&&(this._pointerX=this._pointerX-(0|this.cameraToUseForPointers.viewport.x)*this._engine.getRenderWidth(),this._pointerY=this._pointerY-(0|this.cameraToUseForPointers.viewport.y)*this._engine.getRenderHeight())},attachControl:function(){var e=this,t=function(e){return e.isPickable&&null!=e.actionManager&&e.actionManager.get_hasPickTriggers()};this._onPointerMove=function(r,n){if(null!=e.cameraToUseForPointers||null!=e.activeCamera){e._pointerX=r,e._pointerY=n,null!=e.cameraToUseForPointers&&(e._pointerX=e._pointerX-(0|e.cameraToUseForPointers.viewport.x)*e._engine.getRenderWidth(),e._pointerY=e._pointerY-(0|e.cameraToUseForPointers.viewport.y)*e._engine.getRenderHeight());var i=e.pick(e._pointerX,e._pointerY,function(t){return t.get_isPickable()&&t.isVisible&&t.isReady()&&(e.constantlyUpdateMeshUnderPointer||null!=t.actionManager)},!1,e.cameraToUseForPointers);i.hit&&null!=i.pickedMesh?(e._meshUnderPointer=i.pickedMesh,e.setPointerOverMesh(i.pickedMesh)):(i=e.pickSprite(e._pointerX,e._pointerY,t,!1,e.cameraToUseForPointers),i.hit&&null!=i.pickedSprite||(e.setPointerOverMesh(null),e._meshUnderPointer=null)),null!=e.onPointerMove&&e.onPointerMove(i)}},this._onPointerDown=function(r,n,i){if(null!=e.cameraToUseForPointers||null!=e.activeCamera){e._pointerX=r,e._pointerY=n,null!=e.cameraToUseForPointers&&(e._pointerX=e._pointerX-(0|e.cameraToUseForPointers.viewport.x)*e._engine.getRenderWidth(),e._pointerY=e._pointerY-(0|e.cameraToUseForPointers.viewport.y)*e._engine.getRenderHeight());var s=null;null==e.onPointerDown&&(s=function(e){return e.get_isPickable()&&e.isVisible&&e.isReady()&&null!=e.actionManager&&e.actionManager.get_hasPointerTriggers()});var o=e.pick(e._pointerX,e._pointerY,s,!1,e.cameraToUseForPointers);if(o.hit&&null!=o.pickedMesh&&null!=o.pickedMesh.actionManager){if(o.pickedMesh.actionManager.get_hasPickTriggers()){switch(i){case 0:o.pickedMesh.actionManager.processTrigger(M.OnLeftPickTrigger,T.CreateNew(o.pickedMesh));break;case 1:o.pickedMesh.actionManager.processTrigger(M.OnCenterPickTrigger,T.CreateNew(o.pickedMesh));break;case 2:o.pickedMesh.actionManager.processTrigger(M.OnRightPickTrigger,T.CreateNew(o.pickedMesh))}o.pickedMesh.actionManager.processTrigger(M.OnPickTrigger,T.CreateNew(o.pickedMesh))}if(o.pickedMesh.actionManager.hasSpecificTrigger(M.OnLongPressTrigger)){var a=e;Ae.delay(function(){var e=a.pick(a._pointerX,a._pointerY,function(e){return e.get_isPickable()&&e.isVisible&&e.isReady()&&null!=e.actionManager&&e.actionManager.hasSpecificTrigger(M.OnLongPressTrigger)},!1,a.cameraToUseForPointers);e.hit&&null!=e.pickedMesh&&null!=e.pickedMesh.actionManager&&0!=a._startingPointerTime&&(new Date).getTime()-a._startingPointerTime>M.LongPressDelay&&Math.abs(a._startingPointerPosition.x-a._pointerX)<M.DragMovementThreshold&&Math.abs(a._startingPointerPosition.y-a._pointerY)<M.DragMovementThreshold&&(a._startingPointerTime=0,e.pickedMesh.actionManager.processTrigger(M.OnLongPressTrigger,T.CreateNew(e.pickedMesh)))},M.LongPressDelay)}}if(null!=e.onPointerDown&&e.onPointerDown(r,n,i,o),e.spriteManagers.length>0&&(o=e.pickSprite(e._pointerX,e._pointerY,t,!1,e.cameraToUseForPointers),o.hit&&null!=o.pickedSprite&&null!=o.pickedSprite.actionManager)){switch(i){case 0:o.pickedSprite.actionManager.processTrigger(M.OnLeftPickTrigger,T.CreateNewFromSprite(o.pickedSprite,e));break;case 1:o.pickedSprite.actionManager.processTrigger(M.OnCenterPickTrigger,T.CreateNewFromSprite(o.pickedSprite,e));break;case 2:o.pickedSprite.actionManager.processTrigger(M.OnRightPickTrigger,T.CreateNewFromSprite(o.pickedSprite,e))}o.pickedSprite.actionManager.processTrigger(M.OnPickTrigger,T.CreateNewFromSprite(o.pickedSprite,e))}}},this._onPointerUp=function(r,n,i){if(null!=e.cameraToUseForPointers||null!=e.activeCamera){var s=null;e._pointerX=r,e._pointerY=n,null!=e.cameraToUseForPointers&&(e._pointerX=e._pointerX-(0|e.cameraToUseForPointers.viewport.x)*e._engine.getRenderWidth(),e._pointerY=e._pointerY-(0|e.cameraToUseForPointers.viewport.y)*e._engine.getRenderHeight()),null==e.onPointerUp&&(s=function(e){return e.get_isPickable()&&e.isVisible&&e.isReady()&&null!=e.actionManager&&e.actionManager.hasSpecificTrigger(M.OnPickUpTrigger)});var o=e.pick(e._pointerX,e._pointerY,s,!1,e.cameraToUseForPointers);o.hit&&null!=o.pickedMesh.actionManager&&o.pickedMesh.actionManager.processTrigger(M.OnPickUpTrigger,T.CreateNew(o.pickedMesh)),null!=e.onPointerUp&&e.onPointerUp(r,n,i,o),e.spriteManagers.length>0&&(o=e.pickSprite(e._pointerX,e._pointerY,t,!1,e.cameraToUseForPointers),o.hit&&null!=o.pickedSprite&&null!=o.pickedSprite.actionManager&&o.pickedSprite.actionManager.processTrigger(M.OnPickUpTrigger,T.CreateNewFromSprite(o.pickedSprite,e)))}},this._onKeyDown=function(t){null!=e.actionManager&&e.actionManager.processTrigger(M.OnKeyDownTrigger,T.CreateNewFromScene(e,t))},this._onKeyUp=function(t){null!=e.actionManager&&e.actionManager.processTrigger(M.OnKeyUpTrigger,T.CreateNewFromScene(e,t))},_.mouseDown.push(this._onPointerDown),_.mouseUp.push(this._onPointerUp),_.mouseMove.push(this._onPointerMove),_.keyDown.push(this._onKeyDown),_.keyUp.push(this._onKeyUp)},detachControl:function(){var e=this._onPointerDown;l.remove(_.mouseDown,e);var t=this._onPointerUp;l.remove(_.mouseUp,t);var r=this._onPointerMove;l.remove(_.mouseMove,r);var n=this._onKeyDown;l.remove(_.keyDown,n);var i=this._onKeyUp;l.remove(_.keyUp,i)},isReady:function(){if(this._pendingData.length>0)return!1;for(var e=0,t=this._geometries.length;t>e;){var r=e++,n=this._geometries[r];if(2==n.delayLoadState)return!1}for(var i=0,s=this.meshes.length;s>i;){var o=i++,a=this.meshes[o];if(!a.isReady())return!1;var l=a.get_material();if(null!=l&&!l.isReady(a))return!1}return!0},resetCachedMaterial:function(){this._cachedMaterial=null},registerBeforeRender:function(e){this._onBeforeRenderCallbacks.push(e)},unregisterBeforeRender:function(e){l.remove(this._onBeforeRenderCallbacks,e)},registerAfterRender:function(e){this._onAfterRenderCallbacks.push(e)},unregisterAfterRender:function(e){l.remove(this._onAfterRenderCallbacks,e)},_addPendingData:function(e){this._pendingData.push(e)},_removePendingData:function(e){var t=e;l.remove(this._pendingData,t)},getWaitingItemsCount:function(){return this._pendingData.length},executeWhenReady:function(e){this._onReadyCallbacks.push(e),-1==this._executeWhenReadyTimeoutId&&(this._executeWhenReadyTimeoutId=1,Ae.delay(i(this,this._checkIsReady),150))},_checkIsReady:function(){if(this.isReady()){for(var e=0,t=this._onReadyCallbacks;e<t.length;){var r=t[e];++e,r()}return this._onReadyCallbacks=[],void(this._executeWhenReadyTimeoutId=-1)}this._executeWhenReadyTimeoutId=1,Ae.delay(i(this,this._checkIsReady),150)},beginAnimation:function(e,t,r,n,i,s,o){if(null==i&&(i=1),null==n&&(n=!1),this.stopAnimation(e),null==o&&(o=new A(this,e,t,r,n,i,s)),null!=e.animations&&o.appendAnimations(e,e.animations),null!=e.getAnimatables)for(var a=e.getAnimatables(),l=0,h=a.length;h>l;){var c=l++;this.beginAnimation(a[c],t,r,n,i,s,o)}return o},beginDirectAnimation:function(e,t,r,n,i,s,o){null==s&&(s=1),null==i&&(i=!1);var a=new A(this,e,r,n,i,s,o,t);return a},getAnimatableByTarget:function(e){for(var t=0,r=this._activeAnimatables.length;r>t;){var n=t++;if(this._activeAnimatables[n].target==e)return this._activeAnimatables[n]}return null},stopAnimation:function(e){var t=this.getAnimatableByTarget(e);
null!=t&&t.stop()},_animate:function(){if(this.animationsEnabled&&0!=this._activeAnimatables.length){if(-1==this._animationStartDate){if(this._pendingData.length>0)return;this._animationStartDate=u["int"](1e3*(De.stamp()-Ae.__startTime))}for(var e=u["int"](1e3*(De.stamp()-Ae.__startTime)),t=e-this._animationStartDate,r=0,n=this._activeAnimatables.length;n>r;){var i=r++;null!=this._activeAnimatables[i]&&this._activeAnimatables[i]._animate(t)}}},getViewMatrix:function(){return this._viewMatrix},getProjectionMatrix:function(){return this._projectionMatrix},getTransformMatrix:function(){return this._transformMatrix},setTransformMatrix:function(e,t){this._viewMatrix=e,this._projectionMatrix=t,this._viewMatrix.multiplyToRef(this._projectionMatrix,this._transformMatrix)},addMesh:function(e){e.uniqueId=this._uniqueIdCounter++;var t=this.meshes.push(e);this.collisionCoordinator.onMeshAdded(e),null!=this.onNewMeshAdded&&this.onNewMeshAdded(e,t,this)},removeMesh:function(e){var t=l.indexOf(this.meshes,e,0);return-1!=t&&this.meshes.splice(t,1),this.collisionCoordinator.onMeshRemoved(e),null!=this.onMeshRemoved&&this.onMeshRemoved(e),t},removeSkeleton:function(e){var t=l.indexOf(this.skeletons,e,0);return-1!=t&&this.skeletons.splice(t,1),t},removeLight:function(e){var t=l.indexOf(this.lights,e,0);return-1!=t&&this.lights.splice(t,1),null!=this.onLightRemoved&&this.onLightRemoved(e),t},removeCamera:function(e){var t=l.indexOf(this.cameras,e,0);return-1!=t&&this.cameras.splice(t,1),t=l.indexOf(this.activeCameras,e,0),-1!=t&&this.activeCameras.splice(t,1),this.activeCamera==e&&(this.cameras.length>0?this.activeCamera=this.cameras[0]:this.activeCamera=null),null!=this.onCameraRemoved&&this.onCameraRemoved(e),t},addLight:function(e){e.uniqueId=this._uniqueIdCounter++;var t=this.lights.push(e);null!=this.onNewLightAdded&&this.onNewLightAdded(e,t,this)},addCamera:function(e){e.uniqueId=this._uniqueIdCounter++;var t=this.cameras.push(e);null!=this.onNewCameraAdded&&this.onNewCameraAdded(e,t,this)},setActiveCameraByID:function(e){var t=this.getCameraByID(e);return null!=t?(this.activeCamera=t,t):null},setActiveCameraByName:function(e){var t=this.getCameraByName(e);return null!=t?(this.activeCamera=t,t):null},getMaterialByID:function(e){for(var t=0,r=this.materials.length;r>t;){var n=t++;if(this.materials[n].id==e)return this.materials[n]}return null},getMaterialByName:function(e){for(var t=0,r=this.materials.length;r>t;){var n=t++;if(this.materials[n].name==e)return this.materials[n]}return null},getLensFlareSystemByName:function(e){for(var t=0,r=this.lensFlareSystems.length;r>t;){var n=t++;if(this.lensFlareSystems[n].name==e)return this.lensFlareSystems[n]}return null},getCameraByID:function(e){for(var t=0,r=this.cameras.length;r>t;){var n=t++;if(this.cameras[n].id==e)return this.cameras[n]}return null},getCameraByUniqueID:function(e){for(var t=0,r=this.cameras.length;r>t;){var n=t++;if(this.cameras[n].uniqueId==e)return this.cameras[n]}return null},getCameraByName:function(e){for(var t=0,r=this.cameras.length;r>t;){var n=t++;if(this.cameras[n].name==e)return this.cameras[n]}return null},getBoneByID:function(e){for(var t=0,r=this.skeletons;t<r.length;){var n=r[t];++t;for(var i=0,s=n.bones;i<s.length;){var o=s[i];if(++i,o.id==e)return o}}return null},getBoneByName:function(e){for(var t=0,r=this.skeletons;t<r.length;){var n=r[t];++t;for(var i=0,s=n.bones;i<s.length;){var o=s[i];if(++i,o.name==e)return o}}return null},getLightByName:function(e){for(var t=0,r=this.lights.length;r>t;){var n=t++;if(this.lights[n].name==e)return this.lights[n]}return null},getLightByID:function(e){for(var t=0,r=this.lights.length;r>t;){var n=t++;if(this.lights[n].id==e)return this.lights[n]}return null},getLightByUniqueID:function(e){for(var t=0,r=this.lights.length;r>t;){var n=t++;if(this.lights[n].uniqueId==e)return this.lights[n]}return null},getParticleSystemByID:function(e){for(var t=0,r=this.particleSystems.length;r>t;){var n=t++;if(this.particleSystems[n].id==e)return this.particleSystems[n]}return null},getGeometryByID:function(e){for(var t=0,r=this._geometries.length;r>t;){var n=t++;if(this._geometries[n].id==e)return this._geometries[n]}return null},pushGeometry:function(e,t){return null==t&&(t=!1),t||null==this.getGeometryByID(e.id)?(this.collisionCoordinator.onGeometryAdded(e),this._geometries.push(e),null!=this.onGeometryAdded&&this.onGeometryAdded(e),!0):!1},removeGeometry:function(e){var t=l.indexOf(this._geometries,e,0);return t>-1?(this._geometries.splice(t,1),this.collisionCoordinator.onGeometryDeleted(e),null!=this.onGeometryRemoved&&this.onGeometryRemoved(e),!0):!1},getGeometries:function(){return this._geometries},getMeshByID:function(e){for(var t=0,r=this.meshes.length;r>t;){var n=t++;if(this.meshes[n].id==e)return this.meshes[n]}return null},getMeshByUniqueID:function(e){for(var t=0,r=this.meshes.length;r>t;){var n=t++;if(this.meshes[n].uniqueId==e)return this.meshes[n]}return null},getLastMeshByID:function(e){for(var t=this.meshes.length-1;t>=0;){if(this.meshes[t].id==e)return this.meshes[t];--t}return null},getLastEntryByID:function(e){for(var t=this.meshes.length-1;t>=0;){if(this.meshes[t].id==e)return this.meshes[t];--t}for(t=this.cameras.length-1;t>=0;){if(this.cameras[t].id==e)return this.cameras[t];--t}for(t=this.lights.length-1;t>=0;){if(this.lights[t].id==e)return this.lights[t];--t}return null},getNodeByID:function(e){var t=this.getMeshByID(e);if(null!=t)return t;var r=this.getLightByID(e);if(null!=r)return r;var n=this.getCameraByID(e);if(null!=n)return n;var i=this.getBoneByID(e);return i},getNodeByName:function(e){var t=this.getMeshByName(e);if(null!=t)return t;var r=this.getLightByName(e);if(null!=r)return r;var n=this.getCameraByName(e);if(null!=n)return n;var i=this.getBoneByName(e);return i},getMeshByName:function(e){for(var t=0,r=this.meshes.length;r>t;){var n=t++;if(this.meshes[n].name==e)return this.meshes[n]}return null},getLastSkeletonByID:function(e){for(var t=this.skeletons.length-1;t>=0;){if(this.skeletons[t].id==e)return this.skeletons[t];--t}return null},getSkeletonById:function(e){for(var t=0,r=this.skeletons.length;r>t;){var n=t++;if(this.skeletons[n].id==e)return this.skeletons[n]}return null},getSkeletonByName:function(e){for(var t=0,r=this.skeletons.length;r>t;){var n=t++;if(this.skeletons[n].name==e)return this.skeletons[n]}return null},isActiveMesh:function(e){return-1!=this._activeMeshes.indexOf(e)},_evaluateSubMesh:function(e,t){(t.alwaysSelectAsActiveMesh||1==t.subMeshes.length||(e.get_IsGlobal()?e._mesh.getBoundingInfo():e._boundingInfo).isInFrustum(this._frustumPlanes))&&(b._eSMMaterial=e.getMaterial(),t.showSubMeshesBoundingBox&&this._boundingBoxRenderer.renderList.push((e.get_IsGlobal()?e._mesh.getBoundingInfo():e._boundingInfo).boundingBox),null!=b._eSMMaterial&&(null!=b._eSMMaterial.getRenderTargetTextures&&-1==this._processedMaterials.indexOf(b._eSMMaterial)&&(this._processedMaterials.push(b._eSMMaterial),this._renderTargets.concatSmartArray(b._eSMMaterial.getRenderTargetTextures())),this._activeIndices+=e.verticesCount,this._renderingManager.dispatch(e)))},_evaluateActiveMeshes:function(){this.activeCamera._activeMeshes.reset(),this._activeMeshes.reset(),this._renderingManager.reset(),this._processedMaterials.reset(),this._activeParticleSystems.reset(),this._activeSkeletons.reset(),this._softwareSkinnedMeshes.reset(),this._boundingBoxRenderer.reset(),this._edgesRenderers.reset(),null==this._frustumPlanes?this._frustumPlanes=yt.GetPlanes(this._transformMatrix):yt.GetPlanesToRef(this._transformMatrix,this._frustumPlanes),b._activeMeshes_=null;var e=-1;if(null!=this._selectionOctree){var t=this._selectionOctree.select(this._frustumPlanes,null);b._activeMeshes_=t.data,e=t.length}else e=this.meshes.length,b._activeMeshes_=this.meshes;for(var r=0;e>r;){var n=r++;if(b._activeMesh_=b._activeMeshes_[n],!b._activeMesh_.get_isBlocked()&&(this._totalVertices+=b._activeMesh_.getTotalVertices(),b._activeMesh_.isReady()&&b._activeMesh_.isEnabled())){b._activeMesh_.computeWorldMatrix(),null!=b._activeMesh_.actionManager&&b._activeMesh_.actionManager.hasSpecificTriggers([M.OnIntersectionEnterTrigger,M.OnIntersectionExitTrigger])&&this._meshesForIntersections.pushNoDuplicate(b._activeMesh_);var i=b._activeMesh_.getLOD(this.activeCamera);null!=i&&(b._activeMesh_._preActivate(),(b._activeMesh_.alwaysSelectAsActiveMesh||b._activeMesh_.isVisible&&b._activeMesh_.get_visibility()>0&&0!=(b._activeMesh_.layerMask&this.activeCamera.layerMask)&&b._activeMesh_.isInFrustum(this._frustumPlanes))&&(this._activeMeshes.push(b._activeMesh_),this.activeCamera._activeMeshes.push(b._activeMesh_),b._activeMesh_._activate(this._renderId),this._activeMesh(i)))}}if(this.particlesEnabled)for(var s=0,o=this.particleSystems.length;o>s;){var a=s++,l=this.particleSystems[a];l._started&&(null==l.emitter.position||null!=l.emitter&&l.emitter.isEnabled())&&(this._activeParticleSystems.push(l),l.animate())}},_activeMesh:function(e){if(null!=e.get_skeleton()&&this.skeletonsEnabled&&(this._activeSkeletons.pushNoDuplicate(e.get_skeleton()),e.computeBonesUsingShaders||this._softwareSkinnedMeshes.pushNoDuplicate(e)),(e.showBoundingBox||this.forceShowBoundingBoxes)&&this._boundingBoxRenderer.renderList.push(e.getBoundingInfo().boundingBox),null!=e._edgesRenderer&&this._edgesRenderers.push(e._edgesRenderer),null!=e&&null!=e.subMeshes){var t=-1,r=null;if(null!=e._submeshesOctree&&e.useOctreeForRenderingSelection){var n=e._submeshesOctree.select(this._frustumPlanes,null);t=n.length,r=n.data}else r=e.subMeshes,t=r.length;for(var i=0;t>i;){var s=i++,o=r[s];(e.alwaysSelectAsActiveMesh||1==e.subMeshes.length||(o.get_IsGlobal()?o._mesh.getBoundingInfo():o._boundingInfo).isInFrustum(this._frustumPlanes))&&(b._eSMMaterial=o.getMaterial(),e.showSubMeshesBoundingBox&&this._boundingBoxRenderer.renderList.push((o.get_IsGlobal()?o._mesh.getBoundingInfo():o._boundingInfo).boundingBox),null!=b._eSMMaterial&&(null!=b._eSMMaterial.getRenderTargetTextures&&-1==this._processedMaterials.indexOf(b._eSMMaterial)&&(this._processedMaterials.push(b._eSMMaterial),this._renderTargets.concatSmartArray(b._eSMMaterial.getRenderTargetTextures())),this._activeIndices+=o.verticesCount,this._renderingManager.dispatch(o)))}}},updateTransformMatrix:function(e){null==e&&(e=!1),this.setTransformMatrix(this.activeCamera.getViewMatrix(),this.activeCamera.getProjectionMatrix(e))},_renderForCamera:function(e){var t=this._engine;if(this.activeCamera=e,null==this.activeCamera)throw new Ar("Active camera not set");t.setViewport(this.activeCamera.viewport,null,null),this._renderId++,this.setTransformMatrix(this.activeCamera.getViewMatrix(),this.activeCamera.getProjectionMatrix(!1)),null!=this.beforeCameraRender&&this.beforeCameraRender(this.activeCamera);var r=u["int"](1e3*(De.stamp()-Ae.__startTime));this._evaluateActiveMeshes(),this._evaluateActiveMeshesDuration+=u["int"](1e3*(De.stamp()-Ae.__startTime))-r;for(var n=0,i=this._activeSkeletons.length;i>n;){var s=n++,o=this._activeSkeletons.data[s];o.prepare()}for(var a=0,l=this._softwareSkinnedMeshes.length;l>a;){var h=a++,c=this._softwareSkinnedMeshes.data[h];c.applySkeleton(c.get_skeleton())}var f=u["int"](1e3*(De.stamp()-Ae.__startTime));if(this.renderTargetsEnabled&&this._renderTargets.length>0){for(var d=0,m=this._renderTargets.length;m>d;){var _=d++,p=this._renderTargets.data[_];if(p._shouldRender()){this._renderId++;var v=null!=p.activeCamera&&p.activeCamera!=this.activeCamera;p.render(v)}}this._renderId++,t._currentRenderTarget=null,xr.context.bindFramebuffer(36160,null),t.setViewport(t._cachedViewport,null,null),t.wipeCaches()}this._renderTargetsDuration+=u["int"](1e3*(De.stamp()-Ae.__startTime))-f,this.postProcessManager._prepareFrame();var g=u["int"](1e3*(De.stamp()-Ae.__startTime));if(this.layers.length>0){t._depthCullingState.set_depthTest(!1);for(var x=null,y=0,b=this.layers.length;b>y;){var S=y++;x=this.layers[S],x.isBackground&&x.render()}t._depthCullingState.set_depthTest(!0)}this._renderingManager.render(null,null,!0,!0),this._boundingBoxRenderer.render();for(var w=0,C=this._edgesRenderers.length;C>w;){var T=w++;this._edgesRenderers.data[T].render()}if(this.lensFlaresEnabled)for(var M=0,P=this.lensFlareSystems.length;P>M;){var E=M++,I=this.lensFlareSystems[E];0!=(e.layerMask&I.layerMask)&&I.render()}if(this.layers.length>0){t._depthCullingState.set_depthTest(!1);for(var D=0,A=this.layers.length;A>D;){var R=D++,L=this.layers[R];L.isBackground||L.render()}t._depthCullingState.set_depthTest(!0)}this._renderDuration+=u["int"](1e3*(De.stamp()-Ae.__startTime))-g,this.postProcessManager._finalizeFrame(e.isIntermediate),this.activeCamera._updateFromScene(),this._renderTargets.reset(),null!=this.afterCameraRender&&this.afterCameraRender(this.activeCamera)},_processSubCameras:function(e){if(0==e.subCameras.length&&0==e._rigCameras.length)return void this._renderForCamera(e);for(var t=0,r=e.subCameras.length;r>t;){var n=t++;this._renderForCamera(e.subCameras[n])}for(var i=0,s=e._rigCameras.length;s>i;){var o=i++;this._renderForCamera(e._rigCameras[o])}this.activeCamera=e,this.setTransformMatrix(this.activeCamera.getViewMatrix(),this.activeCamera.getProjectionMatrix(!1)),this.activeCamera._updateFromScene()},_checkIntersections:function(){for(var e=0,t=this._meshesForIntersections.length;t>e;)for(var r=e++,n=this._meshesForIntersections.data[r],i=0,s=n.actionManager.actions.length;s>i;){var o=i++,a=n.actionManager.actions[o];if(a.trigger==M.OnIntersectionEnterTrigger||a.trigger==M.OnIntersectionExitTrigger){var h=a.getTriggerParameter(),c=h.intersectsMesh(n,!1),u=l.indexOf(n._intersectionsInProgress,h,0);if(c&&-1==u&&a.trigger==M.OnIntersectionEnterTrigger)a._executeCurrent(T.CreateNew(n)),n._intersectionsInProgress.push(h);else if(!c&&u>-1&&a.trigger==M.OnIntersectionExitTrigger){a._executeCurrent(T.CreateNew(n));var f=l.indexOf(n._intersectionsInProgress,h,0);f>-1&&n._intersectionsInProgress.splice(f,1)}}}},render:function(){this._particlesDuration=0,this._spritesDuration=0,this._activeParticles=0,this._renderDuration=0,this._renderTargetsDuration=0,this._evaluateActiveMeshesDuration=0,this._totalVertices=0,this._activeIndices=0,this._activeBones=0,this._engine._drawCalls=0,this._meshesForIntersections.reset(),this._cachedMaterial=null,null!=this.actionManager&&this.actionManager.processTrigger(M.OnEveryFrameTrigger,null),this.simplificationQueue.running||this.simplificationQueue.executeNext();var e=Math.max(b.MinDeltaTime,Math.min(this._engine.deltaTime,b.MaxDeltaTime));this._animationRatio=.06*e,this._animate(),null!=this._physicsEngine&&this._physicsEngine._runOneStep(e/1e3),null!=this.beforeRender&&this.beforeRender();for(var t=0,r=this._onBeforeRenderCallbacks;t<r.length;){var n=r[t];++t,n()}var i=this._engine,s=this.activeCamera;if(this.renderTargetsEnabled){for(var o=0,a=this.customRenderTargets.length;a>o;){var h=o++,c=this.customRenderTargets[h];if(c._shouldRender()){if(this._renderId++,null!=c.activeCamera?this.activeCamera=c.activeCamera:this.activeCamera=this.activeCamera,null==this.activeCamera)throw new Ar("Active camera not set");i.setViewport(this.activeCamera.viewport,null,null),this.setTransformMatrix(this.activeCamera.getViewMatrix(),this.activeCamera.getProjectionMatrix(!1)),c.render(s!=this.activeCamera)}}this._renderId++}if(this.customRenderTargets.length>0&&(i._currentRenderTarget=null,xr.context.bindFramebuffer(36160,null),i.setViewport(i._cachedViewport,null,null),i.wipeCaches()),this.activeCamera=s,this.proceduralTexturesEnabled&&this._proceduralTextures.length>0)for(var u=0,f=this._proceduralTextures;u<f.length;){var d=f[u];++u,d._shouldRender()&&d.render()}if(this._engine.clear(this.clearColor,this.autoClear||this.forceWireframe||this.forcePointsCloud,!0),this.shadowsEnabled)for(var m=0,_=this.lights.length;_>m;){var p=m++,v=this.lights[p],g=v.getShadowGenerator();v.isEnabled()&&null!=g&&-1!=function(e){var t,r=g.getShadowMap().getScene().textures,n=g.getShadowMap();return t=l.indexOf(r,n,0)}(this)&&this._renderTargets.push(g.getShadowMap())}if(null!=this._depthRenderer&&this._renderTargets.push(this._depthRenderer.getDepthMap()),this.postProcessRenderPipelineManager.update(),this.activeCameras.length>0)for(var x=this._renderId,y=0,S=this.activeCameras.length;S>y;){var w=y++;this._renderId=x,w>0&&this._engine.clear(0,!1,!0),this._processSubCameras(this.activeCameras[w])}else{if(null==this.activeCamera)throw new Ar("No camera defined");this._processSubCameras(this.activeCamera)}this._checkIntersections(),null!=this.afterRender&&this.afterRender();for(var C=0,T=this._onAfterRenderCallbacks;C<T.length;){var P=T[C];++C,P()}for(var E=0,I=this._toBeDisposed.length;I>E;){var D=E++;this._toBeDisposed.data[D].dispose(),this._toBeDisposed.data[D]=null,this._toBeDisposed.data.splice(D,1)}this._toBeDisposed.reset(),this.dumpNextRenderTargets&&(this.dumpNextRenderTargets=!1)},enableDepthRenderer:function(){return null!=this._depthRenderer?this._depthRenderer:(this._depthRenderer=new lr(this),this._depthRenderer)},disableDepthRenderer:function(){null!=this._depthRenderer&&(this._depthRenderer.dispose(),this._depthRenderer=null)},freezeMaterials:function(){for(var e=0,t=this.materials.length;t>e;){var r=e++;this.materials[r].freeze()}},unfreezeMaterials:function(){for(var e=0,t=this.materials.length;t>e;){var r=e++;this.materials[r].unfreeze()}},dispose:function(){this.beforeRender=null,this.afterRender=null,this.skeletons=[],this._boundingBoxRenderer.dispose(),null!=this._depthRenderer&&this._depthRenderer.dispose(),null!=this.onDispose&&this.onDispose(),this.detachControl(),this._onBeforeRenderCallbacks=[],this._onAfterRenderCallbacks=[];for(var e=0,t=this.cameras.length;t>e;){var r=e++;this.cameras[r].detachControl(this)}for(;this.lights.length>0;)this.lights[0].dispose();for(;this.meshes.length>0;)this.meshes[0].dispose(!0);for(;this.cameras.length>0;)this.cameras[0].dispose();for(;this.materials.length>0;)this.materials[0].dispose();for(;this.particleSystems.length>0;)this.particleSystems[0].dispose(null);for(;this.spriteManagers.length>0;)this.spriteManagers[0].dispose();for(;this.layers.length>0;)this.layers[0].dispose();for(;this.textures.length>0;)this.textures[0].dispose();this.postProcessManager.dispose(),null!=this._physicsEngine&&this.disablePhysicsEngine(),l.remove(this._engine.scenes,this),this._engine.wipeCaches()},_getNewPosition:function(e,t,r,n,i,s){e.divideToRef(r.radius,this._scaledPosition),t.divideToRef(r.radius,this._scaledVelocity),r.retry=0,r.initialVelocity=this._scaledVelocity,r.initialPosition=this._scaledPosition,this._collideWithWorld(this._scaledPosition,this._scaledVelocity,r,n,i,s),i.multiplyInPlace(r.radius)},_collideWithWorld:function(e,t,r,n,i,s){var o=10*_.CollisionsEpsilon;if(r.retry>=n)return i.x=e.x,i.y=e.y,void(i.z=e.z);r._initialize(e,t,o);for(var a=0,l=this.meshes.length;l>a;){var h=a++,c=this.meshes[h];c.isEnabled()&&c.get_checkCollisions()&&null!=c.subMeshes&&c!=s&&c._checkCollision(r)}return r.collisionFound?((0!=t.x||0!=t.y||0!=t.z)&&(e.addToRef(t,r._destinationPoint),t.scaleInPlace(r.nearestDistance/Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z)),r.basePoint.addToRef(t,e),e.subtractToRef(r.intersectionPoint,r._slidePlaneNormal),r._slidePlaneNormal.normalize(),r._slidePlaneNormal.scaleToRef(r.epsilon,r._displacementVector),e.addInPlace(r._displacementVector),r.intersectionPoint.addInPlace(r._displacementVector),r._slidePlaneNormal.scaleInPlace(Qe.SignedDistanceToPlaneFromPositionAndNormal(r.intersectionPoint,r._slidePlaneNormal,r._destinationPoint)),r._destinationPoint.subtractInPlace(r._slidePlaneNormal),r._destinationPoint.subtractToRef(r.intersectionPoint,t)),Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z)<=o?(i.x=e.x,i.y=e.y,void(i.z=e.z)):(r.retry++,void this._collideWithWorld(e,t,r,n,i,s))):(i.x=e.x+t.x,i.y=e.y+t.y,void(i.z=e.z+t.z))},getWorldExtends:function(){for(var e=new L(1/0,1/0,1/0),t=new L(-(1/0),-(1/0),-(1/0)),r=0,n=this.meshes.length;n>r;){var i=r++,s=this.meshes[i];s.computeWorldMatrix(!0);var o=s.getBoundingInfo().boundingBox.minimumWorld,a=s.getBoundingInfo().boundingBox.maximumWorld;o.x<e.x&&(e.x=o.x),o.y<e.y&&(e.y=o.y),o.z<e.z&&(e.z=o.z),o.x>t.x&&(t.x=o.x),o.y>t.y&&(t.y=o.y),o.z>t.z&&(t.z=o.z),a.x<e.x&&(e.x=a.x),a.y<e.y&&(e.y=a.y),a.z<e.z&&(e.z=a.z),a.x>t.x&&(t.x=a.x),a.y>t.y&&(t.y=a.y),a.z>t.z&&(t.z=a.z)}return{min:e,max:t}},createOrUpdateSelectionOctree:function(e,t){null==t&&(t=2),null==e&&(e=64),null==this._selectionOctree&&(this._selectionOctree=new fe(fe.CreationFuncForMeshes,e,t));var r=this.getWorldExtends();return this._selectionOctree.update(r.min,r.max,this.meshes),this._selectionOctree},createPickingRay:function(e,t,r,n,i){null==i&&(i=!1);var s=this._engine;if(null==n){if(null==this.activeCamera)throw new Ar("Active camera not set");n=this.activeCamera}var o=n.viewport,a=o.toGlobal(s);return e=e/this._engine.getHardwareScalingLevel()-a.x,t=t/this._engine.getHardwareScalingLevel()-(this._engine.getRenderHeight()-a.y-a.height),Ct.CreateNew(e,t,a.width,a.height,null!=r?r:Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),i?Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1):n.getViewMatrix(),n.getProjectionMatrix(!1))},createPickingRayInCameraSpace:function(e,t,r){var n=this._engine;if(null==r){if(null==this.activeCamera)throw new Ar("Active camera not set");r=this.activeCamera}var i=r.viewport,s=i.toGlobal(n),o=Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return e=e/this._engine.getHardwareScalingLevel()-s.x,t=t/this._engine.getHardwareScalingLevel()-(this._engine.getRenderHeight()-s.y-s.height),Ct.CreateNew(e,t,s.width,s.height,o,o,r.getProjectionMatrix(!1))},_internalPick:function(e,t,r){null==r&&(r=!1);for(var n=null,i=0,s=this.meshes.length;s>i;){var o=i++,a=this.meshes[o];if(null!=t){if(!t(a))continue}else if(!a.isEnabled()||!a.isVisible||!a.get_isPickable())continue;var l=a.getWorldMatrix(),h=e(l),c=a.intersects(h,r);if(null!=c&&c.hit&&(r||null==n||!(c.distance>=n.distance))&&(n=c,r))break}return null!=n?n:new ae},_internalPickSprites:function(e,t,r,n){null==r&&(r=!1);var i=new ae;if(null==n&&(n=this.activeCamera),this.spriteManagers.length>0)for(var s=0,o=this.spriteManagers.length;o>s;){var a=s++,l=this.spriteManagers[a];if(l.isPickable){var h=l.intersects(e,n,t,r);if(null!=h&&h.hit&&(r||null==i||!(h.distance>=i.distance))&&(i=h,r))break}}return i},pick:function(e,t,r,n,i){null==n&&(n=!1);var s=this;return this._internalPick(function(r){return s.createPickingRay(e,t,r,i)},r,n)},pickSprite:function(e,t,r,n,i){return null==n&&(n=!1),this._internalPickSprites(this.createPickingRayInCameraSpace(e,t,i),r,n,i)},pickWithRay:function(e,t,r){null==r&&(r=!1);var n=this;return this._internalPick(function(t){return null==n._pickWithRayInverseMatrix&&(n._pickWithRayInverseMatrix=Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)),t.invertToRef(n._pickWithRayInverseMatrix),Ct.Transform(e,n._pickWithRayInverseMatrix)},t,r)},setPointerOverMesh:function(e){this._pointerOverMesh!=e&&(null!=this._pointerOverMesh&&null!=this._pointerOverMesh.actionManager&&this._pointerOverMesh.actionManager.processTrigger(M.OnPointerOutTrigger,T.CreateNew(this._pointerOverMesh)),this._pointerOverMesh=e,null!=this._pointerOverMesh&&null!=this._pointerOverMesh.actionManager&&this._pointerOverMesh.actionManager.processTrigger(M.OnPointerOverTrigger,T.CreateNew(this._pointerOverMesh)))},getPointerOverMesh:function(){return this._pointerOverMesh},getPhysicsEngine:function(){return this._physicsEngine},enablePhysics:function(e,t){return null!=this._physicsEngine?!0:(this._physicsEngine=new Qt(t),this._physicsEngine.isSupported()?(this._physicsEngine._initialize(e),!0):(this._physicsEngine=null,!1))},disablePhysicsEngine:function(){null!=this._physicsEngine&&(this._physicsEngine.dispose(),this._physicsEngine=null)},isPhysicsEnabled:function(){return null!=this._physicsEngine},setGravity:function(e){null!=this._physicsEngine&&this._physicsEngine._setGravity(e)},createCompoundImpostor:function(e,t){if(null!=e.parts&&(t=e,e=e.parts),null==this._physicsEngine)return null;for(var r=0,n=e.length;n>r;){var i=r++,s=e[i].mesh;s._physicImpostor=e[i].impostor,s._physicsMass=t.mass/e.length,s._physicsFriction=t.friction,s._physicRestitution=t.restitution}return this._physicsEngine._registerMeshesAsCompound(e,t)},deleteCompoundImpostor:function(e){for(var t=0,r=e.parts.length;r>t;){var n=t++,i=e.parts[n].mesh;i._physicImpostor=0,this._physicsEngine._unregisterMesh(i)}},createDefaultCameraOrLight:function(){if(0==this.lights.length&&new ye("default light",new L(0,1,0),this),null==this.activeCamera){var e=new Z("default camera",new L(0,0,0),this),t=this.getWorldExtends(),r=t.min.add(t.max.subtract(t.min).scale(.5));e.position=new L(r.x,r.y,t.min.z-(t.max.z-t.min.z)),e.setTarget(r),this.activeCamera=e}},__class__:b,__properties__:{get_pointerY:"get_pointerY",get_pointerX:"get_pointerX",get_meshUnderPointer:"get_meshUnderPointer",get_SelectionOctree:"get_SelectionOctree",set_workerCollisions:"set_workerCollisions",get_workerCollisions:"get_workerCollisions"}};var S=t.BABYLON._AlphaState=function(){this._blendFunctionParameters=[],this._alphaBlend=!1,this._isBlendFunctionParametersDirty=!1,this._isAlphaBlendDirty=!1};s["com.babylonhx._AlphaState"]=S,S.__name__=["com","babylonhx","_AlphaState"],S.prototype={get_isDirty:function(){return this._isAlphaBlendDirty||this._isBlendFunctionParametersDirty},get_alphaBlend:function(){return this._alphaBlend},set_alphaBlend:function(e){return this._alphaBlend==e?e:(this._alphaBlend=e,this._isAlphaBlendDirty=!0,e)},setAlphaBlendFunctionParameters:function(e,t,r,n){(this._blendFunctionParameters[0]!=e||this._blendFunctionParameters[1]!=t||this._blendFunctionParameters[2]!=r||this._blendFunctionParameters[3]!=n)&&(this._blendFunctionParameters[0]=e,this._blendFunctionParameters[1]=t,this._blendFunctionParameters[2]=r,this._blendFunctionParameters[3]=n,this._isBlendFunctionParametersDirty=!0)},reset:function(){this._alphaBlend=!1,this._blendFunctionParameters[0]=-1,this._blendFunctionParameters[1]=-1,this._blendFunctionParameters[2]=-1,this._blendFunctionParameters[3]=-1,this._isAlphaBlendDirty=!0,this._isBlendFunctionParametersDirty=!1},apply:function(){this.get_isDirty()&&(this._isAlphaBlendDirty&&(this._alphaBlend?xr.context.enable(3042):xr.context.disable(3042),this._isAlphaBlendDirty=!1),this._isBlendFunctionParametersDirty&&(xr.context.blendFuncSeparate(this._blendFunctionParameters[0],this._blendFunctionParameters[1],this._blendFunctionParameters[2],this._blendFunctionParameters[3]),this._isBlendFunctionParametersDirty=!1))},__class__:S,__properties__:{set_alphaBlend:"set_alphaBlend",get_alphaBlend:"get_alphaBlend",get_isDirty:"get_isDirty"}};var w=t.BABYLON._DepthCullingState=function(){this._zOffset=0,this._isZOffsetDirty=!1,this._isCullDirty=!1,this._isCullFaceDirty=!1,this._isDepthFuncDirty=!1,this._isDepthMaskDirty=!1,this._isDepthTestDirty=!1};s["com.babylonhx._DepthCullingState"]=w,w.__name__=["com","babylonhx","_DepthCullingState"],w.prototype={get_isDirty:function(){return this._isDepthFuncDirty||this._isDepthTestDirty||this._isDepthMaskDirty||this._isCullFaceDirty||this._isCullDirty||this._isZOffsetDirty},get_zOffset:function(){return this._zOffset},set_zOffset:function(e){return this._zOffset==e?e:(this._zOffset=e,this._isZOffsetDirty=!0,e)},get_cullFace:function(){return this._cullFace},set_cullFace:function(e){return this._cullFace==e?e:(this._cullFace=e,this._isCullFaceDirty=!0,e)},get_cull:function(){return this._cull},set_cull:function(e){return this._cull==e?e:(this._cull=e,this._isCullDirty=!0,e)},get_depthFunc:function(){return this._depthFunc},set_depthFunc:function(e){return this._depthFunc==e?e:(this._depthFunc=e,this._isDepthFuncDirty=!0,e)},get_depthMask:function(){return this._depthMask},set_depthMask:function(e){return this._depthMask==e?e:(this._depthMask=e,this._isDepthMaskDirty=!0,e)},get_depthTest:function(){return this._depthTest},set_depthTest:function(e){return this._depthTest==e?e:(this._depthTest=e,this._isDepthTestDirty=!0,e)},reset:function(){this._depthMask=!0,this._depthTest=!0,this._depthFunc=null,this._cull=null,this._cullFace=null,this._zOffset=0,this._isDepthTestDirty=!0,this._isDepthMaskDirty=!0,this._isDepthFuncDirty=!1,this._isCullFaceDirty=!1,this._isCullDirty=!1,this._isZOffsetDirty=!1},apply:function(){this.get_isDirty()&&(this._isCullDirty&&(null!=this.get_cull()&&this.get_cull()?xr.context.enable(2884):xr.context.disable(2884),this._isCullDirty=!1),this._isCullFaceDirty&&(xr.cullFace(this.get_cullFace()),this._isCullFaceDirty=!1),this._isDepthMaskDirty&&(xr.depthMask(this.get_depthMask()),this._isDepthMaskDirty=!1),this._isDepthTestDirty&&(this.get_depthTest()?xr.context.enable(2929):xr.context.disable(2929),this._isDepthTestDirty=!1),this._isDepthFuncDirty&&(xr.depthFunc(this.get_depthFunc()),this._isDepthFuncDirty=!1),this._isZOffsetDirty&&(0!=this.get_zOffset()?(xr.context.enable(32823),xr.polygonOffset(this.get_zOffset(),0)):xr.context.disable(32823),this._isZOffsetDirty=!1))},__class__:w,__properties__:{set_depthTest:"set_depthTest",get_depthTest:"get_depthTest",set_depthMask:"set_depthMask",get_depthMask:"get_depthMask",set_depthFunc:"set_depthFunc",get_depthFunc:"get_depthFunc",set_cull:"set_cull",get_cull:"get_cull",set_cullFace:"set_cullFace",get_cullFace:"get_cullFace",set_zOffset:"set_zOffset",get_zOffset:"get_zOffset",get_isDirty:"get_isDirty"}};var C=t.BABYLON.Action=function(e,t){null!=e.parameter?(this.trigger=e.trigger,this._triggerParameter=e.parameter):this.trigger=e,this._nextActiveAction=this,this._condition=t};s["com.babylonhx.actions.Action"]=C,C.__name__=["com","babylonhx","actions","Action"],C.prototype={_prepare:function(){},getTriggerParameter:function(){return this._triggerParameter},_executeCurrent:function(e){if(null!=this._nextActiveAction._condition){var t=this._nextActiveAction._condition,r=this._actionManager.getScene().getRenderId();if(t._evaluationId==r){if(!t._currentResult)return}else{if(t._evaluationId=r,!t.isValid())return void(t._currentResult=!1);t._currentResult=!0}}this._nextActiveAction.execute(e),this.skipToNextActiveAction()},execute:function(e){},skipToNextActiveAction:function(){null!=this._nextActiveAction._child?(null==this._nextActiveAction._child._actionManager&&(this._nextActiveAction._child._actionManager=this._actionManager),this._nextActiveAction=this._nextActiveAction._child):this._nextActiveAction=this},then:function(e){return this._child=e,e._actionManager=this._actionManager,e._prepare(),e},_getProperty:function(e){return this._actionManager._getProperty(e)},_getEffectiveTarget:function(e,t){return this._actionManager._getEffectiveTarget(e,t)},__class__:C};var T=t.BABYLON.ActionEvent=function(e,t,r,n,i,s){this.source=e,this.pointerX=t,this.pointerY=r,this.meshUnderPointer=n,this.sourceEvent=i,this.additionalData=s};s["com.babylonhx.actions.ActionEvent"]=T,T.__name__=["com","babylonhx","actions","ActionEvent"],T.CreateNew=function(e){var t=e._scene;return new T(e,t.get_pointerX(),t.get_pointerY(),t.get_meshUnderPointer())},T.CreateNewFromSprite=function(e,t,r,n){return new T(e,t.get_pointerX(),t.get_pointerY(),t.get_meshUnderPointer(),r,n)},T.CreateNewFromScene=function(e,t){return new T(null,e.get_pointerX(),e.get_pointerY(),e.get_meshUnderPointer(),t)},T.prototype={__class__:T};var M=t.BABYLON.ActionManager=function(e){this.actions=[],this._scene=e,e._actionManagers.push(this)};s["com.babylonhx.actions.ActionManager"]=M,M.__name__=["com","babylonhx","actions","ActionManager"],M.Parse=function(e,t,r){var n=new M(r);return null==t?r.actionManager=n:t.actionManager=n,null},M.prototype={dispose:function(){var e=l.indexOf(this._scene._actionManagers,this,0);e>-1&&this._scene._actionManagers.splice(e,1)},getScene:function(){return this._scene},hasSpecificTriggers:function(e){for(var t=0,r=this.actions.length;r>t;){var n=t++,i=this.actions[n];if(l.indexOf(e,i.trigger,0)>-1)return!0}return!1},hasSpecificTrigger:function(e){for(var t=0,r=this.actions.length;r>t;){
var n=t++,i=this.actions[n];if(i.trigger==e)return!0}return!1},get_hasPointerTriggers:function(){for(var e=0,t=this.actions.length;t>e;){var r=e++,n=this.actions[r];if(n.trigger>=M.OnPickTrigger&&n.trigger<=M.OnPointerOutTrigger)return!0}return!1},get_hasPickTriggers:function(){for(var e=0,t=this.actions.length;t>e;){var r=e++,n=this.actions[r];if(n.trigger>=M.OnPickTrigger&&n.trigger<=M.OnPickUpTrigger)return!0}return!1},registerAction:function(t){return t.trigger==M.OnEveryFrameTrigger&&this.getScene().actionManager!=this?(e.log("OnEveryFrameTrigger can only be used with scene.actionManager"),null):(this.actions.push(t),t._actionManager=this,t._prepare(),t)},processTrigger:function(e,t){for(var r=0,n=this.actions.length;n>r;){var i=r++,s=this.actions[i];if(s.trigger==e){if(e==M.OnKeyUpTrigger||e==M.OnKeyDownTrigger){var o=s.getTriggerParameter();if(null!=o&&t.sourceEvent.key!=o)continue}s._executeCurrent(t)}}},_getEffectiveTarget:function(e,t){for(var r=t.split("."),n=0,i=r.length-1;i>n;){var s=n++;e=c.getProperty(e,r[s])}return e},_getProperty:function(e){var t=e.split(".");return t[t.length-1]},__class__:M,__properties__:{get_hasPickTriggers:"get_hasPickTriggers",get_hasPointerTriggers:"get_hasPointerTriggers"}};var P=t.BABYLON.Condition=function(e){this._actionManager=e};s["com.babylonhx.actions.Condition"]=P,P.__name__=["com","babylonhx","actions","Condition"],P.prototype={isValid:function(){return!0},_getProperty:function(e){return this._actionManager._getProperty(e)},_getEffectiveTarget:function(e,t){return this._actionManager._getEffectiveTarget(e,t)},__class__:P};var E=t.BABYLON.InterpolateValueAction=function(e,t,r,n,i,s,o){null==o&&(o=!1),null==i&&(i=1e3),C.call(this,e,s),this._target=t,this.propertyPath=r,this.value=n,this.duration=i,this.stopOtherAnimations=o};s["com.babylonhx.actions.InterpolateValueAction"]=E,E.__name__=["com","babylonhx","actions","InterpolateValueAction"],E.__super__=C,E.prototype=n(C.prototype,{_prepare:function(){this._target=this._getEffectiveTarget(this._target,this.propertyPath),this._property=this._getProperty(this.propertyPath)},execute:function(t){var r=this._actionManager.getScene(),n=[{frame:0,value:c.getProperty(this._target,this._property)},{frame:100,value:this.value}],i=-1;if(Re.__instanceof(this.value,Vr)||"number"==typeof this.value)i=0;else if(Re.__instanceof(this.value,Ge))i=4;else if(Re.__instanceof(this.value,L))i=1;else if(Re.__instanceof(this.value,Le))i=3;else{if(!Re.__instanceof(this.value,R))return void e.log("InterpolateValueAction:Unsupported type ("+m.getClassName(this.value)+")");i=2}var s=new F("InterpolateValueAction",this._property,100*(1e3/this.duration)|0,i,2);s.setKeys(n),this.stopOtherAnimations&&r.stopAnimation(this._target),r.beginDirectAnimation(this._target,[s],0,100)},__class__:E});var I=t.BABYLON.PlayAnimationAction=function(e,t,r,n,i,s){C.call(this,e,s),this._target=t,this.from=r,this.to=n,this.loop=i};s["com.babylonhx.actions.PlayAnimationAction"]=I,I.__name__=["com","babylonhx","actions","PlayAnimationAction"],I.__super__=C,I.prototype=n(C.prototype,{execute:function(e){var t=this._actionManager.getScene();t.beginAnimation(this._target,this.from,this.to,this.loop)},__class__:I});var D=t.BABYLON.ValueCondition=function(e,t,r,n,i){null==i&&(i=0),P.call(this,e),this._target=this._getEffectiveTarget(t,this.propertyPath),this._property=this._getProperty(this.propertyPath),this.propertyPath=r,this.value=n,this.operator=i};s["com.babylonhx.actions.ValueCondition"]=D,D.__name__=["com","babylonhx","actions","ValueCondition"],D.__super__=P,D.prototype=n(P.prototype,{isValid:function(){var e=this.operator;switch(e){case 2:return c.field(this._target,this._property)>this.value;case 3:return c.field(this._target,this._property)<this.value;case 0:case 1:var t=!1;return t=null!=this.value.equals?this.value.equals(c.field(this._target,this._property)):this.value==c.field(this._target,this._property),0==this.operator?t:!t}return!1},__class__:D});var A=t.BABYLON.Animatable=function(e,t,r,n,i,s,o,a){null==s&&(s=1),null==i&&(i=!1),null==n&&(n=100),null==r&&(r=0),this.animationStarted=!1,this._paused=!1,this._animations=[],this._pausedDelay=-1,this._localDelayOffset=-1,this.target=t,this.fromFrame=r,this.toFrame=n,this.loopAnimation=i,this.speedRatio=s,this.onAnimationEnd=o,null!=a&&this.appendAnimations(t,a),this._scene=e,e._activeAnimatables.push(this)};s["com.babylonhx.animations.Animatable"]=A,A.__name__=["com","babylonhx","animations","Animatable"],A.prototype={getAnimations:function(){return this._animations},appendAnimations:function(e,t){for(var r=0,n=t.length;n>r;){var i=r++,s=t[i];s._target=e,this._animations.push(s)}},getAnimationByTargetProperty:function(e){for(var t=this._animations,r=0,n=t.length;n>r;){var i=r++;if(t[i].targetProperty==e)return t[i]}return null},reset:function(){for(var e=this._animations,t=0,r=e.length;r>t;){var n=t++;e[n].reset()}this._localDelayOffset=-1,this._pausedDelay=-1},goToFrame:function(e){for(var t=this._animations,r=0,n=t.length;n>r;){var i=r++;t[i].goToFrame(e)}},pause:function(){this._paused=!0},restart:function(){this._paused=!1},stop:function(){var e=l.indexOf(this._scene._activeAnimatables,this,0);e>-1&&this._scene._activeAnimatables.splice(e,1),null!=this.onAnimationEnd&&this.onAnimationEnd()},_animate:function(e){if(this._paused)return this.animationStarted=!1,-1==this._pausedDelay&&(this._pausedDelay=e),!0;-1==this._localDelayOffset?this._localDelayOffset=e:-1!=this._pausedDelay&&(this._localDelayOffset+=e-this._pausedDelay,this._pausedDelay=-1);for(var t=!1,r=this._animations,n=0,i=r.length;i>n;){var s=n++,o=r[s],a=o.animate(e-this._localDelayOffset,this.fromFrame,this.toFrame,this.loopAnimation,this.speedRatio);t=t||a}if(this.animationStarted=t,!t){var h=l.indexOf(this._scene._activeAnimatables,this,0);this._scene._activeAnimatables.splice(h,1)}return t||null==this.onAnimationEnd||this.onAnimationEnd(),t},__class__:A};var R=t.BABYLON.Quaternion=function(e,t,r,n){null==n&&(n=1),null==r&&(r=0),null==t&&(t=0),null==e&&(e=0),this.x=e,this.y=t,this.z=r,this.w=n};s["com.babylonhx.math.Quaternion"]=R,R.__name__=["com","babylonhx","math","Quaternion"],R.FromRotationMatrix=function(e){var t=new R;return R.FromRotationMatrixToRef(e,t),t},R.FromRotationMatrixToRef=function(e,t){var r=e.m,n=r[0],i=r[4],s=r[8],o=r[1],a=r[5],l=r[9],h=r[2],c=r[6],u=r[10],f=n+a+u,d=0;f>0?(d=.5/Math.sqrt(f+1),t.w=.25/d,t.x=(c-l)*d,t.y=(s-h)*d,t.z=(o-i)*d):n>a&&n>u?(d=2*Math.sqrt(1+n-a-u),t.w=(c-l)/d,t.x=.25*d,t.y=(i+o)/d,t.z=(s+h)/d):a>u?(d=2*Math.sqrt(1+a-n-u),t.w=(s-h)/d,t.x=(i+o)/d,t.y=.25*d,t.z=(l+c)/d):(d=2*Math.sqrt(1+u-n-a),t.w=(o-i)/d,t.x=(s+h)/d,t.y=(l+c)/d,t.z=.25*d)},R.Inverse=function(e){return new R(-e.x,-e.y,-e.z,e.w)},R.Identity=function(){return new R(0,0,0,1)},R.RotationAxis=function(e,t){var r=new R,n=Math.sin(t/2);return e.normalize(),r.w=Math.cos(t/2),r.x=e.x*n,r.y=e.y*n,r.z=e.z*n,r},R.LookRotation=function(e,t){null==t&&(t=new L(0,1,0)),e.normalize();var r=L.Normalize(e),n=L.Normalize(L.Cross(t,r)),i=L.Cross(r,n),s=n.x,o=n.y,a=n.z,l=i.x,h=i.y,c=i.z,u=r.x,f=r.y,d=r.z,m=s+h+d,_=new R;if(m>0){var p=Math.sqrt(m+1);return _.w=.5*p,p=.5/p,_.x=(c-f)*p,_.y=(u-a)*p,_.z=(o-l)*p,_}if(s>=h&&s>=d){var v=Math.sqrt(1+s-h-d),g=.5/v;return _.x=.5*v,_.y=(o+l)*g,_.z=(a+u)*g,_.w=(c-f)*g,_}if(h>d){var x=Math.sqrt(1+h-s-d),y=.5/x;return _.x=(l+o)*y,_.y=.5*x,_.z=(f+c)*y,_.w=(u-a)*y,_}var b=Math.sqrt(1+d-s-h),S=.5/b;return _.x=(u+a)*S,_.y=(f+c)*S,_.z=.5*b,_.w=(o-l)*S,_},R.FromArray=function(e,t){return null==t&&(t=0),new R(e[t],e[t+1],e[t+2],e[t+3])},R.RotationYawPitchRoll=function(e,t,r){var n=new R;return R.RotationYawPitchRollToRef(e,t,r,n),n},R.RotationYawPitchRollToRef=function(e,t,r,n){var i=.5*r,s=.5*t,o=.5*e,a=Math.sin(i),l=Math.cos(i),h=Math.sin(s),c=Math.cos(s),u=Math.sin(o),f=Math.cos(o);n.x=f*h*l+u*c*a,n.y=u*c*l-f*h*a,n.z=f*c*a-u*h*l,n.w=f*c*l+u*h*a},R.Slerp=function(e,t,r){var n=0,i=0,s=r,o=e.x*t.x+e.y*t.y+e.z*t.z+e.w*t.w,a=!1;if(0>o&&(a=!0,o=-o),o>.999999)i=1-s,n=a?-s:s;else{var l=Math.acos(o),h=1/Math.sin(l);i=Math.sin((1-s)*l)*h,n=a?-Math.sin(s*l)*h:Math.sin(s*l)*h}return new R(i*e.x+n*t.x,i*e.y+n*t.y,i*e.z+n*t.z,i*e.w+n*t.w)},R.prototype={toString:function(){return"{X:"+this.x+" Y:"+this.y+" Z:"+this.z+" W:"+this.w+"}"},asArray:function(){return[this.x,this.y,this.z,this.w]},set:function(e,t,r,n){null==n&&(n=1),null==r&&(r=0),null==t&&(t=0),null==e&&(e=0),this.x=e,this.y=t,this.z=r,this.w=n},equals:function(e){return null!=e&&this.x==e.x&&this.y==e.y&&this.z==e.z&&this.w==e.w},clone:function(){return new R(this.x,this.y,this.z,this.w)},copyFrom:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this},copyFromFloats:function(e,t,r,n){return this.x=e,this.y=t,this.z=r,this.w=n,this},add:function(e){return new R(this.x+e.x,this.y+e.y,this.z+e.z,this.w+e.w)},subtract:function(e){return new R(this.x-e.x,this.y-e.y,this.z-e.z,this.w-e.w)},scale:function(e){return new R(this.x*e,this.y*e,this.z*e,this.w*e)},multiply:function(e){var t=new R(0,0,0,1);return t.x=this.x*e.w+this.y*e.z-this.z*e.y+this.w*e.x,t.y=-this.x*e.z+this.y*e.w+this.z*e.x+this.w*e.y,t.z=this.x*e.y-this.y*e.x+this.z*e.w+this.w*e.z,t.w=-this.x*e.x-this.y*e.y-this.z*e.z+this.w*e.w,t},multiplyToRef:function(e,t){t.x=this.x*e.w+this.y*e.z-this.z*e.y+this.w*e.x,t.y=-this.x*e.z+this.y*e.w+this.z*e.x+this.w*e.y,t.z=this.x*e.y-this.y*e.x+this.z*e.w+this.w*e.z,t.w=-this.x*e.x-this.y*e.y-this.z*e.z+this.w*e.w},multiplyInPlace:function(e){return this.x=this.x*e.w+this.y*e.z-this.z*e.y+this.w*e.x,this.y=-this.x*e.z+this.y*e.w+this.z*e.x+this.w*e.y,this.z=this.x*e.y-this.y*e.x+this.z*e.w+this.w*e.z,this.w=-this.x*e.x-this.y*e.y-this.z*e.z+this.w*e.w,this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var e=1/Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},toEulerAngles:function(e){null==e&&(e="YZX");var t=new L(0,0,0);return this.toEulerAnglesToRef(t,e),t},toEulerAnglesToRef:function(e,t){null==t&&(t="YZX");var r=-(1/0),n=0,i=0,s=this.x,o=this.y,a=this.z,l=this.w;switch(t){case"YZX":var h=s*o+a*l;if(h>.499&&(r=2*Math.atan2(s,l),n=Math.PI/2,i=0),-.499>h&&(r=-2*Math.atan2(s,l),n=-Math.PI/2,i=0),r==-(1/0)){var c=s*s,u=o*o,f=a*a;r=Math.atan2(2*o*l-2*s*a,1-2*u-2*f),n=Math.asin(2*h),i=Math.atan2(2*s*l-2*o*a,1-2*c-2*f)}break;default:throw new Ar("Euler order "+t+" not supported yet.")}return e.y=r,e.z=n,e.x=i,this},toRotationMatrix:function(e){var t=this.x*this.x,r=this.y*this.y,n=this.z*this.z,i=this.x*this.y,s=this.z*this.w,o=this.z*this.x,a=this.y*this.w,l=this.y*this.z,h=this.x*this.w;e.m[0]=1-2*(r+n),e.m[1]=2*(i+s),e.m[2]=2*(o-a),e.m[3]=0,e.m[4]=2*(i-s),e.m[5]=1-2*(n+t),e.m[6]=2*(l+h),e.m[7]=0,e.m[8]=2*(o+a),e.m[9]=2*(l-h),e.m[10]=1-2*(r+t),e.m[11]=0,e.m[12]=0,e.m[13]=0,e.m[14]=0,e.m[15]=1},multVector:function(e){var t=2*this.x,r=2*this.y,n=2*this.z,i=this.x*t,s=this.y*r,o=this.z*n,a=this.x*r,l=this.x*n,h=this.y*n,c=this.w*t,u=this.w*r,f=this.w*n,d=new L;return d.x=(1-(s+o))*e.x+(a-f)*e.y+(l+u)*e.z,d.y=(a+f)*e.x+(1-(i+o))*e.y+(h-c)*e.z,d.z=(l-u)*e.x+(h+c)*e.y+(1-(i+s))*e.z,d},fromRotationMatrix:function(e){return R.FromRotationMatrixToRef(e,this),this},__class__:R};var L=t.BABYLON.Vector3=function(e,t,r){null==r&&(r=0),null==t&&(t=0),null==e&&(e=0),this.x=e,this.y=t,this.z=r};s["com.babylonhx.math.Vector3"]=L,L.__name__=["com","babylonhx","math","Vector3"],L.GetClipFactor=function(e,t,r,n){var i=e.x*r.x+e.y*r.y+e.z*r.z-n,s=t.x*r.x+t.y*r.y+t.z*r.z-n,o=i/(i-s);return o},L.FromArray=function(e,t){return null==t&&(t=0),new L(e[t],e[t+1],e[t+2])},L.FromFloatArray=function(e,t){return null==t&&(t=0),new L(e[t],e[t+1],e[t+2])},L.FromArrayToRef=function(e,t,r){r.x=e[t],r.y=e[t+1],r.z=e[t+2]},L.FromFloatArrayToRef=function(e,t,r){r.x=e[t],r.y=e[t+1],r.z=e[t+2]},L.FromFloatsToRef=function(e,t,r,n){n.x=e,n.y=t,n.z=r},L.Zero=function(){return new L(0,0,0)},L.One=function(){return new L(1,1,1)},L.Up=function(){return new L(0,1,0)},L.Down=function(){return new L(0,-1,0)},L.Forward=function(){return new L(0,0,1)},L.Back=function(){return new L(0,0,-1)},L.Right=function(){return new L(1,0,0)},L.Left=function(){return new L(-1,0,0)},L.TransformCoordinates=function(e,t){var r=new L(0,0,0);return L.TransformCoordinatesToRef(e,t,r),r},L.TransformCoordinatesToRef=function(e,t,r){var n=e.x*t.m[0]+e.y*t.m[4]+e.z*t.m[8]+t.m[12],i=e.x*t.m[1]+e.y*t.m[5]+e.z*t.m[9]+t.m[13],s=e.x*t.m[2]+e.y*t.m[6]+e.z*t.m[10]+t.m[14],o=e.x*t.m[3]+e.y*t.m[7]+e.z*t.m[11]+t.m[15];r.x=n/o,r.y=i/o,r.z=s/o},L.TransformCoordinatesFromFloatsToRef=function(e,t,r,n,i){var s=e*n.m[0]+t*n.m[4]+r*n.m[8]+n.m[12],o=e*n.m[1]+t*n.m[5]+r*n.m[9]+n.m[13],a=e*n.m[2]+t*n.m[6]+r*n.m[10]+n.m[14],l=e*n.m[3]+t*n.m[7]+r*n.m[11]+n.m[15];i.x=s/l,i.y=o/l,i.z=a/l},L.TransformNormal=function(e,t){var r=new L(0,0,0);return r.x=e.x*t.m[0]+e.y*t.m[4]+e.z*t.m[8],r.y=e.x*t.m[1]+e.y*t.m[5]+e.z*t.m[9],r.z=e.x*t.m[2]+e.y*t.m[6]+e.z*t.m[10],r},L.TransformNormalToRef=function(e,t,r){r.x=e.x*t.m[0]+e.y*t.m[4]+e.z*t.m[8],r.y=e.x*t.m[1]+e.y*t.m[5]+e.z*t.m[9],r.z=e.x*t.m[2]+e.y*t.m[6]+e.z*t.m[10]},L.TransformNormalFromFloatsToRef=function(e,t,r,n,i){i.x=e*n.m[0]+t*n.m[4]+r*n.m[8],i.y=e*n.m[1]+t*n.m[5]+r*n.m[9],i.z=e*n.m[2]+t*n.m[6]+r*n.m[10]},L.CatmullRom=function(e,t,r,n,i){var s=i*i,o=i*s,a=.5*(2*t.x+(-e.x+r.x)*i+(2*e.x-5*t.x+4*r.x-n.x)*s+(-e.x+3*t.x-3*r.x+n.x)*o),l=.5*(2*t.y+(-e.y+r.y)*i+(2*e.y-5*t.y+4*r.y-n.y)*s+(-e.y+3*t.y-3*r.y+n.y)*o),h=.5*(2*t.z+(-e.z+r.z)*i+(2*e.z-5*t.z+4*r.z-n.z)*s+(-e.z+3*t.z-3*r.z+n.z)*o);return new L(a,l,h)},L.Clamp=function(e,t,r){var n=e.x;n=n>r.x?r.x:n,n=n<t.x?t.x:n;var i=e.y;i=i>r.y?r.y:i,i=i<t.y?t.y:i;var s=e.z;return s=s>r.z?r.z:s,s=s<t.z?t.z:s,new L(n,i,s)},L.Hermite=function(e,t,r,n,i){var s=i*i,o=i*s,a=2*o-3*s+1,l=-2*o+3*s,h=o-2*s+i,c=o-s,u=e.x*a+r.x*l+t.x*h+n.x*c,f=e.y*a+r.y*l+t.y*h+n.y*c,d=e.z*a+r.z*l+t.z*h+n.z*c;return new L(u,f,d)},L.Lerp=function(e,t,r){var n=e.x+(t.x-e.x)*r,i=e.y+(t.y-e.y)*r,s=e.z+(t.z-e.z)*r;return new L(n,i,s)},L.Dot=function(e,t){return e.x*t.x+e.y*t.y+e.z*t.z},L.Cross=function(e,t){var r=new L(0,0,0);return r.x=e.y*t.z-e.z*t.y,r.y=e.z*t.x-e.x*t.z,r.z=e.x*t.y-e.y*t.x,r},L.CrossToRef=function(e,t,r){r.x=e.y*t.z-e.z*t.y,r.y=e.z*t.x-e.x*t.z,r.z=e.x*t.y-e.y*t.x},L.Normalize=function(e){var t=new L(0,0,0);return t.x=e.x,t.y=e.y,t.z=e.z,t.normalize(),t},L.NormalizeToRef=function(e,t){t.x=e.x,t.y=e.y,t.z=e.z,t.normalize()},L.Project=function(e,t,r,n){var i=n.width,s=n.height,o=n.x,a=n.y,l=Le.FromValues(i/2,0,0,0,0,-s/2,0,0,0,0,1,0,o+i/2,s/2+a,0,1),h=t.multiply(r).multiply(l);return L.TransformCoordinates(e,h)},L.UnprojectFromTransform=function(e,t,r,n,i){var s=n.multiply(i);s.invertToRef(s),e.x=e.x/t*2-1,e.y=-(e.y/r*2-1);var o=L.TransformCoordinates(e,s),a=e.x*s.m[3]+e.y*s.m[7]+e.z*s.m[11]+s.m[15];return Ae.WithinEpsilon(a,1,null)&&(o=o.scale(1/a)),o},L.Unproject=function(e,t,r,n,i,s){var o=n.multiply(i).multiply(s);o.invertToRef(o);var a=new L(e.x/t*2-1,-(e.y/r*2-1),e.z),l=L.TransformCoordinates(a,o),h=a.x*o.m[3]+a.y*o.m[7]+a.z*o.m[11]+o.m[15];return Ae.WithinEpsilon(h,1,null)&&(l=l.scale(1/h)),l},L.Minimize=function(e,t){var r=new L(e.x,e.y,e.z);return t.x<r.x&&(r.x=t.x),t.y<r.y&&(r.y=t.y),t.z<r.z&&(r.z=t.z),r},L.Maximize=function(e,t){var r=new L(e.x,e.y,e.z);return t.x>r.x&&(r.x=t.x),t.y>r.y&&(r.y=t.y),t.z>r.z&&(r.z=t.z),r},L.Distance=function(e,t){return Math.sqrt(L.DistanceSquared(e,t))},L.DistanceSquared=function(e,t){var r=e.x-t.x,n=e.y-t.y,i=e.z-t.z;return r*r+n*n+i*i},L.Center=function(e,t){var r=new L(e.x+t.x,e.y+t.y,e.z+t.z);return r.x*=.5,r.y*=.5,r.z*=.5,r},L.RotationFromAxis=function(e,t,r){var n=new L(0,0,0);return L.RotationFromAxisToRef(e,t,r,n),n},L.RotationFromAxisToRef=function(e,t,r,n){var i=L.Normalize(e),s=L.Normalize(r),o=xt.X,a=xt.Y,l=0,h=0,c=0,u=0,f=0,d=0,m=0,_=-1,p=0,v=Pt.vector3[0],g=0,x=Pt.vector3[1],y=null;Ae.WithinEpsilon(s.z,0,.001)?d=1:Ae.WithinEpsilon(s.x,0,.001)?u=1:(m=s.z/s.x,u=-m*Math.sqrt(1/(1+m*m)),d=Math.sqrt(1/(1+m*m))),x=new L(u,f,d),x.normalize(),y=L.Cross(s,x),y.normalize(),v=L.Cross(i,x),v.normalize(),s.x*v.x+s.y*v.y+s.z*v.z<0&&(_=1),g=i.x*x.x+i.y*x.y+i.z*x.z,g=Math.min(1,Math.max(-1,g)),c=Math.acos(g)*_,x.x*o.x+x.y*o.y+x.z*o.z<0&&(c=Math.PI+c,x.x*=-1,x.y*=-1,x.z*=-1,x=x,y.x*=-1,y.y*=-1,y.z*=-1,y=y,p++);var b=Pt.vector3[2],S=Pt.vector3[3];u=0,f=0,d=0,_=-1,Ae.WithinEpsilon(s.z,0,.001)?u=1:(m=x.z/x.x,u=-m*Math.sqrt(1/(1+m*m)),d=Math.sqrt(1/(1+m*m))),b=new L(u,f,d),b.normalize(),S=L.Cross(b,x),S.normalize(),v=L.Cross(s,b),v.normalize(),x.x*v.x+x.y*v.y+x.z*v.z<0&&(_=1),g=s.x*b.x+s.y*b.y+s.z*b.z,g=Math.min(1,Math.max(-1,g)),h=Math.acos(g)*_,S.x*a.x+S.y*a.y+S.z*a.z<0&&(h=Math.PI+h,S.x*=-1,S.y*=-1,S.z*=-1,S=S,b.x*=-1,b.y*=-1,b.z*=-1,b=b,p++),_=-1,v=L.Cross(o,x),v.normalize(),v.x*a.x+v.y*a.y+v.z*a.z<0&&(_=1),g=x.x*o.x+x.y*o.y+x.z*o.z,g=Math.min(1,Math.max(-1,g)),l=-Math.acos(g)*_,0>g&&2>p&&(l=Math.PI+l),n.x=h,n.y=l,n.z=c},L.prototype={toString:function(){return"{X:"+this.x+" Y:"+this.y+" Z:"+this.z+"}"},asArray:function(){var e=[];return e[0]=this.x,e[1]=this.y,e[2]=this.z,e},set:function(e,t,r){null==r&&(r=0),null==t&&(t=0),null==e&&(e=0),this.x=e,this.y=t,this.z=r},toArray:function(e,t){null==t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z},toQuaternion:function(){var e=new R(0,0,0,1),t=Math.cos(.5*(this.x+this.z)),r=Math.sin(.5*(this.x+this.z)),n=Math.cos(.5*(this.z-this.x)),i=Math.sin(.5*(this.z-this.x)),s=Math.cos(.5*this.y),o=Math.sin(.5*this.y);return e.x=n*o,e.y=-i*o,e.z=r*s,e.w=t*s,e},addInPlace:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this},add:function(e){return new L(this.x+e.x,this.y+e.y,this.z+e.z)},addToRef:function(e,t){t.x=this.x+e.x,t.y=this.y+e.y,t.z=this.z+e.z},subtractInPlace:function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this},subtract:function(e){return new L(this.x-e.x,this.y-e.y,this.z-e.z)},subtractToRef:function(e,t){t.x=this.x-e.x,t.y=this.y-e.y,t.z=this.z-e.z},subtractFromFloats:function(e,t,r){return new L(this.x-e,this.y-t,this.z-r)},subtractFromFloatsToRef:function(e,t,r,n){n.x=this.x-e,n.y=this.y-t,n.z=this.z-r},negate:function(){return new L(-this.x,-this.y,-this.z)},scaleInPlace:function(e){return this.x*=e,this.y*=e,this.z*=e,this},scale:function(e){return new L(this.x*e,this.y*e,this.z*e)},scaleToRef:function(e,t){t.x=this.x*e,t.y=this.y*e,t.z=this.z*e},equals:function(e){return null!=e&&this.x==e.x&&this.y==e.y&&this.z==e.z},equalsWithEpsilon:function(e,t){return null==t&&(t=.001),null!=e&&Ae.WithinEpsilon(this.x,e.x,t)&&Ae.WithinEpsilon(this.y,e.y,t)&&Ae.WithinEpsilon(this.z,e.z,t)},equalsToFloats:function(e,t,r){return this.x==e&&this.y==t&&this.z==r},multiplyInPlace:function(e){this.x*=e.x,this.y*=e.y,this.z*=e.z},multiply:function(e){return new L(this.x*e.x,this.y*e.y,this.z*e.z)},multiplyToRef:function(e,t){t.x=this.x*e.x,t.y=this.y*e.y,t.z=this.z*e.z},multiplyByFloats:function(e,t,r){return new L(this.x*e,this.y*t,this.z*r)},divide:function(e){return new L(this.x/e.x,this.y/e.y,this.z/e.z)},divideToRef:function(e,t){t.x=this.x/e.x,t.y=this.y/e.y,t.z=this.z/e.z},MinimizeInPlace:function(e){e.x<this.x&&(this.x=e.x),e.y<this.y&&(this.y=e.y),e.z<this.z&&(this.z=e.z)},MaximizeInPlace:function(e){e.x>this.x&&(this.x=e.x),e.y>this.y&&(this.y=e.y),e.z>this.z&&(this.z=e.z)},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthSquared:function(){return this.x*this.x+this.y*this.y+this.z*this.z},normalize:function(){var e=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);if(0==e)return this;var t=1/e;return this.x*=t,this.y*=t,this.z*=t,this},clone:function(){return new L(this.x,this.y,this.z)},copyFrom:function(e){this.x=e.x,this.y=e.y,this.z=e.z},copyFromFloats:function(e,t,r){return this.x=e,this.y=t,this.z=r,this},__class__:L};var F=t.BABYLON.Animation=function(e,t,r,n,i){null==i&&(i=-1),this._ranges=new Er,this.allowMatricesInterpolation=!1,this._events=[],this._stopped=!1,this._highLimitsCache=[],this._offsetsCache=[],this.name=e,this.targetProperty=t,this.targetPropertyPath=t.split("."),this.framePerSecond=r,this.dataType=n,-1==i?this.loopMode=1:this.loopMode=i};s["com.babylonhx.animations.Animation"]=F,F.__name__=["com","babylonhx","animations","Animation"],F._PrepareAnimation=function(e,t,r,n,i,s,o,a){var l=-1;if("number"==typeof i?l=0:Re.__instanceof(i,R)?l=2:Re.__instanceof(i,L)?l=1:Re.__instanceof(i,Mt)?l=5:Re.__instanceof(i,Ge)&&(l=4),-1==l)return null;var h=new F(e,t,r,l,o),c=[];return c.push({frame:0,value:i}),c.push({frame:n,value:s}),h.setKeys(c),null!=a&&(h._easingFunction=a),h},F.CreateAndStartAnimation=function(e,t,r,n,i,s,o,a,l,h){var c=F._PrepareAnimation(e,r,n,i,s,o,a,l);return t._scene.beginDirectAnimation(t,[c],0,i,1==c.loopMode,1,h)},F.CreateMergeAndStartAnimation=function(e,t,r,n,i,s,o,a,l,h){var c=F._PrepareAnimation(e,r,n,i,s,o,a,l);return t.animations.push(c),t._scene.beginAnimation(t,0,i,1==c.loopMode,1,h)},F.Parse=function(e){for(var t=new F(e.name,e.property,e.framePerSecond,e.dataType,e.loopBehavior),r=e.dataType,n=[],i=null,s=0,o=e.keys.length;o>s;){var a=s++,l=e.keys[a];switch(r){case 0:i=l.values[0];break;case 2:i=R.FromArray(l.values,null);break;case 3:i=Le.FromArray(l.values,null);break;case 4:i=Ge.FromArray(l.values,null);break;case 1:i=L.FromArray(l.values,null);break;default:i=L.FromArray(l.values,null)}n.push({frame:l.frame,value:i})}if(t.setKeys(n),null!=e.ranges)for(var h=0,c=e.ranges.length;c>h;){var u=h++;i=e.ranges[u],t.createRange(i.name,i.from,i.to)}return t},F.AppendSerializedAnimations=function(e,t){if(null!=e.animations){t.animations=[];for(var r=0,n=e.animations.length;n>r;){var i=r++,s=e.animations[i];t.animations.push(s.serialize())}}},F.prototype={addEvent:function(e){this._events.push(e)},removeEvents:function(e){for(var t=0;t<this._events.length;)this._events[t].frame==e&&(this._events.splice(t,1),t--),++t},reset:function(){this._offsetsCache=[],this._highLimitsCache=[],this.currentFrame=0},createRange:function(e,t,r){if(!this._ranges.exists(e)){var n=new N(e,t,r);this._ranges.set(e,n)}},deleteRange:function(e,t){if(null==t&&(t=!0),null!=this._ranges.get(e)){if(t)for(var r=this._ranges.get(e).from,n=this._ranges.get(e).to,i=this._keys.length-1;i>=0;)this._keys[i].frame>=r&&this._keys[i].frame<=n&&this._keys.splice(i,1),i--;this._ranges.remove(e)}},getRange:function(e){return this._ranges.get(e)},isStopped:function(){return this._stopped},getKeys:function(){return this._keys},getHighestFrame:function(){for(var e=0,t=0,r=this._keys.length;r>t;){var n=t++;e<this._keys[n].frame&&(e=this._keys[n].frame)}return e},getEasingFunction:function(){return this._easingFunction},setEasingFunction:function(e){this._easingFunction=e},floatInterpolateFunction:function(e,t,r){return e+(t-e)*r},quaternionInterpolateFunction:function(e,t,r){return R.Slerp(e,t,r)},vector3InterpolateFunction:function(e,t,r){return L.Lerp(e,t,r)},vector2InterpolateFunction:function(e,t,r){return Mt.Lerp(e,t,r)},color3InterpolateFunction:function(e,t,r){return Ge.Lerp(e,t,r)},matrixInterpolateFunction:function(e,t,r){F.matrixInterpolateFunction_startScale.set(0,0,0),F.matrixInterpolateFunction_startRotation.set(null,null,null,null),F.matrixInterpolateFunction_startTranslation.set(0,0,0),e.decompose(F.matrixInterpolateFunction_startScale,F.matrixInterpolateFunction_startRotation,F.matrixInterpolateFunction_startTranslation),F.matrixInterpolateFunction_endScale.set(0,0,0),F.matrixInterpolateFunction_endRotation.set(null,null,null,null),F.matrixInterpolateFunction_endTranslation.set(0,0,0),t.decompose(F.matrixInterpolateFunction_endScale,F.matrixInterpolateFunction_endRotation,F.matrixInterpolateFunction_endTranslation);var n=L.Lerp(F.matrixInterpolateFunction_startScale,F.matrixInterpolateFunction_endScale,r),i=R.Slerp(F.matrixInterpolateFunction_startRotation,F.matrixInterpolateFunction_endRotation,r),s=L.Lerp(F.matrixInterpolateFunction_startTranslation,F.matrixInterpolateFunction_endTranslation,r);return Le.Compose(n,i,s)},clone:function qr(){var qr=new F(this.name,this.targetPropertyPath.join("."),this.framePerSecond,this.dataType,this.loopMode);return qr.setKeys(this._keys),qr},setKeys:function(e){this._keys=e.slice(0),this._offsetsCache=[],this._highLimitsCache=[]},_interpolate:function(e,t,r,n,i){if(2==r&&t>0&&null!=i)return null!=i.clone?i.clone():i;this.currentFrame=e;var s=u["int"](Math.max(0,Math.min(this._keys.length-1,Math.floor(this._keys.length*(e-this._keys[0].frame)/(this._keys[this._keys.length-1].frame-this._keys[0].frame))-1)));if(this._keys[s].frame>=e)for(;s-1>=0&&this._keys[s].frame>=e;)s--;for(var o=s,a=this._keys.length;a>o;){var l=o++;if(null!=this._keys[l+1]&&this._keys[l+1].frame>=e){var h=this._keys[l].value,c=this._keys[l+1].value,f=(e-this._keys[l].frame)/(this._keys[l+1].frame-this._keys[l].frame);null!=this._easingFunction&&(f=this._easingFunction.ease(f));var d=this.dataType;switch(d){case 0:switch(r){case 1:case 2:return this.floatInterpolateFunction(h,c,f);case 0:return n*t+this.floatInterpolateFunction(h,c,f)}break;case 2:var m=null;switch(r){case 1:case 2:m=R.Slerp(h,c,f);break;case 0:m=R.Slerp(h,c,f).add(n.scale(t))}return m;case 1:switch(r){case 1:case 2:return L.Lerp(h,c,f);case 0:return L.Lerp(h,c,f).add(n.scale(t))}break;case 5:switch(r){case 1:case 2:return Mt.Lerp(h,c,f);case 0:return Mt.Lerp(h,c,f).add(n.scale(t))}break;case 4:switch(r){case 1:case 2:return Ge.Lerp(h,c,f);case 0:return Ge.Lerp(h,c,f).add(n.scale(t))}break;case 3:switch(r){case 1:case 2:case 0:return h}}}}return this._keys[this._keys.length-1].value},setValue:function(e){if(this.targetPropertyPath.length>1){var t=null,r=this.targetPropertyPath[0];switch(r){case"scaling":t=this._target.scaling;break;case"position":t=this._target.position;break;case"rotation":t=this._target.rotation;break;default:t=c.getProperty(this._target,this.targetPropertyPath[0])}for(var n=1,i=this.targetPropertyPath.length-1;i>n;){var s=n++;t=c.getProperty(t,this.targetPropertyPath[s])}var o=this.targetPropertyPath[this.targetPropertyPath.length-1];switch(o){case"x":t.x=e;break;case"y":t.y=e;break;case"z":t.z=e;break;default:c.setProperty(t,this.targetPropertyPath[this.targetPropertyPath.length-1],e)}}else{var a=this.targetPropertyPath[0];switch(a){case"_matrix":this._target._matrix=e;break;case"rotation":this._target.rotation=e;break;case"position":this._target.position=e;break;case"scaling":this._target.scaling=e;break;default:c.setProperty(this._target,this.targetPropertyPath[0],e)}}null!=this._target.markAsDirty&&this._target.markAsDirty(this.targetProperty)},goToFrame:function(e){e<this._keys[0].frame?e=this._keys[0].frame:e>this._keys[this._keys.length-1].frame&&(e=this._keys[this._keys.length-1].frame);var t=this._interpolate(e,0,this.loopMode);this.setValue(t)},animate:function(e,t,r,n,i){if(null==this.targetPropertyPath||this.targetPropertyPath.length<1)return this._stopped=!0,!1;var s=!0;if(0!=this._keys[0].frame){var o={frame:0,value:this._keys[0].value};this._keys.unshift(o)}(t<this._keys[0].frame||t>this._keys[this._keys.length-1].frame)&&(t=this._keys[0].frame),(r<this._keys[0].frame||r>this._keys[this._keys.length-1].frame)&&(r=this._keys[this._keys.length-1].frame);var a=r-t,l=null,h=e*(this.framePerSecond*i)/1e3,c=null;if(h>a&&!n)s=!1,c=this._keys[this._keys.length-1].value;else if(c=0,1!=this.loopMode){var u=r+t;if(this._offsetsCache.length>u){var f=this._interpolate(t,0,1),d=this._interpolate(r,0,1),m=this.dataType;switch(m){case 0:this._offsetsCache[u]=d-f;break;case 2:this._offsetsCache[u]=Re.__cast(d,R).subtract(Re.__cast(f,R));break;case 1:this._offsetsCache[u]=Re.__cast(d,L).subtract(Re.__cast(f,L));break;case 5:this._offsetsCache[u]=Re.__cast(d,Mt).subtract(Re.__cast(f,Mt));break;case 4:this._offsetsCache[u]=Re.__cast(d,Ge).subtract(Re.__cast(f,Ge))}this._highLimitsCache[u]=d}c=this._highLimitsCache[u],l=this._offsetsCache[u]}if(null==l){var _=this.dataType;switch(_){case 0:l=0;break;case 2:l=new R(0,0,0,0);break;case 1:l=new L(0,0,0);break;case 5:l=new Mt(0,0);break;case 4:l=new Ge(0,0,0)}}var p,v=h/a|0;p=s?t+h%a:r;for(var g=this._interpolate(p,v,this.loopMode,l,c),x=0;x<this._events.length;){if(p>=this._events[x].frame){var y=this._events[x];y.isDone||(y.onlyOnce&&(this._events.splice(x,1),x--),y.isDone=!0,y.action())}else this._events[x].isDone&&!this._events[x].onlyOnce&&(this._events[x].isDone=!1);++x}return this.setValue(g),s||(this._stopped=!0),s},serialize:function(){var e={};e.name=this.name,e.property=this.targetProperty,e.framePerSecond=this.framePerSecond,e.dataType=this.dataType,e.loopBehavior=this.loopMode;var t=this.dataType;e.keys=[];for(var r=this._keys,n=0,i=r.length;i>n;){var s=n++,o=r[s],a={};switch(a.frame=o.frame,t){case 0:a.values=[o.value];break;case 2:case 3:case 1:case 4:a.values=o.value.asArray()}e.keys.push(a)}e.ranges=[];for(var l=this._ranges.keys();l.hasNext();){var h=l.next(),c={};c.name=h,c.from=this._ranges.get(h).from,c.to=this._ranges.get(h).to,e.ranges.push(c)}return e},__class__:F};var O=function(e,t,r){null==r&&(r=!1),this.isDone=!1,this.frame=e,this.action=t,this.onlyOnce=r};s["com.babylonhx.animations.AnimationEvent"]=O,O.__name__=["com","babylonhx","animations","AnimationEvent"],O.prototype={__class__:O};var N=function(e,t,r){this.name=e,this.from=t,this.to=r};s["com.babylonhx.animations.AnimationRange"]=N,N.__name__=["com","babylonhx","animations","AnimationRange"],N.prototype={__class__:N};var B=t.BABYLON.IAnimatable=function(){};s["com.babylonhx.animations.IAnimatable"]=B,B.__name__=["com","babylonhx","animations","IAnimatable"],B.prototype={__class__:B};var k=t.BABYLON.IEasingFunction=function(){};s["com.babylonhx.animations.easing.IEasingFunction"]=k,k.__name__=["com","babylonhx","animations","easing","IEasingFunction"],k.prototype={__class__:k};var V=t.BABYLON.EasingFunction=function(){this._easingMode=V.EASINGMODE_EASEIN};s["com.babylonhx.animations.easing.EasingFunction"]=V,V.__name__=["com","babylonhx","animations","easing","EasingFunction"],V.__interfaces__=[k],V.prototype={setEasingMode:function(e){var t=Math.min(Math.max(e,0),2);this._easingMode=t},getEasingMode:function(){return this._easingMode},easeInCore:function(e){throw new Ar("You must implement this method")},ease:function(e){var t=this._easingMode;switch(t){case 0:return this.easeInCore(e);case 1:return 1-this.easeInCore(1-e)}return e>=.5?.5*(1-this.easeInCore(2*(1-e)))+.5:.5*this.easeInCore(2*e)},__class__:V};var U=t.BABYLON.Analyser=function(e){this.DEBUGCANVASSIZE={width:320,height:200},this.DEBUGCANVASPOS={x:20,y:20},this.BARGRAPHAMPLITUDE=256,this.FFT_SIZE=512,this.SMOOTHING=.75,this._scene=e,this._audioEngine=e._engine.audioEngine,gr.isTrue(this._audioEngine.canUseWebAudio)&&(this._webAudioAnalyser=this._audioEngine.get_audioContext().createAnalyser(),this._webAudioAnalyser.minDecibels=-140,this._webAudioAnalyser.maxDecibels=0,this._byteFreqs=new jr(this._webAudioAnalyser.frequencyBinCount),this._byteTime=new jr(this._webAudioAnalyser.frequencyBinCount),this._floatFreqs=new Float32Array(this._webAudioAnalyser.frequencyBinCount))};s["com.babylonhx.audio.Analyser"]=U,U.__name__=["com","babylonhx","audio","Analyser"],U.prototype={getFrequencyBinCount:function(){return gr.isTrue(this._audioEngine.canUseWebAudio)?this._webAudioAnalyser.frequencyBinCount:0},getByteFrequencyData:function(){return gr.isTrue(this._audioEngine.canUseWebAudio)&&(this._webAudioAnalyser.smoothingTimeConstant=this.SMOOTHING,this._webAudioAnalyser.fftSize=this.FFT_SIZE,this._webAudioAnalyser.getByteFrequencyData(this._byteFreqs)),this._byteFreqs},getByteTimeDomainData:function(){return gr.isTrue(this._audioEngine.canUseWebAudio)&&(this._webAudioAnalyser.smoothingTimeConstant=this.SMOOTHING,this._webAudioAnalyser.fftSize=this.FFT_SIZE,this._webAudioAnalyser.getByteTimeDomainData(this._byteTime)),this._byteTime},getFloatFrequencyData:function(){return gr.isTrue(this._audioEngine.canUseWebAudio)&&(this._webAudioAnalyser.smoothingTimeConstant=this.SMOOTHING,this._webAudioAnalyser.fftSize=this.FFT_SIZE,
this._webAudioAnalyser.getFloatFrequencyData(this._floatFreqs)),this._floatFreqs},drawDebugCanvas:function(){var e=this;if(gr.isTrue(this._audioEngine.canUseWebAudio)&&(gr.isTrue(this._debugCanvas)||(this._debugCanvas=window.document.createElement("canvas"),this._debugCanvas.width=this.DEBUGCANVASSIZE.width,this._debugCanvas.height=this.DEBUGCANVASSIZE.height,this._debugCanvas.style.position="absolute",this._debugCanvas.style.top=this.DEBUGCANVASPOS.y+"px",this._debugCanvas.style.left=this.DEBUGCANVASPOS.x+"px",this._debugCanvasContext=this._debugCanvas.getContext("2d"),window.document.body.appendChild(this._debugCanvas),this._registerFunc=function(){e.drawDebugCanvas()},this._scene.registerBeforeRender(this._registerFunc)),gr.isTrue(this._registerFunc))){var t=this.getByteFrequencyData();this._debugCanvasContext.fillStyle="rgb(0, 0, 0)",this._debugCanvasContext.fillRect(0,0,this.DEBUGCANVASSIZE.width,this.DEBUGCANVASSIZE.height);for(var r=0;r<this.getFrequencyBinCount();){var n=t[r],i=n/this.BARGRAPHAMPLITUDE,s=this.DEBUGCANVASSIZE.height*i,o=this.DEBUGCANVASSIZE.height-s-1,a=this.DEBUGCANVASSIZE.width/this.getFrequencyBinCount(),l=r/this.getFrequencyBinCount()*360;this._debugCanvasContext.fillStyle="hsl("+l+", 100%, 50%)",this._debugCanvasContext.fillRect(r*a,o,a,s),r++}}},stopDebugCanvas:function(){gr.isTrue(this._debugCanvas)&&(this._scene.unregisterBeforeRender(this._registerFunc),this._registerFunc=null,window.document.body.removeChild(this._debugCanvas),this._debugCanvas=null,this._debugCanvasContext=null)},connectAudioNodes:function(e,t){gr.isTrue(this._audioEngine.canUseWebAudio)&&(e.connect(this._webAudioAnalyser),this._webAudioAnalyser.connect(t))},dispose:function(){gr.isTrue(this._audioEngine.canUseWebAudio)&&this._webAudioAnalyser.disconnect()},__class__:U};var z=t.BABYLON.AudioEngine=function(){this.unlocked=!1,this.WarnedWebAudioUnsupported=!1,this.canUseWebAudio=!1,this._audioContextInitialized=!1,this._audioContext=null,("undefined"!=window.AudioContext||"undefined"!=window.webkitAudioContext)&&(window.AudioContext=window.AudioContext||window.webkitAudioContext,this.canUseWebAudio=!0),/iPad|iPhone|iPod/.test(navigator.platform)?this._unlockiOSaudio():this.unlocked=!0};s["com.babylonhx.audio.AudioEngine"]=z,z.__name__=["com","babylonhx","audio","AudioEngine"],z.prototype={get_audioContext:function(){return gr.isTrue(this._audioContextInitialized)||this._initializeAudioContext(),this._audioContext},_unlockiOSaudio:function(){var e=this,t=function r(){var t=e.get_audioContext().createBuffer(1,1,22050),n=e.get_audioContext().createBufferSource();n.buffer=t,n.connect(e.get_audioContext().destination),n.start(0),gr.setTimeout(function(){gr.isTrue(n.playbackState==n.PLAYING_STATE||n.playbackState==n.FINISHED_STATE)&&(e.unlocked=!0,window.removeEventListener("touchend",r,!1),gr.isTrue(e.onAudioUnlocked)&&e.onAudioUnlocked())},0)};window.addEventListener("touchend",t,!1)},_initializeAudioContext:function(){try{this.canUseWebAudio&&(this._audioContext=new AudioContext,this.masterGain=this._audioContext.createGain(),this.masterGain.gain.value=1,this.masterGain.connect(this._audioContext.destination),this._audioContextInitialized=!0)}catch(t){t instanceof Ar&&(t=t.val),this.canUseWebAudio=!1,e.log("Web Audio: "+u.string(t.message))}},dispose:function(){this.canUseWebAudio&&this._audioContextInitialized&&(gr.isTrue(this._connectedAnalyser)&&(this._connectedAnalyser.stopDebugCanvas(),this._connectedAnalyser.dispose(),this.masterGain.disconnect(),this.masterGain.connect(this._audioContext.destination),this._connectedAnalyser=null),this.masterGain.gain.value=1),this.WarnedWebAudioUnsupported=!1},getGlobalVolume:function(){return this.canUseWebAudio&&this._audioContextInitialized?this.masterGain.gain.value:-1},setGlobalVolume:function(e){this.canUseWebAudio&&this._audioContextInitialized&&(this.masterGain.gain.value=e)},connectToAnalyser:function(e){gr.isTrue(this._connectedAnalyser)&&this._connectedAnalyser.stopDebugCanvas(),this.canUseWebAudio&&this._audioContextInitialized&&(this._connectedAnalyser=e,this.masterGain.disconnect(),this._connectedAnalyser.connectAudioNodes(this.masterGain,this._audioContext.destination))},__class__:z,__properties__:{get_audioContext:"get_audioContext"}};var W=t.BABYLON.Sound=function(t,r,n,i,s){this._isOutputConnected=!1,this._coneOuterGain=0,this._coneOuterAngle=360,this._coneInnerAngle=360,this._isDirectional=!1,this.isPaused=!1,this.isPlaying=!1,this._isReadyToPlay=!1,this._isLoaded=!1,this._volume=1,this._localDirection=new L(1,0,0),this._position=new L(0,0,0),this._startOffset=0,this._startTime=0,this._streaming=!1,this._playbackRate=1,this._panningModel="equalpower",this.distanceModel="linear",this.maxDistance=100,this.rolloffFactor=1,this.refDistance=1,this.spatialSound=!1,this.useCustomAttenuation=!1,this.loop=!1,this.autoplay=!1;var o=this;this.name=t,this._scene=n,this._readyToPlayCallback=i,this._customAttenuationFunction=function(e,t,r,n,i){return r>t?e*(1-t/r):0},gr.isTrue(s)&&(Object.prototype.hasOwnProperty.call(s,"autoplay")?this.autoplay=s.autoplay:this.autoplay=!1,Object.prototype.hasOwnProperty.call(s,"loop")?this.loop=s.loop:this.loop=!1,null!=s.volume&&(this._volume=s.volume),Object.prototype.hasOwnProperty.call(s,"spatialSound")?this.spatialSound=s.spatialSound:this.spatialSound=!1,Object.prototype.hasOwnProperty.call(s,"maxDistance")?this.maxDistance=s.maxDistance:this.maxDistance=100,Object.prototype.hasOwnProperty.call(s,"useCustomAttenuation")?this.useCustomAttenuation=s.useCustomAttenuation:this.useCustomAttenuation=!1,Object.prototype.hasOwnProperty.call(s,"rolloffFactor")?this.rolloffFactor=s.rolloffFactor:this.rolloffFactor=1,Object.prototype.hasOwnProperty.call(s,"refDistance")?this.refDistance=s.refDistance:this.refDistance=1,Object.prototype.hasOwnProperty.call(s,"distanceModel")?this.distanceModel=s.distanceModel:this.distanceModel="linear",Object.prototype.hasOwnProperty.call(s,"playbackRate")?this._playbackRate=s.playbackRate:this._playbackRate=1,Object.prototype.hasOwnProperty.call(s,"streaming")?this._streaming=s.streaming:this._streaming=!1),gr.isTrue(this._scene._engine.audioEngine.canUseWebAudio)?(this._soundGain=this._scene._engine.audioEngine.get_audioContext().createGain(),this._soundGain.gain.value=this._volume,this._inputAudioNode=this._soundGain,this._ouputAudioNode=this._soundGain,this.spatialSound&&this._createSpatialParameters(),this._scene.mainSoundTrack.AddSound(this),gr.isTrue(r)&&("string"==typeof r?gr.isTrue(this._streaming)?(this._htmlAudioElement=new Audio(r),this._htmlAudioElement.controls=!1,this._htmlAudioElement.loop=this.loop,this._htmlAudioElement.crossOrigin="anonymous",this._htmlAudioElement.preload="auto",this._htmlAudioElement.addEventListener("canplaythrough",function(){o._isReadyToPlay=!0,gr.isTrue(o.autoplay)&&o.play(),gr.isTrue(o._readyToPlayCallback)&&o._readyToPlayCallback()}),window.document.body.appendChild(this._htmlAudioElement)):Ae.LoadFile(r,function(e){o._soundLoaded(e)}):Re.__instanceof(r,Xr)?Re.__cast(r,Xr).byteLength>0&&this._soundLoaded(r):e.log("Parameter must be a URL to the sound or an ArrayBuffer of the sound."))):(this._scene.mainSoundTrack.AddSound(this),gr.isTrue(this._scene._engine.audioEngine.WarnedWebAudioUnsupported)||(e.log("Web Audio is not supported by your browser."),this._scene._engine.audioEngine.WarnedWebAudioUnsupported=!0),gr.isTrue(this._readyToPlayCallback)&&window.setTimeout(function(){o._readyToPlayCallback()},1e3))};s["com.babylonhx.audio.Sound"]=W,W.__name__=["com","babylonhx","audio","Sound"],W.Parse=function(e,t,r,n){var i,s=e.name;i=gr.isTrue(e.url)?r+u.string(e.url):r+s;var o,a={autoplay:e.autoplay,loop:e.loop,volume:e.volume,spatialSound:e.spatialSound,maxDistance:e.maxDistance,rolloffFactor:e.rolloffFactor,refDistance:e.refDistance,distanceModel:e.distanceModel,playbackRate:e.playbackRate};if(gr.isTrue(n)){var l=function d(){gr.isTrue(window.newSound._isReadyToPlay)?(window.newSound._audioBuffer=n.getAudioBuffer(),window.newSound._isReadyToPlay=!0,gr.isTrue(window.newSound.autoplay)&&window.newSound.play()):window.setTimeout(d,300)};o=new W(s,new Xr(0),t,null,a),l()}else window.newSound=new W(s,i,t,function(){t._removePendingData(window.newSound)},a),t._addPendingData(window.newSound);if(gr.isTrue(e.position)){var h=L.FromArray(e.position,null);window.newSound.setPosition(h)}if(gr.isTrue(e.isDirectional)&&(window.newSound.setDirectionalCone(Object.prototype.hasOwnProperty.call(e,"coneInnerAngle")?e.coneInnerAngle:360,Object.prototype.hasOwnProperty.call(e,"coneOuterAngle")?e.coneOuterAngle:360,Object.prototype.hasOwnProperty.call(e,"coneOuterGain")?e.coneOuterGain:0),gr.isTrue(e.localDirectionToMesh))){var c=L.FromArray(e.localDirectionToMesh,null);window.newSound.setLocalDirectionToMesh(c)}if(gr.isTrue(e.connectedMeshId)){var f=t.getMeshByID(e.connectedMeshId);gr.isTrue(f)&&window.newSound.attachToMesh(f)}return window.newSound},W.prototype={dispose:function(){this._scene._engine.audioEngine.canUseWebAudio&&this._isReadyToPlay&&(this.isPlaying&&this.stop(),this._isReadyToPlay=!1,-1==this.soundTrackId?this._scene.mainSoundTrack.RemoveSound(this):this._scene.soundTracks[Re.__cast(this.soundTrackId,Vr)].RemoveSound(this),gr.isTrue(this._soundGain)&&(this._soundGain.disconnect(),this._soundGain=null),gr.isTrue(this._soundPanner)&&(this._soundPanner.disconnect(),this._soundPanner=null),gr.isTrue(this._soundSource)&&(this._soundSource.disconnect(),this._soundSource=null),this._audioBuffer=null,gr.isTrue(this._htmlAudioElement)&&(this._htmlAudioElement.pause(),this._htmlAudioElement.src="",window.document.body.removeChild(this._htmlAudioElement)),gr.isTrue(this._connectedMesh)&&(this._connectedMesh.unregisterAfterWorldMatrixUpdate(this._registerFunc),this._connectedMesh=null))},_soundLoaded:function(t){var r=this;this._isLoaded=!0,this._scene._engine.audioEngine.get_audioContext().decodeAudioData(t,function(e){r._audioBuffer=e,r._isReadyToPlay=!0,gr.isTrue(r.autoplay)&&r.play(),gr.isTrue(r._readyToPlayCallback)&&r._readyToPlayCallback()},function(){e.log("Error while decoding audio data for: "+r.name)})},setAudioBuffer:function(e){gr.isTrue(this._scene._engine.audioEngine.canUseWebAudio)&&(this._audioBuffer=e,this._isReadyToPlay=!0)},updateOptions:function(e){gr.isTrue(e)&&(Object.prototype.hasOwnProperty.call(e,"loop")?this.loop=e.loop:this.loop=this.loop,Object.prototype.hasOwnProperty.call(e,"maxDistance")?this.maxDistance=e.maxDistance:this.maxDistance=this.maxDistance,Object.prototype.hasOwnProperty.call(e,"useCustomAttenuation")?this.useCustomAttenuation=e.useCustomAttenuation:this.useCustomAttenuation=this.useCustomAttenuation,Object.prototype.hasOwnProperty.call(e,"rolloffFactor")?this.rolloffFactor=e.rolloffFactor:this.rolloffFactor=this.rolloffFactor,Object.prototype.hasOwnProperty.call(e,"refDistance")?this.refDistance=e.refDistance:this.refDistance=this.refDistance,Object.prototype.hasOwnProperty.call(e,"distanceModel")?this.distanceModel=e.distanceModel:this.distanceModel=this.distanceModel,Object.prototype.hasOwnProperty.call(e,"playbackRate")?this._playbackRate=e.playbackRate:this._playbackRate=this._playbackRate,this._updateSpatialParameters(),this.isPlaying&&(gr.isTrue(this._streaming)?this._htmlAudioElement.playbackRate=this._playbackRate:this._soundSource.playbackRate.value=this._playbackRate))},_createSpatialParameters:function(){gr.isTrue(this._scene._engine.audioEngine.canUseWebAudio)&&(gr.isTrue(this._scene.get_headphone())&&(this._panningModel="HRTF"),this._soundPanner=this._scene._engine.audioEngine.get_audioContext().createPanner(),this._updateSpatialParameters(),this._soundPanner.connect(this._ouputAudioNode),this._inputAudioNode=this._soundPanner)},_updateSpatialParameters:function(){this.spatialSound&&(this.useCustomAttenuation?(this._soundPanner.distanceModel="linear",this._soundPanner.maxDistance=Number.MAX_VALUE,this._soundPanner.refDistance=1,this._soundPanner.rolloffFactor=1,this._soundPanner.panningModel=this._panningModel):(this._soundPanner.distanceModel=this.distanceModel,this._soundPanner.maxDistance=this.maxDistance,this._soundPanner.refDistance=this.refDistance,this._soundPanner.rolloffFactor=this.rolloffFactor,this._soundPanner.panningModel=this._panningModel))},switchPanningModelToHRTF:function(){this._panningModel="HRTF",this._switchPanningModel()},switchPanningModelToEqualPower:function(){this._panningModel="equalpower",this._switchPanningModel()},_switchPanningModel:function(){this._scene._engine.audioEngine.canUseWebAudio&&this.spatialSound&&(this._soundPanner.panningModel=this._panningModel)},connectToSoundTrackAudioNode:function(e){gr.isTrue(this._scene._engine.audioEngine.canUseWebAudio)&&(gr.isTrue(this._isOutputConnected)&&this._ouputAudioNode.disconnect(),this._ouputAudioNode.connect(e),this._isOutputConnected=!0)},setDirectionalCone:function(t,r,n){return t>r?void e.log("setDirectionalCone(): outer angle of the cone must be superior or equal to the inner angle."):(this._coneInnerAngle=t,this._coneOuterAngle=r,this._coneOuterGain=n,this._isDirectional=!0,void(this.isPlaying&&this.loop&&(this.stop(),this.play())))},setPosition:function(e){this._position=e,this._scene._engine.audioEngine.canUseWebAudio&&this.spatialSound&&this._soundPanner.setPosition(this._position.x,this._position.y,this._position.z)},setLocalDirectionToMesh:function(e){this._localDirection=e,this._scene._engine.audioEngine.canUseWebAudio&&null!=this._connectedMesh&&this.isPlaying&&this._updateDirection()},_updateDirection:function(){var e=this._connectedMesh.getWorldMatrix(),t=L.TransformNormal(this._localDirection,e);t.normalize(),this._soundPanner.setOrientation(t.x,t.y,t.z)},updateDistanceFromListener:function(){if(this._scene._engine.audioEngine.canUseWebAudio&&null!=this._connectedMesh&&this.useCustomAttenuation){var e=this._connectedMesh.getDistanceToCamera(this._scene.activeCamera);this._soundGain.gain.value=this._customAttenuationFunction(this._volume,e,this.maxDistance,this.refDistance,this.rolloffFactor)}},setAttenuationFunction:function(e){this._customAttenuationFunction=e},play:function(t){var r=this;if(this._isReadyToPlay&&this._scene.get_audioEnabled())try{var n;n=gr.isTrue(t)?this._scene._engine.audioEngine.get_audioContext().currentTime+t:this._scene._engine.audioEngine.get_audioContext().currentTime,(null!=this._soundSource||null!=this._streamingSource)&&this.spatialSound&&(this._soundPanner.setPosition(this._position.x,this._position.y,this._position.z),gr.isTrue(this._isDirectional)&&(this._soundPanner.coneInnerAngle=this._coneInnerAngle,this._soundPanner.coneOuterAngle=this._coneOuterAngle,this._soundPanner.coneOuterGain=this._coneOuterGain,gr.isTrue(this._connectedMesh)?this._updateDirection():this._soundPanner.setOrientation(this._localDirection.x,this._localDirection.y,this._localDirection.z))),gr.isTrue(this._streaming)?(gr.isTrue(this._streamingSource)||(this._streamingSource=this._scene._engine.audioEngine.get_audioContext().createMediaElementSource(this._htmlAudioElement),this._htmlAudioElement.onended=function(){r._onended()},this._htmlAudioElement.playbackRate=this._playbackRate),this._streamingSource.disconnect(),this._streamingSource.connect(this._inputAudioNode),this._htmlAudioElement.play()):(this._soundSource=this._scene._engine.audioEngine.get_audioContext().createBufferSource(),this._soundSource.buffer=this._audioBuffer,this._soundSource.connect(this._inputAudioNode),this._soundSource.loop=this.loop,this._soundSource.playbackRate.value=this._playbackRate,this._soundSource.onended=function(){r._onended()},this.isPaused?this._soundSource.start(0,this.isPaused?this._startOffset%this._soundSource.buffer.duration:0):this._soundSource.start(n)),this._startTime=n,this.isPlaying=!0,this.isPaused=!1}catch(i){i instanceof Ar&&(i=i.val),e.log("Error while trying to play audio: "+this.name+", "+u.string(i.message))}},_onended:function(){this.isPlaying=!1,gr.isTrue(this.onended)&&this.onended()},stop:function(e){if(this.isPlaying){if(gr.isTrue(this._streaming))this._htmlAudioElement.pause(),this._htmlAudioElement.currentTime>0&&(this._htmlAudioElement.currentTime=0);else{var t;t=gr.isTrue(e)?this._scene._engine.audioEngine.get_audioContext().currentTime+e:this._scene._engine.audioEngine.get_audioContext().currentTime,this._soundSource.stop(t),this.isPaused||(this._startOffset=0)}this.isPlaying=!1}},pause:function(){this.isPlaying&&(this.isPaused=!0,gr.isTrue(this._streaming)?this._htmlAudioElement.pause():(this.stop(0),this._startOffset+=this._scene._engine.audioEngine.get_audioContext().currentTime-this._startTime))},setVolume:function(e,t){gr.isTrue(this._scene._engine.audioEngine.canUseWebAudio)&&(gr.isTrue(t)?(this._soundGain.gain.cancelScheduledValues(this._scene._engine.audioEngine.get_audioContext().currentTime),this._soundGain.gain.setValueAtTime(this._soundGain.gain.value,this._scene._engine.audioEngine.get_audioContext().currentTime),this._soundGain.gain.linearRampToValueAtTime(e,this._scene._engine.audioEngine.get_audioContext().currentTime+t)):this._soundGain.gain.value=e),this._volume=e},setPlaybackRate:function(e){this._playbackRate=e,this.isPlaying&&(gr.isTrue(this._streaming)?this._htmlAudioElement.playbackRate=this._playbackRate:this._soundSource.playbackRate.value=this._playbackRate)},getVolume:function(){return this._volume},attachToMesh:function(e){var t=this;gr.isTrue(this._connectedMesh)&&(this._connectedMesh.unregisterAfterWorldMatrixUpdate(this._registerFunc),this._registerFunc=null),this._connectedMesh=e,this.spatialSound||(this.spatialSound=!0,this._createSpatialParameters(),this.isPlaying&&this.loop&&(this.stop(),this.play())),this._onRegisterAfterWorldMatrixUpdate(this._connectedMesh),this._registerFunc=function(e){t._onRegisterAfterWorldMatrixUpdate(e)},e.registerAfterWorldMatrixUpdate(this._registerFunc)},_onRegisterAfterWorldMatrixUpdate:function(e){this.setPosition(e.getBoundingInfo().boundingSphere.centerWorld),this._scene._engine.audioEngine.canUseWebAudio&&this._isDirectional&&this.isPlaying&&this._updateDirection()},clone:function(){var e=this,t={};if(gr.isTrue(this._streaming))return null;var r=function s(){gr.isTrue(e._isReadyToPlay)?(t._audioBuffer=e.getAudioBuffer(),t._isReadyToPlay=!0,gr.isTrue(t.autoplay)&&t.play()):window.setTimeout(s,300)},n={autoplay:this.autoplay,loop:this.loop,volume:this._volume,spatialSound:this.spatialSound,maxDistance:this.maxDistance,useCustomAttenuation:this.useCustomAttenuation,rolloffFactor:this.rolloffFactor,refDistance:this.refDistance,distanceModel:this.distanceModel},i=new W(this.name+"_cloned",new Xr(0),this._scene,null,n);return this.useCustomAttenuation&&i.setAttenuationFunction(this._customAttenuationFunction),i.setPosition(this._position),i.setPlaybackRate(this._playbackRate),r(),i},getAudioBuffer:function(){return this._audioBuffer},__class__:W};var G=t.BABYLON.SoundTrack=function(e,t){this._isInitialized=!1,this._isMainTrack=!1,this.id=-1,this._scene=e,this.soundCollection=[],this._options=t,gr.isTrue(this._isMainTrack)||(this._scene.soundTracks.push(this),this.id=this._scene.soundTracks.length-1)};s["com.babylonhx.audio.SoundTrack"]=G,G.__name__=["com","babylonhx","audio","SoundTrack"],G.prototype={_initializeSoundTrackAudioGraph:function(){gr.isTrue(this._scene._engine.audioEngine.canUseWebAudio)&&(this._outputAudioNode=this._scene._engine.audioEngine.get_audioContext().createGain(),this._outputAudioNode.connect(this._scene._engine.audioEngine.masterGain),gr.isTrue(this._options)&&(gr.isTrue(this._options.volume)&&(this._outputAudioNode.gain.value=this._options.volume),gr.isTrue(this._options.mainTrack)&&(this._isMainTrack=this._options.mainTrack)),this._isInitialized=!0)},dispose:function(){if(gr.isTrue(this._scene._engine.audioEngine.canUseWebAudio)){for(gr.isTrue(this._connectedAnalyser)&&this._connectedAnalyser.stopDebugCanvas();gr.isTrue(this.soundCollection.length);)this.soundCollection[0].dispose();gr.isTrue(this._outputAudioNode)&&this._outputAudioNode.disconnect(),this._outputAudioNode=null}},AddSound:function(e){gr.isTrue(this._isInitialized)||this._initializeSoundTrackAudioGraph(),gr.isTrue(this._scene._engine.audioEngine.canUseWebAudio)&&e.connectToSoundTrackAudioNode(this._outputAudioNode),gr.isTrue(e.soundTrackId)&&(-1==e.soundTrackId?this._scene.mainSoundTrack.RemoveSound(e):gr.getValue(this._scene.soundTracks,e.soundTrackId).RemoveSound(e)),this.soundCollection.push(e),e.soundTrackId=this.id},RemoveSound:function(e){var t=l.indexOf(this.soundCollection,e,0);-1!=t&&this.soundCollection.splice(t,1)},setVolume:function(e){gr.isTrue(this._scene._engine.audioEngine.canUseWebAudio)&&(this._outputAudioNode.gain.value=e)},switchPanningModelToHRTF:function(){if(gr.isTrue(this._scene._engine.audioEngine.canUseWebAudio))for(var e=0;e<this.soundCollection.length;)this.soundCollection[e].switchPanningModelToHRTF(),e++},switchPanningModelToEqualPower:function(){if(gr.isTrue(this._scene._engine.audioEngine.canUseWebAudio))for(var e=0;e<this.soundCollection.length;)this.soundCollection[e].switchPanningModelToEqualPower(),e++},connectToAnalyser:function(e){gr.isTrue(this._connectedAnalyser)&&this._connectedAnalyser.stopDebugCanvas(),this._connectedAnalyser=e,gr.isTrue(this._scene._engine.audioEngine.canUseWebAudio)&&(this._outputAudioNode.disconnect(),this._connectedAnalyser.connectAudioNodes(this._outputAudioNode,this._scene._engine.audioEngine.masterGain))},__class__:G};var H=t.BABYLON.Bone=function(e,t,r,n,i){this._invertedAbsoluteTransform=new Le,this._absoluteTransform=new Le,this._worldTransform=new Le,this.children=[],y.call(this,e,t.getScene()),this._skeleton=t,this._matrix=n,this._baseMatrix=n,null!=i?this._restPose=i:this._restPose=Le.FromValues(n.m[0],n.m[1],n.m[2],n.m[3],n.m[4],n.m[5],n.m[6],n.m[7],n.m[8],n.m[9],n.m[10],n.m[11],n.m[12],n.m[13],n.m[14],n.m[15]),t.bones.push(this),null!=r?(this._parent=r,r.children.push(this)):this._parent=null,this._updateDifferenceMatrix()};s["com.babylonhx.bones.Bone"]=H,H.__name__=["com","babylonhx","bones","Bone"],H.__interfaces__=[B],H.__super__=y,H.prototype=n(y.prototype,{getParent:function(){return this._parent},getLocalMatrix:function(){return this._matrix},getBaseMatrix:function(){return this._baseMatrix},getRestPose:function(){return this._restPose},returnToRest:function(){this.updateMatrix(this._restPose.clone())},getWorldMatrix:function(){return this._worldTransform},getInvertedAbsoluteTransform:function(){return this._invertedAbsoluteTransform},getAbsoluteMatrix:function(){for(var e=this._matrix.clone(),t=this._parent;null!=t;)e=e.multiply(t._matrix),t=t._parent;return e},updateMatrix:function(e){this._matrix=e,this._skeleton._isDirty=!0,this._updateDifferenceMatrix()},_updateDifferenceMatrix:function(){null!=this._parent?this._matrix.multiplyToRef(this._parent._absoluteTransform,this._absoluteTransform):this._absoluteTransform.copyFrom(this._matrix),this._absoluteTransform.invertToRef(this._invertedAbsoluteTransform);for(var e=0,t=this.children.length;t>e;){var r=e++;this.children[r]._updateDifferenceMatrix()}},markAsDirty:function(){this._currentRenderId++,this._skeleton._isDirty=!0},copyAnimationRange:function(e,t,r,n){null==n&&(n=!1),0==this.animations.length&&this.animations.push(new F(this.name,"_matrix",e.animations[0].framePerSecond,3,0));var i=e.animations[0].getRange(t);if(null==i)return!1;var s,o=i.from,a=i.to,l=e.animations[0]._keys,h=e.length,c=n&&h>0&&this.length>0&&h!=this.length;s=c?this.length/h:1;var u,f=this.animations[0]._keys,d=null;u=c?new L(0,0,0):null;var m;m=c?new R:null;var _;_=c?new L(0,0,0):null;for(var p=null,v=0,g=l.length;g>v;){var x=v++;d=l[x],d.frame>=o&&d.frame<=a&&(c?(d.value.decompose(u,m,_),_.x*=s,_.y*=s,_.z*=s,p=Le.Compose(u,m,_)):p=d.value,f.push({frame:d.frame+r,value:p}))}return this.animations[0].createRange(t,o+r,a+r),!0},__class__:H});var Y=t.BABYLON.Skeleton=function(e,t,r){this._ranges=new Er,this._identity=Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this._isDirty=!0,this.name=e,this.id=t,this.bones=[],this._scene=r,r.skeletons.push(this),this.prepare(),this._isDirty=!0};s["com.babylonhx.bones.Skeleton"]=Y,Y.__name__=["com","babylonhx","bones","Skeleton"],Y.__interfaces__=[g],Y.Parse=function(t,r){var n=new Y(t.name,t.id,r);try{for(var i=0,s=t.bones.length;s>i;){var o=i++,a=t.bones[o],l=null;a.parentBoneIndex>-1&&(l=n.bones[a.parentBoneIndex]);var h=new H(a.name,n,l,Le.FromArray(a.matrix,null));0!=a.length&&(h.length=a.length),null!=a.animation&&h.animations.push(F.Parse(a.animation))}}catch(c){c instanceof Ar&&(c=c.val),e.log(c)}if(null!=t.ranges)for(var u=0,f=t.ranges.length;f>u;){var d=u++,m=t.ranges[d];n.createAnimationRange(m.name,m.from,m.to)}return n},Y.prototype={createAnimationRange:function(e,t,r){if(null==this._ranges.get(e)){var n=new N(e,t,r);this._ranges.set(e,n);for(var i=0,s=this.bones.length;s>i;){var o=i++;null!=this.bones[o].animations[0]&&this.bones[o].animations[0].createRange(e,t,r)}}},deleteAnimationRange:function(e,t){null==t&&(t=!0);for(var r=0,n=this.bones.length;n>r;){var i=r++;null!=this.bones[i].animations[0]&&this.bones[i].animations[0].deleteRange(e,t)}this._ranges.remove(e)},getAnimationRange:function(e){return this._ranges.get(e)},copyAnimationRange:function(t,r,n){if(null==n&&(n=!1),null!=this._ranges.get(r)||null==t.getAnimationRange(r))return!1;for(var i=!0,s=this._getHighestAnimationFrame()+1,o=new Er,a=t.bones,l=0,h=a.length;h>l;){var c=l++,u=a[c];o.set(a[c].name,u)}for(var f=0,d=this.bones.length;d>f;){var m,_=f++,p=this.bones[_].name;m=null!=Yr[p]?o.getReserved(p):o.h[p],null!=m?i=i&&this.bones[_].copyAnimationRange(m,r,s,n):(e.log("copyAnimationRange: not same rig, missing source bone "+p),i=!1)}var v=t.getAnimationRange(r),g=new N(r,v.from+s,v.to+s);return this._ranges.set(r,g),i},_getHighestAnimationFrame:function(){for(var e=0,t=0,r=this.bones.length;r>t;){var n=t++;if(null!=this.bones[n].animations[0]){var i=this.bones[n].animations[0].getHighestFrame();i>e&&(e=i)}}return e},getTransformMatrices:function(){return this._transformMatrices},getScene:function(){return this._scene},_markAsDirty:function(){this._isDirty=!0},prepare:function(){if(this._isDirty){(null==this._transformMatrices||this._transformMatrices.length!=16*(this.bones.length+1))&&(this._transformMatrices=new Float32Array(16*(this.bones.length+1)));for(var e=0,t=this.bones.length;t>e;){var r=e++,n=this.bones[r],i=n._parent;null!=i?n._matrix.multiplyToRef(i.getWorldMatrix(),n.getWorldMatrix()):n.getWorldMatrix().copyFrom(n._matrix),n._invertedAbsoluteTransform.multiplyToArray(n.getWorldMatrix(),this._transformMatrices,16*r)}this._identity.copyToArray(this._transformMatrices,16*this.bones.length),this._isDirty=!1,this._scene._activeBones+=this.bones.length}},getAnimatables:function(){if(null==this._animatables||this._animatables.length!=this.bones.length){this._animatables=[];for(var e=0,t=this.bones.length;t>e;){var r=e++;this._animatables.push(this.bones[r])}}return this._animatables},clone:function(e,t){for(var r=new Y(e,null!=t?t:e,this._scene),n=0,i=this.bones.length;i>n;){var s=n++,o=this.bones[s],a=null;if(null!=o._parent){var h=l.indexOf(this.bones,o._parent,0);a=r.bones[h]}for(var c=new H(o.name,r,a,o._baseMatrix.clone()),u=0,f=o.animations;u<f.length;){var d=f[u];++u,c.animations.push(d.clone())}}return r},dispose:function(){this.getScene().stopAnimation(this),this.getScene().removeSkeleton(this)},serialize:function(){var e={};e.name=this.name,e.id=this.id,e.bones=[];for(var t=0,r=this.bones.length;r>t;){var n=t++,i=this.bones[n],s={parentBoneIndex:null!=i._parent?l.indexOf(this.bones,i._parent,0):-1,name:i.name,matrix:i._matrix.m};e.bones.push(s),i.length>0&&(s.length=i.length),null!=i.animations&&i.animations.length>0&&(s.animation=i.animations[0].serialize()),e.ranges=[];for(var o=this._ranges.keys();o.hasNext();){var a=o.next(),h={};h.name=a,h.from=this._ranges.get(a).from,h.to=this._ranges.get(a).to,e.ranges.push(h)}}return e},__class__:Y};var X=t.BABYLON.Camera=function(e,t,r){this.eventPrefix="mouse",this._globalPosition=new L(0,0,0),this._activeMeshes=new pr(256),this._postProcessesTakenIndices=[],this._postProcesses=[],this._projectionMatrix=new Le,this._computedViewMatrix=Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this._rigCameras=[],this.cameraRigMode=0,this.fovMode=0,this.layerMask=-1,this.subCameras=[],this.viewport=new Et(0,0,1,1),this.isIntermediate=!1,this.mode=0,this.inertia=.9,this.maxZ=1e4,this.minZ=1,this.fov=.8,this.orthoTop=null,this.orthoBottom=null,this.orthoRight=null,this.orthoLeft=null,this.upVector=new L(0,1,0),this.position=new L(0,0,0),y.call(this,e,r),this.position=t,r.addCamera(this),null==r.activeCamera&&(r.activeCamera=this),this.getProjectionMatrix=i(this,this.getProjectionMatrix_default),this._getViewMatrix=i(this,this._getViewMatrix_default),this.eventPrefix=Ae.GetPointerPrefix()};s["com.babylonhx.cameras.Camera"]=X,X.__name__=["com","babylonhx","cameras","Camera"],X.__interfaces__=[B],X.Parse=function(e,t){var r,n=null,i=L.FromArray(e.position,null);r=null!=e.lockedTargetId?t.getLastMeshByID(e.lockedTargetId):null;var s=0;if("AnaglyphArcRotateCamera"==e.type||"ArcRotateCamera"==e.type){var o=e.alpha,a=e.beta,l=e.radius;"AnaglyphArcRotateCamera"==e.type?(s=e.interaxial_distance,n=new K(e.name,o,a,l,r,s,t)):n=new q(e.name,o,a,l,r,t)}else"AnaglyphFreeCamera"==e.type?(s=e.interaxial_distance,n=new Q(e.name,i,s,t)):"DeviceOrientationCamera"==e.type||("FollowCamera"==e.type?(n=new $(e.name,i,t),n.heightOffset=e.heightOffset,n.radius=e.radius,n.rotationOffset=e.rotationOffset,null!=r&&(Re.__cast(n,$).target=r)):"GamepadCamera"==e.type||("TouchCamera"==e.type?n=new J(e.name,i,t):"VirtualJoysticksCamera"==e.type||(n="WebVRFreeCamera"==e.type?new re(e.name,i,t):"VRDeviceOrientationFreeCamera"==e.type?new te(e.name,i,t):new Z(e.name,i,t))));if(null!=e.cameraRigMode){var h;h=null!=e.interaxial_distance?{interaxialDistance:e.interaxial_distance}:{},n.setCameraRigMode(e.cameraRigMode,h)}if(null!=r&&Re.__instanceof(n,Z)&&(Re.__cast(n,Z).lockedTarget=r),n.id=e.id,Ie.AddTagsTo(n,e.tags),null!=e.parentId&&(n._waitingParentId=e.parentId),e.target?Object.prototype.hasOwnProperty.call(n,"setTarget")?n.setTarget(L.FromArray(e.target,null)):n.target=L.FromArray(e.target,null):n.rotation=L.FromArray(e.rotation,null),n.fov=e.fov,n.minZ=e.minZ,n.maxZ=e.maxZ,n.speed=e.speed,n.inertia=e.inertia,n.checkCollisions=e.checkCollisions,n.applyGravity=e.applyGravity,null!=e.ellipsoid&&(n.ellipsoid=L.FromArray(e.ellipsoid,null)),null!=e.animations){for(var c=0,f=e.animations.length;f>c;){var d=c++,m=e.animations[d];n.animations.push(F.Parse(m))}y.ParseAnimationRanges(n,e,t)}return 1==e.autoAnimate&&t.beginAnimation(n,e.autoAnimateFrom,e.autoAnimateTo,e.autoAnimateLoop,1),null==e.layerMask||function(t){var r,n=e.layerMask;return r=isNaN(n)}(this)?n.layerMask=268435455:n.layerMask=Math.abs(u.parseInt(e.layerMask)),n},X.__super__=y,X.prototype=n(y.prototype,{get_globalPosition:function(){return this._globalPosition},getActiveMeshes:function(){return this._activeMeshes},isActiveMesh:function(e){return-1!=this._activeMeshes.indexOf(e)},_initCache:function(){y.prototype._initCache.call(this),this._cache.position=new L(1/0,1/0,1/0),this._cache.upVector=new L(1/0,1/0,1/0),this._cache.mode=null,this._cache.minZ=null,this._cache.maxZ=null,this._cache.fov=null,this._cache.aspectRatio=null,this._cache.orthoLeft=null,this._cache.orthoRight=null,this._cache.orthoBottom=null,this._cache.orthoTop=null,this._cache.renderWidth=null,this._cache.renderHeight=null},_updateCache:function(e){null==e&&(e=!1),e||y.prototype._updateCache.call(this);var t=this._scene._engine;this._cache.position.copyFrom(this.position),this._cache.upVector.copyFrom(this.upVector),this._cache.mode=this.mode,this._cache.minZ=this.minZ,this._cache.maxZ=this.maxZ,this._cache.fov=this.fov,this._cache.aspectRatio=t.getAspectRatio(this),this._cache.orthoLeft=this.orthoLeft,this._cache.orthoRight=this.orthoRight,this._cache.orthoBottom=this.orthoBottom,
this._cache.orthoTop=this.orthoTop,this._cache.renderWidth=t.getRenderWidth(),this._cache.renderHeight=t.getRenderHeight()},_updateFromScene:function(){this.updateCache(),this._update()},_isSynchronized:function(){return this._isSynchronizedViewMatrix()&&this._isSynchronizedProjectionMatrix()},_isSynchronizedViewMatrix:function(){return y.prototype._isSynchronized.call(this)?this._cache.position.equals(this.position)&&this._cache.upVector.equals(this.upVector)&&this.isSynchronizedWithParent():!1},_isSynchronizedProjectionMatrix:function(){var e=this._cache.mode==this.mode&&this._cache.minZ==this.minZ&&this._cache.maxZ==this.maxZ;if(!e)return!1;var t=this._scene._engine;return e=0==this.mode?this._cache.fov==this.fov&&this._cache.aspectRatio==t.getAspectRatio(this):this._cache.orthoLeft==this.orthoLeft&&this._cache.orthoRight==this.orthoRight&&this._cache.orthoBottom==this.orthoBottom&&this._cache.orthoTop==this.orthoTop&&this._cache.renderWidth==t.getRenderWidth()&&this._cache.renderHeight==t.getRenderHeight()},attachControl:function(e,t,r){null==r&&(r=!0),null==t&&(t=!1)},detachControl:function(e){},_update:function(){0!=this.cameraRigMode&&this._updateRigCameras(),this._checkInputs()},_checkInputs:function(){},attachPostProcess:function(t,r){if(!t.isReusable()&&l.indexOf(this._postProcesses,t,0)>-1)return e.log("You're trying to reuse a post process not defined as reusable."),0;if(null==r||0>r)return this._postProcesses.push(t),this._postProcessesTakenIndices.push(this._postProcesses.length-1),this._postProcesses.length-1;var n=0;if(null!=this._postProcesses[r]){for(var i=this._postProcesses.length-1,s=i;s>=r+1;)this._postProcesses[s+1]=this._postProcesses[s],--s;n=1}for(var o=0,a=this._postProcessesTakenIndices.length;a>o;){var h=o++;if(!(this._postProcessesTakenIndices[h]<r)){for(var c=this._postProcessesTakenIndices.length-1,u=c;u>=h;)this._postProcessesTakenIndices[u+1]=this._postProcessesTakenIndices[u]+n,--u;this._postProcessesTakenIndices[h]=r;break}}0==n&&-1==l.indexOf(this._postProcessesTakenIndices,r,0)&&this._postProcessesTakenIndices.push(r);var f=r+n;return this._postProcesses[f]=t,f},detachPostProcess:function(e,t){var r=[];if(null==t)for(var n=0,i=this._postProcesses.length;i>n;){var s=n++;if(this._postProcesses[s]==e){this._postProcesses[s]=null,this._postProcesses.splice(s,1);var o=l.indexOf(this._postProcessesTakenIndices,s,0);this._postProcessesTakenIndices.splice(o,1)}}else{t=t instanceof Array&&null==t.__enum__?t:[t];for(var a=0,h=t.length;h>a;){var c=a++,u=this._postProcesses[t[c]];if(u==e){this._postProcesses[c]=null,this._postProcesses.splice(t[c],1);var f=l.indexOf(this._postProcessesTakenIndices,t[c],0);this._postProcessesTakenIndices.splice(f,1)}else r.push(c)}}return r},getWorldMatrix:function(){null==this._worldMatrix&&(this._worldMatrix=Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1));var e=this.getViewMatrix();return e.invertToRef(this._worldMatrix),this._worldMatrix},_getViewMatrix_default:function(){return Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)},getViewMatrix:function(e){return null==e&&(e=!1),this._computedViewMatrix=this._computeViewMatrix(e),!e&&this._isSynchronizedViewMatrix()?this._computedViewMatrix:(null==this.parent||null==(Br=this.parent,i(Br,Br.getWorldMatrix))?this._globalPosition.copyFrom(this.position):(null==this._worldMatrix&&(this._worldMatrix=Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)),this._computedViewMatrix.invertToRef(this._worldMatrix),this._worldMatrix.multiplyToRef(this.parent.getWorldMatrix(),this._computedViewMatrix),this._globalPosition.copyFromFloats(this._computedViewMatrix.m[12],this._computedViewMatrix.m[13],this._computedViewMatrix.m[14]),this._computedViewMatrix.invert(),this._parentRenderId=this.parent._currentRenderId),this._currentRenderId=this._scene._renderId,this._computedViewMatrix)},_computeViewMatrix:function(e){return null==e&&(e=!1),!e&&this._isSynchronizedViewMatrix()?this._computedViewMatrix:(this._computedViewMatrix=this._getViewMatrix(),this._currentRenderId=this._scene._renderId,this._computedViewMatrix)},getProjectionMatrix_default:function(e){if(null==e&&(e=!1),!e&&this._isSynchronizedProjectionMatrix())return this._projectionMatrix;var t=this._scene._engine;if(0==this.mode)return this.minZ<=0&&(this.minZ=.1),Le.PerspectiveFovLHToRef(this.fov,t.getAspectRatio(this),this.minZ,this.maxZ,this._projectionMatrix,this.fovMode),this._projectionMatrix;var r=t.getRenderWidth()/2,n=t.getRenderHeight()/2;return Le.OrthoOffCenterLHToRef(null==this.orthoLeft?-r:this.orthoLeft,null==this.orthoRight?r:this.orthoRight,null==this.orthoBottom?-n:this.orthoBottom,null==this.orthoTop?n:this.orthoTop,this.minZ,this.maxZ,this._projectionMatrix),this._projectionMatrix},dispose:function(){for(this._scene.stopAnimation(this),this._scene.removeCamera(this);this._rigCameras.length>0;)this._rigCameras.pop().dispose();for(var e=0,t=this._postProcessesTakenIndices.length;t>e;){var r=e++;this._postProcesses[this._postProcessesTakenIndices[r]].dispose(this)}},setCameraRigMode:function(e,t){for(;this._rigCameras.length>0;)this._rigCameras.pop().dispose();this.cameraRigMode=e,this._cameraRigParams={};var r=this.cameraRigMode;switch(r){case 10:case 11:case 12:case 13:null!=t.interaxialDistance?this._cameraRigParams.interaxialDistance=t.interaxialDistance:this._cameraRigParams.interaxialDistance=.0637,this._cameraRigParams.stereoHalfAngle=this._cameraRigParams.interaxialDistance/.0637*Math.PI/180,this._rigCameras.push(this.createRigCamera(this.name+"_L",0)),this._rigCameras.push(this.createRigCamera(this.name+"_R",1))}var n=[],s=this.cameraRigMode;switch(s){case 10:n.push(new ot(this.name+"_passthru",1,this._rigCameras[0])),this._rigCameras[0].isIntermediate=!0,n.push(new at(this.name+"_anaglyph",1,this._rigCameras[1])),n[1].onApply=function(e){e._engine.setTextureFromPostProcess(l.indexOf(e._samplers,"leftSampler",0),n[0])};break;case 11:case 12:case 13:var o,a=11==this.cameraRigMode||12==this.cameraRigMode;o=12==this.cameraRigMode?1:0;var h=1-o;n.push(new ot(this.name+"_passthru",1,this._rigCameras[o])),this._rigCameras[o].isIntermediate=!0,n.push(new er(this.name+"_stereoInterlace",this._rigCameras[h],n[0],a));break;case 20:this._rigCameras.push(this.createRigCamera(this.name+"_L",0)),this._rigCameras.push(this.createRigCamera(this.name+"_R",1));var c;c=null!=t.vrCameraMetrics?t.vrCameraMetrics:ee.GetDefault(),this._rigCameras[0]._cameraRigParams.vrMetrics=c,this._rigCameras[0].viewport=new Et(0,0,.5,1),this._rigCameras[0]._cameraRigParams.vrWorkMatrix=new Le,this._rigCameras[0]._cameraRigParams.vrHMatrix=c.get_leftHMatrix(),this._rigCameras[0]._cameraRigParams.vrPreViewMatrix=c.get_leftPreViewMatrix(),this._rigCameras[0].getProjectionMatrix=(Br=this._rigCameras[0],i(Br,Br._getVRProjectionMatrix)),c.compensateDistortion&&n.push(new tr("VR_Distort_Compensation_Left",this._rigCameras[0],!1,c)),this._rigCameras[1]._cameraRigParams.vrMetrics=this._rigCameras[0]._cameraRigParams.vrMetrics,this._rigCameras[1].viewport=new Et(.5,0,.5,1),this._rigCameras[1]._cameraRigParams.vrWorkMatrix=new Le,this._rigCameras[1]._cameraRigParams.vrHMatrix=c.get_rightHMatrix(),this._rigCameras[1]._cameraRigParams.vrPreViewMatrix=c.get_rightPreViewMatrix(),this._rigCameras[1].getProjectionMatrix=(Br=this._rigCameras[1],i(Br,Br._getVRProjectionMatrix)),c.compensateDistortion&&n.push(new tr("VR_Distort_Compensation_Right",this._rigCameras[1],!0,c))}this._update()},_getVRProjectionMatrix:function(e){return null==e&&(e=!1),Le.PerspectiveFovLHToRef(this._cameraRigParams.vrMetrics.aspectRatioFov(),this._cameraRigParams.vrMetrics.aspectRatio(),this.minZ,this.maxZ,this._cameraRigParams.vrWorkMatrix),this._cameraRigParams.vrWorkMatrix.multiplyToRef(this._cameraRigParams.vrHMatrix,this._projectionMatrix),this._projectionMatrix},setCameraRigParameter:function(e,t){c.setProperty(this._cameraRigParams,e,t),"interaxialDistance"==e&&(this._cameraRigParams.stereoHalfAngle=t/.0637*Math.PI/180)},createRigCamera:function(e,t){return null},_updateRigCameras:function(){for(var e=0,t=this._rigCameras.length;t>e;){var r=e++;this._rigCameras[r].minZ=this.minZ,this._rigCameras[r].maxZ=this.maxZ,this._rigCameras[r].fov=this.fov}10==this.cameraRigMode&&(this._rigCameras[0].viewport=this._rigCameras[1].viewport=this.viewport)},serialize:function(){var e={};return e.name=this.name,e.tags=Ie.GetTags(this),e.id=this.id,e.position=this.position.asArray(),null!=this.parent&&(e.parentId=this.parent.id),e.fov=this.fov,e.minZ=this.minZ,e.maxZ=this.maxZ,e.inertia=this.inertia,F.AppendSerializedAnimations(this,e),e.ranges=this.serializeAnimationRanges(),e.layerMask=this.layerMask,e},__class__:X,__properties__:{get_globalPosition:"get_globalPosition"}});var j=t.BABYLON.TargetCamera=function(e,t,r){this._tempMatrix=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._lookAtTemp=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._transformedReferencePoint=new L(0,0,0),this._referencePoint=new L(0,0,1),this._cameraRotationMatrix=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._cameraTransformMatrix=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._camMatrix=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._viewMatrix=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._currentTarget=new L(0,0,0),this.lockedTarget=null,this.noRotationConstraint=!1,this.speed=2,this.rotation=new L(0,0,0),this.cameraRotation=new Mt(0,0),this.cameraDirection=new L(0,0,0),X.call(this,e,t,r)};s["com.babylonhx.cameras.TargetCamera"]=j,j.__name__=["com","babylonhx","cameras","TargetCamera"],j.__super__=X,j.prototype=n(X.prototype,{getFrontPosition:function(e){var t=this.getTarget().subtract(this.position);return t.normalize(),t.x*=e,t.y*=e,t.z*=e,this.get_globalPosition().add(t)},_getLockedTargetPosition:function(){return null==this.lockedTarget?null:null!=this.lockedTarget.position?this.lockedTarget.position:this.lockedTarget},_initCache:function(){X.prototype._initCache.call(this),this._cache.lockedTarget=new L(1/0,1/0,1/0),this._cache.rotation=new L(1/0,1/0,1/0)},_updateCache:function(e){null==e&&(e=!1),e||X.prototype._updateCache.call(this);var t=this._getLockedTargetPosition();null==t?this._cache.lockedTarget=null:null==this._cache.lockedTarget?this._cache.lockedTarget=new L(t.x,t.y,t.z):this._cache.lockedTarget.copyFrom(t),this._cache.rotation.copyFrom(this.rotation)},_isSynchronizedViewMatrix:function(){if(!X.prototype._isSynchronizedViewMatrix.call(this))return!1;var e=this._getLockedTargetPosition();return(null!=this._cache.lockedTarget?this._cache.lockedTarget.equals(e):null==e)&&this._cache.rotation.equals(this.rotation)},_computeLocalCameraSpeed:function(){var e=this._scene._engine;return this.speed*(e.deltaTime/(10*e.fps))},setTarget:function(e){this.upVector.normalize(),Le.LookAtLHToRef(this.position,e,this.upVector,this._camMatrix),this._camMatrix.invert(),this.rotation.x=Math.atan(this._camMatrix.m[6]/this._camMatrix.m[10]),j.vDir=e.subtract(this.position),j.vDir.x>=0?this.rotation.y=-Math.atan(j.vDir.z/j.vDir.x)+Math.PI/2:this.rotation.y=-Math.atan(j.vDir.z/j.vDir.x)-Math.PI/2,this.rotation.z=-Math.acos(L.Dot(j.zUpVector,this.upVector))},getTarget:function(){return this._currentTarget},_decideIfNeedsToMove:function(){return Math.abs(this.cameraDirection.x)>0||Math.abs(this.cameraDirection.y)>0||Math.abs(this.cameraDirection.z)>0},_updatePosition:function(){this.position.addInPlace(this.cameraDirection)},_checkInputs:function(){var e=this._decideIfNeedsToMove(),t=Math.abs(this.cameraRotation.x)>0||Math.abs(this.cameraRotation.y)>0;if(e&&this._updatePosition(),t&&(this.rotation.x+=this.cameraRotation.x,this.rotation.y+=this.cameraRotation.y,!this.noRotationConstraint)){var r=Math.PI/2*.95;this.rotation.x>r&&(this.rotation.x=r),this.rotation.x<-r&&(this.rotation.x=-r)}e&&(Math.abs(this.cameraDirection.x)<.001&&(this.cameraDirection.x=0),Math.abs(this.cameraDirection.y)<.001&&(this.cameraDirection.y=0),Math.abs(this.cameraDirection.z)<.001&&(this.cameraDirection.z=0),this.cameraDirection.scaleInPlace(this.inertia)),t&&(Math.abs(this.cameraRotation.x)<.001&&(this.cameraRotation.x=0),Math.abs(this.cameraRotation.y)<.001&&(this.cameraRotation.y=0),this.cameraRotation.scaleInPlace(this.inertia)),X.prototype._checkInputs.call(this)},_getViewMatrix_default:function(){return null==this.lockedTarget?(0!=this.upVector.x||1!=this.upVector.y||0!=this.upVector.z?(Le.LookAtLHToRef(new L(0,0,0),this._referencePoint,this.upVector,this._lookAtTemp),R.RotationYawPitchRollToRef(this.rotation.y,this.rotation.x,this.rotation.z,Le._tempQuaternion),Le._tempQuaternion.toRotationMatrix(this._cameraRotationMatrix),this._lookAtTemp.multiplyToRef(this._cameraRotationMatrix,this._tempMatrix),this._lookAtTemp.invert(),this._tempMatrix.multiplyToRef(this._lookAtTemp,this._cameraRotationMatrix)):(R.RotationYawPitchRollToRef(this.rotation.y,this.rotation.x,this.rotation.z,Le._tempQuaternion),Le._tempQuaternion.toRotationMatrix(this._cameraRotationMatrix)),L.TransformCoordinatesToRef(this._referencePoint,this._cameraRotationMatrix,this._transformedReferencePoint),this.position.addToRef(this._transformedReferencePoint,this._currentTarget)):this._currentTarget.copyFrom(this._getLockedTargetPosition()),Le.LookAtLHToRef(this.position,this._currentTarget,this.upVector,this._viewMatrix),this._viewMatrix},_getVRViewMatrix:function(){return R.RotationYawPitchRollToRef(this.rotation.y,this.rotation.x,this.rotation.z,Le._tempQuaternion),Le._tempQuaternion.toRotationMatrix(this._cameraRotationMatrix),L.TransformCoordinatesToRef(this._referencePoint,this._cameraRotationMatrix,this._transformedReferencePoint),L.TransformNormalToRef(this.upVector,this._cameraRotationMatrix,this._cameraRigParams.vrActualUp),this.position.addToRef(this._transformedReferencePoint,this._currentTarget),Le.LookAtLHToRef(this.position,this._currentTarget,this._cameraRigParams.vrActualUp,this._cameraRigParams.vrWorkMatrix),this._cameraRigParams.vrWorkMatrix.multiplyToRef(this._cameraRigParams.vrPreViewMatrix,this._viewMatrix),this._viewMatrix},createRigCamera:function(e,t){if(0!=this.cameraRigMode){var r=new j(e,this.position.clone(),this._scene);return 20==this.cameraRigMode&&(r._cameraRigParams={},r._cameraRigParams.vrActualUp=new L(0,0,0),r._getViewMatrix=i(r,r._getVRViewMatrix)),r}return null},_updateRigCameras:function(){var e=this.cameraRigMode;switch(e){case 10:case 11:case 12:case 13:case 20:var t=this._rigCameras[0],r=this._rigCameras[1];20==this.cameraRigMode?(t.rotation.x=r.rotation.x=this.rotation.x,t.rotation.y=r.rotation.y=this.rotation.y,t.rotation.z=r.rotation.z=this.rotation.z,t.position.copyFrom(this.position),r.position.copyFrom(this.position)):(this._getRigCamPosition(-this._cameraRigParams.stereoHalfAngle,t.position),this._getRigCamPosition(this._cameraRigParams.stereoHalfAngle,r.position),t.setTarget(this.getTarget()),r.setTarget(this.getTarget()))}X.prototype._updateRigCameras.call(this)},_getRigCamPosition:function(e,t){null==this._rigCamTransformMatrix&&(this._rigCamTransformMatrix=new Le);var r=this.getTarget();Le.Translation(-r.x,-r.y,-r.z).multiplyToRef(Le.RotationY(e),this._rigCamTransformMatrix),this._rigCamTransformMatrix=this._rigCamTransformMatrix.multiply(Le.Translation(r.x,r.y,r.z)),L.TransformCoordinatesToRef(this.position,this._rigCamTransformMatrix,t)},serialize:function(){var e=X.prototype.serialize.call(this);return e.speed=this.speed,null!=this.rotation&&(e.rotation=this.rotation.asArray()),null!=this.lockedTarget&&null!=this.lockedTarget.id&&(e.lockedTargetId=this.lockedTarget.id),e},__class__:j});var q=t.BABYLON.ArcRotateCamera=function(e,t,r,n,i,s){this._newPosition=new L(0,0,0),this._collisionVelocity=new L(0,0,0),this._previousPosition=new L(0,0,0),this._collider=new ne,this.collisionRadius=new L(.5,.5,.5),this.checkCollisions=!1,this._isCtrlPushed=!1,this._isRightClick=!1,this._keys=[],this.allowUpsideDown=!0,this.pinchInwards=!0,this.targetScreenOffset=new Mt(0,0),this.zoomOnFactor=1,this.keysRight=[39],this.keysLeft=[37],this.keysDown=[40],this.keysUp=[38],this.inertialPanningY=0,this.inertialPanningX=0,this.panningSensibility=50,this.pinchPrecision=2,this.wheelPrecision=3,this.angularSensibilityY=1e3,this.angularSensibilityX=1e3,this.upperRadiusLimit=null,this.lowerRadiusLimit=null,this.upperBetaLimit=Math.PI,this.lowerBetaLimit=.01,this.upperAlphaLimit=null,this.lowerAlphaLimit=null,this.inertialRadiusOffset=0,this.inertialBetaOffset=0,this.inertialAlphaOffset=0,j.call(this,e,new L(0,0,0),s),this.alpha=t,this.beta=r,this.radius=n,null!=i?null!=i.position?this.target=i.position.clone():this.target=i.clone():this.target=new L(0,0,0),this.getViewMatrix()};s["com.babylonhx.cameras.ArcRotateCamera"]=q,q.__name__=["com","babylonhx","cameras","ArcRotateCamera"],q.__super__=j,q.prototype=n(j.prototype,{_getTargetPosition:function(){return null!=this.target.getAbsolutePosition?this.target.getAbsolutePosition():this.target},_initCache:function(){j.prototype._initCache.call(this),this._cache.target=new L(1/0,1/0,1/0),this._cache.alpha=null,this._cache.beta=null,this._cache.radius=null,this._cache.targetScreenOffset=null},_updateCache:function(e){null==e&&(e=!1),e||j.prototype._updateCache.call(this),this._cache.target.copyFrom(this._getTargetPosition()),this._cache.alpha=this.alpha,this._cache.beta=this.beta,this._cache.radius=this.radius,this._cache.targetScreenOffset=this.targetScreenOffset.clone()},_isSynchronizedViewMatrix:function(){return j.prototype._isSynchronizedViewMatrix.call(this)?this._cache.target.equals(this._getTargetPosition())&&this._cache.alpha==this.alpha&&this._cache.beta==this.beta&&this._cache.radius==this.radius&&this._cache.targetScreenOffset.equals(this.targetScreenOffset):!1},attachControl:function(e,t,r){null==r&&(r=!0),null==t&&(t=!1);var n,i=this,s=0,o=new vr;if(null==this._attachedElement){this._attachedElement=e;var a=this._scene._engine;null==this._onPointerDown&&(this._onPointerDown=function(e){i._isRightClick=2==e.button;try{i._lastPanningPosition.x=e.clientX,i._lastPanningPosition.y=e.clientY}catch(r){r instanceof Ar&&(r=r.val)}var s={dummy:"dummy"};o.add(null!=e.pointerId?e.pointerId:s,{x:e.clientX,y:e.clientY,type:e.pointerType}),n=o.item(null!=e.pointerId?e.pointerId:s),t||e.preventDefault()},this._onPointerUp=function(e){n=null,s=0,o.empty(),t||e.preventDefault()},this._onContextMenu=function(e){e.preventDefault()},this._onPointerMove=function(e){t||e.preventDefault();var a=o.count;switch(a){case 1:if(0!=i.panningSensibility&&(i._isCtrlPushed&&r||!r&&i._isRightClick)){null==i._localDirection&&(i._localDirection=new L(0,0,0),i._transformedDirection=new L(0,0,0));var l=(e.clientX-i._lastPanningPosition.x)*i.panningSensibility,h=(e.clientY-i._lastPanningPosition.y)*i.panningSensibility;i._localDirection.copyFromFloats(-l,h,0),i._viewMatrix.invertToRef(i._cameraTransformMatrix),L.TransformNormalToRef(i._localDirection,i._cameraTransformMatrix,i._transformedDirection),i.target.addInPlace(i._transformedDirection),i._lastPanningPosition.x=e.clientX,i._lastPanningPosition.y=e.clientY}else{var c=e.clientX-n.x,u=e.clientY-n.y;i.inertialAlphaOffset-=c/i.angularSensibilityX,i.inertialBetaOffset-=u/i.angularSensibilityY,n.x=e.clientX,n.y=e.clientY}break;case 2:o.item(e.pointerId).x=e.clientX,o.item(e.pointerId).y=e.clientY;var f;f=i.pinchInwards?1:-1;var d=o.getItemByIndex(0).x-o.getItemByIndex(1).x,m=o.getItemByIndex(0).y-o.getItemByIndex(1).y,_=d*d+m*m;if(0==s)return void(s=_);_!=s&&(i.inertialRadiusOffset+=(_-s)/(i.pinchPrecision*i.wheelPrecision*i.panningSensibility*f),s=_);break;default:null!=o.item(e.pointerId)&&(o.item(e.pointerId).x=e.clientX,o.item(e.pointerId).y=e.clientY)}},this._onMouseMove=function(e){if(a.isPointerLock){var r=e.movementX||e.mozMovementX||e.webkitMovementX||e.msMovementX||0,n=e.movementY||e.mozMovementY||e.webkitMovementY||e.msMovementY||0;i.inertialAlphaOffset-=r/i.angularSensibilityX,i.inertialBetaOffset-=n/i.angularSensibilityY,t||e.preventDefault()}},this._wheel=function(e){var r=0;null!=e.wheelDelta?r=e.wheelDelta/(40*i.wheelPrecision):null!=e.detail&&(r=-e.detail/i.wheelPrecision),0!=r&&(i.inertialRadiusOffset+=r),null!=e.preventDefault&&(t||e.preventDefault())},this._onKeyDown=function(e){if(-1!=l.indexOf(i.keysUp,e,0)||-1!=l.indexOf(i.keysDown,e,0)||-1!=l.indexOf(i.keysLeft,e,0)||-1!=l.indexOf(i.keysRight,e,0)){var t=l.indexOf(i._keys,e,0);-1==t&&i._keys.push(e)}},this._onKeyUp=function(e){if(-1!=l.indexOf(i.keysUp,e,0)||-1!=l.indexOf(i.keysDown,e,0)||-1!=l.indexOf(i.keysLeft,e,0)||-1!=l.indexOf(i.keysRight,e,0)){var t=l.indexOf(i._keys,e,0);t>=0&&i._keys.splice(t,1)}},this._onLostFocus=function(){i._keys=[],o.empty(),s=0,n=null},this._reset=function(){i._keys=[],i.inertialAlphaOffset=0,i.inertialBetaOffset=0,i.inertialRadiusOffset=0,o.empty(),s=0,n=null}),r||_.app.addEventListener("contextmenu",this._onContextMenu,!1),_.app.addEventListener(this.eventPrefix+"down",this._onPointerDown,!1),_.app.addEventListener(this.eventPrefix+"up",this._onPointerUp,!1),_.app.addEventListener(this.eventPrefix+"out",this._onPointerUp,!1),_.app.addEventListener(this.eventPrefix+"move",this._onPointerMove,!1),_.app.addEventListener("mousemove",this._onMouseMove,!1),_.app.addEventListener("mousewheel",this._wheel,!1),_.app.addEventListener("DOMMouseScroll",this._wheel,!1),Ae.RegisterTopRootEvents([{name:"keydown",handler:this._onKeyDown},{name:"keyup",handler:this._onKeyUp},{name:"blur",handler:this._onLostFocus}])}},detachControl:function(e){this._attachedElement==e&&(_.app.removeEventListener("contextmenu",this._onContextMenu,!1),_.app.removeEventListener(this.eventPrefix+"down",this._onPointerDown,!1),_.app.removeEventListener(this.eventPrefix+"up",this._onPointerUp,!1),_.app.removeEventListener(this.eventPrefix+"out",this._onPointerUp,!1),_.app.removeEventListener(this.eventPrefix+"move",this._onPointerMove,!1),_.app.removeEventListener("mousemove",this._onMouseMove,!1),_.app.removeEventListener("mousewheel",this._wheel,!1),_.app.removeEventListener("DOMMouseScroll",this._wheel,!1),Ae.UnregisterTopRootEvents([{name:"keydown",handler:this._onKeyDown},{name:"keyup",handler:this._onKeyUp},{name:"blur",handler:this._onLostFocus}]),this._attachedElement=null,null!=this._reset&&this._reset())},_checkInputs:function(){if(!this._collisionTriggered){for(var e=0,t=this._keys.length;t>e;){var r=e++,n=this._keys[r];-1!=l.indexOf(this.keysLeft,n,0)?this.inertialAlphaOffset-=.01:-1!=l.indexOf(this.keysUp,n,0)?this.inertialBetaOffset-=.01:-1!=l.indexOf(this.keysRight,n,0)?this.inertialAlphaOffset+=.01:-1!=l.indexOf(this.keysDown,n,0)&&(this.inertialBetaOffset+=.01)}(0!=this.inertialAlphaOffset||0!=this.inertialBetaOffset||0!=this.inertialRadiusOffset)&&(this.beta<=0?this.alpha+=-this.inertialAlphaOffset:this.alpha+=this.inertialAlphaOffset,this.beta+=this.inertialBetaOffset,this.radius-=this.inertialRadiusOffset,this.inertialAlphaOffset*=this.inertia,this.inertialBetaOffset*=this.inertia,this.inertialRadiusOffset*=this.inertia,Math.abs(this.inertialAlphaOffset)<.001&&(this.inertialAlphaOffset=0),Math.abs(this.inertialBetaOffset)<.001&&(this.inertialBetaOffset=0),Math.abs(this.inertialRadiusOffset)<.001&&(this.inertialRadiusOffset=0)),(0!=this.inertialPanningX||0!=this.inertialPanningY)&&(null==this._localDirection&&(this._localDirection=new L(0,0,0),this._transformedDirection=new L(0,0,0)),this.inertialPanningX*=this.inertia,this.inertialPanningY*=this.inertia,Math.abs(this.inertialPanningX)<.001&&(this.inertialPanningX=0),Math.abs(this.inertialPanningY)<.001&&(this.inertialPanningY=0),this._localDirection.copyFromFloats(this.inertialPanningX,this.inertialPanningY,0),this._viewMatrix.invertToRef(this._cameraTransformMatrix),L.TransformNormalToRef(this._localDirection,this._cameraTransformMatrix,this._transformedDirection),this.target.addInPlace(this._transformedDirection)),this._checkLimits(),j.prototype._checkInputs.call(this)}},_checkLimits:function(){null==this.lowerBetaLimit?this.allowUpsideDown&&this.beta>Math.PI&&(this.beta=this.beta-2*Math.PI):this.beta<this.lowerBetaLimit&&(this.beta=this.lowerBetaLimit),null==this.upperBetaLimit?this.allowUpsideDown&&this.beta<-Math.PI&&(this.beta=this.beta+2*Math.PI):this.beta>this.upperBetaLimit&&(this.beta=this.upperBetaLimit),null!=this.lowerAlphaLimit&&this.alpha<this.lowerAlphaLimit&&(this.alpha=this.lowerAlphaLimit),null!=this.upperAlphaLimit&&this.alpha>this.upperAlphaLimit&&(this.alpha=this.upperAlphaLimit),null!=this.lowerRadiusLimit&&this.radius<this.lowerRadiusLimit&&(this.radius=this.lowerRadiusLimit),null!=this.upperRadiusLimit&&this.radius>this.upperRadiusLimit&&(this.radius=this.upperRadiusLimit)},setPosition:function(e){if(!this.position.equals(e)){var t=e.subtract(this._getTargetPosition());this.radius=Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z),this.alpha=Math.acos(t.x/Math.sqrt(Math.pow(t.x,2)+Math.pow(t.z,2))),t.z<0&&(this.alpha=2*Math.PI-this.alpha),this.beta=Math.acos(t.y/this.radius)}},setTarget:function(e){this.target=e},_getViewMatrix_default:function(){var e=Math.cos(this.alpha),t=Math.sin(this.alpha),r=Math.cos(this.beta),n=Math.sin(this.beta),s=this._getTargetPosition();if(s.addToRef(new L(this.radius*e*n,this.radius*r,this.radius*t*n),this._newPosition),this._scene.collisionsEnabled&&this.checkCollisions)this._collider.radius=this.collisionRadius,this._newPosition.subtractToRef(this.position,this._collisionVelocity),this._collisionTriggered=!0,this._scene.collisionCoordinator.getNewPosition(this.position,this._collisionVelocity,this._collider,3,null,i(this,this._onCollisionPositionChange),this.uniqueId);else{this.position.copyFrom(this._newPosition);var o=this.upVector;this.allowUpsideDown&&this.beta<0&&(o=new L(o.x,o.y,o.z),o=new L(-o.x,-o.y,-o.z)),Le.LookAtLHToRef(this.position,s,o,this._viewMatrix),this._viewMatrix.m[12]+=this.targetScreenOffset.x,this._viewMatrix.m[13]+=this.targetScreenOffset.y}return this._viewMatrix},_onCollisionPositionChange:function(e,t,r){this._scene.get_workerCollisions()&&this.checkCollisions&&t.multiplyInPlace(this._collider.radius),null!=r?this._previousPosition.copyFrom(this.position):(this.setPosition(t),null!=this.onCollide&&this.onCollide(r));var n=Math.cos(this.alpha),i=Math.sin(this.alpha),s=Math.cos(this.beta),o=Math.sin(this.beta),a=this._getTargetPosition();a.addToRef(new L(this.radius*n*o,this.radius*s,this.radius*i*o),this._newPosition),this.position.copyFrom(this._newPosition);var l=this.upVector;this.allowUpsideDown&&this.beta<0&&(l=new L(l.x,l.y,l.z),l=new L(-l.x,-l.y,-l.z)),Le.LookAtLHToRef(this.position,a,l,this._viewMatrix),this._viewMatrix.m[12]+=this.targetScreenOffset.x,this._viewMatrix.m[13]+=this.targetScreenOffset.y,this._collisionTriggered=!1},zoomOn:function(e,t){null==t&&(t=!1),e=null!=e?e:this._scene.meshes;var r=tt.MinMax(e),n=Math.sqrt(L.DistanceSquared(r.minimum,r.maximum));this.radius=n*this.zoomOnFactor,this.focusOn({min:r.minimum,max:r.maximum,distance:n},t)},focusOn:function(e,t){null==t&&(t=!1);var r=null,n=0;null==e.minimum?(r=null!=e?e:this._scene.meshes,r=tt.MinMax(r),n=L.Distance(r.minimum,r.maximum)):(r=e,n=e.distance),this.target.position=tt.Center(r),t||(this.maxZ=2*n)},createRigCamera:function(e,t){var r=this.cameraRigMode;switch(r){case 10:case 11:case 12:case 13:case 20:var n;return n=this._cameraRigParams.stereoHalfAngle*(0==t?1:-1),new q(e,this.alpha+n,this.beta,this.radius,this.target,this._scene)}return null},_updateRigCameras:function(){var e=this.cameraRigMode;switch(e){case 10:case 11:case 12:case 13:case 20:var t=this._rigCameras[0],r=this._rigCameras[1];t.alpha=this.alpha-this._cameraRigParams.stereoHalfAngle,r.alpha=this.alpha+this._cameraRigParams.stereoHalfAngle,t.beta=r.beta=this.beta,t.radius=r.radius=this.radius}j.prototype._updateRigCameras.call(this)},serialize:function(){var e=j.prototype.serialize.call(this);return Re.__instanceof(this.target,L)&&(e.target=this.target.asArray()),null!=this.target&&null!=this.target.id&&(e.lockedTargetId=this.target.id),e.checkCollisions=this.checkCollisions,e.alpha=this.alpha,e.beta=this.beta,e.radius=this.radius,e},__class__:q});var K=t.BABYLON.AnaglyphArcRotateCamera=function(e,t,r,n,i,s,o){q.call(this,e,t,r,n,i,o),this._eyeSpace=s*Math.PI/180,this._leftCamera=new q(e+"_left",t-this._eyeSpace,r,n,i,o),this._rightCamera=new q(e+"_right",t+this._eyeSpace,r,n,i,o),K.buildCamera(this,e)};s["com.babylonhx.cameras.AnaglyphArcRotateCamera"]=K,K.__name__=["com","babylonhx","cameras","AnaglyphArcRotateCamera"],K.buildCamera=function(e,t){e._leftCamera.isIntermediate=!0,e.subCameras.push(e._leftCamera),e.subCameras.push(e._rightCamera),e._leftTexture=new ot(t+"_leftTexture",1,e._leftCamera),e._anaglyphPostProcess=new at(t+"_anaglyph",1,e._rightCamera),e._anaglyphPostProcess.onApply=function(t){t.setTextureFromPostProcess("leftSampler",e._leftTexture)},e._update()},K.__super__=q,K.prototype=n(q.prototype,{_update:function(){this._updateCamera(this._leftCamera),this._updateCamera(this._rightCamera),this._leftCamera.alpha=this.alpha-this._eyeSpace,this._rightCamera.alpha=this.alpha+this._eyeSpace,q.prototype._update.call(this)},_updateCamera:function(e){e.beta=this.beta,e.radius=this.radius,e.minZ=this.minZ,e.maxZ=this.maxZ,e.fov=this.fov,e.target=this.target},__class__:K});var Z=t.BABYLON.FreeCamera=function(e,t,r){this._newPosition=new L(0,0,0),this._diffPosition=new L(0,0,0),this._oldPosition=new L(0,0,0),this._needMoveForGravity=!0,this._collider=new ne,this._keys=[],this.angularSensibility=2e3,this.applyGravity=!1,this.checkCollisions=!1,this.keysRight=[39,68],this.keysLeft=[37,65],this.keysDown=[40,83],this.keysUp=[38,87],this.ellipsoid=new L(.5,1,.5),j.call(this,e,t,r)};s["com.babylonhx.cameras.FreeCamera"]=Z,Z.__name__=["com","babylonhx","cameras","FreeCamera"],Z.__super__=j,Z.prototype=n(j.prototype,{attachControl:function(e,t,r){null==r&&(r=!0),null==t&&(t=!1);var n=this,i=null,s=this._scene._engine;this._attachedElement=e,null==this._onMouseDown&&(this._onMouseDown=function(e,t,r){i={x:e,y:t}},this._onMouseUp=function(e,t,r){i=null},this._onMouseOut=function(){i=null,n._keys=[]},this._onMouseMove=function(e,t){if(null!=i||s.isPointerLock){var r=0,o=0;s.isPointerLock||(r=e-i.x,o=t-i.y),n.cameraRotation.y+=r/n.angularSensibility,n.cameraRotation.x+=o/n.angularSensibility,i={x:e,y:t}}},this._onKeyDown=function(e){var t=e.keyCode;if(-1!=l.indexOf(n.keysUp,t,0)||-1!=l.indexOf(n.keysDown,t,0)||-1!=l.indexOf(n.keysLeft,t,0)||-1!=l.indexOf(n.keysRight,t,0)){var r=l.indexOf(n._keys,t,0);-1==r&&n._keys.push(t)}},this._onKeyUp=function(e){var t=e.keyCode;if(-1!=l.indexOf(n.keysUp,t,0)||-1!=l.indexOf(n.keysDown,t,0)||-1!=l.indexOf(n.keysLeft,t,0)||-1!=l.indexOf(n.keysRight,t,0)){var r=l.indexOf(n._keys,t,0);r>=0&&n._keys.splice(r,1)}},this._onLostFocus=function(){n._keys=[]},this._reset=function(){n._keys=[],i=null,n.cameraDirection=new L(0,0,0),n.cameraRotation=new Mt(0,0)}),_.app.addEventListener(this.eventPrefix+"down",function(e){n._onMouseDown(e.clientX,e.clientY,e.button)},!1),_.app.addEventListener(this.eventPrefix+"up",function(e){n._onMouseUp(e.clientX,e.clientY,e.button)},!1),_.app.addEventListener(this.eventPrefix+"move",function(e){n._onMouseMove(e.clientX,e.clientY)},!1),_.app.addEventListener("mousemove",function(e){n._onMouseMove(e.clientX,e.clientY)},!1),Ae.RegisterTopRootEvents([{name:"keydown",handler:this._onKeyDown},{name:"keyup",handler:this._onKeyUp},{name:"blur",handler:this._onLostFocus}])},detachControl:function(e){_.app.removeEventListener(this.eventPrefix+"down",this._onMouseDown,!1),_.app.removeEventListener(this.eventPrefix+"up",this._onMouseUp,!1),_.app.removeEventListener(this.eventPrefix+"out",this._onMouseUp,!1),_.app.removeEventListener(this.eventPrefix+"move",this._onMouseMove,!1),_.app.removeEventListener("mousemove",this._onMouseMove,!1),Ae.UnregisterTopRootEvents([{name:"keydown",handler:this._onKeyDown},{name:"keyup",handler:this._onKeyUp},{name:"blur",handler:this._onLostFocus}]),null!=this._reset&&this._reset()},_collideWithWorld:function(e){var t=null;t=null!=this.parent?L.TransformCoordinates(this.position,this.parent.getWorldMatrix()):this.position,
t.subtractFromFloatsToRef(0,this.ellipsoid.y,0,this._oldPosition),this._collider.radius=this.ellipsoid;var r=e;this.applyGravity&&(r=e.add(this._scene.gravity)),this._scene.collisionCoordinator.getNewPosition(this._oldPosition,r,this._collider,3,null,i(this,this._onCollisionPositionChange),this.uniqueId)},_onCollisionPositionChange:function(e,t,r){var n=this;this._scene.get_workerCollisions()&&t.multiplyInPlace(this._collider.radius);var i=function(e){n._newPosition.copyFrom(e),n._newPosition.subtractToRef(n._oldPosition,n._diffPosition);n.position.clone();n._diffPosition.length()>_.CollisionsEpsilon&&(n.position.addInPlace(n._diffPosition),null!=n.onCollide&&null!=r&&n.onCollide(r))};i(t)},_checkInputs:function(){null==this._localDirection&&(this._localDirection=new L(0,0,0),this._transformedDirection=new L(0,0,0));for(var e=0,t=this._keys.length;t>e;){var r=e++,n=this._keys[r],i=this._computeLocalCameraSpeed();-1!=l.indexOf(this.keysLeft,n,0)?this._localDirection.copyFromFloats(-i,0,0):-1!=l.indexOf(this.keysUp,n,0)?this._localDirection.copyFromFloats(0,0,i):-1!=l.indexOf(this.keysRight,n,0)?this._localDirection.copyFromFloats(i,0,0):-1!=l.indexOf(this.keysDown,n,0)&&this._localDirection.copyFromFloats(0,0,-i),this.getViewMatrix().invertToRef(this._cameraTransformMatrix),L.TransformNormalToRef(this._localDirection,this._cameraTransformMatrix,this._transformedDirection),this.cameraDirection.addInPlace(this._transformedDirection)}j.prototype._checkInputs.call(this)},_decideIfNeedsToMove:function(){return this._needMoveForGravity||Math.abs(this.cameraDirection.x)>0||Math.abs(this.cameraDirection.y)>0||Math.abs(this.cameraDirection.z)>0},_updatePosition:function(){this.checkCollisions&&this._scene.collisionsEnabled?this._collideWithWorld(this.cameraDirection):this.position.addInPlace(this.cameraDirection)},__class__:Z});var Q=t.BABYLON.AnaglyphFreeCamera=function(e,t,r,n){Z.call(this,e,t,n),this._eyeSpace=r*Math.PI/180,this._transformMatrix=new Le,this._leftCamera=new Z(e+"_left",new L(t.x,t.y,t.z),n),this._rightCamera=new Z(e+"_right",new L(t.x,t.y,t.z),n),K.buildCamera(this,e)};s["com.babylonhx.cameras.AnaglyphFreeCamera"]=Q,Q.__name__=["com","babylonhx","cameras","AnaglyphFreeCamera"],Q.__super__=Z,Q.prototype=n(Z.prototype,{_getSubCameraPosition:function(e,t){var r=this.getTarget();Le.Translation(-r.x,-r.y,-r.z).multiplyToRef(Le.RotationY(e),this._transformMatrix),this._transformMatrix=this._transformMatrix.multiply(Le.Translation(r.x,r.y,r.z)),L.TransformCoordinatesToRef(this.position,this._transformMatrix,t)},_update:function(){this._getSubCameraPosition(-this._eyeSpace,this._leftCamera.position),this._getSubCameraPosition(this._eyeSpace,this._rightCamera.position),this._updateCamera(this._leftCamera),this._updateCamera(this._rightCamera),Z.prototype._update.call(this)},_updateCamera:function(e){e.minZ=this.minZ,e.maxZ=this.maxZ,e.fov=this.fov,e.viewport=this.viewport,e.setTarget(this.getTarget())},__class__:Q});var $=t.BABYLON.FollowCamera=function(e,t,r){this.maxCameraSpeed=50,this.cameraAcceleration=.05,this.heightOffset=30,this.rotationOffset=0,this.radius=12,j.call(this,e,t,r)};s["com.babylonhx.cameras.FollowCamera"]=$,$.__name__=["com","babylonhx","cameras","FollowCamera"],$.__super__=j,$.prototype=n(j.prototype,{follow:function(e){var t=this.rotationOffset*Math.PI/180+e.rotation.y,r=e.position.x+Math.sin(t)*this.radius,n=e.position.z+Math.cos(t)*this.radius,i=r-this.position.x,s=e.position.y+this.heightOffset-this.position.y,o=n-this.position.z,a=i*this.cameraAcceleration*2,l=s*this.cameraAcceleration,h=o*this.cameraAcceleration*2;(a>this.maxCameraSpeed||a<-this.maxCameraSpeed)&&(a=1>a?-this.maxCameraSpeed:this.maxCameraSpeed),(l>this.maxCameraSpeed||l<-this.maxCameraSpeed)&&(l=1>l?-this.maxCameraSpeed:this.maxCameraSpeed),(h>this.maxCameraSpeed||h<-this.maxCameraSpeed)&&(h=1>h?-this.maxCameraSpeed:this.maxCameraSpeed),this.position.x+=a,this.position.y+=l,this.position.z+=h,this.setTarget(e.position)},__class__:$});var J=t.BABYLON.TouchCamera=function(e,t,r){this.moveSensibility=500,this._pointerPressed=[],this._pointerCount=0,this._offsetY=-(1/0),this._offsetX=-(1/0),Z.call(this,e,t,r),this.angularSensibility=2e5};s["com.babylonhx.cameras.TouchCamera"]=J,J.__name__=["com","babylonhx","cameras","TouchCamera"],J.__super__=Z,J.prototype=n(Z.prototype,{attachControl:function(e,t,r){null==r&&(r=!0),null==t&&(t=!1);var n=this,i=null;null==this._onPointerDown&&(this._onPointerDown=function(e,t,r,s){n._pointerPressed.push(r),1==n._pointerPressed.length&&(i={x:e,y:t})},this._onPointerUp=function(e,t,r,s){var o=l.indexOf(n._pointerPressed,r,0);-1!=o&&(n._pointerPressed.splice(o,1),0==o&&(i=null,n._offsetX=-(1/0),n._offsetY=-(1/0)))},this._onPointerMove=function(e,t,r,s,o,a){if(null!=i){var h=l.indexOf(n._pointerPressed,o,0);0==h&&(n._offsetX=e-i.x,n._offsetY=-(t-i.y))}},this._onLostFocus=function(){n._offsetX=-(1/0),n._offsetY=-(1/0)}),_.touchDown.push(this._onPointerDown),_.touchUp.push(this._onPointerUp),_.touchMove.push(this._onPointerMove)},detachControl:function(e){var t=this._onPointerDown;l.remove(_.touchDown,t);var r=this._onPointerUp;l.remove(_.touchUp,r);var n=this._onPointerMove;l.remove(_.touchMove,n)},_checkInputs:function(){if(this._offsetX!=-(1/0))if(this.cameraRotation.y+=this._offsetX/this.angularSensibility,this._pointerPressed.length>1)this.cameraRotation.x+=-this._offsetY/this.angularSensibility;else{var e=this._computeLocalCameraSpeed(),t=new L(0,0,e*this._offsetY/this.moveSensibility);R.RotationYawPitchRollToRef(this.rotation.y,this.rotation.x,0,Le._tempQuaternion),Le._tempQuaternion.toRotationMatrix(this._cameraRotationMatrix),this.cameraDirection.addInPlace(L.TransformCoordinates(t,this._cameraRotationMatrix))}Z.prototype._checkInputs.call(this)},__class__:J});var ee=t.BABYLON.VRCameraMetrics=function(){this.compensateDistortion=!0};s["com.babylonhx.cameras.VRCameraMetrics"]=ee,ee.__name__=["com","babylonhx","cameras","VRCameraMetrics"],ee.GetDefault=function(){var e=new ee;return e.hResolution=1280,e.vResolution=800,e.hScreenSize=.149759993,e.vScreenSize=.0935999975,e.vScreenCenter=.0467999987,e.eyeToScreenDistance=.0410000011,e.lensSeparationDistance=.063500002,e.interpupillaryDistance=.064000003,e.distortionK=[1,.219999999,.239999995,0],e.chromaAbCorrection=[.995999992,-.00400000019,1.01400006,0],e.postProcessScaleFactor=1.714605507808412,e.lensCenterOffset=.151976421,e},ee.prototype={aspectRatio:function(){return this.hResolution/(2*this.vResolution)},aspectRatioFov:function(){return 2*Math.atan(this.postProcessScaleFactor*this.vScreenSize/(2*this.eyeToScreenDistance))},get_leftHMatrix:function(){var e=this.hScreenSize/4-this.lensSeparationDistance/2,t=4*e/this.hScreenSize;return Le.Translation(t,0,0)},get_rightHMatrix:function(){var e=this.hScreenSize/4-this.lensSeparationDistance/2,t=4*e/this.hScreenSize;return Le.Translation(-t,0,0)},get_leftPreViewMatrix:function(){return Le.Translation(.5*this.interpupillaryDistance,0,0)},get_rightPreViewMatrix:function(){return Le.Translation(-.5*this.interpupillaryDistance,0,0)},__class__:ee,__properties__:{get_rightPreViewMatrix:"get_rightPreViewMatrix",get_leftPreViewMatrix:"get_leftPreViewMatrix",get_rightHMatrix:"get_rightHMatrix",get_leftHMatrix:"get_leftHMatrix"}};var te=t.BABYLON.VRDeviceOrientationFreeCamera=function(e,t,r,n){null==n&&(n=!0),this._gamma=0,this._beta=0,this._alpha=0,Z.call(this,e,t,r);var i=ee.GetDefault();i.compensateDistortion=n,this.setCameraRigMode(20,{vrCameraMetrics:i})};s["com.babylonhx.cameras.VRDeviceOrientationFreeCamera"]=te,te.__name__=["com","babylonhx","cameras","VRDeviceOrientationFreeCamera"],te.__super__=Z,te.prototype=n(Z.prototype,{_onOrientationEvent:function(e){this._alpha=0|+e.alpha,this._beta=0|+e.beta,this._gamma=0|+e.gamma,this._gamma<0?this._gamma=90+this._gamma:this._gamma=270-this._gamma,this.rotation.x=this._gamma/180*Math.PI,this.rotation.y=-this._alpha/180*Math.PI,this.rotation.z=this._beta/180*Math.PI},attachControl:function(e,t,r){null==r&&(r=!0),null==t&&(t=!1),Z.prototype.attachControl.call(this,e,t),window.addEventListener("deviceorientation",i(this,this._onOrientationEvent))},detachControl:function(e){Z.prototype.detachControl.call(this,e),window.removeEventListener("deviceorientation",i(this,this._onOrientationEvent))},__class__:te});var re=t.BABYLON.WebVRFreeCamera=function(e,t,r,n){null==n&&(n=!0),this._vrEnabled=!1,this._cacheRotation=new L(0,0,0),this._cacheQuaternion=new R,this._cacheState=null,this._sensorDevice=null,this._hmdDevice=null,Z.call(this,e,t,r);var i=ee.GetDefault();i.compensateDistortion=n,this.setCameraRigMode(20,{vrCameraMetrics:i})};s["com.babylonhx.cameras.WebVRFreeCamera"]=re,re.__name__=["com","babylonhx","cameras","WebVRFreeCamera"],re.__super__=Z,re.prototype=n(Z.prototype,{_getWebVRDevices:function(e){var t=e.length,r=0;for(this._sensorDevice=null,this._hmdDevice=null;t>r&&null==this._hmdDevice;)"HMDVRDevice"==m.getClassName(m.getClass(e[r]))&&(this._hmdDevice=e[r]),r++;for(r=0;t>r&&null==this._sensorDevice;)"PositionSensorVRDevice"!=m.getClassName(m.getClass(e[r]))||null!=this._hmdDevice&&e[r].hardwareUnitId!=this._hmdDevice.hardwareUnitId||(this._sensorDevice=e[r]),r++;null!=this._sensorDevice&&null!=this._hmdDevice?this._vrEnabled=!0:this._vrEnabled=!1},_checkInputs:function(){this._vrEnabled&&(this._cacheState=this._sensorDevice.getState(),this._cacheQuaternion.copyFromFloats(this._cacheState.orientation.x,this._cacheState.orientation.y,this._cacheState.orientation.z,this._cacheState.orientation.w),this._cacheQuaternion.toEulerAnglesToRef(this._cacheRotation),this.rotation.x=-this._cacheRotation.z,this.rotation.y=-this._cacheRotation.y,this.rotation.z=this._cacheRotation.x),Z.prototype._checkInputs.call(this)},attachControl:function(e,t,r){null==r&&(r=!1),null==t&&(t=!1),Z.prototype.attachControl.call(this,e,t);var n=window.navigator;null!=n.getVRDevices?n.getVRDevices().then(i(this,this._getWebVRDevices)):null!=n.mozGetVRDevices&&n.mozGetVRDevices(i(this,this._getWebVRDevices))},detachControl:function(e){Z.prototype.detachControl.call(this,e),this._vrEnabled=!1},__class__:re});var ne=t.BABYLON.Collider=function(){this._displacementVector=new L(0,0,0),this._slidePlaneNormal=new L(0,0,0),this._destinationPoint=new L(0,0,0),this._baseToVertex=new L(0,0,0),this._edge=new L(0,0,0),this._tempVector4=new L(0,0,0),this._tempVector3=new L(0,0,0),this._tempVector2=new L(0,0,0),this._tempVector=new L(0,0,0),this._planeIntersectionPoint=new L(0,0,0),this._collisionPoint=new L(0,0,0),this.normalizedVelocity=new L(0,0,0),this.velocityWorld=new L(0,0,0),this.basePointWorld=new L(0,0,0),this.retry=0,this.radius=new L(1,1,1)};s["com.babylonhx.collisions.Collider"]=ne,ne.__name__=["com","babylonhx","collisions","Collider"],ne.intersectBoxAASphere=function(e,t,r,n){return e.x>r.x+n?!1:r.x-n>t.x?!1:e.y>r.y+n?!1:r.y-n>t.y?!1:e.z>r.z+n?!1:r.z-n>t.z?!1:!0},ne.getLowestRoot=function(e,t,r,n){var i=t*t-4*e*r,s={root:0,found:!1};if(0>i)return s;var o=Math.sqrt(i),a=(-t-o)/(2*e),l=(-t+o)/(2*e);if(a>l){var h=l;l=a,a=h}return a>0&&n>a?(s.root=a,s.found=!0,s):l>0&&n>l?(s.root=l,s.found=!0,s):s},ne.prototype={_initialize:function(e,t,r){this.velocity=t,L.NormalizeToRef(t,this.normalizedVelocity),this.basePoint=e,e.multiplyToRef(this.radius,this.basePointWorld),t.multiplyToRef(this.radius,this.velocityWorld),this.velocityWorldLength=this.velocityWorld.length(),this.epsilon=r,this.collisionFound=!1},_checkPointInTriangle:function(e,t,r,n,i){t.subtractToRef(e,this._tempVector),r.subtractToRef(e,this._tempVector2),L.CrossToRef(this._tempVector,this._tempVector2,this._tempVector4);var s=L.Dot(this._tempVector4,i);return 0>s?!1:(n.subtractToRef(e,this._tempVector3),L.CrossToRef(this._tempVector2,this._tempVector3,this._tempVector4),s=L.Dot(this._tempVector4,i),0>s?!1:(L.CrossToRef(this._tempVector3,this._tempVector,this._tempVector4),s=L.Dot(this._tempVector4,i),s>=0))},_canDoCollision:function(e,t,r,n){var i=Math.sqrt(L.DistanceSquared(this.basePointWorld,e)),s=Math.max(Math.max(this.radius.x,this.radius.y),this.radius.z);return i>this.velocityWorldLength+s+t?!1:ne.intersectBoxAASphere(r,n,this.basePointWorld,this.velocityWorldLength+s)?!0:!1},_testTriangle:function(e,t,r,n,i){var s=0,o=!1;null==t._trianglePlanes&&(t._trianglePlanes=[]),null==t._trianglePlanes[e]&&(t._trianglePlanes[e]=new Qe(0,0,0,0),t._trianglePlanes[e].copyFromPoints(r,n,i));var a=t._trianglePlanes[e];if(null!=t.getMaterial()||a.isFrontFacingTo(this.normalizedVelocity,0)){var l=L.Dot(this.basePoint,a.normal)+a.d,h=L.Dot(a.normal,this.velocity);if(0==h){if(Math.abs(l)>=1)return;o=!0,s=0}else{s=(-1-l)/h;var c=(1-l)/h;if(s>c){var u=c;c=s,s=u}if(s>1||0>c)return;0>s&&(s=0),s>1&&(s=1)}this._collisionPoint.copyFromFloats(0,0,0);var f=!1,d=1;if(o||(this.basePoint.subtractToRef(a.normal,this._planeIntersectionPoint),this.velocity.scaleToRef(s,this._tempVector),this._planeIntersectionPoint.addInPlace(this._tempVector),this._checkPointInTriangle(this._planeIntersectionPoint,r,n,i,a.normal)&&(f=!0,d=s,this._collisionPoint.copyFrom(this._planeIntersectionPoint))),!f){var m=this.velocity.lengthSquared(),_=m;this.basePoint.subtractToRef(r,this._tempVector);var p=2*L.Dot(this.velocity,this._tempVector),v=this._tempVector.lengthSquared()-1,g=ne.getLowestRoot(_,p,v,d);g.found&&(d=g.root,f=!0,this._collisionPoint.copyFrom(r)),this.basePoint.subtractToRef(n,this._tempVector),p=2*L.Dot(this.velocity,this._tempVector),v=this._tempVector.lengthSquared()-1,g=ne.getLowestRoot(_,p,v,d),g.found&&(d=g.root,f=!0,this._collisionPoint.copyFrom(n)),this.basePoint.subtractToRef(i,this._tempVector),p=2*L.Dot(this.velocity,this._tempVector),v=this._tempVector.lengthSquared()-1,g=ne.getLowestRoot(_,p,v,d),g.found&&(d=g.root,f=!0,this._collisionPoint.copyFrom(i)),n.subtractToRef(r,this._edge),r.subtractToRef(this.basePoint,this._baseToVertex);var x=this._edge.lengthSquared(),y=L.Dot(this._edge,this.velocity),b=L.Dot(this._edge,this._baseToVertex);if(_=x*-m+y*y,p=x*(2*L.Dot(this.velocity,this._baseToVertex))-2*y*b,v=x*(1-this._baseToVertex.lengthSquared())+b*b,g=ne.getLowestRoot(_,p,v,d),g.found){var S=(y*g.root-b)/x;S>=0&&1>=S&&(d=g.root,f=!0,this._edge.scaleInPlace(S),r.addToRef(this._edge,this._collisionPoint))}if(i.subtractToRef(n,this._edge),n.subtractToRef(this.basePoint,this._baseToVertex),x=this._edge.lengthSquared(),y=L.Dot(this._edge,this.velocity),b=L.Dot(this._edge,this._baseToVertex),_=x*-m+y*y,p=x*(2*L.Dot(this.velocity,this._baseToVertex))-2*y*b,v=x*(1-this._baseToVertex.lengthSquared())+b*b,g=ne.getLowestRoot(_,p,v,d),g.found){var w=(y*g.root-b)/x;w>=0&&1>=w&&(d=g.root,f=!0,this._edge.scaleInPlace(w),n.addToRef(this._edge,this._collisionPoint))}if(r.subtractToRef(i,this._edge),i.subtractToRef(this.basePoint,this._baseToVertex),x=this._edge.lengthSquared(),y=L.Dot(this._edge,this.velocity),b=L.Dot(this._edge,this._baseToVertex),_=x*-m+y*y,p=x*(2*L.Dot(this.velocity,this._baseToVertex))-2*y*b,v=x*(1-this._baseToVertex.lengthSquared())+b*b,g=ne.getLowestRoot(_,p,v,d),g.found){var C=(y*g.root-b)/x;C>=0&&1>=C&&(d=g.root,f=!0,this._edge.scaleInPlace(C),i.addToRef(this._edge,this._collisionPoint))}}if(f){var T=d*this.velocity.length();(!this.collisionFound||T<this.nearestDistance)&&(null==this.intersectionPoint?this.intersectionPoint=this._collisionPoint.clone():this.intersectionPoint.copyFrom(this._collisionPoint),this.nearestDistance=T,this.collisionFound=!0,this.collidedMesh=t._mesh)}}},_collide:function(e,t,r,n,i,s){for(var o=n;i>o;){var a=t[r[o]-s],l=t[r[o+1]-s],h=t[r[o+2]-s];this._testTriangle(o,e,h,l,a),o+=3}},_getResponse:function(e,t){e.addToRef(t,this._destinationPoint),t.scaleInPlace(this.nearestDistance/Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z)),this.basePoint.addToRef(t,e),e.subtractToRef(this.intersectionPoint,this._slidePlaneNormal),this._slidePlaneNormal.normalize(),this._slidePlaneNormal.scaleToRef(this.epsilon,this._displacementVector),e.addInPlace(this._displacementVector),this.intersectionPoint.addInPlace(this._displacementVector),this._slidePlaneNormal.scaleInPlace(Qe.SignedDistanceToPlaneFromPositionAndNormal(this.intersectionPoint,this._slidePlaneNormal,this._destinationPoint)),this._destinationPoint.subtractInPlace(this._slidePlaneNormal),this._destinationPoint.subtractToRef(this.intersectionPoint,t)},__class__:ne};var ie=t.BABYLON.ICollisionCoordinator=function(){};s["com.babylonhx.collisions.ICollisionCoordinator"]=ie,ie.__name__=["com","babylonhx","collisions","ICollisionCoordinator"],ie.prototype={__class__:ie};var se=t.BABYLON.CollisionCoordinatorLegacy=function(){this._finalPosition=new L(0,0,0),this._scaledVelocity=new L(0,0,0),this._scaledPosition=new L(0,0,0)};s["com.babylonhx.collisions.CollisionCoordinatorLegacy"]=se,se.__name__=["com","babylonhx","collisions","CollisionCoordinatorLegacy"],se.__interfaces__=[ie],se.prototype={init:function(e){this._scene=e},destroy:function(){},getNewPosition:function(e,t,r,n,i,s,o){e.divideToRef(r.radius,this._scaledPosition),t.divideToRef(r.radius,this._scaledVelocity),r.collidedMesh=null,r.retry=0,r.initialVelocity=this._scaledVelocity,r.initialPosition=this._scaledPosition,this._collideWithWorld(this._scaledPosition,this._scaledVelocity,r,n,this._finalPosition,i),this._finalPosition.multiplyInPlace(r.radius),s(o,this._finalPosition,r.collidedMesh)},onMeshAdded:function(e){},onMeshUpdated:function(e){},onMeshRemoved:function(e){},onGeometryAdded:function(e){},onGeometryUpdated:function(e){},onGeometryDeleted:function(e){},_collideWithWorld:function(e,t,r,n,i,s){var o=10*_.CollisionsEpsilon;if(r.retry>=n)return i.x=e.x,i.y=e.y,void(i.z=e.z);r._initialize(e,t,o);for(var a=0,l=this._scene.meshes;a<l.length;){var h=l[a];++a,h.isEnabled()&&h.get_checkCollisions()&&null!=h.subMeshes&&h!=s&&h._checkCollision(r)}return r.collisionFound?((0!=t.x||0!=t.y||0!=t.z)&&(e.addToRef(t,r._destinationPoint),t.scaleInPlace(r.nearestDistance/Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z)),r.basePoint.addToRef(t,e),e.subtractToRef(r.intersectionPoint,r._slidePlaneNormal),r._slidePlaneNormal.normalize(),r._slidePlaneNormal.scaleToRef(r.epsilon,r._displacementVector),e.addInPlace(r._displacementVector),r.intersectionPoint.addInPlace(r._displacementVector),r._slidePlaneNormal.scaleInPlace(Qe.SignedDistanceToPlaneFromPositionAndNormal(r.intersectionPoint,r._slidePlaneNormal,r._destinationPoint)),r._destinationPoint.subtractInPlace(r._slidePlaneNormal),r._destinationPoint.subtractToRef(r.intersectionPoint,t)),Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z)<=o?(i.x=e.x,i.y=e.y,void(i.z=e.z)):(r.retry++,void this._collideWithWorld(e,t,r,n,i,s))):(i.x=e.x+t.x,i.y=e.y+t.y,void(i.z=e.z+t.z))},__class__:se};var oe=t.BABYLON.IntersectionInfo=function(e,t,r){this.subMeshId=0,this.faceId=0,this.bu=e,this.bv=t,this.distance=r};s["com.babylonhx.collisions.IntersectionInfo"]=oe,oe.__name__=["com","babylonhx","collisions","IntersectionInfo"],oe.prototype={__class__:oe};var ae=t.BABYLON.PickingInfo=function(){this.pickedSprite=null,this.subMeshId=0,this.faceId=-1,this.bv=0,this.bu=0,this.pickedMesh=null,this.pickedPoint=null,this.distance=0,this.hit=!1};s["com.babylonhx.collisions.PickingInfo"]=ae,ae.__name__=["com","babylonhx","collisions","PickingInfo"],ae.prototype={getNormal:function(e,t){if(null==t&&(t=!0),null==e&&(e=!1),null==this.pickedMesh||!this.pickedMesh.isVerticesDataPresent("normal"))return null;var r=this.pickedMesh.getIndices(),n=new L(0,0,0);if(t){var i=this.pickedMesh.getVerticesData("normal"),s=L.FromArray(i,3*r[3*this.faceId]),o=L.FromArray(i,3*r[3*this.faceId+1]),a=L.FromArray(i,3*r[3*this.faceId+2]);s=s.scale(this.bu),o=o.scale(this.bv),a=a.scale(1-this.bu-this.bv),n=new L(s.x+o.x+a.x,s.y+o.y+a.y,s.z+o.z+a.z)}else{var l=this.pickedMesh.getVerticesData("position"),h=L.FromArray(l,3*r[3*this.faceId]),c=L.FromArray(l,3*r[3*this.faceId+1]),u=L.FromArray(l,3*r[3*this.faceId+2]),f=new L(h.x-c.x,h.y-c.y,h.z-c.z),d=new L(u.x-c.x,u.y-c.y,u.z-c.z);n=L.Cross(f,d)}return e&&(n=L.TransformNormal(n,this.pickedMesh.getWorldMatrix())),L.Normalize(n)},getTextureCoordinates:function(){if(null==this.pickedMesh||!this.pickedMesh.isVerticesDataPresent("uv"))return null;var e=this.pickedMesh.getIndices(),t=this.pickedMesh.getVerticesData("uv"),r=Mt.FromArray(t,2*e[3*this.faceId]),n=Mt.FromArray(t,2*e[3*this.faceId+1]),i=Mt.FromArray(t,2*e[3*this.faceId+2]);return r=r.scale(1-this.bu-this.bv),n=n.scale(this.bu),i=i.scale(this.bv),new Mt(r.x+n.x+i.x,r.y+n.y+i.y)},__class__:ae};var le=t.BABYLON.BoundingBox=function(e,t){this.vectorsWorld=function(e){var t,r;return r=new Array(8),t=r}(this),this.directions=function(e){var t,r;return r=new Array(3),t=r}(this),this.vectors=function(e){var t,r;return r=new Array(8),t=r}(this),this.minimum=e,this.maximum=t;var r=this.minimum.clone();this.vectors[0]=r;var n=this.maximum.clone();this.vectors[1]=n;var i=this.minimum.clone();this.vectors[2]=i,this.vectors[2].x=this.maximum.x;var s=this.minimum.clone();this.vectors[3]=s,this.vectors[3].y=this.maximum.y;var o=this.minimum.clone();this.vectors[4]=o,this.vectors[4].z=this.maximum.z;var a=this.maximum.clone();this.vectors[5]=a,this.vectors[5].z=this.minimum.z;var l=this.maximum.clone();this.vectors[6]=l,this.vectors[6].x=this.minimum.x;var h=this.maximum.clone();this.vectors[7]=h,this.vectors[7].y=this.minimum.y,this.center=this.maximum.add(this.minimum).scale(.5),this.extendSize=this.maximum.subtract(this.minimum).scale(.5);var c,u,f=[new L(0,0,0),new L(0,0,0),new L(0,0,0)];u=new Array(f.length),c=u;for(var d=0,m=f.length;m>d;){var _=d++;c[_]=f[_]}this.directions=c;for(var p=0,v=this.vectors.length;v>p;){var g=p++,x=new L(0,0,0);this.vectorsWorld[g]=x}this.minimumWorld=new L(0,0,0),this.maximumWorld=new L(0,0,0),this._update(Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1))};s["com.babylonhx.culling.BoundingBox"]=le,le.__name__=["com","babylonhx","culling","BoundingBox"],le.__interfaces__=[g],le.Intersects=function(e,t){return e.maximumWorld.x<t.minimumWorld.x||e.minimumWorld.x>t.maximumWorld.x?!1:e.maximumWorld.y<t.minimumWorld.y||e.minimumWorld.y>t.maximumWorld.y?!1:e.maximumWorld.z<t.minimumWorld.z||e.minimumWorld.z>t.maximumWorld.z?!1:!0},le.IntersectsSphere=function(e,t,r,n){le.IntersectsSphere_vector=L.Clamp(r,e,t);var i=L.DistanceSquared(r,le.IntersectsSphere_vector);return n*n>=i},le.IsCompletelyInFrustum=function(e,t){for(var r=0;6>r;)for(var n=r++,i=0;8>i;){var s=i++;if(t[n].dotCoordinate(e[s])<0)return!1}return!0},le.IsInFrustum=function(e,t){for(var r=0;6>r;){for(var n=r++,i=8,s=0;8>s;){var o=s++;if(!(t[n].dotCoordinate(e[o])<0))break;--i}if(0==i)return!1}return!0},le.prototype={getWorldMatrix:function(){return this._worldMatrix},_update:function(e){L.FromFloatsToRef(1/0,1/0,1/0,this.minimumWorld),L.FromFloatsToRef(-(1/0),-(1/0),-(1/0),this.maximumWorld);for(var t=0,r=this.vectors.length;r>t;){var n=t++;le.v_update=this.vectorsWorld[n],L.TransformCoordinatesToRef(this.vectors[n],e,le.v_update),le.v_update.x<this.minimumWorld.x&&(this.minimumWorld.x=le.v_update.x),le.v_update.y<this.minimumWorld.y&&(this.minimumWorld.y=le.v_update.y),le.v_update.z<this.minimumWorld.z&&(this.minimumWorld.z=le.v_update.z),le.v_update.x>this.maximumWorld.x&&(this.maximumWorld.x=le.v_update.x),le.v_update.y>this.maximumWorld.y&&(this.maximumWorld.y=le.v_update.y),le.v_update.z>this.maximumWorld.z&&(this.maximumWorld.z=le.v_update.z)}this.maximumWorld.addToRef(this.minimumWorld,this.center),this.center.scaleInPlace(.5),L.FromFloatArrayToRef(e.m,0,this.directions[0]),L.FromFloatArrayToRef(e.m,4,this.directions[1]),L.FromFloatArrayToRef(e.m,8,this.directions[2]),this._worldMatrix=e},isInFrustum:function(e){return le.IsInFrustum(this.vectorsWorld,e)},isCompletelyInFrustum:function(e){return le.IsCompletelyInFrustum(this.vectorsWorld,e)},intersectsPoint:function(e){var t=-.001;return this.maximumWorld.x-e.x<t||t>e.x-this.minimumWorld.x?!1:this.maximumWorld.y-e.y<t||t>e.y-this.minimumWorld.y?!1:this.maximumWorld.z-e.z<t||t>e.z-this.minimumWorld.z?!1:!0},intersectsSphere:function(e){return le.IntersectsSphere(this.minimumWorld,this.maximumWorld,e.centerWorld,e.radiusWorld)},intersectsMinMax:function(e,t){return this.maximumWorld.x<e.x||this.minimumWorld.x>t.x?!1:this.maximumWorld.y<e.y||this.minimumWorld.y>t.y?!1:this.maximumWorld.z<e.z||this.minimumWorld.z>t.z?!1:!0},__class__:le};var he=t.BABYLON.BoundingInfo=function(e,t){this.minimum=e,this.maximum=t,this.boundingBox=new le(e,t),this.boundingSphere=new ce(e,t)};s["com.babylonhx.culling.BoundingInfo"]=he,he.__name__=["com","babylonhx","culling","BoundingInfo"],he.computeBoxExtents=function(e,t){var r=L.Dot(t.center,e),n=Math.abs(L.Dot(t.directions[0],e))*t.extendSize.x,i=Math.abs(L.Dot(t.directions[1],e))*t.extendSize.y,s=Math.abs(L.Dot(t.directions[2],e))*t.extendSize.z,o=n+i+s;return{min:r-o,max:r+o}},he.extentsOverlap=function(e,t,r,n){return!(e>n||r>t)},he.axisOverlap=function(e,t,r){var n=he.computeBoxExtents(e,t),i=he.computeBoxExtents(e,r);return!(n.min>i.max||i.min>n.max)},he.prototype={_update:function(e){this.boundingBox._update(e),this.boundingSphere._update(e)},isInFrustum:function(e){return this.boundingSphere.isInFrustum(e)?le.IsInFrustum(this.boundingBox.vectorsWorld,e):!1},isCompletelyInFrustum:function(e){return le.IsCompletelyInFrustum(this.boundingBox.vectorsWorld,e)},_checkCollision:function(e){return e._canDoCollision(this.boundingSphere.centerWorld,this.boundingSphere.radiusWorld,this.boundingBox.minimumWorld,this.boundingBox.maximumWorld)},intersectsPoint:function(e){return null==this.boundingSphere.centerWorld?!1:this.boundingSphere.intersectsPoint(e)&&this.boundingBox.intersectsPoint(e)?!0:!1},intersects:function(e,t){if(null==t&&(t=!1),null==this.boundingSphere.centerWorld||null==e.boundingSphere.centerWorld)return!1;if(!ce.Intersects(this.boundingSphere,e.boundingSphere))return!1;if(!le.Intersects(this.boundingBox,e.boundingBox))return!1;if(t)return!0;var r=this.boundingBox,n=e.boundingBox;return he.axisOverlap(r.directions[0],r,n)&&he.axisOverlap(r.directions[1],r,n)&&he.axisOverlap(r.directions[2],r,n)&&he.axisOverlap(n.directions[0],r,n)&&he.axisOverlap(n.directions[1],r,n)&&he.axisOverlap(n.directions[2],r,n)&&he.axisOverlap(L.Cross(r.directions[0],n.directions[0]),r,n)&&he.axisOverlap(L.Cross(r.directions[0],n.directions[1]),r,n)&&he.axisOverlap(L.Cross(r.directions[0],n.directions[2]),r,n)&&he.axisOverlap(L.Cross(r.directions[1],n.directions[0]),r,n)&&he.axisOverlap(L.Cross(r.directions[1],n.directions[1]),r,n)&&he.axisOverlap(L.Cross(r.directions[1],n.directions[2]),r,n)&&he.axisOverlap(L.Cross(r.directions[2],n.directions[0]),r,n)&&he.axisOverlap(L.Cross(r.directions[2],n.directions[1]),r,n)&&he.axisOverlap(L.Cross(r.directions[2],n.directions[2]),r,n)?!0:!1},__class__:he};var ce=t.BABYLON.BoundingSphere=function(e,t){this._tempRadiusVector=new L(0,0,0);var r=Math.sqrt(L.DistanceSquared(e,t));this.center=L.Lerp(e,t,.5),this.radius=.5*r,this.centerWorld=new L(0,0,0),this._update(Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1))};s["com.babylonhx.culling.BoundingSphere"]=ce,ce.__name__=["com","babylonhx","culling","BoundingSphere"],ce.Intersects=function(e,t){var r=e.centerWorld.x-t.centerWorld.x,n=e.centerWorld.y-t.centerWorld.y,i=e.centerWorld.z-t.centerWorld.z,s=Math.sqrt(r*r+n*n+i*i);return e.radiusWorld+t.radiusWorld<s?!1:!0},ce.prototype={_update:function(e){L.TransformCoordinatesToRef(this.center,e,this.centerWorld),L.TransformNormalFromFloatsToRef(1,1,1,e,this._tempRadiusVector),this.radiusWorld=Math.max(Math.max(Math.abs(this._tempRadiusVector.x),Math.abs(this._tempRadiusVector.y)),Math.abs(this._tempRadiusVector.z))*this.radius},isInFrustum:function(e){for(var t=0;6>t;){var r=t++;if(e[r].dotCoordinate(this.centerWorld)<=-this.radiusWorld)return!1}return!0},intersectsPoint:function(e){var t=this.centerWorld.x-e.x,r=this.centerWorld.y-e.y,n=this.centerWorld.z-e.z,i=Math.sqrt(t*t+r*r+n*n);return Math.abs(this.radiusWorld-i)<.001?!1:!0},__class__:ce};var ue=t.BABYLON.IOctreeContainer=function(){};s["com.babylonhx.culling.octrees.IOctreeContainer"]=ue,ue.__name__=["com","babylonhx","culling","octrees","IOctreeContainer"],ue.prototype={__class__:ue};var fe=t.BABYLON.Octree=function(e,t,r){null==r&&(r=2),null==t&&(t=64),this.dynamicContent=[],this._maxBlockCapacity=t,this._selectionContent=new pr(1024),this._creationFunc=e,this.maxDepth=r};s["com.babylonhx.culling.octrees.Octree"]=fe,fe.__name__=["com","babylonhx","culling","octrees","Octree"],fe.__interfaces__=[ue],fe._CreateBlocks=function(e,t,r,n,i,s,o,a){o.blocks=[];for(var l=new L((t.x-e.x)/2,(t.y-e.y)/2,(t.z-e.z)/2),h=0;2>h;)for(var c=h++,u=0;2>u;)for(var f=u++,d=0;2>d;){var m=d++,_=e.add(l.multiplyByFloats(c,f,m)),p=e.add(l.multiplyByFloats(c+1,f+1,m+1)),v=new de(_,p,n,i+1,s,a);v.addEntries(r),o.blocks.push(v)}},fe.CreationFuncForMeshes=function(e,t){!e.get_isBlocked()&&e.getBoundingInfo().boundingBox.intersectsMinMax(t.get_minPoint(),t.get_maxPoint())&&t.entries.push(e)},fe.CreationFuncForSubMeshes=function(e,t){(e.get_IsGlobal()?e._mesh.getBoundingInfo():e._boundingInfo).boundingBox.intersectsMinMax(t.get_minPoint(),t.get_maxPoint())&&t.entries.push(e)},fe.prototype={update:function(e,t,r){fe._CreateBlocks(e,t,r,this._maxBlockCapacity,0,this.maxDepth,this,this._creationFunc)},addMesh:function(e){for(var t=0,r=this.blocks.length;r>t;){var n=t++,i=this.blocks[n];i.addEntry(e)}},select:function(e,t){null==t&&(t=!1),this._selectionContent.reset();for(var r=0,n=this.blocks.length;n>r;){var i=r++,s=this.blocks[i];s.select(e,this._selectionContent,t)}return t?this._selectionContent.concatArray(this.dynamicContent):this._selectionContent.concatArrayWithNoDuplicate(this.dynamicContent),this._selectionContent},intersects:function(e,t,r){null==r&&(r=!1),this._selectionContent.reset();for(var n=0,i=this.blocks.length;i>n;){var s=n++,o=this.blocks[s];o.intersects(e,t,this._selectionContent,r)}return r?this._selectionContent.concatArray(this.dynamicContent):this._selectionContent.concatArrayWithNoDuplicate(this.dynamicContent),this._selectionContent},intersectsRay:function(e){this._selectionContent.reset();for(var t=0,r=this.blocks.length;r>t;){var n=t++,i=this.blocks[n];i.intersectsRay(e,this._selectionContent)}return this._selectionContent.concatArrayWithNoDuplicate(this.dynamicContent),this._selectionContent},__class__:fe};var de=t.BABYLON.OctreeBlock=function(e,t,r,n,i,s){this._boundingVectors=function(e){var t,r;return r=new Array(8),t=r}(this),this.entries=[],this._capacity=r,this._depth=n,this._maxDepth=i,this._creationFunc=s,this._minPoint=e,this._maxPoint=t;var o=new L(e.x,e.y,e.z);this._boundingVectors[0]=o;var a=new L(t.x,t.y,t.z);this._boundingVectors[1]=a;var l=new L(e.x,e.y,e.z);this._boundingVectors[2]=l,this._boundingVectors[2].x=t.x;var h=new L(e.x,e.y,e.z);this._boundingVectors[3]=h,this._boundingVectors[3].y=t.y;var c=new L(e.x,e.y,e.z);this._boundingVectors[4]=c,this._boundingVectors[4].z=t.z;var u=new L(t.x,t.y,t.z);this._boundingVectors[5]=u,this._boundingVectors[5].z=e.z;var f=new L(t.x,t.y,t.z);this._boundingVectors[6]=f,this._boundingVectors[6].x=e.x;var d=new L(t.x,t.y,t.z);this._boundingVectors[7]=d,this._boundingVectors[7].y=e.y};s["com.babylonhx.culling.octrees.OctreeBlock"]=de,de.__name__=["com","babylonhx","culling","octrees","OctreeBlock"],de.__interfaces__=[ue],de.prototype={get_capacity:function(){return this._capacity},get_minPoint:function(){return this._minPoint},get_maxPoint:function(){return this._maxPoint},addEntry:function(e){if(null==this.blocks)this._creationFunc(e,this),this.entries.length>this.get_capacity()&&this._depth<this._maxDepth&&this.createInnerBlocks();else for(var t=0,r=this.blocks.length;r>t;){var n=t++,i=this.blocks[n];i.addEntry(e)}},addEntries:function(e){for(var t=0,r=e.length;r>t;){var n=t++,i=e[n];this.addEntry(i)}},select:function(e,t,r){if(null==r&&(r=!1),le.IsInFrustum(this._boundingVectors,e)){if(null!=this.blocks){for(var n=0,i=this.blocks.length;i>n;){var s=n++,o=this.blocks[s];o.select(e,t,r)}return}r?t.concatArray(this.entries):t.concatArrayWithNoDuplicate(this.entries);
}},intersects:function(e,t,r,n){if(null==n&&(n=!1),le.IntersectsSphere(this._minPoint,this._maxPoint,e,t)){if(null!=this.blocks){for(var i=0,s=this.blocks.length;s>i;){var o=i++,a=this.blocks[o];a.intersects(e,t,r,n)}return}n?r.concatArray(this.entries):r.concatArrayWithNoDuplicate(this.entries)}},intersectsRay:function(e,t){if(e.intersectsBoxMinMax(this._minPoint,this._maxPoint)){if(null!=this.blocks){for(var r=0,n=this.blocks.length;n>r;){var i=r++,s=this.blocks[i];s.intersectsRay(e,t)}return}t.concatArrayWithNoDuplicate(this.entries)}},createInnerBlocks:function(){fe._CreateBlocks(this._minPoint,this._maxPoint,this.entries,this._capacity,this._depth,this._maxDepth,this,this._creationFunc)},__class__:de,__properties__:{get_maxPoint:"get_maxPoint",get_minPoint:"get_minPoint",get_capacity:"get_capacity"}};var me=t.BABYLON.Layer=function(e,t,r,n,i){null==n&&(n=!0),this._vertexStrideSize=8,this._vertexDeclaration=[],this.indices=[],this.vertices=[],this.alphaBlendingMode=2,this.offset=new Mt(0,0),this.scale=new Mt(1,1),this.name=e,null!=t?this.texture=new je(t,r,!1):this.texture=null,this.isBackground=n,null==i?this.color=new Oe(1,1,1,1):this.color=i,this._scene=r,this._scene.layers.push(this),this.vertices.push(1),this.vertices.push(1),this.vertices.push(-1),this.vertices.push(1),this.vertices.push(-1),this.vertices.push(-1),this.vertices.push(1),this.vertices.push(-1),this._vertexDeclaration=[2],this._vertexBuffer=r._engine.createVertexBuffer(this.vertices),this.indices.push(0),this.indices.push(1),this.indices.push(2),this.indices.push(0),this.indices.push(2),this.indices.push(3),this._indexBuffer=r._engine.createIndexBuffer(this.indices),this._effect=this._scene._engine.createEffect("layer",["position"],["textureMatrix","color","scale","offset"],["textureSampler"],"")};s["com.babylonhx.layer.Layer"]=me,me.__name__=["com","babylonhx","layer","Layer"],me.prototype={render:function(){if(this._effect._isReady&&null!=this.texture&&this.texture.isReady()){var e=this._scene._engine;e.enableEffect(this._effect),e.setState(!1,null,null,null),this._effect.setTexture("textureSampler",this.texture),this._effect.setMatrix("textureMatrix",this.texture.getTextureMatrix()),this._effect.setFloat4("color",this.color.r,this.color.g,this.color.b,this.color.a),this._effect.setVector2("offset",this.offset),this._effect.setVector2("scale",this.scale),e.bindBuffers(this._vertexBuffer,this._indexBuffer,this._vertexDeclaration,this._vertexStrideSize,this._effect),e.setAlphaMode(this.alphaBlendingMode),e.draw(!0,0,6),0==e._alphaMode||(e._depthCullingState.set_depthMask(!0),e._alphaState.set_alphaBlend(!1),e._alphaMode=0)}},dispose:function(){null!=this._vertexBuffer&&(this._scene._engine._releaseBuffer(this._vertexBuffer),this._vertexBuffer=null),null!=this._indexBuffer&&(this._scene._engine._releaseBuffer(this._indexBuffer),this._indexBuffer=null),null!=this.texture&&(this.texture.dispose(),this.texture=null);var e=l.indexOf(this._scene.layers,this,0);this._scene.layers.splice(e,1),null!=this.onDispose&&this.onDispose()},__class__:me};var _e=t.BABYLON.LensFlare=function(e,t,r,n,i){null!=r?this.color=r:this.color=new Ge(1,1,1),this.position=t,this.size=e,null!=n?this.texture=new je(n,i.getScene(),!0):this.texture=null,this._system=i,this._system.lensFlares.push(this)};s["com.babylonhx.lensflare.LensFlare"]=_e,_e.__name__=["com","babylonhx","lensflare","LensFlare"],_e.prototype={dispose:function(){null!=this.texture&&this.texture.dispose(),l.remove(this._system.lensFlares,this)},__class__:_e};var pe=t.BABYLON.LensFlareSystem=function(e,t,r){this._isEnabled=!0,this.layerMask=268435455,this.borderLimit=300,this.lensFlares=[],this.name=e,this._scene=r,this._emitter=t,r.lensFlareSystems.push(this),this.meshesSelectionPredicate=function(e){return null!=e.get_material()&&e.isVisible&&e.isEnabled()&&e.isBlocker&&0!=(e.layerMask&r.activeCamera.layerMask)};var n=[];n.push(1),n.push(1),n.push(-1),n.push(1),n.push(-1),n.push(-1),n.push(1),n.push(-1),this._vertexDeclaration=[2],this._vertexStrideSize=8,this._vertexBuffer=r._engine.createVertexBuffer(n);var i=[];i.push(0),i.push(1),i.push(2),i.push(0),i.push(2),i.push(3),this._indexBuffer=r._engine.createIndexBuffer(i),this._effect=this._scene._engine.createEffect("lensFlare",["position"],["color","viewportMatrix"],["textureSampler"],"")};s["com.babylonhx.lensflare.LensFlareSystem"]=pe,pe.__name__=["com","babylonhx","lensflare","LensFlareSystem"],pe.prototype={get_isEnabled:function(){return this._isEnabled},set_isEnabled:function(e){return this._isEnabled=e,e},getScene:function(){return this._scene},getEmitter:function(){return this._emitter},setEmitter:function(e){this._emitter=e},getEmitterPosition:function(){return null!=this._emitter.getAbsolutePosition?this._emitter.getAbsolutePosition():this._emitter.position},computeEffectivePosition:function(e){var t=this.getEmitterPosition();return t=L.Project(t,Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this._scene._transformMatrix,e),this._positionX=t.x,this._positionY=t.y,t=L.TransformCoordinates(this.getEmitterPosition(),this._scene._viewMatrix),t.z>0&&this._positionX>e.x&&this._positionX<e.x+e.width&&this._positionY>e.y&&this._positionY<e.y+e.height?!0:!1},_isVisible:function(){if(!this._isEnabled)return!1;var e=this.getEmitterPosition(),t=e.subtract(this._scene.activeCamera.position),r=Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z);t.normalize();var n=new Ct(this._scene.activeCamera.position,t),i=this._scene.pickWithRay(n,this.meshesSelectionPredicate,!0);return!i.hit||i.distance>r},render:function(){if(!this._effect._isReady)return!1;var e=this._scene._engine,t=this._scene.activeCamera.viewport,r=t.toScreenGlobal(e);if(!this.computeEffectivePosition(r))return!1;if(!this._isVisible())return!1;var n=0,i=0;n=this._positionX<this.borderLimit+r.x?this.borderLimit+r.x-this._positionX:this._positionX>r.x+r.width-this.borderLimit?this._positionX-r.x-r.width+this.borderLimit:0,i=this._positionY<this.borderLimit+r.y?this.borderLimit+r.y-this._positionY:this._positionY>r.y+r.height-this.borderLimit?this._positionY-r.y-r.height+this.borderLimit:0;var s;s=n>i?n:i,s>this.borderLimit&&(s=this.borderLimit);var o=1-s/this.borderLimit;if(0>o)return!1;o>1&&(o=1);var a=r.x+r.width/2,l=r.y+r.height/2,h=a-this._positionX,c=l-this._positionY;e.enableEffect(this._effect),e.setState(!1,null,null,null),e._depthCullingState.set_depthTest(!1),6==e._alphaMode||(e._depthCullingState.set_depthMask(!1),e._alphaState.setAlphaBlendFunctionParameters(1,1,0,1),e._alphaState.set_alphaBlend(!0),e._alphaMode=6),e.bindBuffers(this._vertexBuffer,this._indexBuffer,this._vertexDeclaration,this._vertexStrideSize,this._effect);for(var u=0,f=this.lensFlares.length;f>u;){var d=u++,m=this.lensFlares[d],_=a-h*m.position,p=l-c*m.position,v=m.size,g=m.size*e.getAspectRatio(this._scene.activeCamera,!0),x=2*(_/r.width)-1,y=1-2*(p/r.height),b=Le.FromValues(v/2,0,0,0,0,g/2,0,0,0,0,1,0,x,y,0,1);this._effect.setMatrix("viewportMatrix",b),this._effect.setTexture("textureSampler",m.texture),this._effect.setFloat4("color",m.color.r*o,m.color.g*o,m.color.b*o,1),e.draw(!0,0,6)}return e._depthCullingState.set_depthTest(!0),0==e._alphaMode||(e._depthCullingState.set_depthMask(!0),e._alphaState.set_alphaBlend(!1),e._alphaMode=0),!0},dispose:function(){for(null!=this._vertexBuffer&&(this._scene._engine._releaseBuffer(this._vertexBuffer),this._vertexBuffer=null),null!=this._indexBuffer&&(this._scene._engine._releaseBuffer(this._indexBuffer),this._indexBuffer=null);this.lensFlares.length>0;)this.lensFlares[0].dispose();l.remove(this._scene.lensFlareSystems,this)},__class__:pe,__properties__:{get_isEnabled:"get_isEnabled"}};var ve=t.BABYLON.Light=function(e,t){this._includedOnlyMeshesIds=[],this._excludedMeshesIds=[],this.excludeWithLayerMask=0,this.excludedMeshes=[],this.includedOnlyMeshes=[],this.includeOnlyWithLayerMask=0,this.range=1/0,this.intensity=1,this.specular=new Ge(1,1,1),this.diffuse=new Ge(1,1,1),y.call(this,e,t),this._type="LIGHT",t.addLight(this)};s["com.babylonhx.lights.Light"]=ve,ve.__name__=["com","babylonhx","lights","Light"],ve.Parse=function(e,t){var r=null,n=e.type;switch(n){case 0:r=new be(e.name,L.FromArray(e.position,null),t);break;case 1:r=new xe(e.name,L.FromArray(e.direction,null),t),r.position=L.FromArray(e.position,null);break;case 2:r=new Se(e.name,L.FromArray(e.position,null),L.FromArray(e.direction,null),e.angle,e.exponent,t);break;case 3:r=new ye(e.name,L.FromArray(e.direction,null),t),r.groundColor=Ge.FromArray(e.groundColor,null)}if(r.id=e.id,Ie.AddTagsTo(r,e.tags),null!=e.intensity&&(r.intensity=e.intensity),null!=e.range&&(r.range=e.range),r.diffuse=Ge.FromArray(e.diffuse,null),r.specular=Ge.FromArray(e.specular,null),null!=e.excludedMeshesIds&&(r._excludedMeshesIds=e.excludedMeshesIds),null!=e.parentId&&(r._waitingParentId=e.parentId),null!=e.includedOnlyMeshesIds&&(r._includedOnlyMeshesIds=e.includedOnlyMeshesIds),null!=e.animations){for(var i=0,s=e.animations.length;s>i;){var o=i++,a=e.animations[o];r.animations.push(F.Parse(a))}y.ParseAnimationRanges(r,e,t)}return 1==e.autoAnimate&&t.beginAnimation(r,e.autoAnimateFrom,e.autoAnimateTo,e.autoAnimateLoop,1),r},ve.__super__=y,ve.prototype=n(y.prototype,{get_type:function(){return this._type},getShadowGenerator:function(){return this._shadowGenerator},getAbsolutePosition:function(){return new L(0,0,0)},transferToEffect:function(e,t,r){},_getWorldMatrix:function(){return Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)},canAffectMesh:function(e){return null==e?!0:this.includedOnlyMeshes.length>0&&-1==l.indexOf(this.includedOnlyMeshes,e,0)?!1:this.excludedMeshes.length>0&&-1!=l.indexOf(this.excludedMeshes,e,0)?!1:0!=this.includeOnlyWithLayerMask&&this.includeOnlyWithLayerMask!=e.layerMask?!1:0!=this.excludeWithLayerMask&&Re.__cast(this.excludeWithLayerMask&e.layerMask,Wr)?!1:!0},getWorldMatrix:function(){this._currentRenderId=this._scene._renderId;var e=this._getWorldMatrix();return null!=this.parent&&null!=this.parent.getWorldMatrix()?(null==this._parentedWorldMatrix&&(this._parentedWorldMatrix=Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)),e.multiplyToRef(this.parent.getWorldMatrix(),this._parentedWorldMatrix),this._parentRenderId=this.parent._currentRenderId,this._parentedWorldMatrix):e},dispose:function(){null!=this._shadowGenerator&&(this._shadowGenerator.dispose(),this._shadowGenerator=null),this._scene.stopAnimation(this),this._scene.removeLight(this)},serialize:function(){var e={};return e.name=this.name,e.id=this.id,e.tags=Ie.GetTags(this),e.intensity=this.intensity,e.range=this.range,e.diffuse=this.diffuse.asArray(),e.specular=this.specular.asArray(),e},__class__:ve,__properties__:{get_type:"get_type"}});var ge=t.BABYLON.IShadowLight=function(){};s["com.babylonhx.lights.IShadowLight"]=ge,ge.__name__=["com","babylonhx","lights","IShadowLight"],ge.prototype={__class__:ge};var xe=t.BABYLON.DirectionalLight=function(e,t,r){this._orthoBottom=1/0,this._orthoTop=-(1/0),this._orthoRight=-(1/0),this._orthoLeft=1/0,this.autoUpdateExtends=!0,this.shadowOrthoScale=.5,ve.call(this,e,r),this._type="DIRLIGHT",this.direction=t,this.position=new L(-1*t.x,-1*t.y,-1*t.z)};s["com.babylonhx.lights.DirectionalLight"]=xe,xe.__name__=["com","babylonhx","lights","DirectionalLight"],xe.__interfaces__=[ge],xe.__super__=ve,xe.prototype=n(ve.prototype,{getAbsolutePosition:function(){return null!=this.transformedPosition?this.transformedPosition:this.position},setDirectionToTarget:function(e){return this.direction=L.Normalize(e.subtract(this.position)),this.direction},setShadowProjectionMatrix:function(e,t,r){var n=this._scene.activeCamera;if(this.autoUpdateExtends||this._orthoLeft==1/0){var i=new L(0,0,0);this._orthoLeft=1/0,this._orthoRight=-(1/0),this._orthoTop=-(1/0),this._orthoBottom=1/0;for(var s=0,o=r.length;o>s;){var a=s++,l=r[a];if(null!=l){var h=l.getBoundingInfo();if(null!=h)for(var c=h.boundingBox,u=0,f=c.vectorsWorld.length;f>u;){var d=u++;L.TransformCoordinatesToRef(c.vectorsWorld[d],t,i),i.x<this._orthoLeft&&(this._orthoLeft=i.x),i.y<this._orthoBottom&&(this._orthoBottom=i.y),i.x>this._orthoRight&&(this._orthoRight=i.x),i.y>this._orthoTop&&(this._orthoTop=i.y)}}}}var m=this._orthoRight-this._orthoLeft,_=this._orthoTop-this._orthoBottom;Le.OrthoOffCenterLHToRef(this._orthoLeft-m*this.shadowOrthoScale,this._orthoRight+m*this.shadowOrthoScale,this._orthoBottom-_*this.shadowOrthoScale,this._orthoTop+_*this.shadowOrthoScale,-n.maxZ,n.maxZ,e)},supportsVSM:function(){return!0},needRefreshPerFrame:function(){return!0},needCube:function(){return!1},getShadowDirection:function(e){return this.direction},computeTransformedPosition:function(){return null!=this.parent&&null!=(Br=this.parent,i(Br,Br.getWorldMatrix))?(null==this.transformedPosition&&(this.transformedPosition=new L(0,0,0)),L.TransformCoordinatesToRef(this.position,this.parent.getWorldMatrix(),this.transformedPosition),!0):!1},transferToEffect:function(e,t,r){return null!=this.parent&&null!=(Br=this.parent,i(Br,Br.getWorldMatrix))?(null==this._transformedDirection&&(this._transformedDirection=new L(0,0,0)),L.TransformNormalToRef(this.direction,this.parent.getWorldMatrix(),this._transformedDirection),void e.setFloat4(t,this._transformedDirection.x,this._transformedDirection.y,this._transformedDirection.z,1)):void e.setFloat4(t,this.direction.x,this.direction.y,this.direction.z,1)},_getWorldMatrix:function(){return null==this._worldMatrix&&(this._worldMatrix=Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)),Le.TranslationToRef(this.position.x,this.position.y,this.position.z,this._worldMatrix),this._worldMatrix},__class__:xe});var ye=t.BABYLON.HemisphericLight=function(e,t,r){this.groundColor=new Ge(0,0,0),ve.call(this,e,r),this._type="HEMILIGHT",this.direction=t};s["com.babylonhx.lights.HemisphericLight"]=ye,ye.__name__=["com","babylonhx","lights","HemisphericLight"],ye.__super__=ve,ye.prototype=n(ve.prototype,{setDirectionToTarget:function(e){return this.direction=L.Normalize(e.subtract(new L(0,0,0))),this.direction},getShadowGenerator:function(){return null},transferToEffect:function(e,t,r){ye.normalizeDirection=L.Normalize(this.direction),e.setFloat4(t,ye.normalizeDirection.x,ye.normalizeDirection.y,ye.normalizeDirection.z,0),e.setColor3(r,this.groundColor.scale(this.intensity))},_getWorldMatrix:function(){return null==this._worldMatrix&&(this._worldMatrix=Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)),this._worldMatrix},__class__:ye});var be=t.BABYLON.PointLight=function(e,t,r){ve.call(this,e,r),this._type="POINTLIGHT",this.position=t};s["com.babylonhx.lights.PointLight"]=be,be.__name__=["com","babylonhx","lights","PointLight"],be.__interfaces__=[ge],be.__super__=ve,be.prototype=n(ve.prototype,{getAbsolutePosition:function(){return null!=this.transformedPosition?this.transformedPosition:this.position},computeTransformedPosition:function(){return null!=this.parent&&null!=this.parent.getWorldMatrix()?(null==this.transformedPosition&&(this.transformedPosition=new L(0,0,0)),L.TransformCoordinatesToRef(this.position,this.parent.getWorldMatrix(),this.transformedPosition),!0):!1},transferToEffect:function(e,t,r){return null!=this.parent&&null!=this.parent.getWorldMatrix()?(this.computeTransformedPosition(),void e.setFloat4(t,this.transformedPosition.x,this.transformedPosition.y,this.transformedPosition.z,0)):void e.setFloat4(t,this.position.x,this.position.y,this.position.z,0)},needCube:function(){return!0},supportsVSM:function(){return!1},needRefreshPerFrame:function(){return!1},getShadowDirection:function(e){if(null!=e)switch(e){case 0:return new L(1,0,0);case 1:return new L(-1,0,0);case 2:return new L(0,-1,0);case 3:return new L(0,1,0);case 4:return new L(0,0,1);case 5:return new L(0,0,-1)}return new L(0,0,0)},setShadowProjectionMatrix:function(e,t,r){var n=this._scene.activeCamera;Le.PerspectiveFovLHToRef(Math.PI/2,1,n.minZ,n.maxZ,e)},_getWorldMatrix:function(){return null==this._worldMatrix&&(this._worldMatrix=Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)),Le.TranslationToRef(this.position.x,this.position.y,this.position.z,this._worldMatrix),this._worldMatrix},__class__:be});var Se=t.BABYLON.SpotLight=function(e,t,r,n,i,s){ve.call(this,e,s),this._type="SPOTLIGHT",this.position=t,this.direction=r,this.angle=n,this.exponent=i};s["com.babylonhx.lights.SpotLight"]=Se,Se.__name__=["com","babylonhx","lights","SpotLight"],Se.__interfaces__=[ge],Se.__super__=ve,Se.prototype=n(ve.prototype,{getAbsolutePosition:function(){return null!=this.transformedPosition?this.transformedPosition:this.position},setShadowProjectionMatrix:function(e,t,r){var n=this._scene.activeCamera;Le.PerspectiveFovLHToRef(this.angle,1,n.minZ,n.maxZ,e)},needCube:function(){return!1},supportsVSM:function(){return!0},needRefreshPerFrame:function(){return!1},getShadowDirection:function(e){return this.direction},setDirectionToTarget:function(e){return this.direction=L.Normalize(e.subtract(this.position)),this.direction},computeTransformedPosition:function(){return null!=this.parent&&null!=this.parent.getWorldMatrix()?(null==this.transformedPosition&&(this.transformedPosition=new L(0,0,0)),L.TransformCoordinatesToRef(this.position,this.parent.getWorldMatrix(),this.transformedPosition),!0):!1},transferToEffect:function(e,t,r){var n=new L(0,0,0);if(null!=this.parent&&null!=this.parent.getWorldMatrix()){null==this._transformedDirection&&(this._transformedDirection=new L(0,0,0)),this.computeTransformedPosition();var i=this.parent.getWorldMatrix();L.TransformNormalToRef(this.direction,i,this._transformedDirection),e.setFloat4(t,this.transformedPosition.x,this.transformedPosition.y,this.transformedPosition.z,this.exponent),n=L.Normalize(this._transformedDirection)}else e.setFloat4(t,this.position.x,this.position.y,this.position.z,this.exponent),n=L.Normalize(this.direction);e.setFloat4(r,n.x,n.y,n.z,Math.cos(.5*this.angle))},_getWorldMatrix:function(){return null==this._worldMatrix&&(this._worldMatrix=Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)),Le.TranslationToRef(this.position.x,this.position.y,this.position.z,this._worldMatrix),this._worldMatrix},__class__:Se});var we=t.BABYLON.ShadowGenerator=function(e,t){this._currentFaceIndexCache=0,this._currentFaceIndex=0,this._worldViewProjection=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._transformMatrix=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._projectionMatrix=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._viewMatrix=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._transparencyShadow=!1,this._darkness=0,this.forceBackFacesOnly=!1,this._lightDirection=new L(0,0,0),this._bias=5e-5,this._blurBoxOffset=0,this.blurScale=2,this._filter=we.FILTER_NONE;var r=this;this._light=t,this._scene=t.getScene(),this._mapSize=e,t._shadowGenerator=this,this._shadowMap=new qe(t.name+"_shadowMap",e,this._scene,!1,!0,0,t.needCube()),this._shadowMap.wrapU=0,this._shadowMap.wrapV=0,this._shadowMap.anisotropicFilteringLevel=1,this._shadowMap.updateSamplingMode(1),this._shadowMap.renderParticles=!1,this._shadowMap.onBeforeRender=function(e){r._currentFaceIndex=e},this._shadowMap.onAfterUnbind=function(){r.get_useBlurVarianceShadowMap()&&(null==r._shadowMap2&&(r._shadowMap2=new qe(t.name+"_shadowMap",e,r._scene,!1),r._shadowMap2.wrapU=0,r._shadowMap2.wrapV=0,r._shadowMap2.updateSamplingMode(3),r._downSamplePostprocess=new ot("downScale",1/r.blurScale,null,2,r._scene._engine),r._downSamplePostprocess.onApply=function(e){e._engine.setTexture(l.indexOf(e._samplers,"textureSampler",0),r._shadowMap)},r.set_blurBoxOffset(1)),r._scene.postProcessManager.directRender([r._downSamplePostprocess,r._boxBlurPostprocess],r._shadowMap2.getInternalTexture()))};var n=function(e){var t=e._renderingMesh,n=r._scene,i=n._engine;i.setState(e.getMaterial().backFaceCulling,null,null,null);var s=t._getInstancesRenderList(e._id);if(!s.mustReturn){var o=null!=i.getCaps().instancedArrays&&null!=s.visibleInstances[e._id];if(r.isReady(e,o)){i.enableEffect(r._effect),t._bind(e,r._effect,0);var a=e.getMaterial();if(r._effect.setMatrix("viewProjection",r.getTransformMatrix()),r._effect.setVector3("lightPosition",r.getLight().position),r.getLight().needCube()&&r._effect.setFloat2("depthValues",n.activeCamera.minZ,n.activeCamera.maxZ),null!=a&&a.needAlphaTesting()){var l=a.getAlphaTestTexture();r._effect.setTexture("diffuseSampler",l),r._effect.setMatrix("diffuseMatrix",l.getTextureMatrix())}t.get_useBones()&&t.computeBonesUsingShaders&&r._effect.setMatrices("mBones",t.get_skeleton().getTransformMatrices()),r.forceBackFacesOnly&&i.setState(!0,0,!1,!0),t._processRendering(e,r._effect,0,s,o,function(e,t){r._effect.setMatrix("world",t)}),r.forceBackFacesOnly&&i.setState(!0,0,!1,!1)}else r._shadowMap.resetRefreshCounter()}};this._shadowMap.customRenderFunction=function(e,t,i){for(var s=0,o=e.length;o>s;){var a=s++;n(e.data[a])}for(var l=0,h=t.length;h>l;){var c=l++;n(t.data[c])}if(r._transparencyShadow)for(var u=0,f=i.length;f>u;){var d=u++;n(i.data[d])}},this._shadowMap.onClear=function(e){r.get_useBlurVarianceShadowMap()||r.get_useVarianceShadowMap()?e.clear(new Oe(0,0,0,0),!0,!0):e.clear(new Oe(1,1,1,1),!0,!0)}};s["com.babylonhx.lights.shadows.ShadowGenerator"]=we,we.__name__=["com","babylonhx","lights","shadows","ShadowGenerator"],we.Parse=function(e,t){for(var r=t.getLightByID(e.lightId),n=new we(e.mapSize,r),i=0,s=e.renderList.length;s>i;){var o=i++,a=t.getMeshByID(e.renderList[o]);n.getShadowMap().renderList.push(a)}return 1==e.usePoissonSampling?n.set_usePoissonSampling(!0):1==e.useVarianceShadowMap?n.set_useVarianceShadowMap(!0):1==e.useBlurVarianceShadowMap&&(n.set_useBlurVarianceShadowMap(!0),null!=e.blurScale&&(n.blurScale=e.blurScale),null!=e.blurBoxOffset&&n.set_blurBoxOffset(e.blurBoxOffset)),null!=e.bias&&n.set_bias(e.bias),n.forceBackFacesOnly=e.forceBackFacesOnly,n},we.prototype={get_bias:function(){return this._bias},set_bias:function(e){return this._bias=e,e},get_blurBoxOffset:function(){return this._blurBoxOffset},set_blurBoxOffset:function(e){var t=this;return this._blurBoxOffset==e?e:(this._blurBoxOffset=e,null!=this._boxBlurPostprocess&&this._boxBlurPostprocess.dispose(),this._boxBlurPostprocess=new st("DepthBoxBlur","depthBoxBlur",["screenSize","boxOffset"],[],1/this.blurScale,null,2,this._scene._engine,!1,"#define OFFSET "+e),this._boxBlurPostprocess.onApply=function(e){e.setFloat2("screenSize",t._mapSize/t.blurScale,t._mapSize/t.blurScale)},e)},get_filter:function(){return this._filter},set_filter:function(e){return this._filter==e?e:(this._filter=e,this.get_useVarianceShadowMap()||this.get_useBlurVarianceShadowMap()||this.get_usePoissonSampling()?(this._shadowMap.anisotropicFilteringLevel=16,this._shadowMap.updateSamplingMode(3)):(this._shadowMap.anisotropicFilteringLevel=1,this._shadowMap.updateSamplingMode(1)),e)},get_useVarianceShadowMap:function(){return this.get_filter()==we.FILTER_VARIANCESHADOWMAP&&this._light.supportsVSM()},set_useVarianceShadowMap:function(e){return this.set_filter(e?we.FILTER_VARIANCESHADOWMAP:we.FILTER_NONE),e},get_usePoissonSampling:function(){return this.get_filter()==we.FILTER_POISSONSAMPLING||!this._light.supportsVSM()&&(this.get_filter()==we.FILTER_VARIANCESHADOWMAP||this.get_filter()==we.FILTER_BLURVARIANCESHADOWMAP)},set_usePoissonSampling:function(e){return this.set_filter(e?we.FILTER_POISSONSAMPLING:we.FILTER_NONE),e},get_useBlurVarianceShadowMap:function(){return this.get_filter()==we.FILTER_BLURVARIANCESHADOWMAP&&this._light.supportsVSM()},set_useBlurVarianceShadowMap:function(e){return this.set_filter(e?we.FILTER_BLURVARIANCESHADOWMAP:we.FILTER_NONE),e},isReady:function(e,t){var r=[];(this.get_useVarianceShadowMap()||this.get_useBlurVarianceShadowMap())&&r.push("#define VSM"),this.getLight().needCube()&&r.push("#define CUBEMAP");var n=["position"],i=e._mesh,s=e.getMaterial();null!=s&&s.needAlphaTesting()&&(r.push("#define ALPHATEST"),i.isVerticesDataPresent("uv")&&(n.push("uv"),r.push("#define UV1")),i.isVerticesDataPresent("uv2")&&(n.push("uv2"),r.push("#define UV2"))),i.get_useBones()&&i.computeBonesUsingShaders?(n.push("matricesIndices"),n.push("matricesWeights"),i.numBoneInfluencers>4&&(n.push("matricesIndicesExtra"),n.push("matricesWeightsExtra")),r.push("#define NUM_BONE_INFLUENCERS "+i.numBoneInfluencers),r.push("#define BonesPerMesh "+(i.get_skeleton().bones.length+1))):r.push("#define NUM_BONE_INFLUENCERS 0"),t&&(r.push("#define INSTANCES"),n.push("world0"),n.push("world1"),n.push("world2"),n.push("world3"));var o=r.join("\n");return this._cachedDefines!=o&&(this._cachedDefines=o,this._effect=this._scene._engine.createEffect("shadowMap",n,["world","mBones","viewProjection","diffuseMatrix","lightPosition","depthValues"],["diffuseSampler"],o)),this._effect._isReady},getShadowMap:function(){return this._shadowMap},getShadowMapForRendering:function(){return null!=this._shadowMap2?this._shadowMap2:this._shadowMap},getLight:function(){return this._light},getTransformMatrix:function(){var e=this._scene;if(this._currentRenderID==e._renderId&&this._currentFaceIndexCache==this._currentFaceIndex)return this._transformMatrix;this._currentRenderID=e._renderId;var t=this._light.position;return L.NormalizeToRef(this._light.getShadowDirection(this._currentFaceIndex),this._lightDirection),1==Math.abs(L.Dot(this._lightDirection,new L(0,1,0)))&&(this._lightDirection.z=1e-13),this._light.computeTransformedPosition()&&(t=this._light.transformedPosition),!this._light.needRefreshPerFrame()&&null!=this._cachedPosition&&null!=this._cachedDirection&&t.equals(this._cachedPosition)&&this._lightDirection.equals(this._cachedDirection)||(this._cachedPosition=new L(t.x,t.y,t.z),this._cachedDirection=this._lightDirection.clone(),Le.LookAtLHToRef(t,t.add(this._lightDirection),new L(0,1,0),this._viewMatrix),this._light.setShadowProjectionMatrix(this._projectionMatrix,this._viewMatrix,this.getShadowMap().renderList),this._viewMatrix.multiplyToRef(this._projectionMatrix,this._transformMatrix)),this._transformMatrix},getDarkness:function(){return this._darkness},setDarkness:function(e){e>=1?this._darkness=1:0>=e?this._darkness=0:this._darkness=e},setTransparencyShadow:function(e){this._transparencyShadow=e},_packHalf:function(e){var t=255*e,r=t-Math.floor(t);return new Mt(e-r/255,r)},dispose:function(){this._shadowMap.dispose(),null!=this._shadowMap2&&this._shadowMap2.dispose(),null!=this._downSamplePostprocess&&this._downSamplePostprocess.dispose(),null!=this._boxBlurPostprocess&&this._boxBlurPostprocess.dispose()},serialize:function(){var e={};e.lightId=this._light.id,e.mapSize=this.getShadowMap().getRenderSize(),e.useVarianceShadowMap=this.get_useVarianceShadowMap(),e.usePoissonSampling=this.get_usePoissonSampling(),e.forceBackFacesOnly=this.forceBackFacesOnly,e.renderList=[];for(var t=0,r=this.getShadowMap().renderList.length;r>t;){var n=t++,i=this.getShadowMap().renderList[n];e.renderList.push(i.id)}return e},__class__:we,__properties__:{set_useBlurVarianceShadowMap:"set_useBlurVarianceShadowMap",get_useBlurVarianceShadowMap:"get_useBlurVarianceShadowMap",set_usePoissonSampling:"set_usePoissonSampling",get_usePoissonSampling:"get_usePoissonSampling",set_useVarianceShadowMap:"set_useVarianceShadowMap",get_useVarianceShadowMap:"get_useVarianceShadowMap",set_filter:"set_filter",get_filter:"get_filter",set_blurBoxOffset:"set_blurBoxOffset",get_blurBoxOffset:"get_blurBoxOffset",set_bias:"set_bias",get_bias:"get_bias"}};var Ce=t.BABYLON.SceneLoader=function(){};s["com.babylonhx.loading.SceneLoader"]=Ce,Ce.__name__=["com","babylonhx","loading","SceneLoader"],Ce._getPluginForFilename=function(e){var t=e.lastIndexOf("."),r=e.indexOf("?");-1==r&&(r=e.length);var n=e.substring(t,r).toLowerCase();if(".babylon"==n)return ht.get_plugin();for(var i=0,s=Ce._registeredPlugins.length;s>i;){var o=i++,a=Ce._registeredPlugins[o];if(-1!=a.extensions.indexOf(n))return a}return Ce._registeredPlugins[Ce._registeredPlugins.length-1]},Ce.RegisterPlugin=function(e){e.extensions=e.extensions.toLowerCase(),Ce._registeredPlugins.push(e)},Ce.ImportMesh=function(t,r,n,i,s,o,a){var h=function(){var o=Ce._getPluginForFilename(n);if(null==o){var h=n.lastIndexOf("."),c=n.indexOf("?"),u=n.substring(h,c).toLowerCase();throw e.log("Error: No plugin loaded for '"+u+"' file type !"),new Ar("No plugin loaded for '"+u+"' file type !")}var f=function(l){var h=[],c=[],u=[];try{if(!o.importMesh(t,i,l,r,h,c,u))return void(null!=a&&a(i,"unable to load the scene"))}catch(f){return f instanceof Ar&&(f=f.val),e.log(f),void(null!=a&&a(i,f))}null!=s&&(i.importedMeshesFiles.push(r+n),s(h,c,u))};return"data:"==l.substr(n,0,5)?void f(l.substr(n,5,null)):void Ae.LoadFile(r+n,function(l){var h=[],c=[],u=[];try{if(!o.importMesh(t,i,l,r,h,c,u))return void(null!=a&&a(i,"unable to load the scene"))}catch(f){return f instanceof Ar&&(f=f.val),e.log(f),void(null!=a&&a(i,f))}null!=s&&(i.importedMeshesFiles.push(r+n),s(h,c,u))})};h()},Ce.Load=function(e,t,r,n,i,s){Ce.Append(e,t,new b(r),n,i,s)},Ce.Append=function(e,t,r,n,i,s){var o=Ce._getPluginForFilename(null!=t.name?t.name:t),a=function(t){return o.load(r,t,e)?void(null!=n&&n(r)):void(null!=s&&s(r))};return Ae.LoadFile(e+u.string(t),a),"data:"==t.substr(0,5)?void a(t.substr(5)):void 0};var Te=t.BABYLON.IGetSetVerticesData=function(){};s["com.babylonhx.mesh.IGetSetVerticesData"]=Te,Te.__name__=["com","babylonhx","mesh","IGetSetVerticesData"],Te.prototype={__class__:Te};var Me=t.BABYLON.Geometry=function(e,t,r,n,i){null==n&&(n=!1),this._softwareSkinningRenderId=0,this._delayInfo=[],this._isDisposed=!1,this._totalVertices=0,this.delayLoadState=0,this.id=e,this._engine=t._engine,this._meshes=[],this._scene=t,this._vertexBuffers=new Er,this._indices=[],null!=r?this.setAllVerticesData(r,n):this._totalVertices=0,null!=i&&(this.applyToMesh(i),i.computeWorldMatrix(!0))};s["com.babylonhx.mesh.Geometry"]=Me,Me.__name__=["com","babylonhx","mesh","Geometry"],Me.__interfaces__=[Te],Me.ExtractFromMesh=function(e,t){var r=e._geometry;return null==r?null:r.copy(t)},Me.RandomId=function(e){null==e&&(e=32);for(var t=Me.UID_CHARS.length,r=new f,n=0;e>n;){n++;r.add(Me.UID_CHARS.charAt(u["int"](Math.random()*t)))}return r.b},Me.ImportGeometry=function(e,t){var r=t._scene,n=e.geometryId;if(null!=n){var i=r.getGeometryByID(n);null!=i&&i.applyToMesh(t)}if(null!=e.positions&&null!=e.normals&&null!=e.indices){if(t.setVerticesData("position",e.positions,!1),t.setVerticesData("normal",e.normals,!1),null!=e.uvs&&t.setVerticesData("uv",e.uvs,!1),null!=e.uvs2&&t.setVerticesData("uv2",e.uvs2,!1),null!=e.uvs3&&t.setVerticesData("uv3",e.uvs3,!1),null!=e.uvs4&&t.setVerticesData("uv4",e.uvs4,!1),null!=e.uvs5&&t.setVerticesData("uv5",e.uvs5,!1),null!=e.uvs6&&t.setVerticesData("uv6",e.uvs6,!1),null!=e.colors&&t.setVerticesData("color",Oe.CheckColors4(e.colors,e.positions.length/3|0),!1),null!=e.matricesIndices)if(e.matricesIndices._isExpanded)e.matricesIndices._isExpanded=null,t.setVerticesData("matricesIndices",e.matricesIndices,!1);else{for(var s=[],o=0,a=e.matricesIndices.length;a>o;){var l=o++,h=e.matricesIndices[l];s.push(255&h),s.push((65280&h)>>8),s.push((16711680&h)>>16),s.push(h>>24)}t.setVerticesData("matricesIndices",s,!1)}if(null!=e.matricesIndicesExtra)if(e.matricesIndicesExtra._isExpanded)e.matricesIndices._isExpanded=null,t.setVerticesData("matricesIndicesExtra",e.matricesIndicesExtra,!1);else{for(var c=[],u=0,f=e.matricesIndicesExtra.length;f>u;){var d=u++,m=e.matricesIndicesExtra[d];c.push(255&m),c.push((65280&m)>>8),c.push((16711680&m)>>16),c.push(m>>24)}t.setVerticesData("matricesIndicesExtra",c,!1)}null!=e.matricesWeights&&t.setVerticesData("matricesWeights",e.matricesWeights,!1),null!=e.matricesWeightsExtra&&t.setVerticesData("matricesWeightsExtra",e.matricesWeightsExtra,!1),t.setIndices(e.indices)}if(null!=e.subMeshes){t.subMeshes=[];for(var _=0,p=e.subMeshes.length;p>_;){var v=_++,g=e.subMeshes[v];new rt(g.materialIndex,g.verticesStart,g.verticesCount,g.indexStart,g.indexCount,t)}}t._shouldGenerateFlatShading&&(t.convertToFlatShadedMesh(),t._shouldGenerateFlatShading=!1),t.computeWorldMatrix(!0),
null!=r.get_SelectionOctree()&&r.get_SelectionOctree().addMesh(t)},Me.ParseGeometry=function(e,t,r){if(null==r&&(r=""),null!=t.getGeometryByID(e.id))return null;var n=new Me(e.id,t);return Ie.AddTagsTo(n,e.tags),null!=e.delayLoadingFile&&""!=e.delayLoadingFile?(n.delayLoadState=4,n.delayLoadingFile=r+u.string(e.delayLoadingFile),n._boundingInfo=new he(L.FromArray(e.boundingBoxMinimum,null),L.FromArray(e.boundingBoxMaximum,null)),n._delayInfo=[],1==e.hasUVs&&n._delayInfo.push("uv"),1==e.hasUVs2&&n._delayInfo.push("uv2"),1==e.hasUVs3&&n._delayInfo.push("uv3"),1==e.hasUVs4&&n._delayInfo.push("uv4"),1==e.hasUVs5&&n._delayInfo.push("uv5"),1==e.hasUVs6&&n._delayInfo.push("uv6"),1==e.hasColors&&n._delayInfo.push("color"),1==e.hasMatricesIndices&&n._delayInfo.push("matricesIndices"),1==e.hasMatricesWeights&&n._delayInfo.push("matricesWeights"),n._delayLoadingFunction=Fe.ImportVertexData):Fe.ImportVertexData(e,n),t.pushGeometry(n,!0),n},Me.prototype={get_extend:function(){return this._extend},getScene:function(){return this._scene},getEngine:function(){return this._engine},isReady:function(){return 1==this.delayLoadState||0==this.delayLoadState},setAllVerticesData:function(e,t){null==t&&(t=!1),e.applyToGeometry(this,t),this.notifyUpdate()},setVerticesData:function(e,t,r,n){null==r&&(r=!1),this._vertexBuffers.exists(e)&&this._vertexBuffers.get(e).dispose();var i=new Ft(this._engine,t,e,r,0==this._meshes.length,n);if(this._vertexBuffers.set(e,i),"position"==e){n=this._vertexBuffers.get(e).getStrideSize(),this._totalVertices=t.length/n,this._extend=Ae.ExtractMinAndMax(t,0,this._totalVertices);for(var s=this._meshes,o=s.length,a=0;o>a;){var l=a++,h=s[l];h._positions=null,h._boundingInfo=new he(this._extend.minimum,this._extend.maximum),h._createGlobalSubMesh(),h.computeWorldMatrix(!0)}}this.notifyUpdate()},updateVerticesDataDirectly:function(e,t,r){var n=this.getVertexBuffer(e);null!=n&&(n.updateDirectly(t,r),this.notifyUpdate())},updateVerticesData:function(e,t,r,n){null==n&&(n=!1),null==r&&(r=!1);var i=this.getVertexBuffer(e);if(null!=i){if(i.create(t),"position"==e){var s=i._strideSize;this._totalVertices=t.length/s,r&&(this._extend=Ae.ExtractMinAndMax(t,0,this._totalVertices));for(var o=this._meshes,a=o.length,l=0;a>l;){var h=l++,c=o[h];if(c._positions=null,r){c._boundingInfo=new he(this._extend.minimum,this._extend.maximum);for(var u=0,f=c.subMeshes.length;f>u;){var d=u++,m=c.subMeshes[d];m.refreshBoundingInfo()}}}}this.notifyUpdate()}},getTotalVertices:function(){return 1!=this.delayLoadState&&0!=this.delayLoadState?0:this._totalVertices},getVerticesData:function(e,t){null==t&&(t=!1);var r=this.getVertexBuffer(e);if(null==r)return null;var n=r._data;if(t&&1!=this._meshes.length){for(var i=n.length,s=[],o=0;i>o;){var a=o++;s.push(n[a])}return s}return n},getVertexBuffer:function(e){return 1!=this.delayLoadState&&0!=this.delayLoadState?null:this._vertexBuffers.get(e)},getVertexBuffers:function(){return 1!=this.delayLoadState&&0!=this.delayLoadState?null:this._vertexBuffers},isVerticesDataPresent:function(e){return null==this._vertexBuffers?null!=this._delayInfo?-1!=l.indexOf(this._delayInfo,e,0):!1:null!=this._vertexBuffers.get(e)},getVerticesDataKinds:function(){var e=[];if(null==this._vertexBuffers&&null!=this._delayInfo)for(var t=0,r=this._delayInfo;t<r.length;){var n=r[t];++t,e.push(n)}else for(var i=this._vertexBuffers.keys();i.hasNext();){var s=i.next();e.push(s)}return e},setIndices:function(e,t){null==t&&(t=-1),null!=this._indexBuffer&&this._engine._releaseBuffer(this._indexBuffer),this._indices=e,0!=this._meshes.length&&null!=this._indices&&(this._indexBuffer=this._engine.createIndexBuffer(this._indices)),-1!=t&&(this._totalVertices=t);for(var r=this._meshes,n=r.length,i=0;n>i;){var s=i++;r[s]._createGlobalSubMesh()}this.notifyUpdate()},getTotalIndices:function(){return 1!=this.delayLoadState&&0!=this.delayLoadState?0:this._indices.length},getIndices:function(e){if(null==e&&(e=!1),1!=this.delayLoadState&&0!=this.delayLoadState)return null;var t=this._indices;if(e&&1!=this._meshes.length){for(var r=t.length,n=[],i=0;r>i;){var s=i++;n.push(t[s])}return n}return t},getIndexBuffer:function(){return 1!=this.delayLoadState&&0!=this.delayLoadState?null:this._indexBuffer},releaseForMesh:function(e,t){null==t&&(t=!1);var r=this._meshes,n=l.indexOf(r,e,0);if(-1!=n){for(var i=this._vertexBuffers.keys();i.hasNext();){var s=i.next();this._vertexBuffers.get(s).dispose()}null!=this._indexBuffer&&this._engine._releaseBuffer(this._indexBuffer)&&(this._indexBuffer=null),r.splice(n,1),e._geometry=null,0==r.length&&t&&this.dispose()}},applyToMesh:function(e){if(e._geometry!=this){var t=e._geometry;null!=t&&t.releaseForMesh(e);var r=this._meshes;e._geometry=this,this._scene.pushGeometry(this),r.push(e),1==this.delayLoadState||0==this.delayLoadState?this._applyToMesh(e):e._boundingInfo=this._boundingInfo}},_applyToMesh:function(e){for(var t=this._meshes.length,r=this._vertexBuffers.keys();r.hasNext();){var n=r.next();1==t&&this._vertexBuffers.get(n).create(),this._vertexBuffers.get(n)._buffer.references=t,"position"==n&&(e._positions=null,null==this._extend&&(this._extend=Ae.ExtractMinAndMax(this._vertexBuffers.get(n).getData(),0,this._totalVertices)),e._boundingInfo=new he(this._extend.minimum,this._extend.maximum),e._createGlobalSubMesh(),null==e._boundingInfo?e._boundingInfo=new he(e.get_absolutePosition(),e.get_absolutePosition()):e._boundingInfo=e._boundingInfo,e._boundingInfo._update(e.get_worldMatrixFromCache()),e._updateSubMeshesBoundingInfo(e.get_worldMatrixFromCache()))}1==t&&null!=this._indices&&(this._indexBuffer=this._engine.createIndexBuffer(this._indices)),null!=this._indexBuffer&&(this._indexBuffer.references=t)},notifyUpdate:function(e){null!=this.onGeometryUpdated&&this.onGeometryUpdated(this,e)},load:function(e,t){if(2!=this.delayLoadState){if(1==this.delayLoadState||0==this.delayLoadState)return void(null!=t&&t());this.delayLoadState=2,e._addPendingData(this)}},isDisposed:function(){return this._isDisposed},dispose:function(){for(var e=this._meshes,t=e.length,r=0;t>r;){var n=r++;this.releaseForMesh(e[n])}this._meshes=[];for(var i=this._vertexBuffers.keys();i.hasNext();){var s=i.next();this._vertexBuffers.get(s).dispose()}this._vertexBuffers=new Er,this._totalVertices=0,null!=this._indexBuffer&&this._engine._releaseBuffer(this._indexBuffer),this._indexBuffer=null,this._indices=[],this.delayLoadState=0,this.delayLoadingFile=null,this._delayLoadingFunction=null,this._delayInfo=[],this._boundingInfo=null,this._scene.removeGeometry(this),this._isDisposed=!0},copy:function(e){var t=new Fe;t.indices=[];for(var r=this.getIndices(),n=0,i=r.length;i>n;){var s=n++;t.indices.push(r[s])}for(var o=!1,a=!1,l=this._vertexBuffers.keys();l.hasNext();){var h=l.next();t.set(function(e){var t,r=e.getVerticesData(h);return t=r.slice()}(this),h),a||(o=this.getVertexBuffer(h).isUpdatable(),a=!o)}var c=new Me(e,this._scene,t,o,null);c.delayLoadState=this.delayLoadState,c.delayLoadingFile=this.delayLoadingFile,c._delayLoadingFunction=this._delayLoadingFunction;for(var u=0,f=this._delayInfo;u<f.length;){var d=f[u];++u,null!=c._delayInfo?c._delayInfo=c._delayInfo:c._delayInfo=[],c._delayInfo.push(d)}return c._boundingInfo=new he(this._extend.minimum,this._extend.maximum),c},__class__:Me,__properties__:{get_extend:"get_extend"}};var Pe=t.BABYLON._Primitive=function(e,t,r,n,i){null==n&&(n=!1),this._beingRegenerated=!0,this._canBeRegenerated=n,Me.call(this,e,t,r,!1,i),this._beingRegenerated=!1};s["com.babylonhx.mesh.primitives._Primitive"]=Pe,Pe.__name__=["com","babylonhx","mesh","primitives","_Primitive"],Pe.__super__=Me,Pe.prototype=n(Me.prototype,{canBeRegenerated:function(){return this._canBeRegenerated},regenerate:function(){this._canBeRegenerated&&(this._beingRegenerated=!0,this.setAllVerticesData(this._regenerateVertexData(),!1),this._beingRegenerated=!1)},asNewGeometry:function(e){return Me.prototype.copy.call(this,e)},setAllVerticesData:function(e,t){null==t&&(t=!1),this._beingRegenerated&&Me.prototype.setAllVerticesData.call(this,e,!1)},setVerticesData:function(e,t,r,n){null==r&&(r=!1),this._beingRegenerated&&Me.prototype.setVerticesData.call(this,e,t,!1,n)},_regenerateVertexData:function(){throw new Ar("Abstract method")},copy:function(e){throw new Ar("Must be overriden in sub-classes.")},__class__:Pe});var Ee=t.BABYLON.Box=function(e,t,r,n,i,s){null==s&&(s=0),this.size=r,this.side=s,Pe.call(this,e,t,this._regenerateVertexData(),n,i)};s["com.babylonhx.mesh.primitives.Box"]=Ee,Ee.__name__=["com","babylonhx","mesh","primitives","Box"],Ee.ParseBox=function(e,t){if(null!=Me.ParseGeometry(e,t))return null;var r=new Ee(e.id,t,e.size,e.canBeRegenerated,null);return Ie.AddTagsTo(r,e.tags),t.pushGeometry(r,!0),r},Ee.__super__=Pe,Ee.prototype=n(Pe.prototype,{_regenerateVertexData:function(){return Fe.CreateBox({size:this.size,sideOrientation:this.side})},copy:function(e){return new Ee(e,this._scene,this.size,this.canBeRegenerated(),null,this.side)},__class__:Ee});var Ie=t.BABYLON.Tags=function(){};s["com.babylonhx.tools.Tags"]=Ie,Ie.__name__=["com","babylonhx","tools","Tags"],Ie.EnableFor=function(e){null!=e._tags?e._tags=e._tags:e._tags={},e.hasTags=function(){return Ie.HasTags(e)},e.addTags=function(t){Ie.AddTagsTo(e,t)},e.removeTags=function(t){Ie.RemoveTagsFrom(e,t)}},Ie.DisableFor=function(e){e._tags=null,e.hasTags=null,e.addTags=null,e.removeTags=null,e.matchesTagsQuery=null},Ie.HasTags=function(e){return e._tags?!Ae.IsEmpty(e._tags):!1},Ie.GetTags=function(e){return null==e._tags?null:e._tags},Ie.AddTagsTo=function(e,t){if(null==t&&(t=""),""!=t)for(var r=t.split(" "),n=0;n<r.length;){var i=r[n];++n,Ie._AddTagTo(e,i)}},Ie._AddTagTo=function(e,t){if(t=d.trim(t),""!=t&&"true"!=t&&"false"!=t){var r=new a("[\\s]",""),n=new a("^([!]|([|]|[&]){2})","");r.match(t)||n.match(t)||Ie.EnableFor(e)}},Ie.RemoveTagsFrom=function(e,t){if(Ie.HasTags(e))for(var r=t.split(" "),n=0;n<r.length;){var i=r[n];++n,Ie._RemoveTagFrom(e,i)}},Ie._RemoveTagFrom=function(e,t){e._tags.remove(t)};var De=function(e){var t=this;this.id=setInterval(function(){t.run()},e)};s["haxe.Timer"]=De,De.__name__=["haxe","Timer"],De.stamp=function(){return(new Date).getTime()/1e3},De.prototype={stop:function(){null!=this.id&&(clearInterval(this.id),this.id=null)},run:function(){},__class__:De};var Ae=t.BABYLON.Tools=function(){};s["com.babylonhx.tools.Tools"]=Ae,Ae.__name__=["com","babylonhx","tools","Tools"],Ae.ToHex=function(e){var t=d.hex(e,16);if(15>=e){var r="0"+t;return r.toUpperCase()}return t.toUpperCase()},Ae.GetExponantOfTwo=function(e,t){var r=1;do r*=2;while(e>r);return r>t&&(r=t),r},Ae.Lerp=function(e,t,r){return(1-r)*e+r*t},Ae.GetFilename=function(e){var t=e.lastIndexOf("/");return 0>t?e:e.substring(t+1)},Ae.ToDegrees=function(e){return 180*e/Math.PI},Ae.ToRadians=function(e){return e*Math.PI/180},Ae.delay=function(e,t){var r=new De(t);return r.run=function(){r.stop(),e()},r},Ae.ExtractMinAndMaxIndexed=function(e,t,r,n){for(var i=new L(1/0,1/0,1/0),s=new L(-(1/0),-(1/0),-(1/0)),o=r,a=r+n;a>o;){var l=o++,h=new L(e[3*t[l]],e[3*t[l]+1],e[3*t[l]+2]);i=L.Minimize(h,i),s=L.Maximize(h,s)}return{minimum:i,maximum:s}},Ae.ExtractMinAndMax=function(e,t,r){for(var n=new L(1/0,1/0,1/0),i=new L(-(1/0),-(1/0),-(1/0)),s=t,o=t+r;o>s;){var a=s++,l=new L(e[3*a],e[3*a+1],e[3*a+2]);n=L.Minimize(l,n),i=L.Maximize(l,i)}return{minimum:n,maximum:i}},Ae.MakeArray=function(e,t){if(null==t&&(t=!1),1!=t&&null==e)return null;if(Object.prototype.hasOwnProperty.call(e,"get")){for(var r=[],n=function(t){var r,n;return n=Re.__cast(e,wr),r=n.keys()}(this);n.hasNext();){var i=n.next();r.push(e.get(i))}return r}return e instanceof Array&&null==e.__enum__?e:[e]},Ae.GetPointerPrefix=function(){var e="pointer";return window.navigator.pointerEnabled||(e="mouse"),e},Ae.RegisterTopRootEvents=function(e){for(var t=0;t<e.length;){var r=e[t];++t,window.addEventListener(r.name,r.handler,!1);try{null!=window.parent&&window.parent.addEventListener(r.name,r.handler,!1)}catch(n){n instanceof Ar&&(n=n.val)}}},Ae.UnregisterTopRootEvents=function(e){for(var t=0;t<e.length;){var r=e[t];++t,window.removeEventListener(r.name,r.handler);try{null!=window.parent&&window.parent.removeEventListener(r.name,r.handler)}catch(n){n instanceof Ar&&(n=n.val)}}},Ae.CleanUrl=function(e){var t=new a("#","mg");return e=t.replace(e,"%23")},Ae.LoadFile=function(e,t,r,n,i,s){null==i&&(i=!1),e=Ae.CleanUrl(e);var o=function(){var n=new XMLHttpRequest,o=Ae.BaseUrl+e;n.open("GET",o,!0),i&&(n.responseType="arraybuffer"),n.onprogress=r,n.onreadystatechange=function(e){if(4==n.readyState)if(200==n.status)t(i?n.response:n.responseText);else{if(null==s)throw new Ar("Error status: "+n.status+" - Unable to load "+o);s()}},n.send(null)},a=function(){n.loadFileFromDB(e,t,r,o,i)};if(-1!=e.indexOf("file:")){e.substring(5)}else null!=n&&n.enableSceneOffline?n.openAsync(a,o):o()},Ae.ValidateXHRData=function(e,t){return null==t&&(t=7),!1},Ae.LoadImage=function(e,t,r,n){e=Ae.CleanUrl(e);var i=new Image;return"data:"!=l.substr(e,0,5)&&(i.crossOrigin="anonymous"),i.onload=function(e){var r,n=window.document;r=n.createElement("canvas"),r.width=i.width,r.height=i.height;var s=r.getContext("2d",null);s.drawImage(i,0,0,i.width,i.height,0,0,i.width,i.height);var o=s.getImageData(0,0,i.width,i.height).data,a=null;a=Array.prototype.slice.call(o),null!=t&&t(new yr(new jr(a),i.width,i.height))},i.src=e,i},Ae.Clamp=function(e,t,r){return null==r&&(r=1),null==t&&(t=0),Math.min(r,Math.max(t,e))},Ae.Clamp2=function(e,t,r){return t>e?t:e>r?r:e},Ae.Sign=function(e){return 0==e?0:e>0?1:-1},Ae.Format=function(e,t){null==t&&(t=2),e=Math.round(e*Math.pow(10,t));var r=""+e,n=r.length;if(t>=n){for(;t>n;)r="0"+r,n++;return(0==t?"":"0.")+r}return l.substr(r,0,r.length-t)+(0==t?"":".")+l.substr(r,r.length-t,null)},Ae.CheckExtends=function(e,t,r){e.x<t.x&&(t.x=e.x),e.y<t.y&&(t.y=e.y),e.z<t.z&&(t.z=e.z),e.x>r.x&&(r.x=e.x),e.y>r.y&&(r.y=e.y),e.z>r.z&&(r.z=e.z)},Ae.WithinEpsilon=function(e,t,r){null==r&&(r=1.401298e-45);var n=e-t;return n>=-r&&r>=n},Ae.cloneValue=function(e,t){return null==e?null:Re.__instanceof(e,tt)?null:Re.__instanceof(e,rt)?Re.__cast(e,rt).clone(Re.__cast(t,et)):Object.prototype.hasOwnProperty.call(e,"clone")?e.clone():null},Ae.IsEmpty=function(e){if(e instanceof Array&&null==e.__enum__){var t,r=0;for(t=Re.__cast(e,Array);r<t.length;){t[r];return++r,!1}}return!0},Ae.Now=function(){return u["int"](1e3*(De.stamp()-Ae.__startTime))},Ae.getTimer=function(){return u["int"](1e3*(De.stamp()-Ae.__startTime))},Ae.uuid=function(){var e=function(e,t){null==t&&(t=61);var r=["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"],n=[];for(t=t>61?61:t;e-->0;)n.push(r[Math.floor((t+1)*Math.random())]);return n.join("")};return e(8,15)+"-"+e(4,15)+"-4"+e(3,15)+"-"+Math.floor(4*Math.random())+e(3,15)+"-"+e(12,15)},Ae.randomInt=function(e,t){return e+Math.floor((t-e+1)*Math.random())},Ae.randomFloat=function(e,t){return e+(t-e+1)*Math.random()};var Re=function(){};s["js.Boot"]=Re,Re.__name__=["js","Boot"],Re.getClass=function(e){if(e instanceof Array&&null==e.__enum__)return Array;var t=e.__class__;if(null!=t)return t;var r=Re.__nativeClassName(e);return null!=r?Re.__resolveNativeClass(r):null},Re.__string_rec=function(e,t){if(null==e)return"null";if(t.length>=5)return"<...>";var r=typeof e;switch("function"==r&&(e.__name__||e.__ename__)&&(r="object"),r){case"object":if(e instanceof Array){if(e.__enum__){if(2==e.length)return e[0];var n=e[0]+"(";t+="	";for(var i=2,s=e.length;s>i;){var o=i++;n+=2!=o?","+Re.__string_rec(e[o],t):Re.__string_rec(e[o],t)}return n+")"}var a=e.length,l="[";t+="	";for(var h=0;a>h;){var c=h++;l+=(c>0?",":"")+Re.__string_rec(e[c],t)}return l+="]"}var u;try{u=e.toString}catch(f){return f instanceof Ar&&(f=f.val),"???"}if(null!=u&&u!=Object.toString&&"function"==typeof u){var d=e.toString();if("[object Object]"!=d)return d}var m=null,_="{\n";t+="	";var p=null!=e.hasOwnProperty;for(var m in e)(!p||e.hasOwnProperty(m))&&"prototype"!=m&&"__class__"!=m&&"__super__"!=m&&"__interfaces__"!=m&&"__properties__"!=m&&(2!=_.length&&(_+=", \n"),_+=t+m+" : "+Re.__string_rec(e[m],t));return t=t.substring(1),_+="\n"+t+"}";case"function":return"<function>";case"string":return e;default:return String(e)}},Re.__interfLoop=function(e,t){if(null==e)return!1;if(e==t)return!0;var r=e.__interfaces__;if(null!=r)for(var n=0,i=r.length;i>n;){var s=n++,o=r[s];if(o==t||Re.__interfLoop(o,t))return!0}return Re.__interfLoop(e.__super__,t)},Re.__instanceof=function(e,t){if(null==t)return!1;switch(t){case Vr:return(0|e)===e;case zr:return"number"==typeof e;case Wr:return"boolean"==typeof e;case String:return"string"==typeof e;case Array:return e instanceof Array&&null==e.__enum__;case Ur:return!0;default:if(null==e)return!1;if("function"==typeof t){if(e instanceof t)return!0;if(Re.__interfLoop(Re.getClass(e),t))return!0}else if("object"==typeof t&&Re.__isNativeObj(t)&&e instanceof t)return!0;return t==Gr&&null!=e.__name__?!0:t==Hr&&null!=e.__ename__?!0:e.__enum__==t}},Re.__cast=function(e,t){if(Re.__instanceof(e,t))return e;throw new Ar("Cannot cast "+u.string(e)+" to "+u.string(t))},Re.__nativeClassName=function(e){var t=Re.__toStr.call(e).slice(8,-1);return"Object"==t||"Function"==t||"Math"==t||"JSON"==t?null:t},Re.__isNativeObj=function(e){return null!=Re.__nativeClassName(e)},Re.__resolveNativeClass=function(e){return r[e]};var Le=t.BABYLON.Matrix=function(){this.m=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])};s["com.babylonhx.math.Matrix"]=Le,Le.__name__=["com","babylonhx","math","Matrix"],Le.FromArray=function(e,t){null==t&&(t=0);var r=new Le;return Le.FromArrayToRef(e,t,r),r},Le.FromArrayToRef=function(e,t,r){for(var n=0;16>n;){var i=n++;r.m[i]=e[i+t]}},Le.FromFloat32ArrayToRefScaled=function(e,t,r,n){for(var i=0;16>i;){var s=i++;n.m[s]=e[s+t]*r}},Le.FromValuesToRef=function(e,t,r,n,i,s,o,a,l,h,c,u,f,d,m,_,p){p.m[0]=e,p.m[1]=t,p.m[2]=r,p.m[3]=n,p.m[4]=i,p.m[5]=s,p.m[6]=o,p.m[7]=a,p.m[8]=l,p.m[9]=h,p.m[10]=c,p.m[11]=u,p.m[12]=f,p.m[13]=d,p.m[14]=m,p.m[15]=_},Le.FromValues=function(e,t,r,n,i,s,o,a,l,h,c,u,f,d,m,_){var p=new Le;return p.m[0]=e,p.m[1]=t,p.m[2]=r,p.m[3]=n,p.m[4]=i,p.m[5]=s,p.m[6]=o,p.m[7]=a,p.m[8]=l,p.m[9]=h,p.m[10]=c,p.m[11]=u,p.m[12]=f,p.m[13]=d,p.m[14]=m,p.m[15]=_,p},Le.Compose=function(e,t,r){var n=Le.FromValues(e.x,0,0,0,0,e.y,0,0,0,0,e.z,0,0,0,0,1),i=Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return t.toRotationMatrix(i),n=n.multiply(i),n.m[12]=r.x,n.m[13]=r.y,n.m[14]=r.z,n},Le.Identity=function(){return Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)},Le.IdentityToRef=function(e){Le.FromValuesToRef(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,e)},Le.Zero=function(){return Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)},Le.RotationX=function(e){var t=new Le;return Le.RotationXToRef(e,t),t},Le.Invert=function(e){var t=new Le;return e.invertToRef(t),t},Le.RotationXToRef=function(e,t){var r=Math.sin(e),n=Math.cos(e);t.m[0]=1,t.m[15]=1,t.m[5]=n,t.m[10]=n,t.m[9]=-r,t.m[6]=r,t.m[1]=0,t.m[2]=0,t.m[3]=0,t.m[4]=0,t.m[7]=0,t.m[8]=0,t.m[11]=0,t.m[12]=0,t.m[13]=0,t.m[14]=0},Le.RotationY=function(e){var t=new Le;return Le.RotationYToRef(e,t),t},Le.RotationYToRef=function(e,t){var r=Math.sin(e),n=Math.cos(e);t.m[5]=1,t.m[15]=1,t.m[0]=n,t.m[2]=-r,t.m[8]=r,t.m[10]=n,t.m[1]=0,t.m[3]=0,t.m[4]=0,t.m[6]=0,t.m[7]=0,t.m[9]=0,t.m[11]=0,t.m[12]=0,t.m[13]=0,t.m[14]=0},Le.RotationZ=function(e){var t=new Le;return Le.RotationZToRef(e,t),t},Le.RotationZToRef=function(e,t){var r=Math.sin(e),n=Math.cos(e);t.m[10]=1,t.m[15]=1,t.m[0]=n,t.m[1]=r,t.m[4]=-r,t.m[5]=n,t.m[2]=0,t.m[3]=0,t.m[6]=0,t.m[7]=0,t.m[8]=0,t.m[9]=0,t.m[11]=0,t.m[12]=0,t.m[13]=0,t.m[14]=0},Le.RotationAxis=function(e,t){var r=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);return Le.RotationAxisToRef(e,t,r),r},Le.RotationAxisToRef=function(e,t,r){var n=Math.sin(-t),i=Math.cos(-t),s=1-i;e.normalize(),r.m[0]=e.x*e.x*s+i,r.m[1]=e.x*e.y*s-e.z*n,r.m[2]=e.x*e.z*s+e.y*n,r.m[3]=0,r.m[4]=e.y*e.x*s+e.z*n,r.m[5]=e.y*e.y*s+i,r.m[6]=e.y*e.z*s-e.x*n,r.m[7]=0,r.m[8]=e.z*e.x*s-e.y*n,r.m[9]=e.z*e.y*s+e.x*n,r.m[10]=e.z*e.z*s+i,r.m[11]=0,r.m[15]=1},Le.RotationYawPitchRoll=function(e,t,r){var n=new Le;return R.RotationYawPitchRollToRef(e,t,r,Le._tempQuaternion),Le._tempQuaternion.toRotationMatrix(n),n},Le.RotationYawPitchRollToRef=function(e,t,r,n){R.RotationYawPitchRollToRef(e,t,r,Le._tempQuaternion),Le._tempQuaternion.toRotationMatrix(n)},Le.Scaling=function(e,t,r){var n=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);return n.m[0]=e,n.m[1]=0,n.m[2]=0,n.m[3]=0,n.m[4]=0,n.m[5]=t,n.m[6]=0,n.m[7]=0,n.m[8]=0,n.m[9]=0,n.m[10]=r,n.m[11]=0,n.m[12]=0,n.m[13]=0,n.m[14]=0,n.m[15]=1,n},Le.ScalingToRef=function(e,t,r,n){n.m[0]=e,n.m[1]=0,n.m[2]=0,n.m[3]=0,n.m[4]=0,n.m[5]=t,n.m[6]=0,n.m[7]=0,n.m[8]=0,n.m[9]=0,n.m[10]=r,n.m[11]=0,n.m[12]=0,n.m[13]=0,n.m[14]=0,n.m[15]=1},Le.Translation=function(e,t,r){var n=Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return Le.TranslationToRef(e,t,r,n),n},Le.TranslationToRef=function(e,t,r,n){Le.FromValuesToRef(1,0,0,0,0,1,0,0,0,0,1,0,e,t,r,1,n)},Le.Lerp=function(e,t,r){var n=Pt.vector3[0],i=Pt.quaternion[0],s=Pt.vector3[1];e.decompose(n,i,s);var o=Pt.vector3[2],a=Pt.quaternion[1],l=Pt.vector3[3];t.decompose(o,a,l);var h=L.Lerp(n,o,r),c=R.Slerp(i,a,r),u=L.Lerp(s,l,r);return Le.Compose(h,c,u)},Le.LookAtLH=function(e,t,r){var n=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);return Le.LookAtLHToRef(e,t,r,n),n},Le.LookAtLHToRef=function(e,t,r,n){t.subtractToRef(e,Le._zAxis),Le._zAxis.normalize(),L.CrossToRef(r,Le._zAxis,Le._xAxis),Le._xAxis.normalize(),L.CrossToRef(Le._zAxis,Le._xAxis,Le._yAxis),Le._yAxis.normalize(),Le.ex=-L.Dot(Le._xAxis,e),Le.ey=-L.Dot(Le._yAxis,e),Le.ez=-L.Dot(Le._zAxis,e),Le.FromValuesToRef(Le._xAxis.x,Le._yAxis.x,Le._zAxis.x,0,Le._xAxis.y,Le._yAxis.y,Le._zAxis.y,0,Le._xAxis.z,Le._yAxis.z,Le._zAxis.z,0,Le.ex,Le.ey,Le.ez,1,n)},Le.OrthoLH=function(e,t,r,n){var i=2/e,s=2/t,o=1/(n-r),a=r/(r-n);return Le.FromValues(i,0,0,0,0,s,0,0,0,0,o,0,0,0,a,1)},Le.OrthoOffCenterLH=function(e,t,r,n,i,s){var o=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);return Le.OrthoOffCenterLHToRef(e,t,r,n,i,s,o),o},Le.OrthoOffCenterLHToRef=function(e,t,r,n,i,s,o){o.m[0]=2/(t-e),o.m[1]=0,o.m[2]=0,o.m[3]=0,o.m[5]=2/(n-r),o.m[4]=0,o.m[6]=0,o.m[7]=0,o.m[10]=-1/(i-s),o.m[8]=0,o.m[9]=0,o.m[11]=0,o.m[12]=(e+t)/(e-t),o.m[13]=(n+r)/(r-n),o.m[14]=i/(i-s),o.m[15]=1},Le.PerspectiveLH=function(e,t,r,n){var i=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);return i.m[0]=2*r/e,i.m[1]=0,i.m[2]=0,i.m[3]=0,i.m[5]=2*r/t,i.m[4]=0,i.m[6]=0,i.m[7]=0,i.m[10]=-n/(r-n),i.m[8]=0,i.m[9]=0,i.m[11]=1,i.m[12]=0,i.m[13]=0,i.m[15]=0,i.m[14]=r*n/(r-n),i},Le.PerspectiveFovLH=function(e,t,r,n){var i=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);return Le.PerspectiveFovLHToRef(e,t,r,n,i),i},Le.PerspectiveFovLHToRef=function(e,t,r,n,i,s){var o=1/Math.tan(.5*e),a=null==s||0==s,l=1==s;a?i.m[0]=o/t:l&&(i.m[0]=o),i.m[1]=0,i.m[2]=0,i.m[3]=0,a?i.m[5]=o:l&&(i.m[5]=o*t),i.m[4]=0,i.m[6]=0,i.m[7]=0,i.m[8]=0,i.m[9]=0,i.m[10]=-n/(r-n),i.m[11]=1,i.m[12]=0,i.m[13]=0,i.m[15]=0,i.m[14]=r*n/(r-n)},Le.GetFinalMatrix=function(e,t,r,n,i,s){var o=e.width,a=e.height,l=e.x,h=e.y,c=Le.FromValues(o/2,0,0,0,0,-a/2,0,0,0,0,s-i,0,l+o/2,a/2+h,i,1);return t.multiply(r).multiply(n).multiply(c)},Le.GetAsMatrix2x2=function(e){return new Float32Array([e.m[0],e.m[1],e.m[4],e.m[5]])},Le.GetAsMatrix3x3=function(e){return new Float32Array([e.m[0],e.m[1],e.m[2],e.m[4],e.m[5],e.m[6],e.m[8],e.m[9],e.m[10]])},Le.Transpose=function(e){var t=new Le;return t.m[0]=e.m[0],t.m[1]=e.m[4],t.m[2]=e.m[8],t.m[3]=e.m[12],t.m[4]=e.m[1],t.m[5]=e.m[5],t.m[6]=e.m[9],t.m[7]=e.m[13],t.m[8]=e.m[2],t.m[9]=e.m[6],t.m[10]=e.m[10],t.m[11]=e.m[14],t.m[12]=e.m[3],t.m[13]=e.m[7],t.m[14]=e.m[11],t.m[15]=e.m[15],t},Le.Reflection=function(e){var t=new Le;return Le.ReflectionToRef(e,t),t},Le.ReflectionToRef=function(e,t){e.normalize();var r=e.normal.x,n=e.normal.y,i=e.normal.z,s=-2*r,o=-2*n,a=-2*i;t.m[0]=s*r+1,t.m[1]=o*r,t.m[2]=a*r,t.m[3]=0,t.m[4]=s*n,t.m[5]=o*n+1,t.m[6]=a*n,t.m[7]=0,t.m[8]=s*i,t.m[9]=o*i,t.m[10]=a*i+1,t.m[11]=0,t.m[12]=s*e.d,t.m[13]=o*e.d,t.m[14]=a*e.d,t.m[15]=1},Le.prototype={toString:function(){return u.string(this.m)+""},isIdentity:function(){return 1!=this.m[0]||1!=this.m[5]||1!=this.m[10]||1!=this.m[15]?!1:0!=this.m[1]||0!=this.m[2]||0!=this.m[3]||0!=this.m[4]||0!=this.m[6]||0!=this.m[7]||0!=this.m[8]||0!=this.m[9]||0!=this.m[11]||0!=this.m[12]||0!=this.m[13]||0!=this.m[14]?!1:!0},determinant:function(){var e=this.m[10]*this.m[15]-this.m[11]*this.m[14],t=this.m[9]*this.m[15]-this.m[11]*this.m[13],r=this.m[9]*this.m[14]-this.m[10]*this.m[13],n=this.m[8]*this.m[15]-this.m[11]*this.m[12],i=this.m[8]*this.m[14]-this.m[10]*this.m[12],s=this.m[8]*this.m[13]-this.m[9]*this.m[12];return this.m[0]*(this.m[5]*e-this.m[6]*t+this.m[7]*r)-this.m[1]*(this.m[4]*e-this.m[6]*n+this.m[7]*i)+this.m[2]*(this.m[4]*t-this.m[5]*n+this.m[7]*s)-this.m[3]*(this.m[4]*r-this.m[5]*i+this.m[6]*s)},toArray:function(){return this.m},asArray:function(){return this.m},invert:function(){return this.invertToRef(this),this},invertToRef:function(e){var t=this.m[0],r=this.m[1],n=this.m[2],i=this.m[3],s=this.m[4],o=this.m[5],a=this.m[6],l=this.m[7],h=this.m[8],c=this.m[9],u=this.m[10],f=this.m[11],d=this.m[12],m=this.m[13],_=this.m[14],p=this.m[15],v=u*p-f*_,g=c*p-f*m,x=c*_-u*m,y=h*p-f*d,b=h*_-u*d,S=h*m-c*d,w=o*v-a*g+l*x,C=-(s*v-a*y+l*b),T=s*g-o*y+l*S,M=-(s*x-o*b+a*S),P=1/(t*w+r*C+n*T+i*M),E=a*p-l*_,I=o*p-l*m,D=o*_-a*m,A=s*p-l*d,R=s*_-a*d,L=s*m-o*d,F=a*f-l*u,O=o*f-l*c,N=o*u-a*c,B=s*f-l*h,k=s*u-a*h,V=s*c-o*h;e.m[0]=w*P,e.m[4]=C*P,e.m[8]=T*P,e.m[12]=M*P,e.m[1]=-(r*v-n*g+i*x)*P,e.m[5]=(t*v-n*y+i*b)*P,e.m[9]=-(t*g-r*y+i*S)*P,e.m[13]=(t*x-r*b+n*S)*P,e.m[2]=(r*E-n*I+i*D)*P,e.m[6]=-(t*E-n*A+i*R)*P,e.m[10]=(t*I-r*A+i*L)*P,e.m[14]=-(t*D-r*R+n*L)*P,e.m[3]=-(r*F-n*O+i*N)*P,e.m[7]=(t*F-n*B+i*k)*P,e.m[11]=-(t*O-r*B+i*V)*P,e.m[15]=(t*N-r*k+n*V)*P},reset:function(){for(var e=0;16>e;){var t=e++;this.m[t]=0}return this},add:function(e){var t=new Le;return this.addToRef(e,t),t},addToRef:function(e,t){for(var r=0;16>r;){var n=r++;t.m[n]=this.m[n]+e.m[n]}return this},addToSelf:function(e){for(var t=0;16>t;){var r=t++;this.m[r]+=e.m[r]}return this},setTranslation:function(e){this.m[12]=e.x,this.m[13]=e.y,this.m[14]=e.z},multiply:function(e){var t=new Le;return this.multiplyToRef(e,t),t},copyFrom:function(e){for(var t=0;16>t;){var r=t++;this.m[r]=e.m[r]}},copyToArray:function(e,t){null==t&&(t=0);for(var r=0;16>r;){var n=r++;e[t+n]=this.m[n]}},multiplyToRef:function(e,t){this.multiplyToArray(e,t.m,0)},multiplyToArray:function(e,t,r){t[r]=this.m[0]*e.m[0]+this.m[1]*e.m[4]+this.m[2]*e.m[8]+this.m[3]*e.m[12],t[r+1]=this.m[0]*e.m[1]+this.m[1]*e.m[5]+this.m[2]*e.m[9]+this.m[3]*e.m[13],t[r+2]=this.m[0]*e.m[2]+this.m[1]*e.m[6]+this.m[2]*e.m[10]+this.m[3]*e.m[14],t[r+3]=this.m[0]*e.m[3]+this.m[1]*e.m[7]+this.m[2]*e.m[11]+this.m[3]*e.m[15],t[r+4]=this.m[4]*e.m[0]+this.m[5]*e.m[4]+this.m[6]*e.m[8]+this.m[7]*e.m[12],t[r+5]=this.m[4]*e.m[1]+this.m[5]*e.m[5]+this.m[6]*e.m[9]+this.m[7]*e.m[13],t[r+6]=this.m[4]*e.m[2]+this.m[5]*e.m[6]+this.m[6]*e.m[10]+this.m[7]*e.m[14],t[r+7]=this.m[4]*e.m[3]+this.m[5]*e.m[7]+this.m[6]*e.m[11]+this.m[7]*e.m[15],t[r+8]=this.m[8]*e.m[0]+this.m[9]*e.m[4]+this.m[10]*e.m[8]+this.m[11]*e.m[12],t[r+9]=this.m[8]*e.m[1]+this.m[9]*e.m[5]+this.m[10]*e.m[9]+this.m[11]*e.m[13],t[r+10]=this.m[8]*e.m[2]+this.m[9]*e.m[6]+this.m[10]*e.m[10]+this.m[11]*e.m[14],t[r+11]=this.m[8]*e.m[3]+this.m[9]*e.m[7]+this.m[10]*e.m[11]+this.m[11]*e.m[15],t[r+12]=this.m[12]*e.m[0]+this.m[13]*e.m[4]+this.m[14]*e.m[8]+this.m[15]*e.m[12],t[r+13]=this.m[12]*e.m[1]+this.m[13]*e.m[5]+this.m[14]*e.m[9]+this.m[15]*e.m[13],t[r+14]=this.m[12]*e.m[2]+this.m[13]*e.m[6]+this.m[14]*e.m[10]+this.m[15]*e.m[14],t[r+15]=this.m[12]*e.m[3]+this.m[13]*e.m[7]+this.m[14]*e.m[11]+this.m[15]*e.m[15]},equals:function(e){return null!=e&&this.m[0]==e.m[0]&&this.m[1]==e.m[1]&&this.m[2]==e.m[2]&&this.m[3]==e.m[3]&&this.m[4]==e.m[4]&&this.m[5]==e.m[5]&&this.m[6]==e.m[6]&&this.m[7]==e.m[7]&&this.m[8]==e.m[8]&&this.m[9]==e.m[9]&&this.m[10]==e.m[10]&&this.m[11]==e.m[11]&&this.m[12]==e.m[12]&&this.m[13]==e.m[13]&&this.m[14]==e.m[14]&&this.m[15]==e.m[15]},clone:function(){return Le.FromValues(this.m[0],this.m[1],this.m[2],this.m[3],this.m[4],this.m[5],this.m[6],this.m[7],this.m[8],this.m[9],this.m[10],this.m[11],this.m[12],this.m[13],this.m[14],this.m[15])},decompose:function(e,t,r){r.x=this.m[12],r.y=this.m[13],r.z=this.m[14];var n;n=Ae.Sign(this.m[0]*this.m[1]*this.m[2]*this.m[3])<0?-1:1;var i;i=Ae.Sign(this.m[4]*this.m[5]*this.m[6]*this.m[7])<0?-1:1;var s;if(s=Ae.Sign(this.m[8]*this.m[9]*this.m[10]*this.m[11])<0?-1:1,e.x=n*Math.sqrt(this.m[0]*this.m[0]+this.m[1]*this.m[1]+this.m[2]*this.m[2]),e.y=i*Math.sqrt(this.m[4]*this.m[4]+this.m[5]*this.m[5]+this.m[6]*this.m[6]),e.z=s*Math.sqrt(this.m[8]*this.m[8]+this.m[9]*this.m[9]+this.m[10]*this.m[10]),0==e.x||0==e.y||0==e.z)return t.x=0,t.y=0,t.z=0,t.w=1,!1;var o=Le.FromValues(this.m[0]/e.x,this.m[1]/e.x,this.m[2]/e.x,0,this.m[4]/e.y,this.m[5]/e.y,this.m[6]/e.y,0,this.m[8]/e.z,this.m[9]/e.z,this.m[10]/e.z,0,0,0,0,1);return R.FromRotationMatrixToRef(o,t),!0},__class__:Le};var Fe=t.BABYLON.VertexData=function(){};s["com.babylonhx.mesh.VertexData"]=Fe,Fe.__name__=["com","babylonhx","mesh","VertexData"],Fe.ExtractFromMesh=function(e,t){return null==t&&(t=!1),Fe._ExtractFrom(e,t)},Fe.ExtractFromGeometry=function(e,t){return null==t&&(t=!1),Fe._ExtractFrom(e,t)},Fe._ExtractFrom=function(e,t){null==t&&(t=!1);var r=new Fe;return e.isVerticesDataPresent("position")&&(r.positions=e.getVerticesData("position",t)),e.isVerticesDataPresent("normal")&&(r.normals=e.getVerticesData("normal",t)),e.isVerticesDataPresent("uv")&&(r.uvs=e.getVerticesData("uv",t)),e.isVerticesDataPresent("uv2")&&(r.uv2s=e.getVerticesData("uv2",t)),e.isVerticesDataPresent("uv3")&&(r.uv3s=e.getVerticesData("uv3",t)),e.isVerticesDataPresent("uv4")&&(r.uv4s=e.getVerticesData("uv4",t)),e.isVerticesDataPresent("uv5")&&(r.uv5s=e.getVerticesData("uv5",t)),e.isVerticesDataPresent("uv6")&&(r.uv6s=e.getVerticesData("uv6",t)),e.isVerticesDataPresent("color")&&(r.colors=e.getVerticesData("color",t)),e.isVerticesDataPresent("matricesIndices")&&(r.matricesIndices=e.getVerticesData("matricesIndices",t)),e.isVerticesDataPresent("matricesWeights")&&(r.matricesWeights=e.getVerticesData("matricesWeights",t)),e.isVerticesDataPresent("matricesIndicesExtra")&&(r.matricesIndicesExtra=e.getVerticesData("matricesIndicesExtra",t)),e.isVerticesDataPresent("matricesWeightsExtra")&&(r.matricesWeightsExtra=e.getVerticesData("matricesWeightsExtra",t)),r.indices=e.getIndices(t),r},Fe.CreateRibbon=function(e){var t,r=e.pathArray;t=null!=e.closeArray?e.closeArray:!1;var n;n=null!=e.closePath?e.closePath:!1;var i,s=Math.floor(r[0].length/2);i=null!=e.offset?e.offset:s,i=i>s?s:Math.floor(i);var o;o=null!=e.sideOrientation?e.sideOrientation:0;var a=[],l=[],h=[],c=[],u=[],f=[],d=[],m=[],_=0,p=0,v=0,g=[],x=[],y=0,b=0;if(r.length<2){for(var S=[],w=[],C=0,T=r[0].length-i;T>C;){var M=C++;S.push(r[0][M]),w.push(r[0][M+i])}r=[S,w]}var P,E=0;P=n?1:0;var I=[],D=0;_=r[0].length;for(var A=0,R=r.length;R>A;){var F=A++;for(d[F]=0,u[F]=[0],I=r[F],D=I.length,_=D>_?_:D,b=0;D>b;){if(l.push(I[b].x),l.push(I[b].y),l.push(I[b].z),b>0){var O=I[b].subtract(I[b-1]).length(),N=O+d[F];u[F].push(N),d[F]=N}b++}n&&(b--,l.push(I[0].x),l.push(I[0].y),l.push(I[0].z),p=I[b].subtract(I[0]).length(),v=p+d[F],u[F].push(v),d[F]=v),g[F]=D+P,x[F]=E,E+=D+P}for(var B,k,V=[],U=[],z=0,W=_+P;W>z;){var G=z++;m[G]=0,f[G]=[0];for(var H=0,Y=r.length-1;Y>H;){var X=H++;V=r[X],U=r[X+1],G==_?(B=V[0],k=U[0]):(B=V[G],k=U[G]),p=new L(k.x-B.x,k.y-B.y,k.z-B.z).length(),v=p+m[G],f[G].push(v),m[G]=v}t&&(V=r[y],U=r[0],p=U[G].subtract(V[G]).length(),v=p+m[G],m[G]=v)}for(var j=0,q=0,K=0,Z=r.length;Z>K;)for(var Q=K++,$=0,J=_+P;J>$;){
var ee=$++;j=u[Q][ee]/d[Q],q=f[ee][Q]/m[ee],c.push(j),c.push(q)}y=0;var te,re=0,ne=g[y]-1,ie=g[y+1]-1;te=ie>ne?ne:ie;var se,oe=x[1]-x[0];for(se=t?g.length:g.length-1;te>=re&&se>y;)a.push(re),a.push(re+oe),a.push(re+1),a.push(re+oe+1),a.push(re+1),a.push(re+oe),re+=1,re==te&&(y++,y==g.length-1?(oe=x[0]-x[y],ne=g[y]-1,ie=g[0]-1):(oe=x[y+1]-x[y],ne=g[y]-1,ie=g[y+1]-1),re=x[y],te=ie>ne?ne+re:ie+re);if(Fe.ComputeNormals(l,a,h),n)for(var ae=0,le=0,he=0,ce=r.length;ce>he;){var ue=he++;ae=3*x[ue],le=ue+1<r.length?3*(x[ue+1]-1):h.length-3,h[ae]=.5*(h[ae]+h[le]),h[ae+1]=.5*(h[ae+1]+h[le+1]),h[ae+2]=.5*(h[ae+2]+h[le+2]),h[le]=h[ae],h[le+1]=h[ae+1],h[le+2]=h[ae+2]}Fe._ComputeSides(o,l,a,h,c);var fe=new Fe;return fe.indices=a,fe.positions=l,fe.normals=h,fe.uvs=c,n&&(fe._idx=x),fe},Fe.CreateBox=function(e){var t,r=[new L(0,0,1),new L(0,0,-1),new L(1,0,0),new L(-1,0,0),new L(0,1,0),new L(0,-1,0)],n=[],i=[],s=[],o=[],a=e.width,l=e.height,h=e.depth;t=null!=e.sideOrientation?e.sideOrientation:0;var c;c=null!=e.faceUV?e.faceUV:[];for(var u=e.faceColors,f=[],d=0;6>d;){var m=d++;null==c[m]&&(c[m]=new lt(0,0,1,1)),null!=u&&null==u[m]&&(u[m]=new Oe(1,1,1,1))}for(var _=new L(a/2,l/2,h/2),p=0,v=r.length;v>p;){var g=p++,x=r[g],y=new L(x.y,x.z,x.x),b=L.Cross(x,y),S=i.length/3|0;n.push(S),n.push(S+1),n.push(S+2),n.push(S),n.push(S+2),n.push(S+3);var w=new L(x.x-y.x,x.y-y.y,x.z-y.z).subtract(b).multiply(_);i.push(w.x),i.push(w.y),i.push(w.z),s.push(x.x),s.push(x.y),s.push(x.z),o.push(1),o.push(1),null!=u&&(f.push(u[g].r),f.push(u[g].g),f.push(u[g].b),f.push(u[g].a)),w=new L(x.x-y.x,x.y-y.y,x.z-y.z).add(b).multiply(_),i.push(w.x),i.push(w.y),i.push(w.z),s.push(x.x),s.push(x.y),s.push(x.z),o.push(0),o.push(1),null!=u&&(f.push(u[g].r),f.push(u[g].g),f.push(u[g].b),f.push(u[g].a)),w=new L(x.x+y.x,x.y+y.y,x.z+y.z).add(b).multiply(_),i.push(w.x),i.push(w.y),i.push(w.z),s.push(x.x),s.push(x.y),s.push(x.z),o.push(0),o.push(0),null!=u&&(f.push(u[g].r),f.push(u[g].g),f.push(u[g].b),f.push(u[g].a)),w=new L(x.x+y.x,x.y+y.y,x.z+y.z).subtract(b).multiply(_),i.push(w.x),i.push(w.y),i.push(w.z),s.push(x.x),s.push(x.y),s.push(x.z),o.push(1),o.push(0),null!=u&&(f.push(u[g].r),f.push(u[g].g),f.push(u[g].b),f.push(u[g].a))}Fe._ComputeSides(t,i,n,s,o);var C=new Fe;if(C.indices=n,C.positions=i,C.normals=s,C.uvs=o,null!=u&&u.length>0){var T;T=2==t?f.concat(f):f,C.colors=T}return C},Fe.CreateSphere=function(e){var t,r=[],n=[],i=[],s=[];t=null!=e.segments?e.segments:32;var o;o=null!=e.diameterX?e.diameterX:1;var a;a=null!=e.diameterY?e.diameterY:1;var l;l=null!=e.diameterZ?e.diameterZ:1;var h;h=null!=e.arc?e.arc:1,0>h&&(h=1);var c;c=e.slice?e.slice:1,0>c&&(c=1);var u;u=null!=e.sideOrientation?e.sideOrientation:0;for(var f=new L(o/2,a/2,l/2),d=2+t,m=2*d,_=0,p=d+1;p>_;){for(var v=_++,g=v/d,x=g*Math.PI,y=0,b=m+1;b>y;){var S=y++,w=S/m,C=w*Math.PI*2,T=Le.RotationZ(-x),M=Le.RotationY(C),P=L.TransformCoordinates(new L(0,1,0),T),E=L.TransformCoordinates(P,M),I=new L(E.x*f.x,E.y*f.y,E.z*f.z),D=L.Normalize(I);n.push(I.x),n.push(I.y),n.push(I.z),i.push(D.x),i.push(D.y),i.push(D.z),s.push(w),s.push(g)}if(v>0)for(var A=n.length/3,R=A-2*(m+1)|0;A>R+m+2;)r.push(R),r.push(R+1),r.push(R+m+1),r.push(R+m+1),r.push(R+1),r.push(R+m+2),++R}Fe._ComputeSides(u,n,r,i,s);var F=new Fe;return F.indices=r,F.positions=n,F.normals=i,F.uvs=s,F},Fe.CreateCylinder=function(e){var t;t=null!=e.height?e.height:2;var r;r=null!=e.diameterTop?e.diameterTop:1;var n;n=null!=e.diameterBottom?e.diameterBottom:1;var i;i=null!=e.tessellation?e.tessellation:24;var s;s=null!=e.subdivisions?e.subdivisions:1;var o;o=null!=e.hasRings?e.hasRings:!1;var a;a=null!=e.enclose?e.enclose:!1;var l;l=null!=e.arc?e.arc:1,(0>=l||l>1)&&(l=1);var h;h=null!=e.sideOrientation?e.sideOrientation:0;var c;c=null!=e.faceUV?e.faceUV:[];var u;u=null!=e.faceColors?e.faceColors:null;var f;f=1!=l&&a?2:0;var d;d=o?s:1;for(var m=2+(1+f)*d,_=0;m>_;){var p=_++;null!=u&&null==u[p]&&(u[p]=new Oe(1,1,1,1))}for(var v=0;3>v;){var g=v++;null!=c&&null==c[g]&&(c[g]=new lt(0,0,1,1))}for(var x=[],y=[],b=[],S=[],w=[],C=2*Math.PI*l/i,T=0,M=0,P=0,E=(n-r)/2/t,I=new L(0,0,0),D=new L(0,0,0),A=new L(0,0,0),R=new L(0,0,0),F=new L(0,0,0),O=xt.Y,N=1,B=1,k=0,V=s+1;V>k;){var U=k++;M=U/s,P=(M*(r-n)+n)/2,N=o&&0!=U&&U!=s?2:1;for(var z=0;N>z;){var W=z++;o&&(B+=W),a&&(B+=2*W);for(var G=0,H=i+1;H>G;){var Y=G++;T=Y*C,I.x=Math.cos(-T)*P,I.y=-t/2+M*t,I.z=Math.sin(-T)*P,0==r&&U==s?(D.x=b[b.length-3*(i+1)],D.y=b[b.length-3*(i+1)+1],D.z=b[b.length-3*(i+1)+2]):(D.x=I.x,D.z=I.z,D.y=Math.sqrt(D.x*D.x+D.z*D.z)*E,D.normalize()),0==Y&&(A.x=I.x,A.y=I.y,A.z=I.z,R.x=D.x,R.y=D.y,R.z=D.z),y.push(I.x),y.push(I.y),y.push(I.z),b.push(D.x),b.push(D.y),b.push(D.z),S.push(c[1].x+(c[1].z-c[1].x)*Y/i),S.push(c[1].y+(c[1].w-c[1].y)*M),null!=u&&(w.push(u[B].r),w.push(u[B].g),w.push(u[B].b),w.push(u[B].a))}1!=l&&a&&(y.push(I.x),y.push(I.y),y.push(I.z),y.push(0),y.push(I.y),y.push(0),y.push(0),y.push(I.y),y.push(0),y.push(A.x),y.push(A.y),y.push(A.z),F.x=O.y*D.z-O.z*D.y,F.y=O.z*D.x-O.x*D.z,F.z=O.x*D.y-O.y*D.x,F.normalize(),b.push(F.x),b.push(F.y),b.push(F.z),b.push(F.x),b.push(F.y),b.push(F.z),F.x=R.y*O.z-R.z*O.y,F.y=R.z*O.x-R.x*O.z,F.z=R.x*O.y-R.y*O.x,F.normalize(),b.push(F.x),b.push(F.y),b.push(F.z),b.push(F.x),b.push(F.y),b.push(F.z),S.push(c[1].x+(c[1].z-c[1].x)),S.push(c[1].y+(c[1].w-c[1].y)),S.push(c[1].x+(c[1].z-c[1].x)),S.push(c[1].y+(c[1].w-c[1].y)),S.push(c[1].x+(c[1].z-c[1].x)),S.push(c[1].y+(c[1].w-c[1].y)),S.push(c[1].x+(c[1].z-c[1].x)),S.push(c[1].y+(c[1].w-c[1].y)),w.push(u[B+1].r),w.push(u[B+1].g),w.push(u[B+1].b),w.push(u[B+1].a),w.push(u[B+1].r),w.push(u[B+1].g),w.push(u[B+1].b),w.push(u[B+1].a),w.push(u[B+2].r),w.push(u[B+2].g),w.push(u[B+2].b),w.push(u[B+2].a),w.push(u[B+2].r),w.push(u[B+2].g),w.push(u[B+2].b),w.push(u[B+2].a))}}var X;X=1!=l&&a?i+4:i;for(var j=0,q=0,K=0,Z=0,Q=0,$=0;s>$;){for(var J=($++,0);i>J;){var ee=J++,te=j*(X+1)+ee,re=(j+1)*(X+1)+ee,ne=j*(X+1)+(ee+1),ie=(j+1)*(X+1)+(ee+1);x.push(te),x.push(re),x.push(ne),x.push(ie),x.push(ne),x.push(re)}1!=l&&a&&(x.push(q+2),x.push(K+2),x.push(Z+2),x.push(Q+2),x.push(Z+2),x.push(K+2),x.push(q+4),x.push(K+4),x.push(Z+4),x.push(Q+4),x.push(Z+4),x.push(K+4)),j+=o?2:1}var se=function(e){var s;if(s=e?r/2:n/2,0!=s){var o,a=0,h=null;o=e?c[2]:c[0];var f=null;null!=u&&(f=e?u[2]:u[0]);var d,m=y.length/3|0;d=e?t/2:-t/2;var _=new L(0,d,0);y.push(_.x),y.push(_.y),y.push(_.z),b.push(0),b.push(e?1:-1),b.push(0),S.push(o.x+.5*(o.z-o.x)),S.push(o.y+.5*(o.w-o.y)),null!=u&&(w.push(f.r),w.push(f.g),w.push(f.b),w.push(f.a));for(var p=new Mt(.5,.5),v=0,g=i+1;g>v;){var C=v++;a=2*Math.PI*C*l/i;var T=Math.cos(-a),M=Math.sin(-a);h=new L(T*s,d,M*s);var P=new Mt(T*p.x+.5,M*p.y+.5);y.push(h.x),y.push(h.y),y.push(h.z),b.push(0),b.push(e?1:-1),b.push(0),S.push(o.x+(o.z-o.x)*P.x),S.push(o.y+(o.w-o.y)*P.y),null!=u&&(w.push(f.r),w.push(f.g),w.push(f.b),w.push(f.a))}for(var E=0;i>E;){var I=E++;e?(x.push(m),x.push(m+(I+2)),x.push(m+(I+1))):(x.push(m),x.push(m+(I+1)),x.push(m+(I+2)))}}};se(!1),se(!0),Fe._ComputeSides(h,y,x,b,S);var oe=new Fe;return oe.indices=x,oe.positions=y,oe.normals=b,oe.uvs=S,null!=u&&(oe.colors=w),oe},Fe.CylinderOptions=function(e){var t;t=null!=e.height?e.height:2;var r;r=null!=e.diameterTop?e.diameterTop:1;var n;n=null!=e.diameterBottom?e.diameterBottom:1;var i;i=null!=e.tessellation?e.tessellation:24;var s;s=null!=e.subdivisions?e.subdivisions:1;var o;o=null!=e.hasRings?e.hasRings:!1;var a;a=null!=e.arc?e.arc:1,(0>=a||a>1)&&(a=1);var l,h=e.sideOrientation;l=null!=e.faceUV?e.faceUV:[];for(var c=e.faceColors,u=0;3>u;){var f=u++;null!=c&&null==c[f]&&(c[f]=new Oe(1,1,1,1)),null!=l&&null==l[f]&&(l[f]=new lt(0,0,1,1))}for(var d=[],m=[],_=[],p=[],v=[],g=2*Math.PI/i,x=0,y=0,b=0,S=(n-r)/2/t,w=new L(0,0,0),C=new L(0,0,0),T=1,M=0,P=s+1;P>M;){var E=M++;y=E/s,b=(y*(r-n)+n)/2,T=o&&0!=E&&E!=s?2:1;for(var I=0;T>I;)for(var D=(I++,0),A=i+1;A>D;){var R=D++;x=R*g,w.x=Math.cos(-x)*b,w.y=-t/2+y*t,w.z=Math.sin(-x)*b,0==r&&E==s?(C.x=_[_.length-3*(i+1)],C.y=_[_.length-3*(i+1)+1],C.z=_[_.length-3*(i+1)+2]):(C.x=w.x,C.z=w.z,C.y=Math.sqrt(C.x*C.x+C.z*C.z)*S,C.normalize()),m.push(w.x),m.push(w.y),m.push(w.z),_.push(C.x),_.push(C.y),_.push(C.z),p.push(l[1].x+(l[1].z-l[1].x)*R/i),p.push(l[1].y+(l[1].w-l[1].y)*y),null!=c&&(v.push(c[1].r),v.push(c[1].g),v.push(c[1].b),v.push(c[1].a))}}for(var F=0,O=0;s>O;){for(var N=(O++,0);i>N;){var B=N++,k=F*(i+1)+B,V=(F+1)*(i+1)+B,U=F*(i+1)+(B+1),z=(F+1)*(i+1)+(B+1);d.push(k),d.push(V),d.push(U),d.push(z),d.push(U),d.push(V)}F+=o?2:1}var W=function(e){var s;if(s=e?r/2:n/2,0!=s){var o,h=0,u=null;o=e?l[2]:l[0];var f=null;null!=c&&(f=e?c[2]:c[0]);var g,x=m.length/3|0;g=e?t/2:-t/2;var y=new L(0,g,0);m.push(y.x),m.push(y.y),m.push(y.z),_.push(0),_.push(e?1:-1),_.push(0),p.push(o.x+.5*(o.z-o.x)),p.push(o.y+.5*(o.w-o.y)),null!=c&&(v.push(f.r),v.push(f.g),v.push(f.b),v.push(f.a));for(var b=new Mt(.5,.5),S=0,w=i+1;w>S;){var C=S++;h=2*Math.PI*C*a/i;var T=Math.cos(-h),M=Math.sin(-h);u=new L(T*s,g,M*s);var P=new Mt(T*b.x+.5,M*b.y+.5);m.push(u.x),m.push(u.y),m.push(u.z),_.push(0),_.push(e?1:-1),_.push(0),p.push(o.x+(o.z-o.x)*P.x),p.push(o.y+(o.w-o.y)*P.y),null!=c&&(v.push(f.r),v.push(f.g),v.push(f.b),v.push(f.a))}for(var E=0;i>E;){var I=E++;e?(d.push(x),d.push(x+(I+2)),d.push(x+(I+1))):(d.push(x),d.push(x+(I+1)),d.push(x+(I+2)))}}};W(!1),W(!0),Fe._ComputeSides(h,m,d,_,p);var G=new Fe;return G.indices=d,G.positions=m,G.normals=_,G.uvs=p,null!=c&&(G.colors=v),G},Fe.CreateTorus=function(e){var t,r=[],n=[],i=[],s=[];t=null!=e.diameter?e.diameter:1;var o;o=null!=e.thickness?e.thickness:.5;var a;a=null!=e.tessellation?e.tessellation:16;var l;l=null!=e.sideOrientation?e.sideOrientation:0;for(var h=a+1,c=0,u=a+1;u>c;)for(var f=c++,d=f/a,m=f*Math.PI*2/a-Math.PI/2,_=Le.Translation(t/2,0,0).multiply(Le.RotationY(m)),p=0,v=a+1;v>p;){var g=p++,x=1-g/a,y=g*Math.PI*2/a+Math.PI,b=Math.cos(y),S=Math.sin(y),w=new L(b,S,0),C=w.scale(o/2),T=new Mt(d,x);C=L.TransformCoordinates(C,_),w=L.TransformNormal(w,_),n.push(C.x),n.push(C.y),n.push(C.z),i.push(w.x),i.push(w.y),i.push(w.z),s.push(T.x),s.push(T.y);var M=(f+1)%h,P=(g+1)%h;r.push(f*h+g),r.push(f*h+P),r.push(M*h+g),r.push(f*h+P),r.push(M*h+P),r.push(M*h+g)}Fe._ComputeSides(l,n,r,i,s);var E=new Fe;return E.indices=r,E.positions=n,E.normals=i,E.uvs=s,E},Fe.CreateLines=function(e){for(var t=[],r=[],n=e.points,i=0,s=n.length;s>i;){var o=i++;r.push(n[o].x),r.push(n[o].y),r.push(n[o].z),o>0&&(t.push(o-1),t.push(o))}var a=new Fe;return a.indices=t,a.positions=r,a},Fe.CreateDashedLines=function(e){var t,r=[],n=[];t=null!=e.dashSize?e.dashSize:3;var i;i=null!=e.gapSize?e.gapSize:1;var s;s=null!=e.dashNb?e.dashNb:200;for(var o=e.points,a=new L(0,0,0),l=0,h=0,c=0,u=0,f=0,d=0,m=0,_=o.length-1;_>m;){var p=m++;o[p+1].subtractToRef(o[p],a),l+=Math.sqrt(a.x*a.x+a.y*a.y+a.z*a.z)}c=l/s,u=t*c/(t+i);for(var v=0,g=o.length-1;g>v;){var x=v++;o[x+1].subtractToRef(o[x],a),h=Math.floor(Math.sqrt(a.x*a.x+a.y*a.y+a.z*a.z)/c),a.normalize();for(var y=0;h>y;){var b=y++;f=c*b,r.push(o[x].x+f*a.x),r.push(o[x].y+f*a.y),r.push(o[x].z+f*a.z),r.push(o[x].x+(f+u)*a.x),r.push(o[x].y+(f+u)*a.y),r.push(o[x].z+(f+u)*a.z),n.push(d),n.push(d+1),d+=2}}var S=new Fe;return S.positions=r,S.indices=n,S},Fe.CreateGround=function(e){var t,r=[],n=[],i=[],s=[];t=null!=e.width?e.width:1;var o;o=null!=e.height?e.height:1;var a;a=null!=e.subdivision?e.subdivision:1;for(var l=0,h=a+1;h>l;)for(var c=l++,u=0,f=a+1;f>u;){var d=u++,m=new L(d*t/a-t/2,0,(a-c)*o/a-o/2),_=new L(0,1,0);n.push(m.x),n.push(m.y),n.push(m.z),i.push(_.x),i.push(_.y),i.push(_.z),s.push(d/a),s.push(1-c/a)}for(var p=0;a>p;)for(var v=p++,g=0;a>g;){var x=g++;r.push(x+1+(v+1)*(a+1)),r.push(x+1+v*(a+1)),r.push(x+v*(a+1)),r.push(x+(v+1)*(a+1)),r.push(x+1+(v+1)*(a+1)),r.push(x+v*(a+1))}var y=new Fe;return y.indices=r,y.positions=n,y.normals=i,y.uvs=s,y},Fe.CreateTiledGround=function(e){var t,r=e.xmin,n=e.zmin,i=e.xmax,s=e.zmax;t=null!=e.subdivision?e.subdivision:{w:1,h:1};var o;o=null!=e.precision?e.precision:{w:1,h:1};var a=[],l=[],h=[],c=[];t.w<1?t.h=1:t.h=t.h,t.w<1?t.w=1:t.w=t.w,o.w<1?o.w=1:o.w=o.w,o.h<1?o.h=1:o.h=o.h;for(var u=(i-r)/t.w,f=(s-n)/t.h,d=function(e,t,r,n){for(var i=l.length/3,s=o.w+1,u=0,f=o.h;f>u;)for(var d=u++,m=0,_=o.w;_>m;){var p=m++,v=i+p+d*s|0,g=i+(p+1)+d*s|0,x=i+(p+1)+(d+1)*s|0,y=i+p+(d+1)*s|0;a.push(g),a.push(x),a.push(y),a.push(v),a.push(g),a.push(y)}for(var b=new L(0,0,0),S=new L(0,1,0),w=0,C=o.h+1;C>w;){var T=w++;b.z=T*(n-t)/o.h+t;for(var M=0,P=o.w+1;P>M;){var E=M++;b.x=E*(r-e)/o.w+e,b.y=0,l.push(b.x),l.push(b.y),l.push(b.z),h.push(S.x),h.push(S.y),h.push(S.z),c.push(E/o.w),c.push(T/o.h)}}},m=0,_=t.h;_>m;)for(var p=m++,v=0,g=t.w;g>v;){var x=v++;d(r+x*u,n+p*f,r+(x+1)*u,n+(p+1)*f)}var y=new Fe;return y.indices=a,y.positions=l,y.normals=h,y.uvs=c,y},Fe.CreateGroundFromHeightMap=function(t){var r=t.width,n=t.height,i=t.subdivisions,s=t.minHeight,o=t.maxHeight,a=t.buffer,l=t.bufferWidth,h=t.bufferHeight;e.log(a.length);for(var c=[],u=[],f=[],d=[],m=0,_=i+1;_>m;)for(var p=m++,v=0,g=i+1;g>v;){var x=v++,y=new L(x*r/i-r/2,0,(i-p)*n/i-n/2),b=(y.x+r/2)/r*(l-1)|0,S=(1-(y.z+n/2)/n)*(h-1)|0,w=4*(b+S*l)|0,C=a[w]/255,T=a[w+1]/255,M=a[w+2]/255,P=.3*C+.59*T+.11*M;y.y=s+(o-s)*P,u.push(y.x),u.push(y.y),u.push(y.z),f.push(0),f.push(0),f.push(0),d.push(x/i),d.push(1-p/i)}for(var E=0;i>E;)for(var I=E++,D=0;i>D;){var A=D++;c.push(A+1+(I+1)*(i+1)),c.push(A+1+I*(i+1)),c.push(A+I*(i+1)),c.push(A+(I+1)*(i+1)),c.push(A+1+(I+1)*(i+1)),c.push(A+I*(i+1))}Fe.ComputeNormals(u,c,f);var R=new Fe;return R.indices=c,R.positions=u,R.normals=f,R.uvs=d,R},Fe.CreatePlane=function(e){var t,r=[],n=[],i=[],s=[];t=null!=e.width?e.width:1;var o;o=null!=e.height?e.height:1;var a;a=null!=e.sideOrientation?e.sideOrientation:0;var l=t/2,h=o/2;n.push(-l),n.push(-h),n.push(0),i.push(0),i.push(0),i.push(-1),s.push(0),s.push(0),n.push(l),n.push(-h),n.push(0),i.push(0),i.push(0),i.push(-1),s.push(1),s.push(0),n.push(l),n.push(h),n.push(0),i.push(0),i.push(0),i.push(-1),s.push(1),s.push(1),n.push(-l),n.push(h),n.push(0),i.push(0),i.push(0),i.push(-1),s.push(0),s.push(1),r.push(0),r.push(1),r.push(2),r.push(0),r.push(2),r.push(3),Fe._ComputeSides(a,n,r,i,s);var c=new Fe;return c.indices=r,c.positions=n,c.normals=i,c.uvs=s,c},Fe.CreateDisc=function(e){var t,r=[],n=[],i=[],s=[];t=null!=e.radius?e.radius:.5;var o;o=null!=e.tessellation?e.tessellation:64;var a;a=null!=e.sideOrientation?e.sideOrientation:0,n.push(0),n.push(0),n.push(0),s.push(.5),s.push(.5);for(var l=2*Math.PI/o,h=0;h<2*Math.PI;){var c=Math.cos(h),u=Math.sin(h),f=(c+1)/2,d=(1-u)/2;n.push(t*c),n.push(t*u),n.push(0),s.push(f),s.push(d),h+=l}n.push(n[3]),n.push(n[4]),n.push(n[5]),s.push(s[2]),s.push(s[3]);for(var m=n.length/3|0,_=1,p=m-1;p>_;){var v=_++;r.push(v+1),r.push(0),r.push(v)}Fe.ComputeNormals(n,r,i),Fe._ComputeSides(a,n,r,i,s);var g=new Fe;return g.indices=r,g.positions=n,g.normals=i,g.uvs=s,g},Fe.CreateIcoSphere=function(e){var t,r=e.sideOrientation;t=null!=e.radius?e.radius:1;var n;n=null==e.flat?!0:e.flat;var i;i=null!=e.subdivisions?e.subdivisions:4;var s;s=null!=e.radiusX?e.radiusX:t;var o;o=null!=e.radiusY?e.radiusY:t;var a;a=null!=e.radiusZ?e.radiusZ:t;for(var l=(1+Math.sqrt(5))/2,h=[-1,l,0,1,l,0,-1,-l,0,1,-l,0,0,-1,-l,0,1,-l,0,-1,l,0,1,l,l,0,1,l,0,-1,-l,0,1,-l,0,-1],c=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],u=[4,1,2,1,6,3,5,4,4,3,3,2,7,4,3,0,1,0,0,1,5,0,5,2],f=.0947265625,d=.1640625,m=.048828125,_=.0498046875,p=[],v=[],g=[],x=[],y=0,b=[],S=[],w=0;3>w;){var C=w++;b[C]=new L(0,0,0),S[C]=new Mt(0,0)}for(var T=0;20>T;){for(var M=T++,P=0;3>P;){var E=P++,I=c[3*M+E];b[E].copyFromFloats(h[3*I],h[3*I+1],h[3*I+2]),b[E].normalize().scaleInPlace(t);var D=0;5==M&&2==E&&(D=1),15==M&&1==E&&(D=2),10==M&&1==E&&(D=3),14==M&&2==E&&(D=4),4==M&&1==E&&(D=1),7==M&&1==E&&(D=2),17==M&&2==E&&(D=3),8==M&&0==E&&(D=4),8==M&&1==E&&(D=5),18==M&&0==E&&(D=5),13==M&&2==E&&(D=5),14==M&&1==E&&(D=5),18==M&&2==E&&(D=5),S[E].copyFromFloats((u[2*I]+D)*f+m,(u[2*I+1]+D)*d+_)}for(var A=function(e,t,r,l){var h,c=L.Lerp(b[0],b[2],t/i),u=L.Lerp(b[1],b[2],t/i);h=i==t?b[2]:L.Lerp(c,u,e/(i-t)),h.normalize(),h.x*=s,h.y*=o,h.z*=a;var f=null;if(n){var d=L.Lerp(b[0],b[2],l/i),m=L.Lerp(b[1],b[2],l/i),_=L.Lerp(d,m,r/(i-l));f=L.Normalize(_)}else f=L.Normalize(h);var w,C=Mt.Lerp(S[0],S[2],t/i),T=Mt.Lerp(S[1],S[2],t/i);w=i==t?S[2]:Mt.Lerp(C,T,e/(i-t)),v.push(h.x),v.push(h.y),v.push(h.z),g.push(f.x),g.push(f.y),g.push(f.z),x.push(w.x),x.push(w.y),p.push(y),y++},R=0;i>R;)for(var F=R++,O=0;i>O+F;)A(O,F,O+.3333333333333333,F+.3333333333333333),A(O+1,F,O+.3333333333333333,F+.3333333333333333),A(O,F+1,O+.3333333333333333,F+.3333333333333333),i>O+F+1&&(A(O+1,F,O+.6666666666666666,F+.6666666666666666),A(O+1,F+1,O+.6666666666666666,F+.6666666666666666),A(O,F+1,O+.6666666666666666,F+.6666666666666666)),++O}Fe._ComputeSides(r,v,p,g,x);var N=new Fe;return N.indices=p,N.positions=v,N.normals=g,N.uvs=x,N},Fe.CreatePolyhedron=function(e){var t=[];t[0]={vertex:[[0,0,1.732051],[1.632993,0,-.5773503],[-.8164966,1.414214,-.5773503],[-.8164966,-1.414214,-.5773503]],face:[[0,1,2],[0,2,3],[0,3,1],[1,3,2]]},t[1]={vertex:[[0,0,1.414214],[1.414214,0,0],[0,1.414214,0],[-1.414214,0,0],[0,-1.414214,0],[0,0,-1.414214]],face:[[0,1,2],[0,2,3],[0,3,4],[0,4,1],[1,4,5],[1,5,2],[2,5,3],[3,5,4]]},t[2]={vertex:[[0,0,1.070466],[.7136442,0,.7978784],[-.3568221,.618034,.7978784],[-.3568221,-.618034,.7978784],[.7978784,.618034,.3568221],[.7978784,-.618034,.3568221],[-.9341724,.381966,.3568221],[.1362939,1,.3568221],[.1362939,-1,.3568221],[-.9341724,-.381966,.3568221],[.9341724,.381966,-.3568221],[.9341724,-.381966,-.3568221],[-.7978784,.618034,-.3568221],[-.1362939,1,-.3568221],[-.1362939,-1,-.3568221],[-.7978784,-.618034,-.3568221],[.3568221,.618034,-.7978784],[.3568221,-.618034,-.7978784],[-.7136442,0,-.7978784],[0,0,-1.070466]],face:[[0,1,4,7,2],[0,2,6,9,3],[0,3,8,5,1],[1,5,11,10,4],[2,7,13,12,6],[3,9,15,14,8],[4,10,16,13,7],[5,8,14,17,11],[6,12,18,15,9],[10,11,17,19,16],[12,13,16,19,18],[14,15,18,19,17]]},t[3]={vertex:[[0,0,1.175571],[1.051462,0,.5257311],[.3249197,1,.5257311],[-.8506508,.618034,.5257311],[-.8506508,-.618034,.5257311],[.3249197,-1,.5257311],[.8506508,.618034,-.5257311],[.8506508,-.618034,-.5257311],[-.3249197,1,-.5257311],[-1.051462,0,-.5257311],[-.3249197,-1,-.5257311],[0,0,-1.175571]],face:[[0,1,2],[0,2,3],[0,3,4],[0,4,5],[0,5,1],[1,5,7],[1,7,6],[1,6,2],[2,6,8],[2,8,3],[3,8,9],[3,9,4],[4,9,10],[4,10,5],[5,10,7],[6,7,11],[6,11,8],[7,10,11],[8,11,9],[9,11,10]]},t[4]={vertex:[[0,0,1.070722],[.7148135,0,.7971752],[-.104682,.7071068,.7971752],[-.6841528,.2071068,.7971752],[-.104682,-.7071068,.7971752],[.6101315,.7071068,.5236279],[1.04156,.2071068,.1367736],[.6101315,-.7071068,.5236279],[-.3574067,1,.1367736],[-.7888348,-.5,.5236279],[-.9368776,.5,.1367736],[-.3574067,-1,.1367736],[.3574067,1,-.1367736],[.9368776,-.5,-.1367736],[.7888348,.5,-.5236279],[.3574067,-1,-.1367736],[-.6101315,.7071068,-.5236279],[-1.04156,-.2071068,-.1367736],[-.6101315,-.7071068,-.5236279],[.104682,.7071068,-.7971752],[.6841528,-.2071068,-.7971752],[.104682,-.7071068,-.7971752],[-.7148135,0,-.7971752],[0,0,-1.070722]],face:[[0,2,3],[1,6,5],[4,9,11],[7,15,13],[8,16,10],[12,14,19],[17,22,18],[20,21,23],[0,1,5,2],[0,3,9,4],[0,4,7,1],[1,7,13,6],[2,5,12,8],[2,8,10,3],[3,10,17,9],[4,11,15,7],[5,6,14,12],[6,13,20,14],[8,12,19,16],[9,17,18,11],[10,16,22,17],[11,18,21,15],[13,15,21,20],[14,20,23,19],[16,19,23,22],[18,22,23,21]]},t[5]={vertex:[[0,0,1.322876],[1.309307,0,.1889822],[-.9819805,.8660254,.1889822],[.1636634,-1.299038,.1889822],[.3273268,.8660254,-.9449112],[-.8183171,-.4330127,-.9449112]],face:[[0,3,1],[2,4,5],[0,1,4,2],[0,2,5,3],[1,3,5,4]]},t[6]={vertex:[[0,0,1.159953],[1.013464,0,.5642542],[-.3501431,.9510565,.5642542],[-.7715208,-.6571639,.5642542],[.6633206,.9510565,-.03144481],[.8682979,-.6571639,-.3996071],[-1.121664,.2938926,-.03144481],[-.2348831,-1.063314,-.3996071],[.5181548,.2938926,-.9953061],[-.5850262,-.112257,-.9953061]],face:[[0,1,4,2],[0,2,6,3],[1,5,8,4],[3,6,9,7],[5,7,9,8],[0,3,7,5,1],[2,4,8,9,6]]},t[7]={vertex:[[0,0,1.118034],[.8944272,0,.6708204],[-.2236068,.8660254,.6708204],[-.7826238,-.4330127,.6708204],[.6708204,.8660254,.2236068],[1.006231,-.4330127,-.2236068],[-1.006231,.4330127,.2236068],[-.6708204,-.8660254,-.2236068],[.7826238,.4330127,-.6708204],[.2236068,-.8660254,-.6708204],[-.8944272,0,-.6708204],[0,0,-1.118034]],face:[[0,1,4,2],[0,2,6,3],[1,5,8,4],[3,6,10,7],[5,9,11,8],[7,10,11,9],[0,3,7,9,5,1],[2,4,8,11,10,6]]},t[8]={vertex:[[-.729665,.670121,.319155],[-.655235,-.29213,-.754096],[-.093922,-.607123,.537818],[.702196,.595691,.485187],[.776626,-.36656,-.588064]],face:[[1,4,2],[0,1,2],[3,0,2],[4,3,2],[4,1,0,3]]},t[9]={vertex:[[-.868849,-.100041,.61257],[-.329458,.976099,.28078],[-.26629,-.013796,-.477654],[-.13392,-1.034115,.229829],[.738834,.707117,-.307018],[.859683,-.535264,-.338508]],face:[[3,0,2],[5,3,2],[4,5,2],[1,4,2],[0,1,2],[0,3,5,4,1]]},t[10]={vertex:[[-.610389,.243975,.531213],[-.187812,-.48795,-.664016],[-.187812,.9759,-.664016],[.187812,-.9759,.664016],[.798201,.243975,.132803]],face:[[1,3,0],[3,4,0],[3,1,4],[0,2,1],[0,4,2],[2,4,1]]},t[11]={vertex:[[-1.028778,.392027,-.048786],[-.640503,-.646161,.621837],[-.125162,-.395663,-.540059],[.004683,.888447,-.651988],[.125161,.395663,.540059],[.632925,-.791376,.433102],[1.031672,.157063,-.354165]],face:[[3,2,0],[2,1,0],[2,5,1],[0,4,3],[0,1,4],[4,1,5],[2,3,6],[3,4,6],[5,2,6],[4,5,6]]},t[12]={vertex:[[-.669867,.334933,-.529576],[-.669867,.334933,.529577],[-.4043,1.212901,0],[-.334933,-.669867,-.529576],[-.334933,-.669867,.529577],[.334933,.669867,-.529576],[.334933,.669867,.529577],[.4043,-1.212901,0],[.669867,-.334933,-.529576],[.669867,-.334933,.529577]],face:[[8,9,7],[6,5,2],[3,8,7],[5,0,2],[4,3,7],[0,1,2],[9,4,7],[1,6,2],[9,8,5,6],[8,3,0,5],[3,4,1,0],[4,9,6,1]]},t[13]={vertex:[[-.931836,.219976,-.264632],[-.636706,.318353,.692816],[-.613483,-.735083,-.264632],[-.326545,.979634,0],[-.318353,-.636706,.692816],[-.159176,.477529,-.856368],[.159176,-.477529,-.856368],[.318353,.636706,.692816],[.326545,-.979634,0],[.613482,.735082,-.264632],[.636706,-.318353,.692816],[.931835,-.219977,-.264632]],face:[[11,10,8],[7,9,3],[6,11,8],[9,5,3],[2,6,8],[5,0,3],[4,2,8],[0,1,3],[10,4,8],[1,7,3],[10,11,9,7],[11,6,5,9],[6,2,0,5],[2,4,1,0],[4,10,7,1]]},t[14]={vertex:[[-.93465,.300459,-.271185],[-.838689,-.260219,-.516017],[-.711319,.717591,.128359],[-.710334,-.156922,.080946],[-.599799,.556003,-.725148],[-.503838,-.004675,-.969981],[-.487004,.26021,.48049],[-.460089,-.750282,-.512622],[-.376468,.973135,-.325605],[-.331735,-.646985,.084342],[-.254001,.831847,.530001],[-.125239,-.494738,-.966586],[.029622,.027949,.730817],[.056536,-.982543,-.262295],[.08085,1.087391,.076037],[.125583,-.532729,.485984],[.262625,.599586,.780328],[.391387,-.726999,-.716259],[.513854,-.868287,.139347],[.597475,.85513,.326364],[.641224,.109523,.783723],[.737185,-.451155,.538891],[.848705,-.612742,-.314616],[.976075,.365067,.32976],[1.072036,-.19561,.084927]],face:[[15,18,21],[12,20,16],[6,10,2],[3,0,1],[9,7,13],[2,8,4,0],[0,4,5,1],[1,5,11,7],[7,11,17,13],[13,17,22,18],[18,22,24,21],[21,24,23,20],[20,23,19,16],[16,19,14,10],[10,14,8,2],[15,9,13,18],[12,15,21,20],[6,12,16,10],[3,6,2,0],[9,3,1,7],[9,15,12,6,3],[22,17,11,5,4,8,14,19,23,24]]};var r;r=null!=e.type?e.type:0,0>r&&(r=0),r>=t.length&&(r=t.length-1);var n;n=null!=e.size?e.size:1;var i;i=null!=e.sizeX?e.sizeX:n;var s;s=null!=e.sizeY?e.sizeY:n;var o;o=null!=e.sizeZ?e.sizeZ:n;var a;a=null!=e.custom?e.custom:t[r];var l,h=a.face.length;l=null!=e.faceUV?e.faceUV:[];var c;c=null!=e.faceColors?e.faceColors:[];var u;u=null!=e.sideOrientation?e.sideOrientation:0;for(var f=[],d=[],m=[],_=[],p=[],v=0,g=0,x=[],y=0,b=0,S=0,w=0,C=0,T=0,M=0;h>M;){var P=M++;null!=c&&null==c[P]&&(c[P]=new Oe(1,1,1,1)),null!=l&&null==l[P]&&(l[P]=new lt(0,0,1,1))}for(var E=0;h>E;){var I=E++,D=a.face[I].length;S=2*Math.PI/D,w=.5*Math.tan(S/2),C=.5;for(var A=0;D>A;){var R=A++;f.push(a.vertex[a.face[I][R]][0]*i),f.push(a.vertex[a.face[I][R]][1]*s),f.push(a.vertex[a.face[I][R]][2]*o),x.push(v),v++,y=l[I].x+(l[I].z-l[I].x)*(.5+w),b=l[I].y+(l[I].w-l[I].y)*(C-.5),_.push(y),_.push(b),T=w*Math.cos(S)-C*Math.sin(S),C=w*Math.sin(S)+C*Math.cos(S),w=T,null!=c[I]&&(p.push(c[I].r),p.push(c[I].g),p.push(c[I].b),p.push(c[I].a))}for(var L=0,F=D-2;F>L;){var O=L++;d.push(x[g]),d.push(x[O+2+g]),d.push(x[O+1+g])}g+=D}Fe.ComputeNormals(f,d,m),Fe._ComputeSides(u,f,d,m,_);var N=new Fe;return N.positions=f,N.indices=d,N.normals=m,N.uvs=_,c.length>0&&(N.colors=p),N},Fe.CreateTorusKnot=function(e){var t,r=[],n=[],i=[],s=[];t=null!=e.radius?e.radius:2;var o;o=null!=e.tube?e.tube:.5;var a;a=null!=e.radialSegments?e.radialSegments:32;var l;l=null!=e.tubularSegments?e.tubularSegments:32;var h;h=null!=e.p?e.p:2;var c;c=null!=e.q?e.q:3;var u;u=null!=e.sideOrientation?e.sideOrientation:0;for(var f=function(e){var r=Math.cos(e),n=Math.sin(e),i=c/h*e,s=Math.cos(i),o=t*(2+s)*.5*r,a=t*(2+s)*n*.5,l=t*Math.sin(i)*.5;return new L(o,a,l)},d=0,m=a+1;m>d;){var _=d++,p=_%a,v=p/a*2*h*Math.PI,g=f(v),x=f(v+.01),y=new L(x.x-g.x,x.y-g.y,x.z-g.z),b=new L(x.x+g.x,x.y+g.y,x.z+g.z),S=L.Cross(y,b);b=L.Cross(S,y),S.normalize(),b.normalize();for(var w=0;l>w;){var C=w++,T=C%l,M=T/l*2*Math.PI,P=-o*Math.cos(M),E=o*Math.sin(M);n.push(g.x+P*b.x+E*S.x),n.push(g.y+P*b.y+E*S.y),n.push(g.z+P*b.z+E*S.z),s.push(_/a),s.push(C/l)}}for(var I=0;a>I;)for(var D=I++,A=0;l>A;){var R=A++,F=(R+1)%l,O=D*l+R,N=(D+1)*l+R,B=(D+1)*l+F,k=D*l+F;r.push(k),r.push(N),r.push(O),r.push(k),r.push(B),r.push(N)}Fe.ComputeNormals(n,r,i),Fe._ComputeSides(u,n,r,i,s);var V=new Fe;return V.indices=r,V.positions=n,V.normals=i,V.uvs=s,V},Fe.ComputeNormals=function(e,t,r){for(var n=0,i=0,s=0,o=0,a=0,l=0,h=0,c=0,u=0,f=0,d=0,m=0,_=0,p=0,v=e.length;v>p;){var g=p++;r[g]=0}for(var x=t.length/3|0,y=0;x>y;){var b=y++;d=t[3*b],m=t[3*b+1],_=t[3*b+2],n=e[3*d]-e[3*m],i=e[3*d+1]-e[3*m+1],s=e[3*d+2]-e[3*m+2],o=e[3*_]-e[3*m],a=e[3*_+1]-e[3*m+1],l=e[3*_+2]-e[3*m+2],h=i*l-s*a,c=s*o-n*l,u=n*a-i*o,f=Math.sqrt(h*h+c*c+u*u),f=0==f?1:f,h/=f,c/=f,u/=f,r[3*d]+=h,r[3*d+1]+=c,r[3*d+2]+=u,r[3*m]+=h,r[3*m+1]+=c,r[3*m+2]+=u,r[3*_]+=h,r[3*_+1]+=c,r[3*_+2]+=u}for(var S=r.length/3|0,w=0;S>w;){var C=w++;h=r[3*C],c=r[3*C+1],u=r[3*C+2],f=Math.sqrt(h*h+c*c+u*u),f=0==f?1:f,h/=f,c/=f,u/=f,r[3*C]=h,r[3*C+1]=c,r[3*C+2]=u}},Fe._ComputeSides=function(e,t,r,n,i){null==e&&(e=0);var s=r.length,o=n.length;switch(e){case 0:break;case 1:for(var a=0,l=0;s>l;)a=r[l],r[l]=r[l+2],r[l+2]=a,l+=3;for(var h=0;o>h;){var c=h++;n[c]=-n[c]}break;case 2:for(var u=t.length,f=u/3|0,d=0;u>d;){var m=d++;t[u+m]=t[m]}for(var _=0;s>_;)r[_+s]=r[_+2]+f,r[_+1+s]=r[_+1]+f,r[_+2+s]=r[_]+f,_+=3;for(var p=0;o>p;){var v=p++;n[o+v]=-n[v]}for(var g=i.length,x=0;g>x;){var y=x++;i[y+g]=i[y]}}},Fe.ImportVertexData=function(e,t){var r=new Fe,n=e.positions;null!=n&&r.set(n,"position");var i=e.normals;null!=i&&r.set(i,"normal");var s=e.uvs;null!=s&&r.set(s,"uv");var o=e.uv2s;null!=o&&r.set(o,"uv2");var a=e.uv3s;null!=a&&r.set(a,"uv3");var l=e.uv4s;null!=l&&r.set(l,"uv4");var h=e.uv5s;null!=h&&r.set(h,"uv5");var c=e.uv6s;null!=c&&r.set(c,"uv6");var u=e.colors;null!=u&&r.set(Oe.CheckColors4(u,n.length/3|0),"color");var f=e.matricesIndices;null!=f&&r.set(f,"matricesIndices");var d=e.matricesWeights;null!=d&&r.set(d,"matricesWeights");var m=e.indices;null!=m&&(r.indices=m),t.setAllVerticesData(r,e.updatable)},Fe.prototype={set:function(e,t){switch(t){case"position":this.positions=e;break;case"normal":this.normals=e;break;case"uv":this.uvs=e;break;case"uv2":this.uv2s=e;break;case"uv3":this.uv3s=e;break;case"uv4":this.uv4s=e;break;case"uv5":this.uv5s=e;break;case"uv6":this.uv6s=e;break;case"color":this.colors=e;break;case"matricesIndices":this.matricesIndices=e;break;case"matricesWeights":this.matricesWeights=e;break;case"matricesIndicesExtra":this.matricesIndicesExtra=e;break;case"matricesWeightsExtra":this.matricesWeightsExtra=e}},applyToMesh:function(e,t){null==t&&(t=!1),this._applyTo(e,t)},applyToGeometry:function(e,t){null==t&&(t=!1),this._applyTo(e,t)},updateMesh:function(e,t,r){null==r&&(r=!1),this._update(e)},updateGeometry:function(e,t,r){null==r&&(r=!1),this._update(e)},_applyTo:function(e,t){null==t&&(t=!1),null!=this.positions&&e.setVerticesData("position",this.positions,t),null!=this.normals&&e.setVerticesData("normal",this.normals,t),null!=this.uvs&&e.setVerticesData("uv",this.uvs,t),null!=this.uv2s&&e.setVerticesData("uv2",this.uv2s,t),null!=this.uv3s&&e.setVerticesData("uv3",this.uv3s,t),null!=this.uv4s&&e.setVerticesData("uv4",this.uv4s,t),null!=this.uv5s&&e.setVerticesData("uv5",this.uv5s,t),null!=this.uv6s&&e.setVerticesData("uv6",this.uv6s,t),null!=this.colors&&e.setVerticesData("color",this.colors,t),null!=this.matricesIndices&&e.setVerticesData("matricesIndices",this.matricesIndices,t),null!=this.matricesWeights&&e.setVerticesData("matricesWeights",this.matricesWeights,t),null!=this.matricesIndicesExtra&&e.setVerticesData("matricesIndicesExtra",this.matricesIndicesExtra,t),null!=this.matricesWeightsExtra&&e.setVerticesData("matricesWeightsExtra",this.matricesWeightsExtra,t),null!=this.indices&&e.setIndices(this.indices)},_update:function(e,t,r){null==r&&(r=!1),null!=this.positions&&e.updateVerticesData("position",this.positions,t,r),null!=this.normals&&e.updateVerticesData("normal",this.normals,t,r),null!=this.uvs&&e.updateVerticesData("uv",this.uvs,t,r),null!=this.uv2s&&e.updateVerticesData("uv2",this.uv2s,t,r),null!=this.uv3s&&e.updateVerticesData("uv3",this.uv3s,t,r),null!=this.uv4s&&e.updateVerticesData("uv4",this.uv4s,t,r),null!=this.uv5s&&e.updateVerticesData("uv5",this.uv5s,t,r),null!=this.uv6s&&e.updateVerticesData("uv6",this.uv6s,t,r),null!=this.colors&&e.updateVerticesData("color",this.colors,t,r),null!=this.matricesIndices&&e.updateVerticesData("matricesIndices",this.matricesIndices,t,r),null!=this.matricesWeights&&e.updateVerticesData("matricesWeights",this.matricesWeights,t,r),null!=this.matricesIndicesExtra&&e.updateVerticesData("matricesIndicesExtra",this.matricesIndicesExtra,t,r),null!=this.matricesWeightsExtra&&e.updateVerticesData("matricesWeightsExtra",this.matricesWeightsExtra,t,r),null!=this.indices&&e.setIndices(this.indices)},transform:function(e){if(null!=this.positions)for(var t=new L(0,0,0),r=0;r<this.positions.length;)L.FromArrayToRef(this.positions,r,t),L.TransformCoordinatesToRef(t,e,Fe.transformed),this.positions[r]=Fe.transformed.x,this.positions[r+1]=Fe.transformed.y,this.positions[r+2]=Fe.transformed.z,r+=3;if(null!=this.normals)for(var n=new L(0,0,0),i=0;i<this.normals.length;)L.FromArrayToRef(this.normals,i,n),L.TransformNormalToRef(n,e,Fe.transformed),this.normals[i]=Fe.transformed.x,this.normals[i+1]=Fe.transformed.y,this.normals[i+2]=Fe.transformed.z,i+=3},merge:function(e){if(null!=e.indices){null==this.indices&&(this.indices=[]);var t;t=0|(null!=this.positions?this.positions.length/3:0);for(var r=0,n=e.indices.length;n>r;){var i=r++;this.indices.push(e.indices[i]+t)}}if(null!=e.positions){null==this.positions&&(this.positions=[]);for(var s=0,o=e.positions.length;o>s;){var a=s++;this.positions.push(e.positions[a])}}if(null!=e.normals){null==this.normals&&(this.normals=[]);for(var l=0,h=e.normals.length;h>l;){var c=l++;this.normals.push(e.normals[c])}}if(null!=e.uvs){null==this.uvs&&(this.uvs=[]);for(var u=0,f=e.uvs.length;f>u;){var d=u++;this.uvs.push(e.uvs[d])}}if(null!=e.uv2s){null==this.uv2s&&(this.uv2s=[]);for(var m=0,_=e.uv2s.length;_>m;){var p=m++;this.uv2s.push(e.uv2s[p])}}if(null!=e.uv3s){null==this.uv3s&&(this.uv3s=[]);for(var v=0,g=e.uv3s.length;g>v;){var x=v++;this.uv3s.push(e.uv3s[x])}}if(null!=e.uv4s){null==this.uv4s&&(this.uv4s=[]);for(var y=0,b=e.uv4s.length;b>y;){var S=y++;this.uv4s.push(e.uv4s[S])}}if(null!=e.uv5s){null==this.uv5s&&(this.uv5s=[]);for(var w=0,C=e.uv5s.length;C>w;){var T=w++;this.uv5s.push(e.uv5s[T])}}if(null!=e.uv6s){null==this.uv6s&&(this.uv6s=[]);for(var M=0,P=e.uv6s.length;P>M;){var E=M++;this.uv6s.push(e.uv6s[E])}}if(null!=e.matricesIndices){null==this.matricesIndices&&(this.matricesIndices=[]);
for(var I=0,D=e.matricesIndices.length;D>I;){var A=I++;this.matricesIndices.push(e.matricesIndices[A])}}if(null!=e.matricesWeights){null==this.matricesWeights&&(this.matricesWeights=[]);for(var R=0,L=e.matricesWeights.length;L>R;){var F=R++;this.matricesWeights.push(e.matricesWeights[F])}}if(null!=e.matricesIndicesExtra){null==this.matricesIndicesExtra&&(this.matricesIndicesExtra=[]);for(var O=0,N=e.matricesIndicesExtra.length;N>O;){var B=O++;this.matricesIndicesExtra.push(e.matricesIndicesExtra[B])}}if(null!=e.matricesWeightsExtra){null==this.matricesWeightsExtra&&(this.matricesWeightsExtra=[]);for(var k=0,V=e.matricesWeightsExtra.length;V>k;){var U=k++;this.matricesWeightsExtra.push(e.matricesWeightsExtra[U])}}if(null!=e.colors){null==this.colors&&(this.colors=[]);for(var z=0,W=e.colors.length;W>z;){var G=z++;this.colors.push(e.colors[G])}}},__class__:Fe};var Oe=t.BABYLON.Color4=function(e,t,r,n){null==n&&(n=1),null==r&&(r=0),null==t&&(t=0),null==e&&(e=0),this.r=e,this.g=t,this.b=r,this.a=n};s["com.babylonhx.math.Color4"]=Oe,Oe.__name__=["com","babylonhx","math","Color4"],Oe.FromHexString=function(t){if("#"!=t.substring(0,1)||9!=t.length)return e.log("Color4.FromHexString must be called with a string like #FFFFFFFF"),new Oe(0,0,0,0);var r=u.parseInt(t.substring(1,3)),n=u.parseInt(t.substring(3,5)),i=u.parseInt(t.substring(5,7)),s=u.parseInt(t.substring(7,9));return Oe.FromInts(r,n,i,s)},Oe.Lerp=function(e,t,r){var n=new Oe(0,0,0,0);return Oe.LerpToRef(e,t,r,n),n},Oe.LerpToRef=function(e,t,r,n){return n.r=e.r+(t.r-e.r)*r,n.g=e.g+(t.g-e.g)*r,n.b=e.b+(t.b-e.b)*r,n.a=e.a+(t.a-e.a)*r,n},Oe.FromArray=function(e,t){return null==t&&(t=0),new Oe(e[t],e[t+1],e[t+2],e[t+3])},Oe.FromInts=function(e,t,r,n){return new Oe(e/255,t/255,r/255,n/255)},Oe.CheckColors4=function(e,t){if(e.length==3*t){for(var r=[],n=0;n<e.length;){var i=n/3*4|0;r[i]=e[n],r[i+1]=e[n+1],r[i+2]=e[n+2],r[i+3]=1,n+=3}return r}return e},Oe.prototype={addInPlace:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this.a+=e.a,this},asArray:function(){var e=[];return this.toArray(e,0),e},toArray:function(e,t){return null==t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e[t+3]=this.a,this},add:function(e){return new Oe(this.r+e.r,this.g+e.g,this.b+e.b,this.a+e.a)},subtract:function(e){return new Oe(this.r-e.r,this.g-e.g,this.b-e.b,this.a-e.a)},subtractToRef:function(e,t){return t.r=this.r-e.r,t.g=this.g-e.g,t.b=this.b-e.b,t.a=this.a-e.a,this},scale:function(e){return new Oe(this.r*e,this.g*e,this.b*e,this.a*e)},scaleToRef:function(e,t){return t.r=this.r*e,t.g=this.g*e,t.b=this.b*e,t.a=this.a*e,this},toString:function(){return"{R:"+this.r+" G:"+this.g+" B:"+this.b+" A:"+this.a+"}"},clone:function(){return new Oe(this.r,this.g,this.b,this.a)},copyFrom:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this.a=e.a,this},toHexString:function(){var e=255*this.r|0,t=255*this.g|0,r=255*this.b|0,n=255*this.a|0;return"#"+Ae.ToHex(e)+Ae.ToHex(t)+Ae.ToHex(r)+Ae.ToHex(n)},__class__:Oe};var Ne=t.BABYLON.Sphere=function(e,t,r,n,i,s,o){null==o&&(o=0),this.segments=r,this.diameter=n,this.side=o,Pe.call(this,e,t,this._regenerateVertexData(),i,s)};s["com.babylonhx.mesh.primitives.Sphere"]=Ne,Ne.__name__=["com","babylonhx","mesh","primitives","Sphere"],Ne.ParseSphere=function(e,t){if(null==Me.ParseGeometry(e,t))return null;var r=new Ne(e.id,t,e.segments,e.diameter,e.canBeRegenerated,null);return Ie.AddTagsTo(r,e.tags),t.pushGeometry(r,!0),r},Ne.__super__=Pe,Ne.prototype=n(Pe.prototype,{_regenerateVertexData:function(){return Fe.CreateSphere({segments:this.segments,diameter:this.diameter,sideOrientation:this.side})},copy:function(e){return new Ne(e,this._scene,this.segments,this.diameter,this.canBeRegenerated(),null,this.side)},__class__:Ne});var Be=t.BABYLON.Cylinder=function(e,t,r,n,i,s,o,a,l,h){null==h&&(h=0),null==o&&(o=1),this.height=r,this.diameterTop=n,this.diameterBottom=i,this.tessellation=s,this.subdivisions=o,this.side=h,Pe.call(this,e,t,this._regenerateVertexData(),a,l)};s["com.babylonhx.mesh.primitives.Cylinder"]=Be,Be.__name__=["com","babylonhx","mesh","primitives","Cylinder"],Be.ParseCylinder=function(e,t){if(null==Me.ParseGeometry(e,t))return null;var r=new Be(e.id,t,e.height,e.diameterTop,e.diameterBottom,e.tessellation,e.subdivisions,e.canBeRegenerated,null);return Ie.AddTagsTo(r,e.tags),t.pushGeometry(r,!0),r},Be.__super__=Pe,Be.prototype=n(Pe.prototype,{_regenerateVertexData:function(){return Fe.CreateCylinder({height:this.height,diameterTop:this.diameterTop,diameterBottom:this.diameterBottom,tesselation:this.tessellation,subdivisions:this.subdivisions,sideOrientation:this.side})},copy:function(e){return new Be(e,this._scene,this.height,this.diameterTop,this.diameterBottom,this.tessellation,this.subdivisions,this.canBeRegenerated(),null,this.side)},__class__:Be});var ke=t.BABYLON.Torus=function(e,t,r,n,i,s,o,a){null==a&&(a=0),this.diameter=r,this.thickness=n,this.tessellation=i,this.side=a,Pe.call(this,e,t,this._regenerateVertexData(),s,o)};s["com.babylonhx.mesh.primitives.Torus"]=ke,ke.__name__=["com","babylonhx","mesh","primitives","Torus"],ke.ParseTorus=function(e,t){if(null==Me.ParseGeometry(e,t))return null;var r=new ke(e.id,t,e.diameter,e.thickness,e.tessellation,e.canBeRegenerated,null);return Ie.AddTagsTo(r,e.tags),t.pushGeometry(r,!0),r},ke.__super__=Pe,ke.prototype=n(Pe.prototype,{_regenerateVertexData:function(){return Fe.CreateTorus({diameter:this.diameter,thickness:this.thickness,tesselation:this.tessellation,sideOrientation:this.side})},copy:function(e){return new ke(e,this._scene,this.diameter,this.thickness,this.tessellation,this.canBeRegenerated(),null,this.side)},__class__:ke});var Ve=t.BABYLON.Ground=function(e,t,r,n,i,s,o){this.width=r,this.height=n,this.subdivisions=i,Pe.call(this,e,t,this._regenerateVertexData(),s,o)};s["com.babylonhx.mesh.primitives.Ground"]=Ve,Ve.__name__=["com","babylonhx","mesh","primitives","Ground"],Ve.ParseGround=function(e,t){if(null==Me.ParseGeometry(e,t))return null;var r=new Ve(e.id,t,e.width,e.height,e.subdivisions,e.canBeRegenerated,null);return Ie.AddTagsTo(r,e.tags),t.pushGeometry(r,!0),r},Ve.__super__=Pe,Ve.prototype=n(Pe.prototype,{_regenerateVertexData:function(){return Fe.CreateGround({width:this.width,height:this.height,subdivisions:this.subdivisions})},copy:function(e){return new Ve(e,this._scene,this.width,this.height,this.subdivisions,this.canBeRegenerated(),null)},__class__:Ve});var Ue=t.BABYLON.Plane=function(e,t,r,n,i,s){null==s&&(s=0),this.size=r,this.side=s,Pe.call(this,e,t,this._regenerateVertexData(),n,i)};s["com.babylonhx.mesh.primitives.Plane"]=Ue,Ue.__name__=["com","babylonhx","mesh","primitives","Plane"],Ue.ParsePlane=function(e,t){if(null==Me.ParseGeometry(e,t))return null;var r=new Ue(e.id,t,e.size,e.canBeRegenerated,null);return Ie.AddTagsTo(r,e.tags),t.pushGeometry(r,!0),r},Ue.__super__=Pe,Ue.prototype=n(Pe.prototype,{_regenerateVertexData:function(){return Fe.CreatePlane({width:this.size,height:this.size,sideOrientation:this.side})},copy:function(e){return new Ue(e,this._scene,this.size,this.canBeRegenerated(),null,this.side)},__class__:Ue});var ze=t.BABYLON.TorusKnot=function(e,t,r,n,i,s,o,a,l,h,c){null==c&&(c=0),this.radius=r,this.tube=n,this.side=c,this.radialSegments=i,this.tubularSegments=s,this.p=o,this.q=a,Pe.call(this,e,t,this._regenerateVertexData(),l,h)};s["com.babylonhx.mesh.primitives.TorusKnot"]=ze,ze.__name__=["com","babylonhx","mesh","primitives","TorusKnot"],ze.ParseTorusKnot=function(e,t){if(null==Me.ParseGeometry(e,t))return null;var r=new ze(e.id,t,e.radius,e.tube,e.radialSegments,e.tubularSegments,e.p,e.q,e.canBeRegenerated,null);return Ie.AddTagsTo(r,e.tags),t.pushGeometry(r,!0),r},ze.__super__=Pe,ze.prototype=n(Pe.prototype,{_regenerateVertexData:function(){return Fe.CreateTorusKnot({radius:this.radius,tube:this.tube,radialSegments:this.radialSegments,tubularSegments:this.tubularSegments,p:this.p,q:this.q,sideOrientation:this.side})},copy:function(e){return new ze(e,this._scene,this.radius,this.tube,this.radialSegments,this.tubularSegments,this.p,this.q,this.canBeRegenerated(),null,this.side)},__class__:ze});var We=t.BABYLON.Material=function(e,t,r){null==r&&(r=!1),this.zOffset=0,this.pointSize=1,this._fillMode=0,this._wasPreviouslyReady=!1,this.fogEnabled=!0,this.disableDepthWrite=!1,this.alphaMode=2,this.sideOrientation=1,this.backFaceCulling=!0,this.alpha=1,this.state="",this.checkReadyOnlyOnce=!1,this.checkReadyOnEveryCall=!1,this.id=e,this.name=e,this._scene=t,r||t.materials.push(this),Object.defineProperty(this,"wireframe",{get:this.get_wireframe,set:this.set_wireframe}),Object.defineProperty(this,"fillMode",{get:this.get_fillMode,set:this.set_fillMode}),Object.defineProperty(this,"pointsCloud",{get:this.get_pointsCloud,set:this.set_pointsCloud})};s["com.babylonhx.materials.Material"]=We,We.__name__=["com","babylonhx","materials","Material"],We.__interfaces__=[g],We.ParseMultiMaterial=function(e,t){var r=new Je(e.name,t);r.id=e.id,Ie.AddTagsTo(r,e.tags);for(var n=0,i=e.materials.length;i>n;){var s=n++,o=e.materials[s];null!=o?r.subMaterials.push(t.getMaterialByID(o)):r.subMaterials.push(null)}return r},We.Parse=function(e,t,r){if(null==e.customType)return He.Parse(e,t,r);var n=m.resolveClass(e.customType);return null!=n?m.createEmptyInstance(n).Parse(e,t,r):null},We.prototype={get_wireframe:function(){return 1==this._fillMode},set_wireframe:function(e){return e?this._fillMode=1:this._fillMode=0,e},get_pointsCloud:function(){return 2==this._fillMode},set_pointsCloud:function(e){return e?this._fillMode=2:this._fillMode=0,e},get_fillMode:function(){return this._fillMode},set_fillMode:function(e){return this._fillMode=e,e},get_isFrozen:function(){return this.checkReadyOnlyOnce},freeze:function(){this.checkReadyOnlyOnce=!0},unfreeze:function(){this.checkReadyOnlyOnce=!1},isReady:function(e,t){return null==t&&(t=!1),!0},getEffect:function(){return this._effect},getScene:function(){return this._scene},needAlphaBlending:function(){return this.alpha<1},needAlphaTesting:function(){return!1},getAlphaTestTexture:function(){return null},trackCreation:function(e,t){},markDirty:function(){this._wasPreviouslyReady=!1},_preBind:function(){var e=this._scene._engine;e.enableEffect(this._effect),e.setState(this.backFaceCulling,this.zOffset,!1,0==this.sideOrientation)},bind:function(e,t){if(this._scene._cachedMaterial=this,null!=this.onBind&&this.onBind(this),this.disableDepthWrite){var r=this._scene._engine;this._cachedDepthWriteState=r._depthCullingState.get_depthMask(),r._depthCullingState.set_depthMask(!1)}},bindOnlyWorldMatrix:function(e){},unbind:function(){if(this.disableDepthWrite){var e=this._scene._engine;e._depthCullingState.set_depthMask(this._cachedDepthWriteState)}},clone:function(e,t){return null==t&&(t=!1),null},getBindedMeshes:function(){for(var e=[],t=0,r=this._scene.meshes.length;r>t;){var n=t++,i=this._scene.meshes[n];i.get_material()==this&&e.push(i)}return e},dispose:function(e){null==e&&(e=!1),this.getScene().stopAnimation(this);var t=l.indexOf(this._scene.materials,this,0);t>=0&&this._scene.materials.splice(t,1),e&&null!=this._effect&&(this._scene._engine._releaseEffect(this._effect),this._effect=null);for(var r=0,n=this._scene.meshes.length;n>r;){var i=r++,s=this._scene.meshes[i];s.get_material()==this&&s.set_material(null)}null!=this.onDispose&&this.onDispose()},copyTo:function(e){e.checkReadyOnlyOnce=this.checkReadyOnlyOnce,e.checkReadyOnEveryCall=this.checkReadyOnEveryCall,e.alpha=this.alpha,e.set_fillMode(this.get_fillMode()),e.backFaceCulling=this.backFaceCulling,e.set_wireframe(this.get_wireframe()),e.fogEnabled=this.fogEnabled,e.set_wireframe(this.get_wireframe()),e.zOffset=this.zOffset,e.alphaMode=this.alphaMode,e.sideOrientation=this.sideOrientation,e.disableDepthWrite=this.disableDepthWrite,e.pointSize=this.pointSize,e.set_pointsCloud(this.get_pointsCloud())},serialize:function(){var e={};return e.name=this.name,e.alpha=this.alpha,e.id=this.id,e.tags=Ie.GetTags(this),e.backFaceCulling=this.backFaceCulling,e},__class__:We,__properties__:{set_fillMode:"set_fillMode",get_fillMode:"get_fillMode",set_pointsCloud:"set_pointsCloud",get_pointsCloud:"get_pointsCloud",set_wireframe:"set_wireframe",get_wireframe:"get_wireframe",get_isFrozen:"get_isFrozen"}};var Ge=t.BABYLON.Color3=function(e,t,r){null==r&&(r=0),null==t&&(t=0),null==e&&(e=0),this.r=e,this.g=t,this.b=r};s["com.babylonhx.math.Color3"]=Ge,Ge.__name__=["com","babylonhx","math","Color3"],Ge.FromHexString=function(t){if("#"!=t.substring(0,1)||7!=t.length)return e.log("Color3.FromHexString must be called with a string like #FFFFFF"),new Ge(0,0,0);var r=u.parseInt(t.substring(1,3)),n=u.parseInt(t.substring(3,5)),i=u.parseInt(t.substring(5,7));return new Ge(r/255,n/255,i/255)},Ge.FromArray=function(e,t){return null==t&&(t=0),new Ge(e[0],e[1],e[2])},Ge.FromInt=function(e){return new Ge((e>>16&255)/255,(e>>8&255)/255,(255&e)/255)},Ge.FromInts=function(e,t,r){return new Ge(e/255,t/255,r/255)},Ge.Lerp=function(e,t,r){var n=e.r+(t.r-e.r)*r,i=e.g+(t.g-e.g)*r,s=e.b+(t.b-e.b)*r;return new Ge(n,i,s)},Ge.Red=function(){return new Ge(1,0,0)},Ge.Green=function(){return new Ge(0,1,0)},Ge.Blue=function(){return new Ge(0,0,1)},Ge.Black=function(){return new Ge(0,0,0)},Ge.White=function(){return new Ge(1,1,1)},Ge.Purple=function(){return new Ge(.5,0,.5)},Ge.Magenta=function(){return new Ge(1,0,1)},Ge.Yellow=function(){return new Ge(1,1,0)},Ge.Gray=function(){return new Ge(.5,.5,.5)},Ge.prototype={toString:function(){return"{R:"+this.r+" G:"+this.g+" B:"+this.b+"}"},toArray:function(e,t){return null==t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,this},toColor4:function(e){return null==e&&(e=1),new Oe(this.r,this.g,this.b,e)},asArray:function(){var e=[];return e[0]=this.r,e[1]=this.g,e[2]=this.b,e},toLuminance:function(){return.3*this.r+.59*this.g+.11*this.b},multiply:function(e){return new Ge(this.r*e.r,this.g*e.g,this.b*e.b)},multiplyToRef:function(e,t){return t.r=this.r*e.r,t.g=this.g*e.g,t.b=this.b*e.b,this},equals:function(e){return null!=e&&this.r==e.r&&this.g==e.g&&this.b==e.b},equalsFloats:function(e,t,r){return this.r==e&&this.g==t&&this.b==r},scale:function(e){return new Ge(this.r*e,this.g*e,this.b*e)},scaleToRef:function(e,t){return t.r=this.r*e,t.g=this.g*e,t.b=this.b*e,this},add:function(e){return new Ge(this.r+e.r,this.g+e.g,this.b+e.b)},addToRef:function(e,t){return t.r=this.r+e.r,t.g=this.g+e.g,t.b=this.b+e.b,this},subtract:function(e){return new Ge(this.r-e.r,this.g-e.g,this.b-e.b)},subtractToRef:function(e,t){return t.r=this.r-e.r,t.g=this.g-e.g,t.b=this.b-e.b,this},clone:function(){return new Ge(this.r,this.g,this.b)},copyFrom:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyFromFloats:function(e,t,r){return this.r=e,this.g=t,this.b=r,this},toHexString:function(){var e=255*this.r|0,t=255*this.g|0,r=255*this.b|0;return"#"+Ae.ToHex(e)+Ae.ToHex(t)+Ae.ToHex(r)},toLinearSpace:function(){var e=new Ge;return e.r=Math.pow(this.r,2.2),e.g=Math.pow(this.g,2.2),e.b=Math.pow(this.b,2.2),e},toLinearSpaceToRef:function(e){return e.r=Math.pow(this.r,2.2),e.g=Math.pow(this.g,2.2),e.b=Math.pow(this.b,2.2),this},toGammaSpace:function(){var e=new Ge;return e.r=Math.pow(this.r,.45454545454545453),e.g=Math.pow(this.g,.45454545454545453),e.b=Math.pow(this.b,.45454545454545453),e},toGammaSpaceToRef:function(e){return e.r=Math.pow(this.r,.45454545454545453),e.g=Math.pow(this.g,.45454545454545453),e.b=Math.pow(this.b,.45454545454545453),this},__class__:Ge};var He=t.BABYLON.StandardMaterial=function(e,t){this._cachedDefines=new _t,this._defines=new _t,this._renderId=0,this._globalAmbientColor=new Ge(0,0,0),this._worldViewProjectionMatrix=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._renderTargets=new pr(16),this.useGlossinessFromSpecularMapAlpha=!1,this.useLightmapAsShadowmap=!1,this.roughness=0,this.disableLighting=!1,this.useSpecularOverAlpha=!1,this.useReflectionFresnelFromSpecular=!1,this.linkEmissiveWithDiffuse=!1,this.useEmissiveAsIllumination=!1,this.useAlphaFromDiffuseTexture=!1,this.emissiveColor=new Ge(0,0,0),this.specularPower=64,this.specularColor=new Ge(1,1,1),this.diffuseColor=new Ge(1,1,1),this.ambientColor=new Ge(0,0,0),this.lightmapTexture=null,this.bumpTexture=null,this.specularTexture=null,this.emissiveTexture=null,this.reflectionTexture=null,this.opacityTexture=null,this.ambientTexture=null,this.diffuseTexture=null;var r=this;We.call(this,e,t),this._cachedDefines.BonesPerMesh=-1,this.getRenderTargetTextures=function(){return r._renderTargets.reset(),null!=r.reflectionTexture&&r.reflectionTexture.isRenderTarget&&r._renderTargets.push(r.reflectionTexture),r._renderTargets}};s["com.babylonhx.materials.StandardMaterial"]=He,He.__name__=["com","babylonhx","materials","StandardMaterial"],He.PrepareDefinesForLights=function(e,t,r){for(var n=0,i=!1,s=0,o=e.lights.length;o>s;){var a=s++,l=e.lights[a];if(l.isEnabled()){if(l._excludedMeshesIds.length>0){for(var h=0,c=l._excludedMeshesIds.length;c>h;){var u=h++,f=e.getMeshByID(l._excludedMeshesIds[u]);null!=f&&l.excludedMeshes.push(f)}l._excludedMeshesIds=[]}if(l._includedOnlyMeshesIds.length>0){for(var d=0,m=l._includedOnlyMeshesIds.length;m>d;){var _=d++,p=e.getMeshByID(l._includedOnlyMeshesIds[_]);null!=p&&l.includedOnlyMeshes.push(p)}l._includedOnlyMeshesIds=[]}if(l.canAffectMesh(t)){i=!0,r.defines[14+n]=!0;var v=r.getLight(l.get_type(),n);if(r.defines[v]=!0,l.specular.equalsFloats(0,0,0)||(r.defines[34]=!0),e.shadowsEnabled){var g=l.getShadowGenerator();null!=t&&t.get_receiveShadows()&&null!=g&&(r.defines[35+n]=!0,r.defines[39]=!0,(g.get_useVarianceShadowMap()||g.get_useBlurVarianceShadowMap())&&(r.defines[40+n]=!0),g.get_usePoissonSampling()&&(r.defines[44+n]=!0))}if(n++,4==n)break}}}return i},He.BindLights=function(e,t,r,n){for(var i=0,s=!1,o=0,a=e.lights.length;a>o;){var l=o++,h=e.lights[l];if(h.isEnabled()&&h.canAffectMesh(t)){var c=h.get_type();switch(c){case"POINTLIGHT":h.transferToEffect(r,"vLightData"+i);break;case"DIRLIGHT":h.transferToEffect(r,"vLightData"+i);break;case"SPOTLIGHT":h.transferToEffect(r,"vLightData"+i,"vLightDirection"+i);break;case"HEMILIGHT":h.transferToEffect(r,"vLightData"+i,"vLightGround"+i)}if(h.diffuse.scaleToRef(h.intensity,He._scaledDiffuse),r.setColor4("vLightDiffuse"+i,He._scaledDiffuse,h.range),n.defines[34]&&(h.specular.scaleToRef(h.intensity,He._scaledSpecular),r.setColor3("vLightSpecular"+i,He._scaledSpecular)),e.shadowsEnabled){var u=h.getShadowGenerator();t.get_receiveShadows()&&null!=u&&(Re.__cast(h,ge).needCube()?s||(s=!0,r.setFloat2("depthValues",e.activeCamera.minZ,e.activeCamera.maxZ)):r.setMatrix("lightMatrix"+i,u.getTransformMatrix()),r.setTexture("shadowSampler"+i,u.getShadowMapForRendering()),r.setFloat3("shadowsInfo"+i,u.getDarkness(),u.getShadowMap().getSize().width,u.get_bias()))}if(i++,4==i)break}}},He.ParseFresnelParameters=function(e){var t=new $e;return t.isEnabled=e.isEnabled,t.leftColor=Ge.FromArray(e.leftColor,null),t.rightColor=Ge.FromArray(e.rightColor,null),t.bias=e.bias,null!=e.power?t.power=e.power:t.power=1,t},He.Parse=function(e,t,r){var n=new He(e.name,t);return n.ambientColor=Ge.FromArray(e.ambient,null),n.diffuseColor=Ge.FromArray(e.diffuse,null),n.specularColor=Ge.FromArray(e.specular,null),n.specularPower=e.specularPower,n.emissiveColor=Ge.FromArray(e.emissive,null),n.useReflectionFresnelFromSpecular=e.useReflectionFresnelFromSpecular,n.useEmissiveAsIllumination=e.useEmissiveAsIllumination,n.alpha=e.alpha,n.id=e.id,null!=e.disableDepthWrite&&(n.disableDepthWrite=e.disableDepthWrite),Ie.AddTagsTo(n,e.tags),n.backFaceCulling=e.backFaceCulling,n.set_wireframe(e.wireframe),null!=e.diffuseTexture&&(n.diffuseTexture=Ye.ParseTexture(e.diffuseTexture,t,r)),null!=e.diffuseFresnelParameters&&(n.diffuseFresnelParameters=He.ParseFresnelParameters(e.diffuseFresnelParameters)),null!=e.ambientTexture&&(n.ambientTexture=Ye.ParseTexture(e.ambientTexture,t,r)),null!=e.opacityTexture&&(n.opacityTexture=Ye.ParseTexture(e.opacityTexture,t,r)),null!=e.opacityFresnelParameters&&(n.opacityFresnelParameters=He.ParseFresnelParameters(e.opacityFresnelParameters)),null!=e.reflectionTexture&&(n.reflectionTexture=Ye.ParseTexture(e.reflectionTexture,t,r)),null!=e.reflectionFresnelParameters&&(n.reflectionFresnelParameters=He.ParseFresnelParameters(e.reflectionFresnelParameters)),null!=e.emissiveTexture&&(n.emissiveTexture=Ye.ParseTexture(e.emissiveTexture,t,r)),null!=e.lightmapTexture&&(n.lightmapTexture=Ye.ParseTexture(e.lightmapTexture,t,r),n.lightmapThreshold=e.lightmapThreshold),null!=e.emissiveFresnelParameters&&(n.emissiveFresnelParameters=He.ParseFresnelParameters(e.emissiveFresnelParameters)),null!=e.specularTexture&&(n.specularTexture=Ye.ParseTexture(e.specularTexture,t,r)),null!=e.bumpTexture&&(n.bumpTexture=Ye.ParseTexture(e.bumpTexture,t,r)),null!=e.checkReadyOnlyOnce&&(n.checkReadyOnlyOnce=e.checkReadyOnlyOnce),n},He.__super__=We,He.prototype=n(We.prototype,{get_useLogarithmicDepth:function(){return this._useLogarithmicDepth},set_useLogarithmicDepth:function(e){return this._useLogarithmicDepth=e&&this.getScene().getEngine().getCaps().fragmentDepthSupported,this._useLogarithmicDepth},needAlphaBlending:function(){return this.alpha<1||null!=this.opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||null!=this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled},needAlphaTesting:function(){return null!=this.diffuseTexture&&this.diffuseTexture.hasAlpha},_shouldUseAlphaFromDiffuseTexture:function(){return null!=this.diffuseTexture&&this.diffuseTexture.hasAlpha&&this.useAlphaFromDiffuseTexture},getAlphaTestTexture:function(){return this.diffuseTexture},_checkCache:function(e,t,r){return null==r&&(r=!1),null==t?!0:this._defines.defines[58]!=r?!1:null!=t._materialDefines&&t._materialDefines.isEqual(this._defines)?!0:!1},isReady:function(e,t){if(null==t&&(t=!1),this.get_isFrozen()&&this._wasPreviouslyReady)return!0;var r=this.getScene();if(!this.checkReadyOnEveryCall&&this._renderId==r._renderId&&this._checkCache(r,e,t))return!0;var n=r._engine,i=!1,s=!1;if(this._defines.reset(),r.texturesEnabled){if(null!=this.diffuseTexture&&He.DiffuseTextureEnabled){if(!this.diffuseTexture.isReady())return!1;s=!0,this._defines.defines[0]=!0}if(null!=this.ambientTexture&&He.AmbientTextureEnabled){if(!this.ambientTexture.isReady())return!1;s=!0,this._defines.defines[1]=!0}if(null!=this.opacityTexture&&He.OpacityTextureEnabled){if(!this.opacityTexture.isReady())return!1;s=!0,this._defines.defines[2]=!0,this.opacityTexture.getAlphaFromRGB&&(this._defines.defines[3]=!0)}if(null!=this.reflectionTexture&&He.ReflectionTextureEnabled){if(!this.reflectionTexture.isReady())return!1;i=!0,this._defines.defines[4]=!0,this.roughness>0&&(this._defines.defines[60]=!0),6==this.reflectionTexture.coordinatesMode&&(this._defines.defines[75]=!0),this._defines.defines[66]=this.reflectionTexture.isCube;var o=this.reflectionTexture.coordinatesMode;switch(o){case 3:case 6:this._defines.defines[69]=!0;break;case 0:this._defines.defines[72]=!0;break;case 2:this._defines.defines[68]=!0;break;case 4:this._defines.defines[70]=!0;break;case 5:this._defines.defines[71]=!0;break;case 1:this._defines.defines[67]=!0;break;case 7:this._defines.defines[73]=!0;break;case 8:this._defines.defines[74]=!0}}if(null!=this.emissiveTexture&&He.EmissiveTextureEnabled){if(!this.emissiveTexture.isReady())return!1;s=!0,this._defines.defines[5]=!0}if(null!=this.lightmapTexture&&He.LightmapEnabled){if(!this.lightmapTexture.isReady())return!1;s=!0,this._defines.defines[64]=!0,this._defines.defines[65]=this.useLightmapAsShadowmap}if(null!=this.specularTexture&&He.SpecularTextureEnabled){if(!this.specularTexture.isReady())return!1;s=!0,this._defines.defines[6]=!0,this._defines.defines[59]=this.useGlossinessFromSpecularMapAlpha}}if(1==r._engine.getCaps().standardDerivatives&&null!=this.bumpTexture&&He.BumpTextureEnabled){if(!this.bumpTexture.isReady())return!1;s=!0,this._defines.defines[7]=!0}if(null!=r.clipPlane&&(this._defines.defines[9]=!0),n._alphaTest&&(this._defines.defines[10]=!0),this._shouldUseAlphaFromDiffuseTexture()&&(this._defines.defines[11]=!0),this.useEmissiveAsIllumination&&(this._defines.defines[61]=!0),this.linkEmissiveWithDiffuse&&(this._defines.defines[62]=!0),this.useReflectionFresnelFromSpecular&&(this._defines.defines[63]=!0),this.get_useLogarithmicDepth()&&(this._defines.defines[76]=!0),(this.get_pointsCloud()||r.forcePointsCloud)&&(this._defines.defines[12]=!0),r.fogEnabled&&null!=e&&e.applyFog&&r.fogMode!=b.FOGMODE_NONE&&this.fogEnabled&&(this._defines.defines[13]=!0),r.lightsEnabled&&!this.disableLighting&&(i=He.PrepareDefinesForLights(r,e,this._defines)),He.FresnelEnabled&&(null!=this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(this._defines.defines[48]=!0),null!=this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&(this._defines.defines[49]=!0),null!=this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(this._defines.defines[50]=!0),null!=this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(this._defines.defines[51]=!0),(this._defines.defines[48]||this._defines.defines[49]||this._defines.defines[50]||this._defines.defines[51])&&(i=!0,this._defines.defines[52]=!0)),this._defines.defines[34]&&this.useSpecularOverAlpha&&(this._defines.defines[8]=!0),null!=e&&(i&&e.isVerticesDataPresent("normal")&&(this._defines.defines[53]=!0),s&&(e.isVerticesDataPresent("uv")&&(this._defines.defines[54]=!0),e.isVerticesDataPresent("uv2")&&(this._defines.defines[55]=!0)),e.useVertexColors&&e.isVerticesDataPresent("color")&&(this._defines.defines[56]=!0,e.hasVertexAlpha&&(this._defines.defines[57]=!0)),e.get_useBones()&&e.computeBonesUsingShaders&&(this._defines.NUM_BONE_INFLUENCERS=e.numBoneInfluencers,this._defines.BonesPerMesh=e.get_skeleton().bones.length+1),t&&(this._defines.defines[58]=!0)),!this._defines.isEqual(this._cachedDefines)){this._defines.cloneTo(this._cachedDefines),r._cachedMaterial=null;var a=new ut;this._defines.defines[4]&&a.addFallback(0,"REFLECTION"),this._defines.defines[6]&&a.addFallback(0,"SPECULAR"),this._defines.defines[7]&&a.addFallback(0,"BUMP"),this._defines.defines[8]&&a.addFallback(0,"SPECULAROVERALPHA"),this._defines.defines[13]&&a.addFallback(1,"FOG"),this._defines.defines[12]&&a.addFallback(0,"POINTSIZE"),this._defines.defines[76]&&a.addFallback(0,"LOGARITHMICDEPTH");for(var l=0;4>l;){var h=l++;this._defines.defines[14+h]&&(h>0&&a.addFallback(h,"LIGHT"+h),this._defines.defines[35+h]&&a.addFallback(0,"SHADOW"+h),this._defines.defines[44+h]&&a.addFallback(0,"SHADOWPCF"+h),this._defines.defines[40+h]&&a.addFallback(0,"SHADOWVSM"+h))}this._defines.defines[34]&&a.addFallback(0,"SPECULARTERM"),this._defines.defines[48]&&a.addFallback(1,"DIFFUSEFRESNEL"),this._defines.defines[49]&&a.addFallback(2,"OPACITYFRESNEL"),this._defines.defines[50]&&a.addFallback(3,"REFLECTIONFRESNEL"),this._defines.defines[51]&&a.addFallback(4,"EMISSIVEFRESNEL"),this._defines.defines[52]&&a.addFallback(4,"FRESNEL"),this._defines.NUM_BONE_INFLUENCERS>0&&a.addCPUSkinningFallback(0,e);var c=["position"];this._defines.defines[53]&&c.push("normal"),this._defines.defines[54]&&c.push("uv"),this._defines.defines[55]&&c.push("uv2"),this._defines.defines[56]&&c.push("color"),this._defines.NUM_BONE_INFLUENCERS>0&&(c.push("matricesIndices"),c.push("matricesWeights"),this._defines.NUM_BONE_INFLUENCERS>4&&(c.push("matricesIndicesExtra"),c.push("matricesWeightsExtra"))),this._defines.defines[58]&&(c.push("world0"),c.push("world1"),c.push("world2"),c.push("world3"));var u="default";1!=r._engine.getCaps().standardDerivatives&&(u="legacydefault");var f=this._defines.toString();this._effect=r._engine.createEffect(u,c,["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","vLightData0","vLightDiffuse0","vLightSpecular0","vLightDirection0","vLightGround0","lightMatrix0","vLightData1","vLightDiffuse1","vLightSpecular1","vLightDirection1","vLightGround1","lightMatrix1","vLightData2","vLightDiffuse2","vLightSpecular2","vLightDirection2","vLightGround2","lightMatrix2","vLightData3","vLightDiffuse3","vLightSpecular3","vLightDirection3","vLightGround3","lightMatrix3","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vReflectionInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","mBones","vClipPlane","diffuseMatrix","ambientMatrix","opacityMatrix","reflectionMatrix","emissiveMatrix","specularMatrix","bumpMatrix","lightmapMatrix","shadowsInfo0","shadowsInfo1","shadowsInfo2","shadowsInfo3","depthValues","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","logarithmicDepthConstant"],["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","shadowSampler0","shadowSampler1","shadowSampler2","shadowSampler3"],f,a,this.onCompiled,this.onError)}return this._effect._isReady?(this._renderId=r._renderId,this._wasPreviouslyReady=!0,null!=e&&(null==e._materialDefines&&(e._materialDefines=new _t),this._defines.cloneTo(e._materialDefines)),!0):!1},unbind:function(){null!=this.reflectionTexture&&this.reflectionTexture.isRenderTarget&&this._effect.setTexture("reflection2DSampler",null),We.prototype.unbind.call(this)},bindOnlyWorldMatrix:function(e){this._effect.setMatrix("world",e)},bind:function(e,t){var r=this.getScene();if(this.bindOnlyWorldMatrix(e),null!=t&&t.get_useBones()&&t.computeBonesUsingShaders&&this._effect.setMatrices("mBones",t.get_skeleton().getTransformMatrices()),r.getCachedMaterial()!=this){if(this._effect.setMatrix("viewProjection",r._transformMatrix),He.FresnelEnabled&&(null!=this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(this._effect.setColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),this._effect.setColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),null!=this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&this._effect.setColor4("opacityParts",new Ge(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),null!=this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(this._effect.setColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),this._effect.setColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),null!=this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(this._effect.setColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),this._effect.setColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),r.texturesEnabled&&(null!=this.diffuseTexture&&He.DiffuseTextureEnabled&&(this._effect.setTexture("diffuseSampler",this.diffuseTexture),this._effect.setFloat2("vDiffuseInfos",this.diffuseTexture.coordinatesIndex,this.diffuseTexture.level),this._effect.setMatrix("diffuseMatrix",this.diffuseTexture.getTextureMatrix())),null!=this.ambientTexture&&He.AmbientTextureEnabled&&(this._effect.setTexture("ambientSampler",this.ambientTexture),this._effect.setFloat2("vAmbientInfos",this.ambientTexture.coordinatesIndex,this.ambientTexture.level),this._effect.setMatrix("ambientMatrix",this.ambientTexture.getTextureMatrix())),null!=this.opacityTexture&&He.OpacityTextureEnabled&&(this._effect.setTexture("opacitySampler",this.opacityTexture),this._effect.setFloat2("vOpacityInfos",this.opacityTexture.coordinatesIndex,this.opacityTexture.level),this._effect.setMatrix("opacityMatrix",this.opacityTexture.getTextureMatrix())),
null!=this.reflectionTexture&&He.ReflectionTextureEnabled&&(this.reflectionTexture.isCube?this._effect.setTexture("reflectionCubeSampler",this.reflectionTexture):this._effect.setTexture("reflection2DSampler",this.reflectionTexture),this._effect.setMatrix("reflectionMatrix",this.reflectionTexture.getReflectionTextureMatrix()),this._effect.setFloat2("vReflectionInfos",this.reflectionTexture.level,this.roughness)),null!=this.emissiveTexture&&He.EmissiveTextureEnabled&&(this._effect.setTexture("emissiveSampler",this.emissiveTexture),this._effect.setFloat2("vEmissiveInfos",this.emissiveTexture.coordinatesIndex,this.emissiveTexture.level),this._effect.setMatrix("emissiveMatrix",this.emissiveTexture.getTextureMatrix())),null!=this.lightmapTexture&&He.LightmapEnabled&&(this._effect.setTexture("lightmapSampler",this.lightmapTexture),this._effect.setFloat2("vLightmapInfos",this.lightmapTexture.coordinatesIndex,this.lightmapTexture.level),this._effect.setMatrix("lightmapMatrix",this.lightmapTexture.getTextureMatrix())),null!=this.specularTexture&&He.SpecularTextureEnabled&&(this._effect.setTexture("specularSampler",this.specularTexture),this._effect.setFloat2("vSpecularInfos",this.specularTexture.coordinatesIndex,this.specularTexture.level),this._effect.setMatrix("specularMatrix",this.specularTexture.getTextureMatrix())),null!=this.bumpTexture&&1==r._engine.getCaps().standardDerivatives&&He.BumpTextureEnabled&&(this._effect.setTexture("bumpSampler",this.bumpTexture),this._effect.setFloat2("vBumpInfos",this.bumpTexture.coordinatesIndex,1/this.bumpTexture.level),this._effect.setMatrix("bumpMatrix",this.bumpTexture.getTextureMatrix()))),null!=r.clipPlane){var n=r.clipPlane;this._effect.setFloat4("vClipPlane",n.normal.x,n.normal.y,n.normal.z,n.d)}this.get_pointsCloud()&&this._effect.setFloat("pointSize",this.pointSize),r.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),this._effect.setVector3("vEyePosition",null!=r._mirroredCameraPosition?r._mirroredCameraPosition:r.activeCamera.position),this._effect.setColor3("vAmbientColor",this._globalAmbientColor),this._defines.defines[34]&&this._effect.setColor4("vSpecularColor",this.specularColor,this.specularPower),this._effect.setColor3("vEmissiveColor",this.emissiveColor)}r.getCachedMaterial()==this&&this.get_isFrozen()||(this._effect.setColor4("vDiffuseColor",this.diffuseColor,this.alpha*t.get_visibility()),r.lightsEnabled&&!this.disableLighting&&He.BindLights(r,t,this._effect,this._defines),(r.fogEnabled&&t.applyFog&&r.fogMode!=b.FOGMODE_NONE||null!=this.reflectionTexture)&&this._effect.setMatrix("view",r._viewMatrix),r.fogEnabled&&t.applyFog&&r.fogMode!=b.FOGMODE_NONE&&(this._effect.setFloat4("vFogInfos",r.fogMode,r.fogStart,r.fogEnd,r.fogDensity),this._effect.setColor3("vFogColor",r.fogColor)),this._defines.defines[76]&&this._effect.setFloat("logarithmicDepthConstant",2/(Math.log(r.activeCamera.maxZ+1)/.6931471805599453))),We.prototype.bind.call(this,e,t)},getAnimatables:function(){var e=[];return null!=this.diffuseTexture&&null!=this.diffuseTexture.animations&&this.diffuseTexture.animations.length>0&&e.push(this.diffuseTexture),null!=this.ambientTexture&&null!=this.ambientTexture.animations&&this.ambientTexture.animations.length>0&&e.push(this.ambientTexture),null!=this.opacityTexture&&null!=this.opacityTexture.animations&&this.opacityTexture.animations.length>0&&e.push(this.opacityTexture),null!=this.reflectionTexture&&null!=this.reflectionTexture.animations&&this.reflectionTexture.animations.length>0&&e.push(this.reflectionTexture),null!=this.emissiveTexture&&null!=this.emissiveTexture.animations&&this.emissiveTexture.animations.length>0&&e.push(this.emissiveTexture),null!=this.specularTexture&&null!=this.specularTexture.animations&&this.specularTexture.animations.length>0&&e.push(this.specularTexture),null!=this.bumpTexture&&null!=this.bumpTexture.animations&&this.bumpTexture.animations.length>0&&e.push(this.bumpTexture),e},dispose:function(e){null==e&&(e=!1),null!=this.diffuseTexture&&this.diffuseTexture.dispose(),null!=this.ambientTexture&&this.ambientTexture.dispose(),null!=this.opacityTexture&&this.opacityTexture.dispose(),null!=this.reflectionTexture&&this.reflectionTexture.dispose(),null!=this.emissiveTexture&&this.emissiveTexture.dispose(),null!=this.specularTexture&&this.specularTexture.dispose(),null!=this.bumpTexture&&this.bumpTexture.dispose(),We.prototype.dispose.call(this,e)},clone:function(e,t){null==t&&(t=!1);var r=new He(e,this.getScene());return this.copyTo(r),null!=this.diffuseTexture&&(r.diffuseTexture=this.diffuseTexture.clone()),null!=this.ambientTexture&&(r.ambientTexture=this.ambientTexture.clone()),null!=this.opacityTexture&&(r.opacityTexture=this.opacityTexture.clone()),null!=this.reflectionTexture&&(r.reflectionTexture=this.reflectionTexture.clone()),null!=this.emissiveTexture&&(r.emissiveTexture=this.emissiveTexture.clone()),null!=this.specularTexture&&(r.specularTexture=this.specularTexture.clone()),null!=this.bumpTexture&&(r.bumpTexture=this.bumpTexture.clone()),null!=this.lightmapTexture&&(r.lightmapTexture=this.lightmapTexture.clone(),r.useLightmapAsShadowmap=this.useLightmapAsShadowmap),r.ambientColor=this.ambientColor.clone(),r.diffuseColor=this.diffuseColor.clone(),r.specularColor=this.specularColor.clone(),r.specularPower=this.specularPower,r.emissiveColor=this.emissiveColor.clone(),r.useAlphaFromDiffuseTexture=this.useAlphaFromDiffuseTexture,r.useEmissiveAsIllumination=this.useEmissiveAsIllumination,r.useGlossinessFromSpecularMapAlpha=this.useGlossinessFromSpecularMapAlpha,r.useReflectionFresnelFromSpecular=this.useReflectionFresnelFromSpecular,r.useSpecularOverAlpha=this.useSpecularOverAlpha,r.roughness=this.roughness,null!=this.diffuseFresnelParameters&&(r.diffuseFresnelParameters=this.diffuseFresnelParameters.clone()),null!=this.emissiveFresnelParameters&&(r.emissiveFresnelParameters=this.emissiveFresnelParameters.clone()),null!=this.reflectionFresnelParameters&&(r.reflectionFresnelParameters=this.reflectionFresnelParameters.clone()),null!=this.opacityFresnelParameters&&(r.opacityFresnelParameters=this.opacityFresnelParameters.clone()),r},serialize:function(){var e=We.prototype.serialize.call(this);return e.ambient=this.ambientColor.asArray(),e.diffuse=this.diffuseColor.asArray(),e.specular=this.specularColor.asArray(),e.specularPower=this.specularPower,e.emissive=this.emissiveColor.asArray(),e.useReflectionFresnelFromSpecular=e.useReflectionFresnelFromSpecular,e.useEmissiveAsIllumination=e.useEmissiveAsIllumination,null!=this.diffuseTexture&&(e.diffuseTexture=this.diffuseTexture.serialize()),null!=this.diffuseFresnelParameters&&(e.diffuseFresnelParameters=this.diffuseFresnelParameters.serialize()),null!=this.ambientTexture&&(e.ambientTexture=this.ambientTexture.serialize()),null!=this.opacityTexture&&(e.opacityTexture=this.opacityTexture.serialize()),null!=this.opacityFresnelParameters&&(e.opacityFresnelParameters=this.diffuseFresnelParameters.serialize()),null!=this.reflectionTexture&&(e.reflectionTexture=this.reflectionTexture.serialize()),null!=this.reflectionFresnelParameters&&(e.reflectionFresnelParameters=this.reflectionFresnelParameters.serialize()),null!=this.emissiveTexture&&(e.emissiveTexture=this.emissiveTexture.serialize()),null!=this.lightmapTexture&&(e.lightmapTexture=this.lightmapTexture.serialize(),e.useLightmapAsShadowmap=this.useLightmapAsShadowmap),null!=this.emissiveFresnelParameters&&(e.emissiveFresnelParameters=this.emissiveFresnelParameters.serialize()),null!=this.specularTexture&&(e.specularTexture=this.specularTexture.serialize()),null!=this.bumpTexture&&(e.bumpTexture=this.bumpTexture.serialize()),e},__class__:He,__properties__:n(We.prototype.__properties__,{set_useLogarithmicDepth:"set_useLogarithmicDepth",get_useLogarithmicDepth:"get_useLogarithmicDepth"})});var Ye=t.BABYLON.BaseTexture=function(e){this.anisotropicFilteringLevel=4,this.wrapV=1,this.wrapU=1,this.coordinatesMode=0,this.coordinatesIndex=0,this.animations=[],this.isRenderTarget=!1,this.isCube=!1,this.level=1,this.getAlphaFromRGB=!1,this.hasAlpha=!1,this.delayLoadState=0,this._scene=e,this._scene.textures.push(this)};s["com.babylonhx.materials.textures.BaseTexture"]=Ye,Ye.__name__=["com","babylonhx","materials","textures","BaseTexture"],Ye.__interfaces__=[B],Ye.ParseCubeTexture=function(e,t,r){var n=null;return null==e.name&&null==e.extensions||0!=e.isRenderTarget||(n=new Xe(r+u.string(e.name),t,e.extensions),n.name=e.name,n.hasAlpha=e.hasAlpha,n.level=e.level,n.coordinatesMode=e.coordinatesMode),n},Ye.ParseTexture=function(e,t,r){if(null!=e.isCube&&1==e.isCube)return Ye.ParseCubeTexture(e,t,r);if(null==e.name&&0==e.isRenderTarget)return null;var n=null;if(null!=e.mirrorPlane?(n=new Ke(e.name,e.renderTargetSize,t),Re.__cast(n,Ke)._waitingRenderList=e.renderList,Re.__cast(n,Ke).mirrorPlane=Qe.FromArray(e.mirrorPlane)):e.isRenderTarget?(n=new qe(e.name,e.renderTargetSize,t),Re.__cast(n,qe)._waitingRenderList=e.renderList):n=new je(r+u.string(e.name),t),n.name=e.name,n.hasAlpha=e.hasAlpha,n.getAlphaFromRGB=e.getAlphaFromRGB,n.level=e.level,n.coordinatesIndex=e.coordinatesIndex,n.coordinatesMode=e.coordinatesMode,n.uOffset=e.uOffset,n.vOffset=e.vOffset,n.uScale=e.uScale,n.vScale=e.vScale,n.uAng=e.uAng,n.vAng=e.vAng,n.wAng=e.wAng,n.wrapU=e.wrapU,n.wrapV=e.wrapV,null!=e.animations)for(var i=0,s=e.animations.length;s>i;){var o=i++,a=e.animations[o];n.animations.push(F.Parse(a))}return n},Ye.prototype={getScene:function(){return this._scene},getTextureMatrix:function(){return null},getReflectionTextureMatrix:function(){return null},getInternalTexture:function(){return this._texture},isReady:function(){return 4==this.delayLoadState?!0:null!=this._texture?this._texture.isReady:!1},getSize:function(){return-1!=this._texture._width&&0!=this._texture._width?{width:this._texture._width,height:this._texture._height}:null!=this._texture._size?{width:this._texture._size,height:this._texture._size}:{width:0,height:0}},getBaseSize:function(){return this.isReady()?null!=this._texture._size?{width:this._texture._size,height:this._texture._size}:{width:this._texture._baseWidth,height:this._texture._baseHeight}:{width:0,height:0}},scale:function(e){},_removeFromCache:function(e,t){for(var r=this._scene._engine.getLoadedTexturesCache(),n=0,i=r.length;i>n;){var s=n++,o=r[s];if(o.url==e&&o.noMipmap==t)return void r.splice(s,1)}},_getFromCache:function(e,t,r){for(var n=this._scene._engine.getLoadedTexturesCache(),i=0,s=n.length;s>i;){var o=i++,a=n[o];if(a.url==e&&a.noMipmap==t&&(null==r||r==a.samplingMode))return a.references++,a}return null},delayLoad:function(){},releaseInternalTexture:function(){if(null!=this._texture){var e=this._scene._engine.getLoadedTexturesCache();this._texture.references--,0==this._texture.references&&(l.remove(e,this._texture),this._scene._engine._releaseTexture(this._texture),this._texture=null)}},clone:function(){return null},dispose:function(){this.getScene().stopAnimation(this);var e=l.indexOf(this._scene.textures,this,0);e>=0&&this._scene.textures.splice(e,1),null!=this._texture&&(this.releaseInternalTexture(),null!=this.onDispose&&this.onDispose())},serialize:function(){var e={};return null==this.name?null:(e.name=this.name,e.hasAlpha=this.hasAlpha,e.level=this.level,e.coordinatesIndex=this.coordinatesIndex,e.coordinatesMode=this.coordinatesMode,e.wrapU=this.wrapU,e.wrapV=this.wrapV,F.AppendSerializedAnimations(this,e),e)},__class__:Ye};var Xe=t.BABYLON.CubeTexture=function(e,t,r,n){null==n&&(n=!1),Ye.call(this,t),this.coordinatesMode=3,this.name=e,this.url=e,this._noMipmap=n,this.hasAlpha=!1,null!=e&&""!=e&&(null==r&&(r=["_px.jpg","_py.jpg","_pz.jpg","_nx.jpg","_ny.jpg","_nz.jpg"]),this._extensions=r,null==this._texture&&(t.useDelayedTextureLoading?this.delayLoadState=4:this._texture=t._engine.createCubeTexture(e,t,r,n)),this.isCube=!0,this._textureMatrix=Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1))};s["com.babylonhx.materials.textures.CubeTexture"]=Xe,Xe.__name__=["com","babylonhx","materials","textures","CubeTexture"],Xe.Parse=function(e,t,r){var n=null;return null==e.name&&null==e.extensions||e.isRenderTarget||(n=new Xe(r+u.string(e.name),t,e.extensions),n.name=e.name,n.hasAlpha=e.hasAlpha,n.level=e.level,n.coordinatesMode=e.coordinatesMode),n},Xe.__super__=Ye,Xe.prototype=n(Ye.prototype,{clone:function(){var e=new Xe(this.url,this.getScene(),this._extensions,this._noMipmap);return e.level=this.level,e.wrapU=this.wrapU,e.wrapV=this.wrapV,e.coordinatesIndex=this.coordinatesIndex,e.coordinatesMode=this.coordinatesMode,e},delayLoad:function(){4==this.delayLoadState&&(this.delayLoadState=1,this._texture=this._getFromCache(this.url,this._noMipmap),null==this._texture&&(this._texture=this.getScene().getEngine().createCubeTexture(this.url,this.getScene(),this._extensions)))},getReflectionTextureMatrix:function(){return this._textureMatrix},serialize:function(){if(null==this.name)return null;var e={};return e.name=this.name,e.hasAlpha=this.hasAlpha,e.isCube=!0,e.level=this.level,e.coordinatesMode=this.coordinatesMode,e},__class__:Xe});var je=t.BABYLON.Texture=function(e,t,r,n,i,s,o,a,l){null==l&&(l=!1),null==i&&(i=3),null==n&&(n=!0),null==r&&(r=!1),this.wAng=0,this.vAng=0,this.uAng=0,this.vScale=1,this.uScale=1,this.vOffset=0,this.uOffset=0,Ye.call(this,t),this.name=e,this.url=e,this._noMipmap=r,this._invertY=n,this._samplingMode=i,this._buffer=a,this._deleteBuffer=l,null!=e&&""!=d.trim(e)&&(this._texture=this._getFromCache(e,r,i),null==this._texture&&(t.useDelayedTextureLoading?this.delayLoadState=4:-1!=e.indexOf(".")&&(this._texture=t._engine.createTexture(e,r,n,t,this._samplingMode,s,o,this._buffer),l&&(this._buffer=null))))};s["com.babylonhx.materials.textures.Texture"]=je,je.__name__=["com","babylonhx","materials","textures","Texture"],je.CreateFromBase64String=function(e,t,r,n,i,s,o,a){return null==s&&(s=3),new je("data:"+t,r,n,i,s,o,a,e)},je.Parse=function(e,t,r){if(e.isCube)return Xe.Parse(e,t,r);if(null==e.name&&!e.isRenderTarget)return null;var n=null;if(null!=e.mirrorPlane?(n=new Ke(e.name,e.renderTargetSize,t),Re.__cast(n,Ke)._waitingRenderList=e.renderList,Re.__cast(n,Ke).mirrorPlane=Qe.FromArray(e.mirrorPlane)):e.isRenderTarget?(n=new qe(e.name,e.renderTargetSize,t),Re.__cast(n,qe)._waitingRenderList=e.renderList):n=e.base64String?je.CreateFromBase64String(e.base64String,e.name,t):new je(r+u.string(e.name),t),n.name=e.name,n.hasAlpha=e.hasAlpha,n.getAlphaFromRGB=e.getAlphaFromRGB,n.level=e.level,n.coordinatesIndex=e.coordinatesIndex,n.coordinatesMode=e.coordinatesMode,n.uOffset=e.uOffset,n.vOffset=e.vOffset,n.uScale=e.uScale,n.vScale=e.vScale,n.uAng=e.uAng,n.vAng=e.vAng,n.wAng=e.wAng,n.wrapU=e.wrapU,n.wrapV=e.wrapV,null!=e.animations)for(var i=0,s=e.animations.length;s>i;){var o=i++,a=e.animations[o];n.animations.push(F.Parse(a))}return n},je.__super__=Ye,je.prototype=n(Ye.prototype,{delayLoad:function(){4==this.delayLoadState&&(this.delayLoadState=1,this._texture=this._getFromCache(this.url,this._noMipmap,this._samplingMode),null==this._texture&&(this._texture=this.getScene().getEngine().createTexture(this.url,this._noMipmap,this._invertY,this.getScene(),this._samplingMode,null,null,this._buffer),this._deleteBuffer&&(this._buffer=null)))},updateSamplingMode:function(e){null!=this._texture&&this.getScene().getEngine().updateTextureSamplingMode(e,this._texture)},_prepareRowForTextureGeneration:function(e,t,r,n){e*=this.uScale,t*=this.vScale,e-=.5*this.uScale,t-=.5*this.vScale,r-=.5,L.TransformCoordinatesFromFloatsToRef(e,t,r,this._rowGenerationMatrix,n),n.x+=.5*this.uScale+this.uOffset,n.y+=.5*this.vScale+this.vOffset,n.z+=.5},getTextureMatrix:function(){return this.uOffset==this._cachedUOffset&&this.vOffset==this._cachedVOffset&&this.uScale==this._cachedUScale&&this.vScale==this._cachedVScale&&this.uAng==this._cachedUAng&&this.vAng==this._cachedVAng&&this.wAng==this._cachedWAng?this._cachedTextureMatrix:(this._cachedUOffset=this.uOffset,this._cachedVOffset=this.vOffset,this._cachedUScale=this.uScale,this._cachedVScale=this.vScale,this._cachedUAng=this.uAng,this._cachedVAng=this.vAng,this._cachedWAng=this.wAng,null==this._cachedTextureMatrix&&(this._cachedTextureMatrix=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._rowGenerationMatrix=new Le,this._t0=new L(0,0,0),this._t1=new L(0,0,0),this._t2=new L(0,0,0)),R.RotationYawPitchRollToRef(this.vAng,this.uAng,this.wAng,Le._tempQuaternion),Le._tempQuaternion.toRotationMatrix(this._rowGenerationMatrix),this._prepareRowForTextureGeneration(0,0,0,this._t0),this._prepareRowForTextureGeneration(1,0,0,this._t1),this._prepareRowForTextureGeneration(0,1,0,this._t2),this._t1.subtractInPlace(this._t0),this._t2.subtractInPlace(this._t0),Le.FromValuesToRef(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,this._cachedTextureMatrix),this._cachedTextureMatrix.m[0]=this._t1.x,this._cachedTextureMatrix.m[1]=this._t1.y,this._cachedTextureMatrix.m[2]=this._t1.z,this._cachedTextureMatrix.m[4]=this._t2.x,this._cachedTextureMatrix.m[5]=this._t2.y,this._cachedTextureMatrix.m[6]=this._t2.z,this._cachedTextureMatrix.m[8]=this._t0.x,this._cachedTextureMatrix.m[9]=this._t0.y,this._cachedTextureMatrix.m[10]=this._t0.z,this._cachedTextureMatrix)},getReflectionTextureMatrix:function(){if(this.uOffset==this._cachedUOffset&&this.vOffset==this._cachedVOffset&&this.uScale==this._cachedUScale&&this.vScale==this._cachedVScale&&this.coordinatesMode==this._cachedCoordinatesMode)return this._cachedTextureMatrix;null==this._cachedTextureMatrix&&(this._cachedTextureMatrix=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._projectionModeMatrix=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)),this._cachedCoordinatesMode=this.coordinatesMode;var e=this.coordinatesMode;switch(e){case 2:Le.FromValuesToRef(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,this._cachedTextureMatrix),this._cachedTextureMatrix.m[0]=this.uScale,this._cachedTextureMatrix.m[5]=this.vScale,this._cachedTextureMatrix.m[12]=this.uOffset,this._cachedTextureMatrix.m[13]=this.vOffset;break;case 4:Le.FromValuesToRef(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,this._projectionModeMatrix),this._projectionModeMatrix.m[0]=.5,this._projectionModeMatrix.m[5]=-.5,this._projectionModeMatrix.m[10]=0,this._projectionModeMatrix.m[12]=.5,this._projectionModeMatrix.m[13]=.5,this._projectionModeMatrix.m[14]=1,this._projectionModeMatrix.m[15]=1,this.getScene().getProjectionMatrix().multiplyToRef(this._projectionModeMatrix,this._cachedTextureMatrix);break;default:Le.FromValuesToRef(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,this._cachedTextureMatrix)}return this._cachedTextureMatrix},clone:function(){var e=new je(this._texture.url,this.getScene(),this._noMipmap,this._invertY,this._samplingMode);return e.hasAlpha=this.hasAlpha,e.level=this.level,e.wrapU=this.wrapU,e.wrapV=this.wrapV,e.coordinatesIndex=this.coordinatesIndex,e.coordinatesMode=this.coordinatesMode,e.uOffset=this.uOffset,e.vOffset=this.vOffset,e.uScale=this.uScale,e.vScale=this.vScale,e.uAng=this.uAng,e.vAng=this.vAng,e.wAng=this.wAng,e},serialize:function(){if(null==this.name)return null;var e=Ye.prototype.serialize.call(this);return e.uOffset=this.uOffset,e.vOffset=this.vOffset,e.uScale=this.uScale,e.vScale=this.vScale,e.uAng=this.uAng,e.vAng=this.vAng,e.wAng=this.wAng,e},__class__:je});var qe=t.BABYLON.RenderTargetTexture=function(e,t,r,n,i,s,o){null==o&&(o=!1),null==s&&(s=0),null==i&&(i=!0),this._refreshRate=1,this._currentRefreshId=-1,this._size={width:0,height:0},this.renderSprites=!1,this.renderParticles=!0,this.renderList=[],je.call(this,null,r,!n),this.coordinatesMode=4,this.name=e,this.isRenderTarget=!0,(0|t)===t?(this._size.width=t,this._size.height=t):null!=t.width&&(this._size.width=t.width,this._size.height=t.height),this._generateMipMaps=n,this._doNotChangeAspectRatio=i,this.isCube=o,o?(this._texture=r._engine.createRenderTargetCubeTexture(this._size,{generateMipMaps:n,type:s}),this.coordinatesMode=6,this._textureMatrix=Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)):this._texture=r._engine.createRenderTargetTexture(this._size,{generateMipMaps:n,type:s}),this._renderingManager=new Ze(r)};s["com.babylonhx.materials.textures.RenderTargetTexture"]=qe,qe.__name__=["com","babylonhx","materials","textures","RenderTargetTexture"],qe.__super__=je,qe.prototype=n(je.prototype,{resetRefreshCounter:function(){this._currentRefreshId=-1},get_refreshRate:function(){return this._refreshRate},set_refreshRate:function(e){return this._refreshRate=e,this.resetRefreshCounter(),e},_shouldRender:function(){return-1==this._currentRefreshId?(this._currentRefreshId=1,!0):this.get_refreshRate()==this._currentRefreshId?(this._currentRefreshId=1,!0):(this._currentRefreshId++,!1)},isReady:function(){return this.getScene().renderTargetsEnabled?je.prototype.isReady.call(this):!1},getRenderSize:function(){return this._size},get_canRescale:function(){return!0},scale:function(e){var t={width:this._size.width*e|0,height:this._size.height*e|0};this.resize(t,this._generateMipMaps)},getReflectionTextureMatrix:function(){return this.isCube?this._textureMatrix:je.prototype.getReflectionTextureMatrix.call(this)},resize:function(e,t){this.releaseInternalTexture(),this.isCube?this._texture=this.getScene().getEngine().createRenderTargetCubeTexture(e):this._texture=this.getScene().getEngine().createRenderTargetTexture(e,t)},render:function(e){null==e&&(e=!1);var t=this.getScene();if(null!=this.activeCamera&&this.activeCamera!=t.activeCamera&&t.setTransformMatrix(this.activeCamera.getViewMatrix(),this.activeCamera.getProjectionMatrix(!0)),null!=this._waitingRenderList){this.renderList=[];for(var r=0,n=this._waitingRenderList.length;n>r;){var i=r++,s=this._waitingRenderList[i];this.renderList.push(t.getMeshByID(s))}this._waitingRenderList=null}if(null==this.renderList||0!=this.renderList.length){this._renderingManager.reset();var o;o=null!=this.renderList?this.renderList:t._activeMeshes.data;for(var a=0;a<o.length;){var l=o[a];if(++a,null!=l){if(!l.isReady()){this.resetRefreshCounter();continue}if(l.isEnabled()&&l.isVisible&&null!=l.subMeshes&&0!=(l.layerMask&t.activeCamera.layerMask)){l._activate(t._renderId);for(var h=0,c=l.subMeshes;h<c.length;){var u=c[h];++h,t._activeIndices+=u.indexCount,this._renderingManager.dispatch(u)}}}}if(this.isCube)for(var f=0;6>f;){var d=f++;this.renderToTarget(d,o,e),t._renderId++}else this.renderToTarget(0,o,e);null!=this.onAfterUnbind&&this.onAfterUnbind(),null!=this.activeCamera&&this.activeCamera!=t.activeCamera&&t.setTransformMatrix(t.activeCamera.getViewMatrix(),t.activeCamera.getProjectionMatrix(!0)),t._cachedMaterial=null}},renderToTarget:function(e,t,r){var n=this.getScene(),i=n._engine;r&&n.postProcessManager._prepareFrame(this._texture)||(this.isCube?i.bindFramebuffer(this._texture,e):i.bindFramebuffer(this._texture)),null!=this.onBeforeRender&&this.onBeforeRender(e),null!=this.onClear?this.onClear(i):i.clear(n.clearColor,!0,!0),this._doNotChangeAspectRatio||n.setTransformMatrix(n.activeCamera.getViewMatrix(),n.activeCamera.getProjectionMatrix(!0)),this._renderingManager.render(this.customRenderFunction,t,this.renderParticles,this.renderSprites),r&&n.postProcessManager._finalizeFrame(!1,this._texture,e),this._doNotChangeAspectRatio||n.setTransformMatrix(n.activeCamera.getViewMatrix(),n.activeCamera.getProjectionMatrix(!0)),null!=this.onAfterRender&&this.onAfterRender(e),this.isCube&&5!=e||(this.isCube&&5==e&&i.generateMipMapsForCubemap(this._texture),i.unBindFramebuffer(this._texture,this.isCube))},clone:function(){var e=this.getSize(),t=new qe(this.name,e.width,this.getScene(),this._generateMipMaps);return t.hasAlpha=this.hasAlpha,t.level=this.level,t.coordinatesMode=this.coordinatesMode,t.renderList=this.renderList.slice(0),t},serialize:function(){if(null==this.name)return null;var e=je.prototype.serialize.call(this);e.renderTargetSize=this.getRenderSize(),e.renderList=[];for(var t=0,r=this.renderList.length;r>t;){var n=t++;e.renderList.push(this.renderList[n].id)}return e},__class__:qe,__properties__:{get_canRescale:"get_canRescale",set_refreshRate:"set_refreshRate",get_refreshRate:"get_refreshRate"}});var Ke=t.BABYLON.MirrorTexture=function(e,t,r,n){this._mirrorMatrix=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._transformMatrix=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this.mirrorPlane=new Qe(0,1,0,1);var i=this;qe.call(this,e,t,r,n,!0),this.onBeforeRender=function(e){null==e&&(e=0),Le.ReflectionToRef(i.mirrorPlane,i._mirrorMatrix),i._savedViewMatrix=r._viewMatrix,i._mirrorMatrix.multiplyToRef(i._savedViewMatrix,i._transformMatrix),r._viewMatrix=i._transformMatrix,r._projectionMatrix=r._projectionMatrix,r._viewMatrix.multiplyToRef(r._projectionMatrix,r._transformMatrix),r.clipPlane=i.mirrorPlane,r._engine.cullBackFaces=!1,r._mirroredCameraPosition=L.TransformCoordinates(r.activeCamera.position,i._mirrorMatrix)},this.onAfterRender=function(e){null==e&&(e=0),r._viewMatrix=i._savedViewMatrix,r._projectionMatrix=r._projectionMatrix,r._viewMatrix.multiplyToRef(r._projectionMatrix,r._transformMatrix),r._engine.cullBackFaces=!0,r._mirroredCameraPosition=null,r.clipPlane=null}};s["com.babylonhx.materials.textures.MirrorTexture"]=Ke,Ke.__name__=["com","babylonhx","materials","textures","MirrorTexture"],Ke.__super__=qe,Ke.prototype=n(qe.prototype,{clone:function(){var e=this.getSize(),t=new Ke(this.name,e.width,this.getScene(),this._generateMipMaps);return t.hasAlpha=this.hasAlpha,t.level=this.level,t.mirrorPlane=this.mirrorPlane.clone(),t.renderList=this.renderList.slice(0),t},serialize:function(){if(null==this.name)return null;var e=qe.prototype.serialize.call(this);return e.mirrorPlane=this.mirrorPlane.asArray(),e},__class__:Ke});var Ze=t.BABYLON.RenderingManager=function(e){this._renderingGroups=[],this._scene=e};s["com.babylonhx.rendering.RenderingManager"]=Ze,Ze.__name__=["com","babylonhx","rendering","RenderingManager"],Ze.prototype={_renderParticles:function(e,t){if(0!=this._scene._activeParticleSystems.length){this._activeCamera=this._scene.activeCamera;for(var r=0,n=this._scene._activeParticleSystems.length;n>r;){var i=r++,s=this._scene._activeParticleSystems.data[i];s.renderingGroupId==e&&0!=(this._activeCamera.layerMask&s.layerMask)&&(this._depthBufferAlreadyCleaned||(this._scene._engine.clear(new Oe(0,0,0),!1,!0),this._depthBufferAlreadyCleaned=!0),(null==s.emitter.position||null==t||-1!=function(e){var r,n=s.emitter;return r=l.indexOf(t,n,0)}(this))&&(this._scene._activeParticles+=s.render()))}}},_renderSprites:function(e){if(this._scene.spritesEnabled&&0!=this._scene.spriteManagers.length){this._activeCamera=this._scene.activeCamera;for(var t=0,r=this._scene.spriteManagers.length;r>t;){var n=t++,i=this._scene.spriteManagers[n];i.renderingGroupId==e&&0!=(this._activeCamera.layerMask&i.layerMask)&&(this._depthBufferAlreadyCleaned||(this._scene._engine.clear(new Oe(0,0,0),!1,!0),this._depthBufferAlreadyCleaned=!0),i.render())}}},_clearDepthBuffer:function(){this._depthBufferAlreadyCleaned||(this._scene._engine.clear(new Oe(0,0,0),!1,!0),this._depthBufferAlreadyCleaned=!0)},_renderSpritesAndParticles:function(){this._currentRenderSprites&&this._renderSprites(this._currentIndex),this._currentRenderParticles&&this._renderParticles(this._currentIndex,this._currentActiveMeshes)},render:function(e,t,r,n){this._currentActiveMeshes=t,this._currentRenderParticles=r,this._currentRenderSprites=n;for(var s=0;s<Ze.MAX_RENDERINGGROUPS;)this._depthBufferAlreadyCleaned=0==s,Ze._renderingGroup=this._renderingGroups[s],Ze._needToStepBack=!1,this._currentIndex=s,null!=Ze._renderingGroup?(this._depthBufferAlreadyCleaned||(this._scene._engine.clear(new Oe(0,0,0),!1,!0),this._depthBufferAlreadyCleaned=!0),null==Ze._renderingGroup.onBeforeTransparentRendering&&(Ze._renderingGroup.onBeforeTransparentRendering=i(this,this._renderSpritesAndParticles)),Ze._renderingGroup.render(e)||(this._renderingGroups.splice(s,1),Ze._needToStepBack=!0,this._renderSpritesAndParticles())):this._renderSpritesAndParticles(),Ze._needToStepBack&&s--,++s},reset:function(){for(var e=0,t=this._renderingGroups;e<t.length;){var r=t[e];++e,null!=r&&r.prepare()}},dispatch:function(e){var t=e._mesh,r=t.renderingGroupId;null==this._renderingGroups[r]&&(this._renderingGroups[r]=new fr(r,this._scene)),this._renderingGroups[r].dispatch(e)},__class__:Ze};var Qe=t.BABYLON.Plane=function(e,t,r,n){this.normal=new L(e,t,r),this.d=n};s["com.babylonhx.math.Plane"]=Qe,Qe.__name__=["com","babylonhx","math","Plane"],Qe.FromArray=function(e){return new Qe(e[0],e[1],e[2],e[3])},Qe.FromPoints=function(e,t,r){var n=new Qe(0,0,0,0);return n.copyFromPoints(e,t,r),n},Qe.FromPositionAndNormal=function(e,t){var r=new Qe(0,0,0,0);return t.normalize(),r.normal=t,r.d=-(t.x*e.x+t.y*e.y+t.z*e.z),r},Qe.SignedDistanceToPlaneFromPositionAndNormal=function(e,t,r){var n=-(t.x*e.x+t.y*e.y+t.z*e.z);return r.x*t.x+r.y*t.y+r.z*t.z+n},Qe.prototype={asArray:function(){return[this.normal.x,this.normal.y,this.normal.z,this.d]},clone:function(){return new Qe(this.normal.x,this.normal.y,this.normal.z,this.d)},normalize:function(){var e=Math.sqrt(this.normal.x*this.normal.x+this.normal.y*this.normal.y+this.normal.z*this.normal.z),t=0;0!=e&&(t=1/e),this.normal.x*=t,this.normal.y*=t,this.normal.z*=t,this.d*=t},transform:function(e){Qe.transposedMatrix=Le.Transpose(e);var t=this.normal.x,r=this.normal.y,n=this.normal.z,i=this.d,s=t*Qe.transposedMatrix.m[0]+r*Qe.transposedMatrix.m[1]+n*Qe.transposedMatrix.m[2]+i*Qe.transposedMatrix.m[3],o=t*Qe.transposedMatrix.m[4]+r*Qe.transposedMatrix.m[5]+n*Qe.transposedMatrix.m[6]+i*Qe.transposedMatrix.m[7],a=t*Qe.transposedMatrix.m[8]+r*Qe.transposedMatrix.m[9]+n*Qe.transposedMatrix.m[10]+i*Qe.transposedMatrix.m[11],l=t*Qe.transposedMatrix.m[12]+r*Qe.transposedMatrix.m[13]+n*Qe.transposedMatrix.m[14]+i*Qe.transposedMatrix.m[15];return new Qe(s,o,a,l)},dotCoordinate:function(e){return this.normal.x*e.x+this.normal.y*e.y+this.normal.z*e.z+this.d},copyFromPoints:function(e,t,r){var n,i=t.x-e.x,s=t.y-e.y,o=t.z-e.z,a=r.x-e.x,l=r.y-e.y,h=r.z-e.z,c=s*h-o*l,u=o*a-i*h,f=i*l-s*a,d=Math.sqrt(c*c+u*u+f*f);n=0!=d?1/d:0,this.normal.x=c*n,this.normal.y=u*n,this.normal.z=f*n,this.d=-(this.normal.x*e.x+this.normal.y*e.y+this.normal.z*e.z)},isFrontFacingTo:function(e,t){var r=L.Dot(this.normal,e);return t>=r},signedDistanceTo:function(e){return L.Dot(e,this.normal)+this.d},__class__:Qe};var $e=t.BABYLON.FresnelParameters=function(){this.power=1,this.bias=0,this.rightColor=new Ge(0,0,0),this.leftColor=new Ge(1,1,1),this.isEnabled=!0};s["com.babylonhx.materials.FresnelParameters"]=$e,$e.__name__=["com","babylonhx","materials","FresnelParameters"],$e.Parse=function(e){var t=new $e;return t.isEnabled=e.isEnabled,t.leftColor=Ge.FromArray(e.leftColor,null),t.rightColor=Ge.FromArray(e.rightColor,null),t.bias=e.bias,null!=e.power?t.power=e.power:t.power=1,t},$e.prototype={clone:function(){var e=new $e;return e.isEnabled=this.isEnabled,e.leftColor=this.leftColor,e.rightColor=this.rightColor,e.bias=this.bias,e.power=this.power,e},serialize:function(){var e={};return e.isEnabled=this.isEnabled,e.leftColor=this.leftColor,e.rightColor=this.rightColor,e.bias=this.bias,e.power=this.power,e},__class__:$e};var Je=t.BABYLON.MultiMaterial=function(e,t){this.subMaterials=[],We.call(this,e,t,!0),t.multiMaterials.push(this)};s["com.babylonhx.materials.MultiMaterial"]=Je,Je.__name__=["com","babylonhx","materials","MultiMaterial"],Je.__super__=We,Je.prototype=n(We.prototype,{getSubMaterial:function(e){return 0>e||e>=this.subMaterials.length?this.getScene().defaultMaterial:this.subMaterials[e]},isReady:function(e,t){null==t&&(t=!1);for(var r=0,n=this.subMaterials.length;n>r;){var i=r++,s=this.subMaterials[i];if(null!=s&&!this.subMaterials[i].isReady(e))return!1}return!0},clone:function(e,t){null==t&&(t=!1);for(var r=new Je(e,this.getScene()),n=0,i=this.subMaterials.length;i>n;){var s=n++,o=this.subMaterials[s];t?o=this.subMaterials[s].clone(e+"-"+this.subMaterials[s].name):r.subMaterials.push(o)}return r},__class__:Je});var et=t.BABYLON.AbstractMesh=function(e,t){this._unIndexed=!1,this._isWorldMatrixFrozen=!1,
this._onAfterWorldMatrixUpdate=[],this._intersectionsInProgress=[],this._renderId=0,this._isDisposed=!1,this._pivotMatrix=Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this._isDirty=!1,this._collisionsScalingMatrix=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._collisionsTransformMatrix=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._absolutePosition=new L(0,0,0),this._rotateYByPI=Le.RotationY(Math.PI),this._worldMatrix=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._localWorld=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._localPivotScalingRotation=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._localPivotScaling=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._localBillboard=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._localTranslation=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._localRotation=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._localScaling=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this.edgesColor=new Oe(1,0,0,1),this.edgesWidth=1,this._newPositionForCollisions=new L(0,0,0),this._diffPositionForCollisions=new L(0,0,0),this._oldPositionForCollisions=new L(0,0,0),this._collider=new ne,this.ellipsoidOffset=new L(0,0,0),this.ellipsoid=new L(.5,1,.5),this._checkCollisions=!1,this._physicRestitution=0,this._physicsFriction=0,this._physicsMass=0,this._physicImpostor=0,this.alwaysSelectAsActiveMesh=!1,this.layerMask=268435455,this.useOctreeForCollisions=!0,this.useOctreeForPicking=!0,this.useOctreeForRenderingSelection=!0,this.numBoneInfluencers=4,this.computeBonesUsingShaders=!0,this.applyFog=!0,this.useVertexColors=!0,this.hasVertexAlpha=!1,this.overlayAlpha=.5,this.overlayColor=new Ge(1,0,0),this.renderOverlay=!1,this.outlineWidth=.02,this.outlineColor=new Ge(1,0,0),this.renderOutline=!1,this._receiveShadows=!1,this.renderingGroupId=0,this.isBlocker=!1,this.onDispose=null,this.showSubMeshesBoundingBox=!1,this.showBoundingBox=!1,this._isPickable=!1,this.isVisible=!0,this.infiniteDistance=!1,this.alphaIndex=1/0,this._visibility=1,this.billboardMode=et.BILLBOARDMODE_NONE,this.scaling=new L(1,1,1),this.rotation=new L(0,0,0),this.position=new L(0,0,0),this.definedFacingForward=!0,y.call(this,e,t),t.addMesh(this),Object.defineProperty(this,"visibility",{get:this.get_visibility,set:this.set_visibility}),Object.defineProperty(this,"isPickable",{get:this.get_isPickable,set:this.set_isPickable}),Object.defineProperty(this,"skeleton",{get:this.get_skeleton,set:this.set_skeleton}),Object.defineProperty(this,"material",{get:this.get_material,set:this.set_material}),Object.defineProperty(this,"receiveShadows",{get:this.get_receiveShadows,set:this.set_receiveShadows}),Object.defineProperty(this,"positions",{get:this.get_positions,set:this.set_positions}),Object.defineProperty(this,"useBones",{get:this.get_useBones,set:this.set_useBones}),Object.defineProperty(this,"isBlocked",{get:this.get_isBlocked,set:this.set_isBlocked}),Object.defineProperty(this,"worldMatrixFromCache",{get:this.get_worldMatrixFromCache}),Object.defineProperty(this,"absolutePosition",{get:this.get_absolutePosition}),Object.defineProperty(this,"isWorldMatrixFrozen",{get:this.get_isWorldMatrixFrozen})};s["com.babylonhx.mesh.AbstractMesh"]=et,et.__name__=["com","babylonhx","mesh","AbstractMesh"],et.__interfaces__=[v],et.__super__=y,et.prototype=n(y.prototype,{get_visibility:function(){return this._visibility},set_visibility:function(e){return this._visibility=e,e},get_isPickable:function(){return this._isPickable},set_isPickable:function(e){return this._isPickable=e,e},get_skeleton:function(){return this._skeleton},set_skeleton:function(e){return this._skeleton=e,e},get_material:function(){return this._material},set_material:function(e){return this._material=e,e},get_receiveShadows:function(){return this._receiveShadows},set_receiveShadows:function(e){return this._receiveShadows=e,e},get_positions:function(){return this._positions},set_positions:function(e){return this._positions=e,e},get_useBones:function(){return null!=this.get_skeleton()&&this._scene.skeletonsEnabled&&this.isVerticesDataPresent("matricesIndices")&&this.isVerticesDataPresent("matricesWeights")},disableEdgesRendering:function(){null!=this._edgesRenderer&&(this._edgesRenderer.dispose(),this._edgesRenderer=null)},enableEdgesRendering:function(e,t){null==t&&(t=!1),null==e&&(e=.95),this.disableEdgesRendering(),this._edgesRenderer=new cr(this,e,t)},get_isBlocked:function(){return!1},getLOD:function(e,t){return this},getTotalVertices:function(){return 0},getIndices:function(e){return null==e&&(e=!1),null},getVerticesData:function(e,t){return null==t&&(t=!1),null},isVerticesDataPresent:function(e){return!1},getBoundingInfo:function(){return null!=this._masterMesh?this._masterMesh.getBoundingInfo():(null==this._boundingInfo&&this._updateBoundingInfo(),this._boundingInfo)},_preActivate:function(){},_activate:function(e){this._renderId=e},getWorldMatrix:function(){return null!=this._masterMesh?this._masterMesh.getWorldMatrix():(this._currentRenderId!=this._scene._renderId&&this.computeWorldMatrix(),this._worldMatrix)},get_worldMatrixFromCache:function(){return this._worldMatrix},get_absolutePosition:function(){return this._absolutePosition},freezeWorldMatrix:function(){this._isWorldMatrixFrozen=!1,this.computeWorldMatrix(!0),this._isWorldMatrixFrozen=!0},unfreezeWorldMatrix:function(){this._isWorldMatrixFrozen=!1,this.computeWorldMatrix(!0)},get_isWorldMatrixFrozen:function(){return this._isWorldMatrixFrozen},rotate:function(e,t,r){if(e.normalize(),null==this.rotationQuaternion&&(this.rotationQuaternion=R.RotationYawPitchRoll(this.rotation.y,this.rotation.x,this.rotation.z),this.rotation=new L(0,0,0)),null==r||r==Tt.LOCAL){var n=R.RotationAxis(e,t);this.rotationQuaternion=this.rotationQuaternion.multiply(n)}else{if(null!=this.parent){var i=this.parent.getWorldMatrix().clone();i.invertToRef(i),e=L.TransformNormal(e,i)}this.rotationQuaternion=R.RotationAxis(e,t),this.rotationQuaternion=this.rotationQuaternion.multiply(this.rotationQuaternion)}},translate:function(e,t,r){var n=new L(e.x*t,e.y*t,e.z*t);if(null==r||r==Tt.LOCAL){var i=this.getPositionExpressedInLocalSpace().add(n);this.computeWorldMatrix(),this.position=L.TransformNormal(i,this._localWorld)}else this.setAbsolutePosition(function(e){var t;return e.computeWorldMatrix(),t=e._absolutePosition}(this).add(n))},getAbsolutePosition:function(){return this.computeWorldMatrix(),this._absolutePosition},setAbsolutePosition:function(e){if(null!=e){var t=0,r=0,n=0;if(e instanceof Array&&null==e.__enum__){if(e.length<3)return;t=e[0],r=e[1],n=e[2]}else t=e.x,r=e.y,n=e.z;if(null!=this.parent){var i=this.parent.getWorldMatrix().clone();i.invertToRef(i);var s=new L(t,r,n);this.position=L.TransformCoordinates(s,i)}else this.position.x=t,this.position.y=r,this.position.z=n}},movePOV:function(e,t,r){this.position.addInPlace(this.calcMovePOV(e,t,r))},calcMovePOV:function(e,t,r){var n,i=new Le;n=null!=this.rotationQuaternion?this.rotationQuaternion:R.RotationYawPitchRoll(this.rotation.y,this.rotation.x,this.rotation.z),n.toRotationMatrix(i);var s,o=new L(0,0,0);return s=this.definedFacingForward?-1:1,L.TransformCoordinatesFromFloatsToRef(e*s,t,r*s,i,o),o},rotatePOV:function(e,t,r){this.rotation.addInPlace(this.calcRotatePOV(e,t,r))},calcRotatePOV:function(e,t,r){var n;return n=this.definedFacingForward?1:-1,new L(e*n,t,r*n)},setPivotMatrix:function(e){this._pivotMatrix=e,this._cache.pivotMatrixUpdated=!0},getPivotMatrix:function(){return this._pivotMatrix},_isSynchronized:function(){if(this._isDirty)return!1;if(this.billboardMode!=this._cache.billboardMode||this.billboardMode!=et.BILLBOARDMODE_NONE)return!1;if(this._cache.pivotMatrixUpdated)return!1;if(this.infiniteDistance)return!1;if(!this._cache.position.equals(this.position))return!1;if(null!=this.rotationQuaternion){if(!this._cache.rotationQuaternion.equals(this.rotationQuaternion))return!1}else if(!this._cache.rotation.equals(this.rotation))return!1;return this._cache.scaling.equals(this.scaling)?!0:!1},_initCache:function(){y.prototype._initCache.call(this),this._cache.localMatrixUpdated=!1,this._cache.position=new L(0,0,0),this._cache.scaling=new L(0,0,0),this._cache.rotation=new L(0,0,0),this._cache.rotationQuaternion=new R(0,0,0,0),this._cache.billboardMode=-1},markAsDirty:function(e){"rotation"==e&&(this.rotationQuaternion=null),this._currentRenderId=1/0,this._isDirty=!0},_updateBoundingInfo:function(){null==this._boundingInfo?this._boundingInfo=new he(this.get_absolutePosition(),this.get_absolutePosition()):this._boundingInfo=this._boundingInfo,this._boundingInfo._update(this.get_worldMatrixFromCache()),this._updateSubMeshesBoundingInfo(this.get_worldMatrixFromCache())},_updateSubMeshesBoundingInfo:function(e){if(null!=this.subMeshes)for(var t=0,r=this.subMeshes;t<r.length;){var n=r[t];++t,n.get_IsGlobal()||(null==(n.get_IsGlobal()?n._mesh.getBoundingInfo():n._boundingInfo)&&n.refreshBoundingInfo(),(n.get_IsGlobal()?n._mesh.getBoundingInfo():n._boundingInfo)._update(e))}},computeWorldMatrix:function(e){if(null==e&&(e=!1),this._isWorldMatrixFrozen)return this._worldMatrix;if(!e&&(this._currentRenderId==this._scene._renderId||this.isSynchronized(!0)))return this._currentRenderId=this._scene._renderId,this._worldMatrix;if(this._cache.position.copyFrom(this.position),this._cache.scaling.copyFrom(this.scaling),this._cache.pivotMatrixUpdated=!1,this._cache.billboardMode=this.billboardMode,this._currentRenderId=this._scene._renderId,this._isDirty=!1,Le.ScalingToRef(this.scaling.x,this.scaling.y,this.scaling.z,this._localScaling),null!=this.rotationQuaternion?(this.rotationQuaternion.toRotationMatrix(this._localRotation),this._cache.rotationQuaternion.copyFrom(this.rotationQuaternion)):(R.RotationYawPitchRollToRef(this.rotation.y,this.rotation.x,this.rotation.z,Le._tempQuaternion),Le._tempQuaternion.toRotationMatrix(this._localRotation),this._cache.rotation.copyFrom(this.rotation)),this.infiniteDistance&&null==this.parent){var t=this._scene.activeCamera;null!=t&&(et.cameraWorldMatrix=t.getWorldMatrix(),et.cameraGlobalPosition.copyFromFloats(et.cameraWorldMatrix.m[12],et.cameraWorldMatrix.m[13],et.cameraWorldMatrix.m[14]),Le.TranslationToRef(this.position.x+et.cameraGlobalPosition.x,this.position.y+et.cameraGlobalPosition.y,this.position.z+et.cameraGlobalPosition.z,this._localTranslation))}else Le.TranslationToRef(this.position.x,this.position.y,this.position.z,this._localTranslation);if(this._pivotMatrix.multiplyToRef(this._localScaling,this._localPivotScaling),this._localPivotScaling.multiplyToRef(this._localRotation,this._localPivotScalingRotation),this.billboardMode!=et.BILLBOARDMODE_NONE&&null!=this._scene.activeCamera){var r=this.position.clone(),n=this._scene.activeCamera.get_globalPosition().clone();null!=this.parent&&Object.prototype.hasOwnProperty.call(this.parent,"position")&&(r.addInPlace(this.parent.position),Le.TranslationToRef(r.x,r.y,r.z,this._localTranslation)),(this.billboardMode&et.BILLBOARDMODE_ALL)!=et.BILLBOARDMODE_ALL?n=this._scene.activeCamera.position:(0!=(this.billboardMode&et.BILLBOARDMODE_X)&&(n.x=r.x+.001),0!=(this.billboardMode&et.BILLBOARDMODE_Y)&&(n.y=r.y+.001),0!=(this.billboardMode&et.BILLBOARDMODE_Z)&&(n.z=r.z+.001)),Le.LookAtLHToRef(r,n,new L(0,1,0),this._localBillboard),this._localBillboard.m[12]=0,this._localBillboard.m[13]=0,this._localBillboard.m[14]=0,this._localBillboard.invert(),this._localPivotScalingRotation.multiplyToRef(this._localBillboard,this._localWorld),this._rotateYByPI.multiplyToRef(this._localWorld,this._localPivotScalingRotation)}this._localPivotScalingRotation.multiplyToRef(this._localTranslation,this._localWorld),null!=this.parent&&null!=this.parent.getWorldMatrix()&&this.billboardMode==et.BILLBOARDMODE_NONE?(this._parentRenderId=this.parent._currentRenderId,null!=this._meshToBoneReferal?(null==this._localMeshReferalTransform&&(this._localMeshReferalTransform=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)),this._localWorld.multiplyToRef(this.parent.getWorldMatrix(),this._localMeshReferalTransform),this._localMeshReferalTransform.multiplyToRef(this._meshToBoneReferal.getWorldMatrix(),this._worldMatrix)):this._localWorld.multiplyToRef(this.parent.getWorldMatrix(),this._worldMatrix)):this._worldMatrix.copyFrom(this._localWorld),null==this._boundingInfo?this._boundingInfo=new he(this.get_absolutePosition(),this.get_absolutePosition()):this._boundingInfo=this._boundingInfo,this._boundingInfo._update(this.get_worldMatrixFromCache()),this._updateSubMeshesBoundingInfo(this.get_worldMatrixFromCache()),this._absolutePosition.copyFromFloats(this._worldMatrix.m[12],this._worldMatrix.m[13],this._worldMatrix.m[14]);for(var i=0,s=this._onAfterWorldMatrixUpdate;i<s.length;){var o=s[i];++i,o(this)}return this._worldMatrix},registerAfterWorldMatrixUpdate:function(e){this._onAfterWorldMatrixUpdate.push(e)},unregisterAfterWorldMatrixUpdate:function(e){var t=l.indexOf(this._onAfterWorldMatrixUpdate,e,0);t>-1&&this._onAfterWorldMatrixUpdate.splice(t,1)},setPositionWithLocalVector:function(e){this.computeWorldMatrix(),this.position=L.TransformNormal(e,this._localWorld)},getPositionExpressedInLocalSpace:function(){this.computeWorldMatrix();var e=this._localWorld.clone();return e.invertToRef(e),L.TransformNormal(this.position,e)},locallyTranslate:function(e){this.computeWorldMatrix(),this.position=L.TransformCoordinates(e,this._localWorld)},lookAt:function(e,t,r,n){null==n&&(n=0),null==r&&(r=0),null==t&&(t=0);var i=e.subtract(this.position),s=-Math.atan2(i.z,i.x)-Math.PI/2,o=Math.sqrt(i.x*i.x+i.z*i.z),a=Math.atan2(i.y,o);this.rotationQuaternion=R.RotationYawPitchRoll(s+t,a+r,n)},attachToBone:function(e,t){this._meshToBoneReferal=t,this.parent=e},detachFromBone:function(){this._meshToBoneReferal=null,this.parent=null},isInFrustum:function(e){return this._boundingInfo.isInFrustum(e)},isCompletelyInFrustum:function(e){null==e&&(e=this._scene.activeCamera);var t=e.getViewMatrix().multiply(e.getProjectionMatrix(!1));return this._boundingInfo.isCompletelyInFrustum(yt.GetPlanes(t))?!0:!1},intersectsMesh:function(e,t){return null==t&&(t=!1),null==this._boundingInfo||null==e._boundingInfo?!1:this._boundingInfo.intersects(e._boundingInfo,t)},intersectsPoint:function(e){return null==this._boundingInfo?!1:this._boundingInfo.intersectsPoint(e)},setPhysicsState:function(e,t){var r=this._scene._physicsEngine;return null==r?null:(e=null!=e?e:0,Object.prototype.hasOwnProperty.call(e,"impostor")&&(t=e,e=e.impostor),0==e?(r._unregisterMesh(this),null):(null==t?(t.mass=0,t.friction=.2,t.restitution=.2):(null==t.mass&&(t.mass=0),null==t.friction&&(t.friction=.2),null==t.restitution&&(t.restitution=.2)),this._physicImpostor=e,this._physicsMass=t.mass,this._physicsFriction=t.friction,this._physicRestitution=t.restitution,r._registerMesh(this,e,t)))},getPhysicsImpostor:function(){return this._physicImpostor},getPhysicsMass:function(){return this._physicsMass},getPhysicsFriction:function(){return this._physicsFriction},getPhysicsRestitution:function(){return this._physicRestitution},getPositionInCameraSpace:function(e){return null==e&&(e=this._scene.activeCamera),L.TransformCoordinates(this.get_absolutePosition(),e.getViewMatrix())},getDistanceToCamera:function(e){return null==e&&(e=this._scene.activeCamera),this.get_absolutePosition().subtract(e.position).length()},applyImpulse:function(e,t){0!=this._physicImpostor&&this._scene._physicsEngine._applyImpulse(this,e,t)},setPhysicsLinkWith:function(e,t,r,n){0!=this._physicImpostor&&this._scene._physicsEngine._createLink(this,e,t,r,n)},updatePhysicsBodyPosition:function(){0!=this._physicImpostor&&this._scene._physicsEngine._updateBodyPosition(this)},get_checkCollisions:function(){return this._checkCollisions},set_checkCollisions:function(e){return this._checkCollisions=e,this._scene.get_workerCollisions()&&this._scene.collisionCoordinator.onMeshUpdated(this),e},moveWithCollisions:function(e){var t;this.computeWorldMatrix(),t=this._absolutePosition,t.subtractFromFloatsToRef(0,this.ellipsoid.y,0,this._oldPositionForCollisions),this._oldPositionForCollisions.addInPlace(this.ellipsoidOffset),this._collider.radius=this.ellipsoid,this._scene.collisionCoordinator.getNewPosition(this._oldPositionForCollisions,e,this._collider,3,this,i(this,this._onCollisionPositionChange),this.uniqueId)},_onCollisionPositionChange:function(e,t,r){this._scene.get_workerCollisions()&&t.multiplyInPlace(this._collider.radius),t.subtractToRef(this._oldPositionForCollisions,this._diffPositionForCollisions),this._diffPositionForCollisions.length()>_.CollisionsEpsilon&&this.position.addInPlace(this._diffPositionForCollisions),null!=this.onCollide&&null!=r&&this.onCollide(r)},createOrUpdateSubmeshesOctree:function(e,t){null==t&&(t=2),null==e&&(e=64),null==this._submeshesOctree&&(this._submeshesOctree=new fe(fe.CreationFuncForSubMeshes,e,t)),this.computeWorldMatrix(!0);var r=this.getBoundingInfo().boundingBox;return this._submeshesOctree.update(r.minimumWorld,r.maximumWorld,this.subMeshes),this._submeshesOctree},_collideForSubMesh:function(e,t,r){if(this._generatePointsArray(),null==e._lastColliderWorldVertices||!e._lastColliderTransformMatrix.equals(t)){e._lastColliderTransformMatrix=Le.FromValues(t.m[0],t.m[1],t.m[2],t.m[3],t.m[4],t.m[5],t.m[6],t.m[7],t.m[8],t.m[9],t.m[10],t.m[11],t.m[12],t.m[13],t.m[14],t.m[15]),e._lastColliderWorldVertices=[],e._trianglePlanes=[];for(var n=e.verticesStart,i=e.verticesStart+e.verticesCount,s=n;i>s;){var o=s++;e._lastColliderWorldVertices.push(L.TransformCoordinates(this._positions[o],t))}}r._collide(e,e._lastColliderWorldVertices,this.getIndices(),e.indexStart,e.indexStart+e.indexCount,e.verticesStart),r.collisionFound&&(r.collidedMesh=this)},_processCollisionsForSubMeshes:function(e,t){var r,n=0;if(null!=this._submeshesOctree&&this.useOctreeForCollisions){var i=e.velocityWorldLength+Math.max(Math.max(e.radius.x,e.radius.y),e.radius.z),s=this._submeshesOctree.intersects(e.basePointWorld,i,null);n=s.length,r=s.data}else r=this.subMeshes,n=r.length;for(var o=0;n>o;){var a=o++,l=r[a];n>1&&!(l.get_IsGlobal()?l._mesh.getBoundingInfo():l._boundingInfo)._checkCollision(e)||this._collideForSubMesh(l,t,e)}},_checkCollision:function(e){this._boundingInfo._checkCollision(e)&&(Le.ScalingToRef(1/e.radius.x,1/e.radius.y,1/e.radius.z,this._collisionsScalingMatrix),this.get_worldMatrixFromCache().multiplyToRef(this._collisionsScalingMatrix,this._collisionsTransformMatrix),this._processCollisionsForSubMeshes(e,this._collisionsTransformMatrix))},_generatePointsArray:function(){return!1},intersects:function(e,t){null==t&&(t=!1);var r=new ae;if(null==this.subMeshes||null==this._boundingInfo||!e.intersectsSphere(this._boundingInfo.boundingSphere)||!e.intersectsBox(this._boundingInfo.boundingBox))return r;if(!this._generatePointsArray())return r;var n,i,s=null;if(null!=this._submeshesOctree&&this.useOctreeForPicking){var o=Ct.Transform(e,this.getWorldMatrix()),a=this._submeshesOctree.intersectsRay(o);i=a.length,n=a.data}else n=this.subMeshes,i=n.length;for(var l=0;i>l;){var h=l++,c=n[h];if(!(i>1)||e.intersectsBox((c.get_IsGlobal()?c._mesh.getBoundingInfo():c._boundingInfo).boundingBox)){var u=c.intersects(e,this._positions,this.getIndices(),t);if(null!=u&&(t||null==s||u.distance<s.distance)&&(s=u,t))break}}if(null!=s){var f=this.getWorldMatrix(),d=L.TransformCoordinates(e.origin,f),m=e.direction.clone();m=m.scale(s.distance);var _=L.TransformNormal(m,f),p=new L(d.x+_.x,d.y+_.y,d.z+_.z);return r.hit=!0,r.distance=Math.sqrt(L.DistanceSquared(d,p)),r.pickedPoint=p,r.pickedMesh=this,r.bu=s.bu,r.bv=s.bv,r.faceId=s.faceId,r.subMeshId=s.subMeshId,r}return r},clone:function(e,t,r){return null==r&&(r=!1),null},releaseSubMeshes:function(){if(null!=this.subMeshes)for(;this.subMeshes.length>0;)this.subMeshes[0].dispose();else this.subMeshes=[]},dispose:function(e){null==e&&(e=!1),this._scene.stopAnimation(this),0!=this._physicImpostor&&this.setPhysicsState(0);for(var t=0,r=this._intersectionsInProgress.length;r>t;){var n=t++,i=this._intersectionsInProgress[n],s=l.indexOf(i._intersectionsInProgress,this,0);i._intersectionsInProgress.splice(s,1)}if(this._intersectionsInProgress=[],null!=this._edgesRenderer&&(this._edgesRenderer.dispose(),this._edgesRenderer=null),this.releaseSubMeshes(),this._scene.removeMesh(this),e)for(var o=0,a=this._scene.meshes.length;a>o;){var h=o++,c=this._scene.meshes[h];c.parent==this&&(c.parent=null,c.computeWorldMatrix(!0))}else{for(var u=0;u<this._scene.particleSystems.length;)this._scene.particleSystems[u].emitter==this&&(this._scene.particleSystems[u].dispose(null),u--),++u;for(var f=this._scene.meshes.slice(0),d=0,m=f.length;m>d;){var _=d++;f[_].parent==this&&f[_].dispose()}}this._onAfterWorldMatrixUpdate=[],this._isDisposed=!0,null!=this.onDispose&&this.onDispose()},__class__:et,__properties__:{set_checkCollisions:"set_checkCollisions",get_checkCollisions:"get_checkCollisions",get_isWorldMatrixFrozen:"get_isWorldMatrixFrozen",get_absolutePosition:"get_absolutePosition",get_worldMatrixFromCache:"get_worldMatrixFromCache",get_isBlocked:"get_isBlocked",get_useBones:"get_useBones",set_positions:"set_positions",get_positions:"get_positions",set_receiveShadows:"set_receiveShadows",get_receiveShadows:"get_receiveShadows",set_material:"set_material",get_material:"get_material",set_skeleton:"set_skeleton",get_skeleton:"get_skeleton",set_isPickable:"set_isPickable",get_isPickable:"get_isPickable",set_visibility:"set_visibility",get_visibility:"get_visibility"}});var tt=t.BABYLON.Mesh=function(e,t,r,n,i){if(null==i&&(i=!1),this._closeArray=!1,this._closePath=!1,this.cap=0,this._areNormalsFrozen=!1,this._sideOrientation=0,this._preActivateId=-1,this._instancesBufferSize=2048,this._batchCache=new Nt,this._renderIdForInstances=[],this._onAfterRenderCallbacks=[],this._onBeforeRenderCallbacks=[],this._LODLevels=[],this.instances=[],this.delayLoadState=0,et.call(this,e,t),null!=n){if(null!=n._geometry&&n._geometry.applyToMesh(this),tt._deepCopy(n,this),this.id=e+"."+n.id,null!=n&&this.set_material(n.get_material()),!i)for(var s=0,o=t.meshes.length;o>s;){var a=s++,l=t.meshes[a];if(l.parent==n){l.clone(e+"."+l.name,this,i)}}for(var h=0,c=t.particleSystems.length;c>h;){var u=h++,f=t.particleSystems[u];f.emitter==n&&f.clone(f.name,this)}this.computeWorldMatrix(!0)}null!=r&&(this.parent=r)};s["com.babylonhx.mesh.Mesh"]=tt,tt.__name__=["com","babylonhx","mesh","Mesh"],tt.__interfaces__=[B,Te],tt._deepCopy=function(e,t){t.__smartArrayFlags=e.__smartArrayFlags.slice(),t._LODLevels=e._LODLevels.slice(),t._absolutePosition=e._absolutePosition.clone(),t._batchCache=e._batchCache,t._boundingInfo=e._boundingInfo,t._cache=e._cache,t._checkCollisions=e._checkCollisions,t._childrenFlag=e._childrenFlag,t._collider=e._collider,t.instances=e.instances.slice(),t._collisionsScalingMatrix=e._collisionsScalingMatrix.clone(),t._collisionsTransformMatrix=e._collisionsTransformMatrix.clone(),t._diffPositionForCollisions=e._diffPositionForCollisions.clone(),t._geometry=e._geometry,t._instancesBufferSize=e._instancesBufferSize,t._intersectionsInProgress=e._intersectionsInProgress.slice(),t._isBlocked=e._isBlocked,t._isDirty=e._isDirty,t._isDisposed=e._isDisposed,t._isEnabled=e._isEnabled,t._isPickable=e._isPickable,t._isReady=e._isReady,t._localBillboard=e._localBillboard.clone(),t._localPivotScaling=e._localPivotScaling.clone(),t._localRotation=e._localRotation.clone(),t._localScaling=e._localScaling.clone(),t._localTranslation=e._localTranslation.clone(),t._localWorld=e._localWorld,t._masterMesh=e._masterMesh,t._newPositionForCollisions=e._newPositionForCollisions.clone(),t._oldPositionForCollisions=e._oldPositionForCollisions.clone(),t._onAfterRenderCallbacks=e._onAfterRenderCallbacks,t._onAfterWorldMatrixUpdate=e._onAfterWorldMatrixUpdate,t._onBeforeRenderCallbacks=e._onBeforeRenderCallbacks,t._parentRenderId=e._parentRenderId,t._physicImpostor=e._physicImpostor,t._physicRestitution=e._physicRestitution,t._physicsFriction=e._physicsFriction,t._physicsMass=e._physicsMass,t._pivotMatrix=e._pivotMatrix.clone(),null!=e._positions&&(t._positions=e._positions.slice()),t._preActivateId=e._preActivateId,t._receiveShadows=e._receiveShadows,t._renderId=e._renderId,t._renderIdForInstances=e._renderIdForInstances.slice(),t._rotateYByPI=e._rotateYByPI.clone(),t._scene=e._scene,t._shouldGenerateFlatShading=e._shouldGenerateFlatShading,t._submeshesOctree=e._submeshesOctree,t._visibility=e._visibility,t._visibleInstances=e._visibleInstances,t._waitingActions=e._waitingActions,t._waitingParentId=e._waitingParentId,t._worldMatricesInstancesBuffer=e._worldMatricesInstancesBuffer,t._worldMatrix=e._worldMatrix.clone(),t.definedFacingForward=e.definedFacingForward,t.position=e.position.clone(),t.rotation=e.rotation.clone(),null!=e.rotationQuaternion&&(t.rotationQuaternion=e.rotationQuaternion.clone()),t.scaling=e.scaling.clone(),t.billboardMode=e.billboardMode,t.alphaIndex=e.alphaIndex,t.infiniteDistance=e.infiniteDistance,t.isVisible=e.isVisible,t.showBoundingBox=e.showBoundingBox,t.showSubMeshesBoundingBox=e.showSubMeshesBoundingBox,t.onDispose=e.onDispose,t.isBlocker=e.isBlocker,t.renderingGroupId=e.renderingGroupId,t.actionManager=e.actionManager,t.renderOutline=e.renderOutline,t.outlineColor=e.outlineColor.clone(),t.outlineWidth=e.outlineWidth,t.renderOverlay=e.renderOverlay,t.overlayColor=e.overlayColor.clone(),t.overlayAlpha=e.overlayAlpha,t.hasVertexAlpha=e.hasVertexAlpha,t.useVertexColors=e.useVertexColors,t.applyFog=e.applyFog,t.useOctreeForRenderingSelection=e.useOctreeForRenderingSelection,t.useOctreeForPicking=e.useOctreeForPicking,t.useOctreeForCollisions=e.useOctreeForCollisions,t.layerMask=e.layerMask,t.ellipsoid=e.ellipsoid.clone(),t.ellipsoidOffset=e.ellipsoidOffset.clone()},tt.CreateRibbon=function(e,t,r,n,i,s,o,a,l){null==a&&(a=0),null==o&&(o=!1),null==i&&(i=0),null==n&&(n=!1),null==r&&(r=!1);var h={pathArray:t,closeArray:r,closePath:n,offset:i,instance:l,sideOrientation:a,updatable:o};return Rt.CreateRibbon(e,h,s)},tt.CreateDisc=function(e,t,r,n,i,s){null==s&&(s=0),null==i&&(i=!1);var o={radius:t,tessellation:r,sideOrientation:s,updatable:i};return Rt.CreateDisc(e,o,n)},tt.CreateBox=function(e,t,r,n,i){null==i&&(i=0),null==n&&(n=!1);var s={width:t,height:t,depth:t,sideOrientation:i,updatable:n};return Rt.CreateBox(e,s,r)},tt.CreateSphere=function(e,t,r,n,i,s){null==s&&(s=0),null==i&&(i=!1);var o={segments:t,diameterX:r,diameterY:r,diameterZ:r,sideOrientation:s,updatable:i};return Rt.CreateSphere(e,o,n)},tt.CreateCylinder=function(e,t,r,n,i,s,o,a,l){null==l&&(l=0),null==a&&(a=!1);var h={height:t,diameterTop:r,diameterBottom:n,tessellation:i,subdivisions:s,sideOrientation:l,updatable:a};return Rt.CreateCylinder(e,h,o)},tt.CreateTorus=function(e,t,r,n,i,s,o){null==o&&(o=0),null==s&&(s=!1);var a={diameter:t,thickness:r,tessellation:n,sideOrientation:o,updatable:s};return Rt.CreateTorus(e,a,i)},tt.CreateTorusKnot=function(e,t,r,n,i,s,o,a,l,h){null==h&&(h=0),null==l&&(l=!1);var c={radius:t,tube:r,radialSegments:n,tubularSegments:i,p:s,q:o,sideOrientation:h,updatable:l};return Rt.CreateTorusKnot(e,c,a)},tt.CreateLines=function(e,t,r,n,i){null==n&&(n=!1);var s={points:t,updatable:n,instance:i};return Rt.CreateLines(e,s,r)},tt.CreateDashedLines=function(e,t,r,n,i,s,o,a){null==o&&(o=!1);var l={points:t,dashSize:r,gapSize:n,dashNb:i,updatable:o,instance:a};return Rt.CreateDashedLines(e,l,s)},tt.ExtrudeShape=function(e,t,r,n,i,s,o,a,l,h){null==l&&(l=0),null==a&&(a=!1),null==s&&(s=0),null==i&&(i=0),null==n&&(n=1);var c={shape:t,path:r,scale:n,rotation:i,cap:s,sideOrientation:l,extrudedInstance:h,updatable:a};return Rt.ExtrudeShape(e,c,o)},tt.ExtrudeShapeCustom=function(e,t,r,n,i,s,o,a,l,h,c,u){null==c&&(c=0),null==h&&(h=!1),null==a&&(a=0),null==o&&(o=!1),null==s&&(s=!1);var f={shape:t,path:r,scaleFunction:n,rotationFunction:i,ribbonCloseArray:s,ribbonClosePath:o,cap:a,sideOrientation:c,extrudedInstance:u,updatable:h};return Rt.ExtrudeShapeCustom(e,f,l)},tt.CreateLathe=function(e,t,r,n,i,s,o){null==o&&(o=0),null==s&&(s=!1),null==n&&(n=0),null==r&&(r=1);var a={shape:t,radius:r,tesselation:n,sideOrientation:o,updatable:s};return Rt.CreateLathe(e,a,i)},tt.CreatePlane=function(e,t,r,n,i){null==i&&(i=0),null==n&&(n=!1);var s={width:t,height:t,sideOrientation:i,updatable:n};return Rt.CreatePlane(e,s,r)},tt.CreateGround=function(e,t,r,n,i,s){null==s&&(s=!1);var o={width:t,height:r,subdivision:n,updatable:s};return Rt.CreateGround(e,o,i)},tt.CreateTiledGround=function(e,t,r,n,i,s,o,a,l){null==l&&(l=!1);var h={xmin:t,zmin:r,xmax:n,zmax:i,subdivisions:s,precision:o,updatable:l};return Rt.CreateTiledGround(e,h,a)},tt.CreateGroundFromHeightMap=function(e,t,r,n,i,s,o,a,l,h){null==l&&(l=!1);var c={width:r,height:n,subdivisions:i,minHeight:s,maxHeight:o,updatable:l,onReady:h};return Rt.CreateGroundFromHeightMap(e,t,c,a)},tt.CreateTube=function(e,t,r,n,i,s,o,a,l,h){null==l&&(l=0),null==a&&(a=!1);var c={path:t,radius:r,tessellation:n,radiusFunction:i,arc:1,cap:s,updatable:a,sideOrientation:l,instance:h};return Rt.CreateTube(e,c,o)},tt.CreatePolyhedron=function(e,t,r){return Rt.CreatePolyhedron(e,t,r)},tt.CreateIcoSphere=function(e,t,r){return Rt.CreateIcoSphere(e,t,r)},tt.CreateDecal=function(e,t,r,n,i,s){null==s&&(s=0);var o={position:r,normal:n,size:i,angle:s};return Rt.CreateDecal(e,t,o)},tt.MinMax=function(e){for(var t=null,r=null,n=0;n<e.length;){var i=e[n];++n;var s=i.getBoundingInfo().boundingBox;null!=t?(t.MinimizeInPlace(s.minimumWorld),r.MaximizeInPlace(s.maximumWorld)):(t=s.minimumWorld,r=s.maximumWorld)}return{minimum:t,maximum:r}},tt.Center=function(e){var t;return t=null!=e.min?e:tt.MinMax(e),L.Center(t.minimum,t.maximum)},tt.MergeMeshes=function(t,r,n,i){if(null==n&&(n=!1),null==r&&(r=!0),!n)for(var s=0,o=0,a=t.length;a>o;){var l=o++;if(null!=t[l]&&(s+=t[l].getTotalVertices(),s>65536))return e.log("Cannot merge meshes because resulting mesh will have more than 65536 vertices. Please use allow32BitsIndices = true to use 32 bits indices"),null}for(var h=null,c=null,u=null,f=0,d=t.length;d>f;){var m=f++;null!=t[m]&&(t[m].computeWorldMatrix(!0),c=Fe.ExtractFromMesh(t[m],!0),c.transform(t[m].getWorldMatrix()),null!=h?h.merge(c):(h=c,u=t[m]))}if(null==i&&(i=new tt(u.name+"_merged",u._scene)),h.applyToMesh(i),i.set_material(u.get_material()),i.set_checkCollisions(u.get_checkCollisions()),r)for(var _=0,p=t.length;p>_;){var v=_++;null!=t[v]&&t[v].dispose()}return i},tt.ParseMesh=function(e,t,r){var n=new tt(e.name,t);if(n.id=e.id,Ie.AddTagsTo(n,e.tags),n.position=L.FromArray(e.position,null),null!=e.rotationQuaternion?n.rotationQuaternion=R.FromArray(e.rotationQuaternion,null):null!=e.rotation&&(n.rotation=L.FromArray(e.rotation,null)),n.scaling=L.FromArray(e.scaling,null),null!=e.localMatrix?n.setPivotMatrix(Le.FromArray(e.localMatrix,null)):null!=e.pivotMatrix&&n.setPivotMatrix(Le.FromArray(e.pivotMatrix,null)),n.setEnabled(e.isEnabled),n.isVisible=e.isVisible,n.infiniteDistance=e.infiniteDistance,n.showBoundingBox=e.showBoundingBox,n.showSubMeshesBoundingBox=e.showSubMeshesBoundingBox,null!=e.applyFog&&e.applyFog&&(n.applyFog=e.applyFog),null!=e.pickable&&n.set_isPickable(e.pickable),null!=e.alphaIndex&&(n.alphaIndex=e.alphaIndex),n.set_receiveShadows(e.receiveShadows),n.billboardMode=e.billboardMode,null!=e.visibility&&n.set_visibility(e.visibility),n.set_checkCollisions(e.checkCollisions),n._shouldGenerateFlatShading=e.useFlatShading,null!=e.freezeWorldMatrix&&(n._waitingFreezeWorldMatrix=e.freezeWorldMatrix),null!=e.parentId&&(n._waitingParentId=e.parentId),null!=e.actions&&(n._waitingActions=e.actions),n.hasVertexAlpha=e.hasVertexAlpha,null!=e.delayLoadingFile&&1==e.delayLoadingFile?(n.delayLoadState=4,n.delayLoadingFile=r+u.string(e.delayLoadingFile),n._boundingInfo=new he(L.FromArray(e.boundingBoxMinimum,null),L.FromArray(e.boundingBoxMaximum,null)),null!=e._binaryInfo&&(n._binaryInfo=e._binaryInfo),n._delayInfo=[],e.hasUVs&&n._delayInfo.push("uv"),e.hasUVs2&&n._delayInfo.push("uv2"),e.hasUVs3&&n._delayInfo.push("uv3"),
e.hasUVs4&&n._delayInfo.push("uv4"),e.hasUVs5&&n._delayInfo.push("uv5"),e.hasUVs6&&n._delayInfo.push("uv6"),e.hasColors&&n._delayInfo.push("color"),e.hasMatricesIndices&&n._delayInfo.push("matricesIndices"),e.hasMatricesWeights&&n._delayInfo.push("matricesWeights"),n._delayLoadingFunction=Me.ImportGeometry,Ce.ForceFullSceneLoadingForIncremental&&n._checkDelayState()):Me.ImportGeometry(e,n),null!=e.materialId?n.setMaterialByID(e.materialId):n.set_material(null),e.skeletonId>-1&&(n.set_skeleton(t.getLastSkeletonByID(e.skeletonId)),null!=e.numBoneInfluencers&&(n.numBoneInfluencers=e.numBoneInfluencers)),null!=e.physicsImpostor){null==t._physicsEngine&&t.enablePhysics();var i=new nt;i.mass=e.physicsMass,i.friction=e.physicsFriction,i.restitution=e.physicsRestitution,n.setPhysicsState(e.physicsImpostor,i)}if(null!=e.animations){for(var s=0,o=e.animations.length;o>s;){var a=s++,l=e.animations[a];n.animations.push(F.Parse(l))}y.ParseAnimationRanges(n,e,t)}if(null!=e.autoAnimate&&t.beginAnimation(n,e.autoAnimateFrom,e.autoAnimateTo,e.autoAnimateLoop,1),null!=e.layerMask?n.layerMask=u["int"](Math.abs(e.layerMask)):n.layerMask=-1,null!=e.instances)for(var h=0,c=e.instances.length;c>h;){var f=h++,d=e.instances[f],m=n.createInstance(d.name);if(Ie.AddTagsTo(m,d.tags),m.position=L.FromArray(d.position,null),null!=d.rotationQuaternion?m.rotationQuaternion=R.FromArray(d.rotationQuaternion,null):null!=d.rotation&&(m.rotation=L.FromArray(d.rotation,null)),m.scaling=L.FromArray(d.scaling,null),m.set_checkCollisions(n.get_checkCollisions()),null!=e.animations){for(var _=0,p=e.animations.length;p>_;){var v=_++,g=e.animations[v];m.animations.push(F.Parse(g))}y.ParseAnimationRanges(m,e,t)}}return n},tt.__super__=et,tt.prototype=n(et.prototype,{get_hasLODLevels:function(){return this._LODLevels.length>0},_sortLODLevels:function(){this._LODLevels.sort(function(e,t){return e.distance<t.distance?1:e.distance>t.distance?-1:0})},addLODLevel:function(t,r){if(null!=r&&null!=r._masterMesh)return e.log("You cannot use a mesh as LOD level twice"),this;var n=new Lt(t,r);return this._LODLevels.push(n),null!=r&&(r._masterMesh=this),this._sortLODLevels(),this},getLODLevelAtDistance:function(e){for(var t=0,r=this._LODLevels.length;r>t;){var n=t++,i=this._LODLevels[n];if(i.distance==e)return i.mesh}return null},removeLODLevel:function(e){for(var t=0,r=this._LODLevels.length;r>t;){var n=t++;this._LODLevels[n].mesh==e&&(this._LODLevels.splice(n,1),null!=e&&(e._masterMesh=null))}return this._sortLODLevels(),this},getLOD:function(e,t){if(null==this._LODLevels||0==this._LODLevels.length)return this;var r=(null!=t?t:this.getBoundingInfo().boundingSphere).centerWorld.subtract(e.position).length();if(this._LODLevels[this._LODLevels.length-1].distance>r)return null!=this.onLODLevelSelection&&this.onLODLevelSelection(r,this,this._LODLevels[this._LODLevels.length-1].mesh),this;for(var n=0,i=this._LODLevels.length;i>n;){var s=n++,o=this._LODLevels[s];if(o.distance<r)return null!=o.mesh&&(o.mesh._preActivate(),o.mesh._updateSubMeshesBoundingInfo(this.get_worldMatrixFromCache())),null!=this.onLODLevelSelection&&this.onLODLevelSelection(r,this,o.mesh),o.mesh}return null!=this.onLODLevelSelection&&this.onLODLevelSelection(r,this,this),this},get_geometry:function(){return this._geometry},getTotalVertices:function(){return null==this._geometry?0:this._geometry.getTotalVertices()},getVerticesData:function(e,t){return null==t&&(t=!1),null==this._geometry?null:this._geometry.getVerticesData(e,t)},getVertexBuffer:function(e){return null==this._geometry?null:this._geometry.getVertexBuffer(e)},isVerticesDataPresent:function(e){return null==this._geometry?null!=this._delayInfo?-1!=l.indexOf(this._delayInfo,e,0):!1:this._geometry.isVerticesDataPresent(e)},getVerticesDataKinds:function(){if(null==this._geometry){var e=[];if(null!=this._delayInfo)for(var t=0,r=this._delayInfo;t<r.length;){var n=r[t];++t,e.push(n)}return e}return this._geometry.getVerticesDataKinds()},getTotalIndices:function(){return null==this._geometry?0:this._geometry.getTotalIndices()},getIndices:function(e){return null==e&&(e=!1),null==this._geometry?[]:this._geometry.getIndices(e)},get_isBlocked:function(){return null!=this._masterMesh},isReady:function(){return 2==this.delayLoadState?!1:et.prototype.isReady.call(this)},isDisposed:function(){return this._isDisposed},get_sideOrientation:function(){return this._sideOrientation},set_sideOrientation:function(e){return this._sideOrientation=e,e},get_areNormalsFrozen:function(){return this._areNormalsFrozen},freezeNormals:function(){this._areNormalsFrozen=!0},unfreezeNormals:function(){this._areNormalsFrozen=!1},_preActivate:function(){var e=this._scene._renderId;this._preActivateId!=e&&(this._preActivateId=e,this._visibleInstances=null)},_registerInstanceForRenderId:function(e,t){null==this._visibleInstances&&(this._visibleInstances=new Bt(t,this._renderId)),this._visibleInstances.map.h.hasOwnProperty(t)||(this._visibleInstances.map.h[t]=[]),this._visibleInstances.map.h[t].push(e)},refreshBoundingInfo:function(){var e=this.getVerticesData("position");if(null!=e){var t=Ae.ExtractMinAndMax(e,0,this.getTotalVertices());this._boundingInfo=new he(t.minimum,t.maximum)}if(null!=this.subMeshes)for(var r=0,n=this.subMeshes.length;n>r;){var i=r++;this.subMeshes[i].refreshBoundingInfo()}null==this._boundingInfo?this._boundingInfo=new he(this.get_absolutePosition(),this.get_absolutePosition()):this._boundingInfo=this._boundingInfo,this._boundingInfo._update(this.get_worldMatrixFromCache()),this._updateSubMeshesBoundingInfo(this.get_worldMatrixFromCache())},_createGlobalSubMesh:function(){var e=this.getTotalVertices();return 0==e||null==this.getIndices()?null:(this.releaseSubMeshes(),new rt(0,0,e,0,this.getTotalIndices(),this))},subdivide:function(e){if(!(1>e)){for(var t=this.getTotalIndices(),r=t/e|0,n=0;r%3!=0;)r++;this.releaseSubMeshes();for(var i=0;e>i;){i++;if(n>=t)break;rt.CreateFromIndices(0,n,u["int"](Math.min(r,t-n)),this),n+=r}this.synchronizeInstances()}},setVerticesData:function(e,t,r,n){if(null==r&&(r=!1),null==this._geometry){var i=new Fe;i.set(t,e);var s=this._scene;new Me(Me.RandomId(),s,i,r,this)}else this._geometry.setVerticesData(e,t,r,n)},updateVerticesData:function(e,t,r,n){null==n&&(n=!1),null==r&&(r=!1),null!=this._geometry&&(n?(this.makeGeometryUnique(),this.updateVerticesData(e,t,r,!1)):this._geometry.updateVerticesData(e,t,r))},updateVerticesDataDirectly:function(e,t,r,n){null==n&&(n=!1),null==r&&(r=0),null!=this._geometry&&(n?(this.makeGeometryUnique(),this.updateVerticesDataDirectly(e,t,r,!1)):this._geometry.updateVerticesDataDirectly(e,t,r))},updateMeshPositions:function(e,t){null==t&&(t=!0);var r=this.getVerticesData("position");if(e(r),this.updateVerticesData("position",r,!1,!1),t){var n=this.getIndices(),i=this.getVerticesData("normal");Fe.ComputeNormals(r,n,i),this.updateVerticesData("normal",i,!1,!1)}},makeGeometryUnique:function(){if(null!=this._geometry){var e=this._geometry.copy(Me.RandomId());e.applyToMesh(this)}},setIndices:function(e,t){if(null==t&&(t=-1),null==this._geometry){var r=new Fe;r.indices=e;var n=this._scene;new Me(Me.RandomId(),n,r,!1,this)}else this._geometry.setIndices(e,t)},_bind:function(e,t,r){var n=this._scene._engine,i=null;if(!this._unIndexed)switch(r){case 2:i=null;break;case 1:i=e.getLinesIndexBuffer(this.getIndices(),n);break;case 0:i=this._geometry.getIndexBuffer();break;default:i=this._geometry.getIndexBuffer()}n.bindMultiBuffers(this._geometry.getVertexBuffers(),i,t)},_draw:function(e,t,r){if(null!=this._geometry&&null!=this._geometry.getVertexBuffers()&&null!=this._geometry.getIndexBuffer()){var n=this._scene._engine;switch(t){case 2:n.drawPointClouds(e.verticesStart,e.verticesCount,r);break;case 1:this._unIndexed?n.drawUnIndexed(!1,e.verticesStart,e.verticesCount,r):n.draw(!1,0,e.linesIndexCount,r);break;default:this._unIndexed?n.drawUnIndexed(!0,e.verticesStart,e.verticesCount,r):n.draw(!0,e.indexStart,e.indexCount,r)}}},registerBeforeRender:function(e){this._onBeforeRenderCallbacks.push(e)},unregisterBeforeRender:function(e){var t=l.indexOf(this._onBeforeRenderCallbacks,e,0);t>-1&&this._onBeforeRenderCallbacks.splice(t,1)},registerAfterRender:function(e){this._onAfterRenderCallbacks.push(e)},unregisterAfterRender:function(e){var t=l.indexOf(this._onAfterRenderCallbacks,e,0);t>-1&&this._onAfterRenderCallbacks.splice(t,1)},_getInstancesRenderList:function(e){var t=this._scene;if(this._batchCache.mustReturn=!1,this._batchCache.renderSelf[e]=this.isEnabled()&&this.isVisible,this._batchCache.visibleInstances[e]=null,null!=this._visibleInstances){var r=t._renderId;this._batchCache.visibleInstances[e]=this._visibleInstances.map.h[r];var n=this._renderId;if(null==this._batchCache.visibleInstances[e]&&this._visibleInstances.defaultRenderId>0&&(this._batchCache.visibleInstances[e]=this._visibleInstances.map.h[this._visibleInstances.defaultRenderId],r=Math.max(this._visibleInstances.defaultRenderId,r),n=Math.max(this._visibleInstances.selfDefaultRenderId,r)),null!=this._batchCache.visibleInstances[e]&&this._batchCache.visibleInstances[e].length>0){if(this._renderIdForInstances[e]==r)return this._batchCache.mustReturn=!0,this._batchCache;r!=n&&(this._batchCache.renderSelf[e]=!1)}this._renderIdForInstances[e]=r}return this._batchCache},_renderWithInstances:function(e,t,r,n,i){for(var s=r.visibleInstances[e._id],o=s.length+1,a=16*o*4;this._instancesBufferSize<a;)this._instancesBufferSize*=2;(null==this._worldMatricesInstancesBuffer||this._worldMatricesInstancesBuffer.capacity<this._instancesBufferSize)&&(null!=this._worldMatricesInstancesBuffer&&i.deleteInstancesBuffer(this._worldMatricesInstancesBuffer),this._worldMatricesInstancesBuffer=i.createInstancesBuffer(this._instancesBufferSize),this._worldMatricesInstancesArray=new Float32Array(this._instancesBufferSize/4|0));var l=0,h=0,c=this.getWorldMatrix();if(r.renderSelf[e._id]&&(c.copyToArray(this._worldMatricesInstancesArray,l),l+=16,h++),null!=s)for(var u=0,f=s.length;f>u;){var d=u++,m=s[d];m.getWorldMatrix().copyToArray(this._worldMatricesInstancesArray,l),l+=16,h++}var _=n.getAttributeLocationByName("world0"),p=n.getAttributeLocationByName("world1"),v=n.getAttributeLocationByName("world2"),g=n.getAttributeLocationByName("world3"),x=[_,p,v,g];i.updateAndBindInstancesBuffer(this._worldMatricesInstancesBuffer,this._worldMatricesInstancesArray,x),this._draw(e,t,h),i.unBindInstancesBuffer(this._worldMatricesInstancesBuffer,x)},_processRendering:function(e,t,r,n,i,s){var o=this._scene,a=o._engine;if(i)this._renderWithInstances(e,r,n,t,a);else if(n.renderSelf[e._id]&&(null!=s&&s(!1,this.getWorldMatrix()),this._draw(e,r)),null!=n.visibleInstances[e._id])for(var l=0,h=n.visibleInstances[e._id].length;h>l;){var c=l++,u=n.visibleInstances[e._id][c],f=u.getWorldMatrix();null!=s&&s(!0,f),this._draw(e,r)}},render:function(e,t){var r=this._scene,n=this._getInstancesRenderList(e._id);if(!n.mustReturn&&null!=this._geometry&&null!=this._geometry.getVertexBuffers()&&null!=this._geometry.getIndexBuffer()){for(var i=0,s=this._onBeforeRenderCallbacks.length;s>i;){var o=i++;this._onBeforeRenderCallbacks[o](this)}var a=r._engine,l=null!=a.getCaps().instancedArrays&&null!=n.visibleInstances[e._id]&&n.visibleInstances.length>e._id&&null!=n.visibleInstances[e._id],h=e.getMaterial();if(null!=h&&h.isReady(this,l)){var c=a._depthCullingState.get_depthMask();this.renderOutline&&(a._depthCullingState.set_depthMask(!1),r._outlineRenderer.render(e,n),a._depthCullingState.set_depthMask(c)),h._preBind();var u,f=h.getEffect();u=r.forcePointsCloud?2:r.forceWireframe?1:h.get_fillMode(),this._bind(e,f,u);var d=this.getWorldMatrix();if(h.bind(d,this),t&&a.setAlphaMode(h.alphaMode),this._processRendering(e,f,u,n,l,function(e,t){e&&h.bindOnlyWorldMatrix(t)}),h.unbind(),this.renderOutline&&c&&(a._depthCullingState.set_depthMask(!0),xr.context.colorMask(!1,!1,!1,!1),r._outlineRenderer.render(e,n),xr.context.colorMask(!0,!0,!0,!0)),this.renderOverlay){var m=a._alphaMode;if(2==a._alphaMode||(a._depthCullingState.set_depthMask(!1),a._alphaState.setAlphaBlendFunctionParameters(770,771,1,1),a._alphaState.set_alphaBlend(!0),a._alphaMode=2),r._outlineRenderer.render(e,n,!0),a._alphaMode==m);else{switch(m){case 0:a._depthCullingState.set_depthMask(!0),a._alphaState.set_alphaBlend(!1);break;case 2:a._depthCullingState.set_depthMask(!1),a._alphaState.setAlphaBlendFunctionParameters(770,771,1,1),a._alphaState.set_alphaBlend(!0);break;case 6:a._depthCullingState.set_depthMask(!1),a._alphaState.setAlphaBlendFunctionParameters(1,1,0,1),a._alphaState.set_alphaBlend(!0);break;case 1:a._depthCullingState.set_depthMask(!1),a._alphaState.setAlphaBlendFunctionParameters(770,1,0,1),a._alphaState.set_alphaBlend(!0);break;case 3:a._depthCullingState.set_depthMask(!1),a._alphaState.setAlphaBlendFunctionParameters(0,769,1,1),a._alphaState.set_alphaBlend(!0);break;case 4:a._depthCullingState.set_depthMask(!1),a._alphaState.setAlphaBlendFunctionParameters(774,0,1,1),a._alphaState.set_alphaBlend(!0);break;case 5:a._depthCullingState.set_depthMask(!1),a._alphaState.setAlphaBlendFunctionParameters(770,769,1,1),a._alphaState.set_alphaBlend(!0)}a._alphaMode=m}}for(var _=0,p=this._onAfterRenderCallbacks.length;p>_;){var v=_++;this._onAfterRenderCallbacks[v](this)}}}},getEmittedParticleSystems:function(){for(var e=[],t=0,r=this._scene.particleSystems.length;r>t;){var n=t++,i=this._scene.particleSystems[n];i.emitter==this&&e.push(i)}return e},getHierarchyEmittedParticleSystems:function(){var e=[],t=this.getDescendants();t.push(this);for(var r=0,n=this._scene.particleSystems.length;n>r;){var i=r++,s=this._scene.particleSystems[i];-1!=function(e){var r,n=s.emitter;return r=l.indexOf(t,n,0)}(this)&&e.push(s)}return e},getChildren:function(){for(var e=[],t=0,r=this._scene.meshes.length;r>t;){var n=t++,i=this._scene.meshes[n];i.parent==this&&e.push(i)}return e},_checkDelayState:function(){var e=this,t=this._scene;if(null!=this._geometry)this._geometry.load(t);else if(4==e.delayLoadState){e.delayLoadState=2,t._addPendingData(e);-1!=this.delayLoadingFile.indexOf(".babylonbinarymeshdata")}},isInFrustum:function(e){return 2==this.delayLoadState?!1:et.prototype.isInFrustum.call(this,e)?(this._checkDelayState(),!0):!1},setMaterialByID:function(e){for(var t=this._scene.materials,r=0,n=t.length;n>r;){var i=r++;if(t[i].id==e)return void this.set_material(t[i])}for(var s=this._scene.multiMaterials,o=0,a=s.length;a>o;){var l=o++;if(s[l].id==e)return void this.set_material(s[l])}},getAnimatables:function(){var e=[];return null!=this.get_material()&&e.push(this.get_material()),null!=this.get_skeleton()&&e.push(this.get_skeleton()),e},bakeTransformIntoVertices:function(e){if(this.isVerticesDataPresent("position")){this._positions=null;for(var t=this.getVerticesData("position"),r=[],n=0;n<t.length;)L.TransformCoordinates(new L(t[n],t[n+1],t[n+2]),e).toArray(r,n),n+=3;if(this.setVerticesData("position",r,this.getVertexBuffer("position").isUpdatable()),this.isVerticesDataPresent("normal")){for(t=this.getVerticesData("normal"),r=[],n=0;n<t.length;)L.TransformNormal(new L(t[n],t[n+1],t[n+2]),e).normalize().toArray(r,n),n+=3;this.setVerticesData("normal",r,this.getVertexBuffer("normal").isUpdatable()),e.m[0]*e.m[5]*e.m[10]<0&&this.flipFaces()}}},bakeCurrentTransformIntoVertices:function(){this.bakeTransformIntoVertices(this.computeWorldMatrix(!0)),this.scaling.copyFromFloats(1,1,1),this.position.copyFromFloats(0,0,0),this.rotation.copyFromFloats(0,0,0),null!=this.rotationQuaternion&&(this.rotationQuaternion=new R(0,0,0,1)),this._worldMatrix=Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)},_resetPointsArrayCache:function(){this._positions=null},_generatePointsArray:function(){if(null!=this._positions)return!0;this._positions=[];var e=this.getVerticesData("position");if(null==e)return!1;for(var t=0;t<e.length;)this._positions.push(new L(e[t],e[t+1],e[t+2])),t+=3;return!0},clone:function(e,t,r){return null==r&&(r=!1),new tt(e,this._scene,t,this,r)},dispose:function(e){for(null==e&&(e=!1),null!=this._geometry&&this._geometry.releaseForMesh(this,!0),null!=this._worldMatricesInstancesBuffer&&(this._scene._engine.deleteInstancesBuffer(this._worldMatricesInstancesBuffer),this._worldMatricesInstancesBuffer=null);this.instances.length>0;)this.instances[0].dispose();et.prototype.dispose.call(this,e)},applyDisplacementMap:function(e,t,r,n,i){null==i&&(i=!1);var s=this,o=(this._scene,function(e){s.applyDisplacementMapFromBuffer(e.data,e.width,e.height,t,r,i),null!=n&&n(s)});Ae.LoadImage(e,o)},applyDisplacementMapFromBuffer:function(t,r,n,i,s,o){if(null==o&&(o=!1),!(this.isVerticesDataPresent("position")&&this.isVerticesDataPresent("normal")&&this.isVerticesDataPresent("uv")&&this.getVertexBuffer("position").isUpdatable()&&this.getVertexBuffer("normal").isUpdatable()))return void e.log("Cannot call applyDisplacementMap:Given mesh is not complete. Position, Normal or UV are missing or not updatable!");for(var a=this.getVerticesData("position"),l=this.getVerticesData("normal"),h=this.getVerticesData("uv"),c=new L(0,0,0),f=new L(0,0,0),d=new Mt(0,0),m=0;m<a.length;){c.x=a[m],c.y=a[m+1],c.z=a[m+2],f.x=l[m],f.y=l[m+1],f.z=l[m+2],Mt.FromArrayToRef(h,m/3*2|0,d);var _=u["int"](Math.abs(d.x)*r%r),p=u["int"](Math.abs(d.y)*n%n),v=4*(_+p*r)|0,g=t[v]/255,x=t[v+1]/255,y=t[v+2]/255,b=.3*g+.59*x+.11*y;f.normalize(),f.scaleInPlace(i+(s-i)*b),o&&(f.x*=-1,f.y*=-1,f.z*=-1),c=new L(c.x+f.x,c.y+f.y,c.z+f.z),a[m]=c.x,a[m+1]=c.y,a[m+2]=c.z,m+=3}Fe.ComputeNormals(a,this.getIndices(),l),this.updateVerticesData("position",a),this.updateVerticesData("normal",l)},convertToFlatShadedMesh:function(){for(var e=this.getVerticesDataKinds(),t=new Er,r=new Er,n=new Er,i=!1,s=0;s<e.length;){var o=e[s],a=this.getVertexBuffer(o);if("normal"!=o){null!=Yr[o]?t.setReserved(o,a):t.h[o]=a;var l=(null!=Yr[o]?t.getReserved(o):t.h[o]).getData();null!=Yr[o]?r.setReserved(o,l):r.h[o]=l;var h=[];null!=Yr[o]?n.setReserved(o,h):n.h[o]=h,s++}else i=a._updatable,e.splice(s,1),s--}for(var c=this.subMeshes.slice(0),u=this.getIndices(),f=this.getTotalIndices(),d=0;f>d;)for(var m=d++,_=u[m],p=0,v=e.length;v>p;)for(var g=p++,x=e[g],y=(null!=Yr[x]?t.getReserved(x):t.h[x]).getStrideSize(),b=0;y>b;){var S=b++;(null!=Yr[x]?n.getReserved(x):n.h[x]).push((null!=Yr[x]?r.getReserved(x):r.h[x])[_*y+S])}var w,C=[];w=null!=Yr.position?n.getReserved("position"):n.h.position;for(var T=0;f>T;){u[T]=T,u[T+1]=T+1,u[T+2]=T+2;for(var M=L.FromArray(w,3*T),P=L.FromArray(w,3*(T+1)),E=L.FromArray(w,3*(T+2)),I=new L(M.x-P.x,M.y-P.y,M.z-P.z),D=new L(E.x-P.x,E.y-P.y,E.z-P.z),A=L.Normalize(L.Cross(I,D)),R=0;3>R;){R++;C.push(A.x),C.push(A.y),C.push(A.z)}T+=3}this.setIndices(u),this.setVerticesData("normal",C,i);for(var F=0,O=e.length;O>F;){var N=F++,B=e[N];this.setVerticesData(B,null!=Yr[B]?n.getReserved(B):n.h[B],(null!=Yr[B]?t.getReserved(B):t.h[B]).isUpdatable())}this.releaseSubMeshes();for(var k=0,V=c.length;V>k;){var U=k++,z=c[U];new rt(z.materialIndex,z.indexStart,z.indexCount,z.indexStart,z.indexCount,this)}this.synchronizeInstances()},convertToUnIndexedMesh:function(){for(var e=this.getVerticesDataKinds(),t=new Er,r=new Er,n=new Er,i="",s=0,o=e.length;o>s;){var a=s++;i=e[a];var l=this.getVertexBuffer(i);null!=Yr[i]?t.setReserved(i,l):t.h[i]=l;var h=(null!=Yr[i]?t.getReserved(i):t.h[i]).getData();null!=Yr[i]?r.setReserved(i,h):r.h[i]=h;var c=[];null!=Yr[i]?n.setReserved(i,c):n.h[i]=c}for(var u=this.subMeshes.slice(0),f=this.getIndices(),d=this.getTotalIndices(),m=0;d>m;)for(var _=m++,p=f[_],v=0,g=e.length;g>v;){var x=v++;i=e[x];for(var y=(null!=Yr[i]?t.getReserved(i):t.h[i]).getStrideSize(),b=0;y>b;){var S=b++;(null!=Yr[i]?n.getReserved(i):n.h[i]).push((null!=Yr[i]?r.getReserved(i):r.h[i])[p*y+S])}}for(var w=0;d>w;)f[w]=w,f[w+1]=w+1,f[w+2]=w+2,w+=3;this.setIndices(f);for(var C=0,T=e.length;T>C;){var M=C++;i=e[M],this.setVerticesData(i,null!=Yr[i]?n.getReserved(i):n.h[i],(null!=Yr[i]?t.getReserved(i):t.h[i]).isUpdatable())}this.releaseSubMeshes();for(var P=0,E=u.length;E>P;){var I=P++,D=u[I];new rt(D.materialIndex,D.indexStart,D.indexCount,D.indexStart,D.indexCount,this)}this._unIndexed=!0,this.synchronizeInstances()},flipFaces:function(e){null==e&&(e=!1);var t=Fe.ExtractFromMesh(this);if(e&&this.isVerticesDataPresent("normal"))for(var r=0,n=t.normals.length;n>r;){var i=r++;t.normals[i]*=-1}for(var s=0,o=0;o<t.indices.length;)s=t.indices[o+1],t.indices[o+1]=t.indices[o+2],t.indices[o+2]=s,o+=3;t.applyToMesh(this)},createInstance:function(e){return new Dt(e,this)},synchronizeInstances:function(){for(var e=0,t=this.instances.length;t>e;){var r=e++,n=this.instances[r];n._syncSubMeshes()}},simplify:function(e,t,r,n){null==r&&(r=0),null==t&&(t=!0),this._scene.simplificationQueue.addTask(new jt(e,r,this,n,t))},optimizeIndices:function(e){for(var t=this,r=this.getIndices(),n=this.getVerticesData("position"),i=[],s=0;s<n.length;)i.push(new L(n[s],n[s+1],n[s+2])),s+=3;var o=[];_r.SyncAsyncForLoop(i.length,40,function(e){for(var t=i.length-1-e,r=i[t],n=0;t>n;){var s=n++,a=i[s];if(null!=a&&r.x==a.x&&r.y==a.y&&r.z==a.z){o[t]=s;break}}},function(){for(var n=0,i=r.length;i>n;){var s=n++;r[s]=o[r[s]]}var a=t.subMeshes.slice(0);t.setIndices(r),t.subMeshes=a,null!=e&&e(t)})},setPositionsForCPUSkinning:function(){var e=null;return null==this._sourcePositions&&(e=this.getVerticesData("position"),this._sourcePositions=e,this.getVertexBuffer("position").isUpdatable()||this.setVerticesData("position",e,!0)),this._sourcePositions},setNormalsForCPUSkinning:function(){var e=null;return null==this._sourceNormals&&(e=this.getVerticesData("normal"),this._sourceNormals=e,this.getVertexBuffer("normal").isUpdatable()||this.setVerticesData("normal",e,!0)),this._sourceNormals},applySkeleton:function(e){if(null==this.get_geometry())return this;if(this.get_geometry()._softwareSkinningRenderId==this._scene._renderId)return this;if(this.get_geometry()._softwareSkinningRenderId=this._scene._renderId,!this.isVerticesDataPresent("position"))return this;if(!this.isVerticesDataPresent("normal"))return this;if(!this.isVerticesDataPresent("matricesIndices"))return this;if(!this.isVerticesDataPresent("matricesWeights"))return this;if(null==this._sourcePositions){var t=this.getVerticesData("position");this._sourcePositions=t,this.getVertexBuffer("position").isUpdatable()||this.setVerticesData("position",t,!0)}if(null==this._sourceNormals){var r=this.getVerticesData("normal");this._sourceNormals=r,this.getVertexBuffer("normal").isUpdatable()||this.setVerticesData("normal",r,!0)}var n,i=this.getVerticesData("position"),s=this.getVerticesData("normal"),o=this.getVerticesData("matricesIndices"),a=this.getVerticesData("matricesWeights"),l=this.numBoneInfluencers>4;n=l?this.getVerticesData("matricesIndicesExtra"):null;var h;h=l?this.getVerticesData("matricesWeightsExtra"):null;for(var c=e._transformMatrices,u=new L(0,0,0),f=new Le,d=new Le,m=0,_=0;_<i.length;){for(var p=0;4>p;){var v=p++,g=a[m+v];if(!(g>0))break;Le.FromFloat32ArrayToRefScaled(c,16*o[m+v],g,d),f.addToSelf(d)}if(m+=4,l)for(var x=0;4>x;){var y=x++,b=h[m+y];if(!(b>0))break;Le.FromFloat32ArrayToRefScaled(new Float32Array(c),16*n[m+y],b,d),f.addToSelf(d)}L.TransformCoordinatesFromFloatsToRef(this._sourcePositions[_],this._sourcePositions[_+1],this._sourcePositions[_+2],f,u),i[_]=u.x,i[_+1]=u.y,i[_+2]=u.z,L.TransformNormalFromFloatsToRef(this._sourceNormals[_],this._sourceNormals[_+1],this._sourceNormals[_+2],f,u),s[_]=u.x,s[_+1]=u.y,s[_+2]=u.z,f.reset(),_+=3}return this.updateVerticesData("position",i),this.updateVerticesData("normal",s),this},__class__:tt,__properties__:n(et.prototype.__properties__,{get_geometry:"get_geometry",get_hasLODLevels:"get_hasLODLevels",get_areNormalsFrozen:"get_areNormalsFrozen",set_sideOrientation:"set_sideOrientation",get_sideOrientation:"get_sideOrientation"})});var rt=t.BABYLON.SubMesh=function(e,t,r,n,i,s,o,a){null==a&&(a=!0),this._renderId=0,this.materialIndex=e,this.verticesStart=t,this.verticesCount=r,this.indexStart=n,this.indexCount=i,this._mesh=s,null!=o?this._renderingMesh=o:this._renderingMesh=Re.__cast(s,tt),s.subMeshes.push(this),this._trianglePlanes=[],this._id=s.subMeshes.length-1,a&&(this.refreshBoundingInfo(),s.computeWorldMatrix(!0))};s["com.babylonhx.mesh.SubMesh"]=rt,rt.__name__=["com","babylonhx","mesh","SubMesh"],rt.CreateFromIndices=function(e,t,r,n,i){var s=1/0,o=-(1/0);i=null!=i?i:Re.__cast(n,tt);for(var a=i.getIndices(),l=t,h=t+r;h>l;){var c=l++,u=a[c];s>u&&(s=u),u>o&&(o=u)}return new rt(e,0|s,o-s+1|0,t,r,n,i)},rt.prototype={get_IsGlobal:function(){return 0==this.verticesStart&&this.verticesCount==this._mesh.getTotalVertices()},getBoundingInfo:function(){return this.get_IsGlobal()?this._mesh.getBoundingInfo():this._boundingInfo},getMesh:function(){return this._mesh},getRenderingMesh:function(){return this._renderingMesh},getMaterial:function(){var e=this._renderingMesh.get_material();if(null!=e&&Re.__instanceof(e,Je)){var t=e;return t.getSubMaterial(this.materialIndex)}return null==e?this._mesh._scene.defaultMaterial:e},refreshBoundingInfo:function(){if(!this.get_IsGlobal()){var e=this._renderingMesh.getVerticesData("position");if(null==e)return void(this._boundingInfo=this._mesh._boundingInfo);var t=this._renderingMesh.getIndices(),r={minimum:new L(0,0,0),maximum:new L(0,0,0)};r=0==this.indexStart&&this.indexCount==t.length?{minimum:this._renderingMesh.getBoundingInfo().minimum.clone(),maximum:this._renderingMesh.getBoundingInfo().maximum.clone()}:Ae.ExtractMinAndMaxIndexed(e,t,this.indexStart,this.indexCount),this._boundingInfo=new he(r.minimum,r.maximum)}},_checkCollision:function(e){return(this.get_IsGlobal()?this._mesh.getBoundingInfo():this._boundingInfo)._checkCollision(e)},updateBoundingInfo:function(e){null==(this.get_IsGlobal()?this._mesh.getBoundingInfo():this._boundingInfo)&&this.refreshBoundingInfo(),(this.get_IsGlobal()?this._mesh.getBoundingInfo():this._boundingInfo)._update(e)},isInFrustum:function(e){return(this.get_IsGlobal()?this._mesh.getBoundingInfo():this._boundingInfo).isInFrustum(e)},render:function(e){this._renderingMesh.render(this,e)},getLinesIndexBuffer:function(e,t){if(null==this._linesIndexBuffer){for(var r=[],n=this.indexStart;n<this.indexStart+this.indexCount;)r.push(e[n]),r.push(e[n+1]),r.push(e[n+1]),r.push(e[n+2]),r.push(e[n+2]),r.push(e[n]),n+=3;this._linesIndexBuffer=t.createIndexBuffer(r),this.linesIndexCount=r.length}return this._linesIndexBuffer},canIntersects:function(e){return e.intersectsBox((this.get_IsGlobal()?this._mesh.getBoundingInfo():this._boundingInfo).boundingBox)},intersects:function(e,t,r,n){null==n&&(n=!1);var i=null;if(null!=t&&null!=r)for(var s=this.indexStart;s<this.indexStart+this.indexCount;){var o=t[r[s]],a=t[r[s+1]],l=t[r[s+2]],h=e.intersectsTriangle(o,a,l);if(null!=h){if(h.distance<0)continue;if((n||null==i||h.distance<i.distance)&&(i=h,i.faceId=s/3|0,n))break}s+=3}return i},clone:function(e,t){var r=new rt(this.materialIndex,this.verticesStart,this.verticesCount,this.indexStart,this.indexCount,e,t,!1);return this.get_IsGlobal()||(r._boundingInfo=new he(this._boundingInfo.minimum,this._boundingInfo.maximum)),r},dispose:function(){null!=this._linesIndexBuffer&&(this._mesh._scene._engine._releaseBuffer(this._linesIndexBuffer),this._linesIndexBuffer=null),l.remove(this._mesh.subMeshes,this)},__class__:rt,__properties__:{get_IsGlobal:"get_IsGlobal"}};var nt=t.BABYLON.PhysicsBodyCreationOptions=function(e,t,r,n){null==n&&(n=""),this.name="",""!=n?this.name=n:this.name=Ae.uuid(),this.mass=e,this.friction=t,this.restitution=r};s["com.babylonhx.physics.PhysicsBodyCreationOptions"]=nt,nt.__name__=["com","babylonhx","physics","PhysicsBodyCreationOptions"],nt.prototype={__class__:nt};var it=t.BABYLON.ParticleSystem=function(e,t,r,n){this.randomColor=new Oe,this._actualFrame=0,this._stopped=!1,this._started=!1,this._alive=!0,this._currentRenderId=-1,this._scaledGravity=new L(0,0,0),this._scaledDirection=new L(0,0,0),this._colorDiff=new Oe(0,0,0,0),this._scaledColorStep=new Oe(0,0,0,0),this._newPartsExcess=0,this._stockParticles=[],this._vertexStrideSize=44,this._vertexDeclaration=[3,4,4],this.particles=[],this.textureMask=new Oe(1,1,1,1),this.colorDead=new Oe(0,0,0,0),this.color2=new Oe(1,1,1,.4),this.color1=new Oe(1,1,1,.5),this.maxEmitBox=new L(.5,.5,.5),this.minEmitBox=new L(-.5,-.5,-.5),this.direction2=new L(0,1,0),this.direction1=new L(0,1,0),this.gravity=new L(0,0,0),this.forceDepthWrite=!1,this.blendMode=it.BLENDMODE_ONEONE,this.layerMask=268435455,this.maxAngularSpeed=0,this.minAngularSpeed=0,this.maxSize=1,this.minSize=1,this.maxLifeTime=1,this.minLifeTime=1,this.maxEmitPower=1,this.minEmitPower=1,this.disposeOnStop=!1,this.targetStopDuration=0,this.updateSpeed=.01,this.manualEmitCount=-1,this.emitRate=10,this.emitter=null,this.renderingGroupId=0;var i=this;this.name=e,this.id=e,this._capacity=t,this._scene=r,this._engine=r._engine,this._customEffect=n,r.particleSystems.push(this),this._vertexBuffer=this._engine.createDynamicVertexBuffer(t*this._vertexStrideSize*4);for(var s=[],o=0,a=0;t>a;){a++;s.push(o),s.push(o+1),s.push(o+2),s.push(o),s.push(o+2),s.push(o+3),o+=4}this._indexBuffer=this._engine.createIndexBuffer(s),this._vertices=[],this.startDirectionFunction=function(e,t,r){var n=i.randomNumber(i.direction1.x,i.direction2.x),s=i.randomNumber(i.direction1.y,i.direction2.y),o=i.randomNumber(i.direction1.z,i.direction2.z);L.TransformNormalFromFloatsToRef(n*e,s*e,o*e,t,r)},this.startPositionFunction=function(e,t){var r=i.randomNumber(i.minEmitBox.x,i.maxEmitBox.x),n=i.randomNumber(i.minEmitBox.y,i.maxEmitBox.y),s=i.randomNumber(i.minEmitBox.z,i.maxEmitBox.z);L.TransformCoordinatesFromFloatsToRef(r,n,s,e,t)},this.updateFunction=function(e){for(var t=0;t<e.length;){var r=e[t];r.age+=i._scaledUpdateSpeed,r.age>=r.lifeTime?(e.splice(t,1),i._stockParticles.push(r)):(r.colorStep.scaleToRef(i._scaledUpdateSpeed,i._scaledColorStep),r.color.addInPlace(i._scaledColorStep),r.color.a<0&&(r.color.a=0),r.angle+=r.angularSpeed*i._scaledUpdateSpeed,r.direction.scaleToRef(i._scaledUpdateSpeed,i._scaledDirection),r.position.addInPlace(i._scaledDirection),i.gravity.scaleToRef(i._scaledUpdateSpeed,i._scaledGravity),r.direction.addInPlace(i._scaledGravity),t++)}},this._getEffect()};s["com.babylonhx.particles.ParticleSystem"]=it,it.__name__=["com","babylonhx","particles","ParticleSystem"],it.__interfaces__=[g,v],it.Parse=function(e,t,r){var n=e.name,i=new it(n,e.capacity,t);return null!=e.textureName&&(i.particleTexture=new je(r+u.string(e.textureName),t),i.particleTexture.name=e.textureName),null!=e.emitterId?i.emitter=t.getLastMeshByID(e.emitterId):i.emitter=L.FromArray(e.emitter,null),i.minAngularSpeed=e.minAngularSpeed,i.maxAngularSpeed=e.maxAngularSpeed,i.minSize=e.minSize,i.maxSize=e.maxSize,i.minLifeTime=e.minLifeTime,i.maxLifeTime=e.maxLifeTime,i.minEmitPower=e.minEmitPower,i.maxEmitPower=e.maxEmitPower,i.emitRate=e.emitRate,i.minEmitBox=L.FromArray(e.minEmitBox,null),i.maxEmitBox=L.FromArray(e.maxEmitBox,null),i.gravity=L.FromArray(e.gravity,null),i.direction1=L.FromArray(e.direction1,null),i.direction2=L.FromArray(e.direction2,null),i.color1=Oe.FromArray(e.color1),i.color2=Oe.FromArray(e.color2),i.colorDead=Oe.FromArray(e.colorDead),i.updateSpeed=e.updateSpeed,i.targetStopDuration=e.targetStopDuration,i.textureMask=Oe.FromArray(e.textureMask),i.blendMode=e.blendMode,i.start(),i},it.prototype={getCapacity:function(){return this._capacity},isAlive:function(){return this._alive},isStarted:function(){return this._started},start:function(){this._started=!0,this._stopped=!1,this._actualFrame=0},stop:function(){this._stopped=!0},_appendParticleVertex:function(e,t,r,n){var i=11*e;this._vertices[i]=t.position.x,this._vertices[i+1]=t.position.y,this._vertices[i+2]=t.position.z,this._vertices[i+3]=t.color.r,this._vertices[i+4]=t.color.g,this._vertices[i+5]=t.color.b,this._vertices[i+6]=t.color.a,this._vertices[i+7]=t.angle,this._vertices[i+8]=t.size,this._vertices[i+9]=r,this._vertices[i+10]=n},_update:function(e){this._alive=this.particles.length>0,
this.updateFunction(this.particles);var t=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);t=null!=this.emitter.position?this.emitter.getWorldMatrix():Le.Translation(this.emitter.x+this.randomNumber(-500,500),this.emitter.y,this.emitter.z+this.randomNumber(-500,500));for(var r=0;e>r;){r++;if(this.particles.length==this._capacity)break;0!=this._stockParticles.length?(this.particle=this._stockParticles.pop(),this.particle.age=0):this.particle=new qt,this.particles.push(this.particle);var n=this.randomNumber(this.minEmitPower,this.maxEmitPower);this.startDirectionFunction(n,t,this.particle.direction),this.particle.lifeTime=this.randomNumber(this.minLifeTime,this.maxLifeTime),this.particle.size=this.randomNumber(this.minSize,this.maxSize),this.particle.angularSpeed=this.randomNumber(this.minAngularSpeed,this.maxAngularSpeed),this.startPositionFunction(t,this.particle.position);var i=this.randomNumber(0,1);Oe.LerpToRef(this.color1,this.color2,i,this.particle.color),this.colorDead.subtractToRef(this.particle.color,this._colorDiff),this._colorDiff.scaleToRef(1/this.particle.lifeTime,this.particle.colorStep)}},_getEffect:function(){if(null!=this._customEffect)return this._customEffect;var e=[];null!=this._scene.clipPlane&&e.push("#define CLIPPLANE");var t=e.join("\n");return this._cachedDefines!=t&&(this._cachedDefines=t,this._effect=this._engine.createEffect("particles",["position","color","options"],["invView","view","projection","vClipPlane","textureMask"],["diffuseSampler"],t)),this._effect},animate:function(){if(this._started&&null!=this.emitter&&this._effect._isReady&&null!=this.particleTexture&&this.particleTexture.isReady()&&this._currentRenderId!=this._scene._renderId){this._currentRenderId=this._scene._renderId,this._scaledUpdateSpeed=this.updateSpeed*this._scene._animationRatio;var e=0;this.manualEmitCount>-1?(e=this.manualEmitCount,this._newPartsExcess=0):(e=Math.floor(this.emitRate*this._scaledUpdateSpeed),this._newPartsExcess+=(this.emitRate*this._scaledUpdateSpeed|0)-e),this._newPartsExcess>1&&(e+=this._newPartsExcess,this._newPartsExcess-=this._newPartsExcess),this._alive=!1,this._stopped?e=0:(this._actualFrame+=this._scaledUpdateSpeed,0!=this.targetStopDuration&&this._actualFrame>=this.targetStopDuration&&this.stop()),this._update(e),this._stopped&&(this._alive||(this._started=!1,this.disposeOnStop&&this._scene._toBeDisposed.push(this)));for(var t=0,r=0,n=this.particles.length;n>r;){var i=r++,s=this.particles[i];this._appendParticleVertex(t++,s,0,0),this._appendParticleVertex(t++,s,1,0),this._appendParticleVertex(t++,s,1,1),this._appendParticleVertex(t++,s,0,1)}this._engine.updateDynamicVertexBuffer(this._vertexBuffer,this._vertices,null)}},render:function(){if(null==this.emitter||!this._effect._isReady||null==this.particleTexture||!this.particleTexture.isReady())return 0;this._engine.enableEffect(this._effect),this._engine.setState(!1,null,null,null);var e=this._scene._viewMatrix;if(this._effect.setTexture("diffuseSampler",this.particleTexture),this._effect.setMatrix("view",e),this._effect.setMatrix("projection",this._scene._projectionMatrix),this._effect.setFloat4("textureMask",this.textureMask.r,this.textureMask.g,this.textureMask.b,this.textureMask.a),null!=this._scene.clipPlane){var t=this._scene.clipPlane,r=Le.FromValues(e.m[0],e.m[1],e.m[2],e.m[3],e.m[4],e.m[5],e.m[6],e.m[7],e.m[8],e.m[9],e.m[10],e.m[11],e.m[12],e.m[13],e.m[14],e.m[15]);r.invertToRef(r),this._effect.setMatrix("invView",r),this._effect.setFloat4("vClipPlane",t.normal.x,t.normal.y,t.normal.z,t.d)}return this._engine.bindBuffers(this._vertexBuffer,this._indexBuffer,this._vertexDeclaration,this._vertexStrideSize,this._effect),this.blendMode==it.BLENDMODE_ONEONE?this._engine.setAlphaMode(6):this._engine.setAlphaMode(2),this.forceDepthWrite&&this._engine._depthCullingState.set_depthMask(!0),this._engine.draw(!0,0,6*this.particles.length),this._engine.setAlphaMode(0),this.particles.length},dispose:function(e){null==e&&(e=!1),null!=this._vertexBuffer&&(this._engine._releaseBuffer(this._vertexBuffer),this._vertexBuffer=null),null!=this._indexBuffer&&(this._engine._releaseBuffer(this._indexBuffer),this._indexBuffer=null),null!=this.particleTexture&&(this.particleTexture.dispose(),this.particleTexture=null),l.remove(this._scene.particleSystems,this),null!=this.onDispose&&this.onDispose()},clone:function(e,t){var r=new it(e,this._capacity,this._scene);return null==t&&(t=this.emitter),r.emitter=t,null!=this.particleTexture&&(r.particleTexture=new je(this.particleTexture.url,this._scene)),r.start(),r},doubleColor4:function(){return this.randomColor.b=2*Math.random(),this.randomColor.r=2*Math.random(),this.randomColor.g=2*Math.random(),this.randomColor.a=Math.random(),this.randomColor},randomNumber:function(e,t){if(e==t)return e;var r=Math.random();return r*(t-e)+e},serialize:function(){var e={};return e.name=this.name,null!=this.emitter.position?e.emitterId=this.emitter.id:e.emitter=this.emitter.asArray(),e.capacity=this._capacity,null!=this.particleTexture&&(e.textureName=this.particleTexture.name),e.minAngularSpeed=this.minAngularSpeed,e.maxAngularSpeed=this.maxAngularSpeed,e.minSize=this.minSize,e.maxSize=this.maxSize,e.minEmitPower=this.minEmitPower,e.maxEmitPower=this.maxEmitPower,e.minLifeTime=this.minLifeTime,e.maxLifeTime=this.maxLifeTime,e.emitRate=this.emitRate,e.minEmitBox=this.minEmitBox.asArray(),e.maxEmitBox=this.maxEmitBox.asArray(),e.gravity=this.gravity.asArray(),e.direction1=this.direction1.asArray(),e.direction2=this.direction2.asArray(),e.color1=this.color1.asArray(),e.color2=this.color2.asArray(),e.colorDead=this.colorDead.asArray(),e.updateSpeed=this.updateSpeed,e.targetStopDuration=this.targetStopDuration,e.textureMask=this.textureMask.asArray(),e.blendMode=this.blendMode,e},__class__:it};var st=t.BABYLON.PostProcess=function(e,t,r,n,i,s,o,a,l,h,c){null==c&&(c=0),null==h&&(h=""),null==l&&(l=!1),null==o&&(o=1),this._currentRenderTextureInd=0,this._textures=new pr(2),this._reusable=!1,this.height=-1,this.width=-1,null!=s?(this._camera=s,this._scene=s._scene,s.attachPostProcess(this),this._engine=this._scene._engine):this._engine=a,this.name=e,this._renderRatio=i,this.renderTargetSamplingMode=o,this._reusable=l,this._textureType=c,null!=n?this._samplers=n:this._samplers=[],this._samplers.push("textureSampler"),this._fragmentUrl=t,null!=r?this._parameters=r:this._parameters=[],this.updateEffect(h)};s["com.babylonhx.postprocess.PostProcess"]=st,st.__name__=["com","babylonhx","postprocess","PostProcess"],st.prototype={updateEffect:function(e){this._effect=this._engine.createEffect({vertex:"postprocess",fragment:this._fragmentUrl},["position"],this._parameters,this._samplers,null!=e?e:"")},isReusable:function(){return this._reusable},activate:function(e,t){e=null!=e?e:this._camera;var r=e._scene,n=e._scene._engine.getCaps().maxTextureSize,i=u["int"]((null!=t?t._width:this._engine.getRenderWidth())*this._renderRatio),s=u["int"]((null!=t?t._height:this._engine.getRenderHeight())*this._renderRatio);if(i=null!=this._renderRatio.width?this._renderRatio.width:Ae.GetExponantOfTwo(0|i,n),s=null!=this._renderRatio.height?this._renderRatio.height:Ae.GetExponantOfTwo(0|s,n),this.width!=i||this.height!=s){if(this._textures.length>0){for(var o=0,a=this._textures.length;a>o;){var h=o++;this._engine._releaseTexture(this._textures.data[h])}this._textures.reset()}this.width=i,this.height=s,this._textures.push(this._engine.createRenderTargetTexture({width:this.width,height:this.height},{generateMipMaps:!1,generateDepthBuffer:l.indexOf(e._postProcesses,this,0)==e._postProcessesTakenIndices[0],samplingMode:this.renderTargetSamplingMode,type:this._textureType})),this._reusable&&this._textures.push(this._engine.createRenderTargetTexture({width:this.width,height:this.height},{generateMipMaps:!1,generateDepthBuffer:l.indexOf(e._postProcesses,this,0)==e._postProcessesTakenIndices[0],samplingMode:this.renderTargetSamplingMode,type:this._textureType})),null!=this.onSizeChanged&&this.onSizeChanged()}this._engine.bindFramebuffer(this._textures.data[this._currentRenderTextureInd]),null!=this.onActivate&&this.onActivate(e),null!=this.clearColor?this._engine.clear(this.clearColor,!0,!0):this._engine.clear(r.clearColor,r.autoClear||r.forceWireframe,!0),this._reusable&&(this._currentRenderTextureInd=(this._currentRenderTextureInd+1)%2)},get_isSupported:function(){return this._effect.get_isSupported()},apply:function(){return this._effect._isReady?(this._engine.enableEffect(this._effect),this._engine.setState(!1,null,null,null),this._engine.setAlphaMode(0),this._engine._depthCullingState.set_depthTest(!1),this._engine._depthCullingState.set_depthMask(!1),this._textures.length>0&&this._effect._bindTexture("textureSampler",this._textures.data[this._currentRenderTextureInd]),null!=this.onApply&&this.onApply(this._effect),this._effect):null},dispose:function(e){if(e=null!=e?e:this._camera,this._textures.length>0){for(var t=0,r=this._textures.length;r>t;){var n=t++;this._engine._releaseTexture(this._textures.data[n])}this._textures.reset()}if(null!=e){e.detachPostProcess(this);var i=l.indexOf(e._postProcesses,this,0);i==e._postProcessesTakenIndices[0]&&e._postProcessesTakenIndices.length>0&&(this._camera._postProcesses[e._postProcessesTakenIndices[0]].width=-1)}},__class__:st,__properties__:{get_isSupported:"get_isSupported"}};var ot=t.BABYLON.PassPostProcess=function(e,t,r,n,i,s){null==s&&(s=!1),st.call(this,e,"pass",null,null,t,r,n,i,s)};s["com.babylonhx.postprocess.PassPostProcess"]=ot,ot.__name__=["com","babylonhx","postprocess","PassPostProcess"],ot.__super__=st,ot.prototype=n(st.prototype,{__class__:ot});var at=t.BABYLON.AnaglyphPostProcess=function(e,t,r,n,i,s){null==s&&(s=!1),st.call(this,e,"anaglyph",null,["leftSampler"],t,r,n,i,s)};s["com.babylonhx.postprocess.AnaglyphPostProcess"]=at,at.__name__=["com","babylonhx","postprocess","AnaglyphPostProcess"],at.__super__=st,at.prototype=n(st.prototype,{__class__:at});var lt=t.BABYLON.Vector4=function(e,t,r,n){null==n&&(n=0),null==r&&(r=0),null==t&&(t=0),null==e&&(e=0),this.x=e,this.y=t,this.z=r,this.w=n};s["com.babylonhx.math.Vector4"]=lt,lt.__name__=["com","babylonhx","math","Vector4"],lt.FromArray=function(e,t){return null==t&&(t=0),new lt(e[t],e[t+1],e[t+2],e[t+3])},lt.FromArrayToRef=function(e,t,r){r.x=e[t],r.y=e[t+1],r.z=e[t+2],r.w=e[t+3]},lt.FromFloatArrayToRef=function(e,t,r){r.x=e[t],r.y=e[t+1],r.z=e[t+2],r.w=e[t+3]},lt.FromFloatsToRef=function(e,t,r,n,i){i.x=e,i.y=t,i.z=r,i.w=n},lt.Zero=function(){return new lt(0,0,0,0)},lt.Normalize=function(e){var t=new lt(0,0,0,0);return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.normalize(),t},lt.NormalizeToRef=function(e,t){t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.normalize()},lt.Minimize=function(e,t){var r=new lt(e.x,e.y,e.z,e.w);return t.x<r.x&&(r.x=t.x),t.y<r.y&&(r.y=t.y),t.z<r.z&&(r.z=t.z),t.w<r.w&&(r.w=t.w),r},lt.Maximize=function(e,t){var r=new lt(e.x,e.y,e.z,e.w);return t.x>r.x&&(r.x=t.x),t.y>r.y&&(r.y=t.y),t.z>r.z&&(r.z=t.z),t.w>r.w&&(r.w=t.w),r},lt.Distance=function(e,t){return Math.sqrt(lt.DistanceSquared(e,t))},lt.DistanceSquared=function(e,t){var r=e.x-t.x,n=e.y-t.y,i=e.z-t.z,s=e.w-t.w;return r*r+n*n+i*i+s*s},lt.Center=function(e,t){var r=new lt(e.x+t.x,e.y+t.y,e.z+t.z,e.w+t.w);return r.x*=.5,r.y*=.5,r.z*=.5,r.w*=.5,r},lt.prototype={toString:function(){return"{X:"+this.x+" Y:"+this.y+" Z:"+this.z+"W:"+this.w+"}"},asArray:function(){var e=[];return e[0]=this.x,e[1]=this.y,e[2]=this.z,e[3]=this.w,e},set:function(e,t,r,n){null==r&&(r=0),null==t&&(t=0),null==e&&(e=0),this.x=e,this.y=t,this.z=r,null!=n&&(this.w=n)},toArray:function(e,t){return null==t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,this},addInPlace:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this},add:function(e){return new lt(this.x+e.x,this.y+e.y,this.z+e.z,this.w+e.w)},addToRef:function(e,t){return t.x=this.x+e.x,t.y=this.y+e.y,t.z=this.z+e.z,t.w=this.w+e.w,this},subtractInPlace:function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this},subtract:function(e){return new lt(this.x-e.x,this.y-e.y,this.z-e.z,this.w-e.w)},subtractToRef:function(e,t){return t.x=this.x-e.x,t.y=this.y-e.y,t.z=this.z-e.z,t.w=this.w-e.w,this},subtractFromFloats:function(e,t,r,n){return new lt(this.x-e,this.y-t,this.z-r,this.w-n)},subtractFromFloatsToRef:function(e,t,r,n,i){return i.x=this.x-e,i.y=this.y-t,i.z=this.z-r,i.w=this.w-n,this},negate:function(){return new lt(-this.x,-this.y,-this.z,-this.w)},scaleInPlace:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},scale:function(e){return new lt(this.x*e,this.y*e,this.z*e,this.w*e)},scaleToRef:function(e,t){return t.x=this.x*e,t.y=this.y*e,t.z=this.z*e,t.w=this.w*e,this},equals:function(e){return null!=e&&this.x==e.x&&this.y==e.y&&this.z==e.z&&this.w==e.w},equalsWithEpsilon:function(e,t){return null==t&&(t=.001),null!=e&&Ae.WithinEpsilon(this.x,e.x,t)&&Ae.WithinEpsilon(this.y,e.y,t)&&Ae.WithinEpsilon(this.z,e.z,t)&&Ae.WithinEpsilon(this.w,e.w,t)},equalsToFloats:function(e,t,r,n){return this.x==e&&this.y==t&&this.z==r&&this.w==n},multiplyInPlace:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this},multiply:function(e){return new lt(this.x*e.x,this.y*e.y,this.z*e.z,this.w*e.w)},multiplyToRef:function(e,t){return t.x=this.x*e.x,t.y=this.y*e.y,t.z=this.z*e.z,t.w=this.w*e.w,this},multiplyByFloats:function(e,t,r,n){return new lt(this.x*e,this.y*t,this.z*r,this.w*n)},divide:function(e){return new lt(this.x/e.x,this.y/e.y,this.z/e.z,this.w/e.w)},divideToRef:function(e,t){return t.x=this.x/e.x,t.y=this.y/e.y,t.z=this.z/e.z,t.w=this.w/e.w,this},dotProduct:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},MinimizeInPlace:function(e){return e.x<this.x&&(this.x=e.x),e.y<this.y&&(this.y=e.y),e.z<this.z&&(this.z=e.z),e.w<this.w&&(this.w=e.w),this},MaximizeInPlace:function(e){return e.x>this.x&&(this.x=e.x),e.y>this.y&&(this.y=e.y),e.z>this.z&&(this.z=e.z),e.w>this.w&&(this.w=e.w),this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthSquared:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},normalize:function(){var e=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);if(0==e)return this;var t=1/e;return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},clone:function(){return new lt(this.x,this.y,this.z,this.w)},copyFrom:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this},copyFromFloats:function(e,t,r,n){return this.x=e,this.y=t,this.z=r,this.w=n,this},__class__:lt};var ht=t.BABYLON.BabylonFileLoader=function(){};s["com.babylonhx.loading.plugins.BabylonFileLoader"]=ht,ht.__name__=["com","babylonhx","loading","plugins","BabylonFileLoader"],ht.__properties__={get_plugin:"get_plugin"},ht.get_plugin=function(){return ht._plugin},ht.checkColors4=function(e,t){if(e.length==3*t){for(var r=[],n=0;n<e.length;){var i=n/3*4|0;r[i]=e[n],r[i+1]=e[n+1],r[i+2]=e[n+2],r[i+3]=1,n+=3}return r}return e},ht.parseMaterialById=function(e,t,r,n){for(var i=0,s=t.materials.length;s>i;){var o=i++,a=t.materials[o];if(a.id==e)return He.Parse(a,r,n)}return null},ht.parseMultiMaterial=function(e,t){var r=new Je(e.name,t);r.id=e.id,Ie.AddTagsTo(r,e.tags);for(var n=0,i=e.materials.length;i>n;){var s=n++,o=e.materials[s];null!=o?r.subMaterials.push(t.getMaterialByID(o)):r.subMaterials.push(null)}return r},ht.parseLensFlareSystem=function(e,t,r){var n=t.getLastEntryByID(e.emitterId),i=new pe("lensFlareSystem#"+u.string(e.emitterId),n,t);i.borderLimit=e.borderLimit;for(var s=0,o=e.flares.length;o>s;){var a=s++,l=e.flares[a];new _e(l.size,l.position,Ge.FromArray(l.color,null),r+l.textureName,i)}return i},ht.parseParticleSystem=function(e,t,r){var n=t.getLastMeshByID(e.emitterId),i=new it("particles#"+n.name,e.capacity,t);return null!=e.textureName&&""!=e.textureName&&(i.particleTexture=new je(r+u.string(e.textureName),t),i.particleTexture.name=e.textureName),i.minAngularSpeed=e.minAngularSpeed,i.maxAngularSpeed=e.maxAngularSpeed,i.minSize=e.minSize,i.maxSize=e.maxSize,i.minLifeTime=e.minLifeTime,i.maxLifeTime=e.maxLifeTime,i.emitter=n,i.emitRate=e.emitRate,i.minEmitBox=L.FromArray(e.minEmitBox,null),i.maxEmitBox=L.FromArray(e.maxEmitBox,null),i.gravity=L.FromArray(e.gravity,null),i.direction1=L.FromArray(e.direction1,null),i.direction2=L.FromArray(e.direction2,null),i.color1=Oe.FromArray(e.color1),i.color2=Oe.FromArray(e.color2),i.colorDead=Oe.FromArray(e.colorDead),i.updateSpeed=e.updateSpeed,i.targetStopDuration=e.targetStopFrame,i.textureMask=Oe.FromArray(e.textureMask),i.blendMode=e.blendMode,i.start(),i},ht.parseShadowGenerator=function(e,t){for(var r=t.getLightByID(e.lightId),n=new we(e.mapSize,r),i=0,s=e.renderList.length;s>i;){var o=i++,a=t.getMeshByID(e.renderList[o]);n.getShadowMap().renderList.push(a)}return null!=e.usePoissonSampling&&1==e.usePoissonSampling?n.set_usePoissonSampling(!0):null!=e.useVarianceShadowMap&&1==e.useVarianceShadowMap?n.set_useVarianceShadowMap(!0):null!=e.useBlurVarianceShadowMap&&1==e.useBlurVarianceShadowMap&&(n.set_useBlurVarianceShadowMap(!0),null!=e.blurScale&&(n.blurScale=e.blurScale),null!=e.blurBoxOffset&&n.set_blurBoxOffset(e.blurBoxOffset)),null!=e.bias&&n.set_bias(e.bias),n},ht.parseLight=function(e,t){var r=null,n=e.type;switch(n){case 0:r=new be(e.name,L.FromArray(e.position,null),t);break;case 1:r=new xe(e.name,L.FromArray(e.direction,null),t),Re.__cast(r,xe).position=L.FromArray(e.position,null);break;case 2:r=new Se(e.name,L.FromArray(e.position,null),L.FromArray(e.direction,null),e.angle,e.exponent,t);break;case 3:r=new ye(e.name,L.FromArray(e.direction,null),t),Re.__cast(r,ye).groundColor=Ge.FromArray(e.groundColor,null)}if(r.id=e.id,null!=e.tags&&Ie.AddTagsTo(r,e.tags),null!=e.intensity&&(r.intensity=e.intensity),null!=e.range&&(r.range=e.range),r.diffuse=Ge.FromArray(e.diffuse,null),r.specular=Ge.FromArray(e.specular,null),null!=e.excludedMeshesIds&&e.excludedMeshesIds.length>0&&(r._excludedMeshesIds=e.excludedMeshesIds),null!=e.parentId&&(r._waitingParentId=e.parentId),null!=e.includedOnlyMeshesIds&&e.includedOnlyMeshesIds.length>0&&(r._includedOnlyMeshesIds=e.includedOnlyMeshesIds),null!=e.animations)for(var i=0,s=e.animations.length;s>i;){var o=i++,a=e.animations[o];r.animations.push(F.Parse(a))}return null!=e.autoAnimate&&t.beginAnimation(r,e.autoAnimateFrom,e.autoAnimateTo,e.autoAnimateLoop,1),r},ht.parseCamera=function(e,t){var r,n=null,i=L.FromArray(e.position,null);if(r=null!=e.lockedTargetId?t.getLastMeshByID(e.lockedTargetId):null,"AnaglyphArcRotateCamera"==e.type||"ArcRotateCamera"==e.type){var s=e.alpha,o=e.beta,a=e.radius;if("AnaglyphArcRotateCamera"==e.type){var l=e.eye_space;n=new K(e.name,s,o,a,r,l,t)}else n=new q(e.name,s,o,a,r,t)}else if("AnaglyphFreeCamera"==e.type){var h=e.eye_space;n=new Q(e.name,i,h,t)}else"DeviceOrientationCamera"==e.type||("FollowCamera"==e.type?(n=new $(e.name,i,t),Re.__cast(n,$).heightOffset=e.heightOffset,Re.__cast(n,$).radius=e.radius,Re.__cast(n,$).rotationOffset=e.rotationOffset,null!=r&&(Re.__cast(n,$).target=r)):n=new Z(e.name,i,t));if(null!=e.cameraRigMode){var c;c=null!=e.interaxial_distance?{interaxialDistance:e.interaxial_distance}:{},n.setCameraRigMode(e.cameraRigMode,c)}if(null!=r&&Re.__instanceof(n,Z)&&(Re.__cast(n,Z).lockedTarget=r),n.id=e.id,Ie.AddTagsTo(n,e.tags),null!=e.parentId&&(n._waitingParentId=e.parentId),null!=e.target?Re.__instanceof(n,Z)?Re.__cast(n,Z).setTarget(L.FromArray(e.target,null)):Re.__cast(n,q).target=L.FromArray(e.target,null):Re.__cast(n,Z).rotation=L.FromArray(e.rotation,null),n.fov=e.fov,n.minZ=e.minZ,n.maxZ=e.maxZ,Re.__cast(n,Z).speed=e.speed,Re.__cast(n,Z).inertia=e.inertia,Re.__cast(n,Z).checkCollisions=e.checkCollisions,Re.__cast(n,Z).applyGravity=e.applyGravity,null!=e.ellipsoid&&(Re.__cast(n,Z).ellipsoid=L.FromArray(e.ellipsoid,null)),null!=e.animations)for(var f=0,d=e.animations.length;d>f;){var m=f++,_=e.animations[m];n.animations.push(F.Parse(_))}return null!=e.autoAnimate&&t.beginAnimation(n,e.autoAnimateFrom,e.autoAnimateTo,e.autoAnimateLoop,1),null!=e.layerMask?n.layerMask=u["int"](Math.abs(u["int"](e.layerMask))):n.layerMask=-1,n},ht.parseActions=function(e,t,r){var n=new M(r);null==t?r.actionManager=n:t.actionManager=n;var i,s=function(e,t){var r=null;switch(e){case"InterpolateValueAction":r=m.createInstance(E,t);break;case"PlayAnimationAction":r=m.createInstance(I,t);break;case"PlaySoundAction":}return r},o=function(e,t,r,n){if(null==n){var i=parseFloat(t);return"true"==t||"false"==t?"true"==t:isNaN(i)?t:i}for(var s=n.split("."),o=t.split(","),a=0,l=s.length;l>a;){var h=a++;r=c.field(r,s[h])}if("boolean"==typeof r)return"true"==o[0];if("string"==typeof r)return o[0];for(var u=[],f=0,d=o.length;d>f;){var m=f++;u.push(parseFloat(o[m]))}return Re.__instanceof(r,L)?new L(u[0],u[1],u[2]):Re.__instanceof(r,lt)?new lt(u[0],u[1],u[2],u[3]):Re.__instanceof(r,Ge)?new Ge(u[0],u[1],u[2]):Re.__instanceof(r,Oe)?Oe.FromArray(u):parseFloat(o[0])},a=null;a=function(e,t,i,l,h){if(null==e.detached||1!=e.detached){var u=[],f=null,d="",m=null!=e.combine&&e.combine.length>0;if(2==e.type?u.push(n):u.push(t),m){for(var _=[],p=0,v=e.combine.length;v>p;){var g=p++;a(e.combine[g],M.NothingTrigger,i,l,_)}u.push(_)}else for(var x=0,y=e.properties.length;y>x;){var b=x++,S=e.properties[b].value,w=e.properties[b].name,C=e.properties[b].targetType;if("target"==w)S=f=null!=C&&"SceneProperties"==C?r:r.getNodeByName(S);else if("parent"==w)S=r.getNodeByName(S);else{if("sound"==w)continue;"propertyPath"!=w?S=2==e.type&&"operator"==w?c.field(D,S):o(w,S,f,"value"==w?d:null):d=S}u.push(S)}if(null==h?u.push(i):u.push(null),"InterpolateValueAction"==e.name){var T=u[u.length-2];u[u.length-1]=T,u[u.length-2]=i}var E=s(e.name,u);null!=E&&(Re.__instanceof(E,P)?(i=E,E=l):(i=null,null!=l?l.then(E):n.registerAction(E)));for(var I=0,A=e.children.length;A>I;){var R=I++;a(e.children[R],t,i,E)}}},i=a;for(var l=0,h=e.children.length;h>l;){var u,f=l++,d=e.children[f];if(d.properties.length>0){var _,p=Re.__cast(d.properties,Array)[0].value;_=null==Re.__cast(d.properties,Array)[0].targetType?p:r.getMeshByName(p),u={trigger:c.field(M,d.name),parameter:_}}else u=c.field(M,d.name);for(var v=0,g=d.children.length;g>v;){var x=v++;d.detached||i(Re.__cast(d.children,Array)[x],u,null,null)}}},ht.isDescendantOf=function(e,t,r){var n;n=t instanceof Array&&null==t.__enum__?t:[t];for(var i=0;i<n.length;){var s=n[i];if(++i,e.name==s)return r.push(e.id),!0}return null!=e.parentId&&-1!=function(t){var n,i=e.parentId;return n=l.indexOf(r,i,0)}(this)?(r.push(e.id),!0):!1},ht.importVertexData=function(e,t){var r=new Fe,n=e.positions;null!=n&&r.set(n,"position");var i=e.normals;null!=i&&r.set(i,"normal");var s=e.uvs;null!=s&&r.set(s,"uv");var o=e.uv2s;null!=o&&r.set(o,"uv2");var a=e.uv3s;null!=a&&r.set(a,"uv3");var l=e.uv4s;null!=l&&r.set(l,"uv4");var h=e.uv5s;null!=h&&r.set(h,"uv5");var c=e.uv6s;null!=c&&r.set(c,"uv6");var u=e.colors;null!=u&&r.set(ht.checkColors4(u,n.length/3|0),"color");var f=e.matricesIndices;null!=f&&r.set(f,"matricesIndices");var d=e.matricesWeights;null!=d&&r.set(d,"matricesWeights");var m=e.indices;null!=m&&(r.indices=m),t.setAllVerticesData(r,e.updatable)},ht.importGeometry=function(e,t){var r=t._scene,n=e.geometryId;if(null!=n){var i=r.getGeometryByID(n);null!=i&&i.applyToMesh(t)}else if(null!=e.positions&&null!=e.normals&&null!=e.indices){if(t.setVerticesData("position",e.positions,!1),t.setVerticesData("normal",e.normals,!1),null!=e.uvs&&t.setVerticesData("uv",e.uvs,!1),null!=e.uvs2&&t.setVerticesData("uv2",e.uvs2,!1),null!=e.colors&&t.setVerticesData("color",ht.checkColors4(e.colors,e.positions.length/3|0),!1),null!=e.matricesIndices)if(e.matricesIndices._isExpanded)e.matricesIndices._isExpanded=null,t.setVerticesData("matricesIndices",e.matricesIndices,!1);else{for(var s=[],o=0,a=e.matricesIndices.length;a>o;){var l=o++,h=e.matricesIndices[l];s.push(255&h),s.push((65280&h)>>8),s.push((16711680&h)>>16),s.push(h>>24)}t.setVerticesData("matricesIndices",s,!1)}if(null!=e.matricesWeights&&t.setVerticesData("matricesWeights",e.matricesWeights,!1),t.setIndices(e.indices),null!=e.subMeshes){t.subMeshes=[];for(var c=0,u=e.subMeshes.length;u>c;){var f=c++,d=e.subMeshes[f];new rt(d.materialIndex,d.verticesStart,d.verticesCount,d.indexStart,d.indexCount,t)}}}t._shouldGenerateFlatShading&&(t.convertToFlatShadedMesh(),t._shouldGenerateFlatShading=!1),t.computeWorldMatrix(!0),null!=r._selectionOctree&&r._selectionOctree.addMesh(t)};var ct=t.BABYLON.Effect=function(e,t,r,n,i,s,o,a,l){this._compilationError="",this._isReady=!1;var h=this;this._engine=i,this.name=e,this.defines=s,this._uniformsNames=r.concat(n),this._samplers=n,this._attributesNames=t,this.onError=l,this.onCompiled=a;var c;c=Object.prototype.hasOwnProperty.call(e,"vertex")?e.vertex:e;var u;u=Object.prototype.hasOwnProperty.call(e,"fragment")?e.fragment:e;var f="";f="."==c.charAt(0)?c:_.ShadersRepository+c;var d="";d="."==u.charAt(0)?u:_.ShadersRepository+u;var m="",p=function(e){h._prepareEffect(m,e,t,s,o),h._valueCache=new Er,h._valueCacheMatrix=new Er},v=function(){var e="";mt.Shaders.exists(u+".fragment")?(e=mt.Shaders.get(u+".fragment"),p(e)):Ae.LoadFile(d+".fragment.fx",function(t){e=t,p(e)},null,"text")};mt.Shaders.exists(c+".vertex")?(m=mt.Shaders.get(c+".vertex"),v()):Ae.LoadFile(f+".vertex.fx",function(e){m=e,v()},null,"text")};s["com.babylonhx.materials.Effect"]=ct,ct.__name__=["com","babylonhx","materials","Effect"],ct.prototype={isReady:function(){return this._isReady},getProgram:function(){return this._program},getAttributesNames:function(){return this._attributesNames},getAttributeLocation:function(e){return this._attributes[e]},getAttributeLocationByName:function(e){var t=l.indexOf(this._attributesNames,e,0);return this._attributes[t]},getAttributesCount:function(){return this._attributes.length},getUniformIndex:function(e){return l.indexOf(this._uniformsNames,e,0)},getUniform:function(e){return this._uniforms.get(e)},getSamplers:function(){return this._samplers},getCompilationError:function(){return this._compilationError},_loadVertexShader:function(e,t){return mt.Shaders.exists(e+"VertexShader")?void t(mt.Shaders.get(e+"VertexShader")):void Ae.LoadFile("assets/shaders/"+e+".vertex.fx",t,null,"text")},_loadFragmentShader:function(e,t){return mt.Shaders.exists(e+"PixelShader")?void t(mt.Shaders.get(e+"PixelShader")):void Ae.LoadFile("assets/shaders/"+e+".fragment.fx",t,null,"text")},_prepareEffect:function(t,r,n,i,s){try{var o=this._engine;o.getCaps().highPrecisionShaderSupported||(t=d.replace(t,"precision highp float","precision mediump float"),r=d.replace(r,"precision highp float","precision mediump float")),this._program=o.createShaderProgram(t,r,i),this._uniforms=o.getUniforms(this._program,this._uniformsNames),this._attributes=o.getAttributes(this._program,n);for(var a=0;a<this._samplers.length;){var l=this._uniforms.get(this._samplers[a]);null==l&&(this._samplers.splice(a,1),a--),a++}o.bindSamplers(this),this._isReady=!0,null!=this.onCompiled&&this.onCompiled(this)}catch(h){if(h instanceof Ar&&(h=h.val),-1!=h.indexOf("highp"))return t=d.replace(t,"precision highp float","precision mediump float"),r=d.replace(r,"precision highp float","precision mediump float"),void this._prepareEffect(t,r,n,i,s);null!=s&&s.get_isMoreFallbacks()?(i=s.reduce(i),this._prepareEffect(t,r,n,i,s)):(e.log("Unable to compile effect: "+u.string(this.name)),e.log("Defines: "+i),e.log("Error: "+u.string(h)),this._compilationError=h,null!=this.onError&&this.onError(this,this._compilationError))}},get_isSupported:function(){return""==this._compilationError},_bindTexture:function(e,t){this._engine._bindTexture(l.indexOf(this._samplers,e,0),t)},setTexture:function(e,t){this._engine.setTexture(l.indexOf(this._samplers,e,0),t)},setTextureFromPostProcess:function(e,t){this._engine.setTextureFromPostProcess(l.indexOf(this._samplers,e,0),t)},_cacheMatrix:function(e,t){if(null==this._valueCacheMatrix.get(e)){var r=new Le;this._valueCacheMatrix.set(e,r)}this._valueCacheMatrix.get(e).copyFrom(t)},_cacheFloat2:function(e,t,r){if(this._valueCache.exists(e))this._valueCache.get(e)[0]=t,this._valueCache.get(e)[1]=r;else{var n=[t,r];this._valueCache.set(e,n)}},_cacheFloat3:function(e,t,r,n){if(this._valueCache.exists(e))this._valueCache.get(e)[0]=t,this._valueCache.get(e)[1]=r,this._valueCache.get(e)[2]=n;else{var i=[t,r,n];this._valueCache.set(e,i)}},_cacheFloat4:function(e,t,r,n,i){if(this._valueCache.exists(e))this._valueCache.get(e)[0]=t,this._valueCache.get(e)[1]=r,this._valueCache.get(e)[2]=n,this._valueCache.get(e)[3]=i;else{var s=[t,r,n,i];this._valueCache.set(e,s)}},setArray:function(e,t){return this._engine.setArray(this._uniforms.get(e),t),this},setArray2:function(e,t){return this._engine.setArray2(this._uniforms.get(e),t),this},setArray3:function(e,t){return this._engine.setArray3(this._uniforms.get(e),t),this},setArray4:function(e,t){return this._engine.setArray4(this._uniforms.get(e),t),this},setMatrices:function(e,t){return this._engine.setMatrices(this._uniforms.get(e),t),this},setMatrix:function(e,t){return this._engine.setMatrix(this._uniforms.get(e),t),this},setMatrix3x3:function(e,t){return this._engine.setMatrix3x3(this._uniforms.get(e),t),this},setMatrix2x2:function(e,t){return this._engine.setMatrix2x2(this._uniforms.get(e),t),this},setFloat:function(e,t){var r=this._valueCache.get(e);return null!=r&&r[0]==t?this:(this._valueCache.set(e,[t]),this._engine.setFloat(this._uniforms.get(e),t),this)},setBool:function(e,t){var r=this._valueCache.get(e);if(null!=r&&r[0]==(t?1:0))return this;var n;return n=t?[1]:[0],this._valueCache.set(e,n),this._engine.setBool(this._uniforms.get(e),t),this},setVector2:function(e,t){var r=this._valueCache.get(e);return null!=r&&r[0]==t.x&&r[1]==t.y?this:(this._cacheFloat2(e,t.x,t.y),this._engine.setFloat2(this._uniforms.get(e),t.x,t.y),this)},setFloat2:function(e,t,r){var n=this._valueCache.get(e);return null!=n&&n[0]==t&&n[1]==r?this:(this._cacheFloat2(e,t,r),this._engine.setFloat2(this._uniforms.get(e),t,r),this)},setVector3:function(e,t){var r=this._valueCache.get(e);return null!=r&&r[0]==t.x&&r[1]==t.y&&r[2]==t.z?this:(this._cacheFloat3(e,t.x,t.y,t.z),this._engine.setFloat3(this._uniforms.get(e),t.x,t.y,t.z),this)},setFloat3:function(e,t,r,n){var i=this._valueCache.get(e);return null!=i&&i[0]==t&&i[1]==r&&i[2]==n?this:(this._cacheFloat3(e,t,r,n),this._engine.setFloat3(this._uniforms.get(e),t,r,n),this)},setVector4:function(e,t){var r=this._valueCache.get(e);return null!=r&&r[0]==t.x&&r[1]==t.y&&r[2]==t.z&&r[3]==t.w?this:(this._cacheFloat4(e,t.x,t.y,t.z,t.w),this._engine.setFloat4(this._uniforms.get(e),t.x,t.y,t.z,t.w),this)},setFloat4:function(e,t,r,n,i){var s=this._valueCache.get(e);return null!=s&&s[0]==t&&s[1]==r&&s[2]==n&&s[3]==i?this:(this._cacheFloat4(e,t,r,n,i),this._engine.setFloat4(this._uniforms.get(e),t,r,n,i),this)},setColor3:function(e,t){var r=this._valueCache.get(e);return null!=r&&r[0]==t.r&&r[1]==t.g&&r[2]==t.b?this:(this._cacheFloat3(e,t.r,t.g,t.b),this._engine.setColor3(this._uniforms.get(e),t),this)},setColor4:function(e,t,r){var n=this._valueCache.get(e);return null!=n&&n[0]==t.r&&n[1]==t.g&&n[2]==t.b&&n[3]==r?this:(this._cacheFloat4(e,t.r,t.g,t.b,r),this._engine.setColor4(this._uniforms.get(e),t,r),this)},__class__:ct,__properties__:{get_isSupported:"get_isSupported"}};var ut=t.BABYLON.EffectFallbacks=function(){this._maxRank=-1,this._currentRank=32,this._defines=[]};s["com.babylonhx.materials.EffectFallbacks"]=ut,ut.__name__=["com","babylonhx","materials","EffectFallbacks"],ut.prototype={addFallback:function(e,t){null==this._defines[e]&&(e<this._currentRank&&(this._currentRank=e),e>this._maxRank&&(this._maxRank=e),this._defines[e]=[]),this._defines[e].push(t)},addCPUSkinningFallback:function(e,t){this._meshRank=e,this._mesh=t,e>this._maxRank&&(this._maxRank=e)},reduce:function(t){for(var r=this._defines[this._currentRank],n=0,i=r.length;i>n;){var s=n++;t=d.replace(t,"#define "+r[s],"")}return null!=this._mesh&&this._currentRank==this._meshRank&&(this._mesh.computeBonesUsingShaders=!1,
t=d.replace(t,"#define NUM_BONE_INFLUENCERS "+this._mesh.numBoneInfluencers,"#define NUM_BONE_INFLUENCERS 0"),e.log("Falling back to CPU skinning for "+this._mesh.name)),this._currentRank++,t},get_isMoreFallbacks:function(){return this._currentRank<=this._maxRank},__class__:ut,__properties__:{get_isMoreFallbacks:"get_isMoreFallbacks"}};var ft=function(){this.result="",this.ret=!0};s["com.babylonhx.materials.MaterialDefines"]=ft,ft.__name__=["com","babylonhx","materials","MaterialDefines"],ft.prototype={isEqual:function(e){this.ret=!0;for(var t=0,r=this.defines.length;r>t;){var n=t++;if(this.defines[n]!=e.defines[n]){this.ret=!1;break}}return this.ret},cloneTo:function(e){for(var t=0,r=this.defines.length;r>t;){var n=t++;e.defines[n]=e.defines[n]}},reset:function(){for(var e=0,t=this.defines.length;t>e;){var r=e++;this.defines[r]=!1}},toString:function(){this.result="";for(var e=0,t=this.defines.length;t>e;){var r=e++;1==this.defines[r]&&(this.result+="#define "+this._keys[r]+"\n")}return this.result},__class__:ft};var dt=t.BABYLON.ShaderMaterial=function(e,t,r,n){this._cachedWorldViewMatrix=new Le,this._matrices2x2=new Er,this._matrices3x3=new Er,this._matrices=new Er,this._vectors4=new Er,this._vectors3=new Er,this._vectors2=new Er,this._colors4=new Er,this._colors3=new Er,this._floatsArrays=new Er,this._floats=new Er,this._textures=new Er,We.call(this,e,t),this._shaderPath=r,null!=n.needAlphaBlending?n.needAlphaBlending=n.needAlphaBlending:n.needAlphaBlending=!1,null!=n.needAlphaTesting?n.needAlphaTesting=n.needAlphaTesting:n.needAlphaTesting=!1,null!=n.attributes?n.attributes=n.attributes:n.attributes=["position","normal","uv"],null!=n.uniforms?n.uniforms=n.uniforms:n.uniforms=["worldViewProjection"],null!=n.samplers?n.samplers=n.samplers:n.samplers=[],null!=n.defines?n.defines=n.defines:n.defines=[],this._options=n};s["com.babylonhx.materials.ShaderMaterial"]=dt,dt.__name__=["com","babylonhx","materials","ShaderMaterial"],dt.Parse=function(e,t,r){var n=new dt(e.name,t,e.shaderPath,e.options);return n},dt.__super__=We,dt.prototype=n(We.prototype,{needAlphaBlending:function(){return this._options.needAlphaBlending},needAlphaTesting:function(){return this._options.needAlphaTesting},_checkUniform:function(e){-1==l.indexOf(this._options.uniforms,e,0)&&this._options.uniforms.push(e)},setTexture:function(e,t){return-1==l.indexOf(this._options.samplers,e,0)&&this._options.samplers.push(e),this._textures.set(e,t),this},setFloat:function(e,t){return-1==l.indexOf(this._options.uniforms,e,0)&&this._options.uniforms.push(e),this._floats.set(e,t),this},setFloats:function(e,t){return-1==l.indexOf(this._options.uniforms,e,0)&&this._options.uniforms.push(e),this._floatsArrays.set(e,t),this},setColor3:function(e,t){return-1==l.indexOf(this._options.uniforms,e,0)&&this._options.uniforms.push(e),this._colors3.set(e,t),this},setColor4:function(e,t){return-1==l.indexOf(this._options.uniforms,e,0)&&this._options.uniforms.push(e),this._colors4.set(e,t),this},setVector2:function(e,t){return-1==l.indexOf(this._options.uniforms,e,0)&&this._options.uniforms.push(e),this._vectors2.set(e,t),this},setVector3:function(e,t){return-1==l.indexOf(this._options.uniforms,e,0)&&this._options.uniforms.push(e),this._vectors3.set(e,t),this},setVector4:function(e,t){return-1==l.indexOf(this._options.uniforms,e,0)&&this._options.uniforms.push(e),this._vectors4.set(e,t),this},setMatrix:function(e,t){return-1==l.indexOf(this._options.uniforms,e,0)&&this._options.uniforms.push(e),this._matrices.set(e,t),this},setMatrix3x3:function(e,t){return-1==l.indexOf(this._options.uniforms,e,0)&&this._options.uniforms.push(e),this._matrices3x3.set(e,t),this},setMatrix2x2:function(e,t){return-1==l.indexOf(this._options.uniforms,e,0)&&this._options.uniforms.push(e),this._matrices2x2.set(e,t),this},isReady:function(e,t){null==t&&(t=!1);var r=this.getScene(),n=r._engine;if(!this.checkReadyOnEveryCall&&this._renderId==r._renderId)return!0;var i=[],s=new ut;t&&i.push("#define INSTANCES");for(var o=0,a=this._options.defines.length;a>o;){var l=o++;i.push(this._options.defines[l])}null!=e&&e.get_useBones()&&e.computeBonesUsingShaders&&(i.push("#define NUM_BONE_INFLUENCERS "+e.numBoneInfluencers),i.push("#define BonesPerMesh "+(e.get_skeleton().bones.length+1)),s.addCPUSkinningFallback(0,e)),n._alphaTest&&i.push("#define ALPHATEST");var h=this._effect,c=i.join("\n");return this._effect=n.createEffect(this._shaderPath,this._options.attributes,this._options.uniforms,this._options.samplers,c,s,this.onCompiled,this.onError),this._effect._isReady?(h!=this._effect&&(r._cachedMaterial=null),this._renderId=r._renderId,!0):!1},bindOnlyWorldMatrix:function(e){var t=this.getScene();-1!=l.indexOf(this._options.uniforms,"world",0)&&this._effect.setMatrix("world",e),-1!=l.indexOf(this._options.uniforms,"worldView",0)&&(e.multiplyToRef(t._viewMatrix,this._cachedWorldViewMatrix),this._effect.setMatrix("worldView",this._cachedWorldViewMatrix)),-1!=l.indexOf(this._options.uniforms,"worldViewProjection",0)&&this._effect.setMatrix("worldViewProjection",e.multiply(t._transformMatrix))},bind:function(e,t){if(this.bindOnlyWorldMatrix(e),this.getScene().getCachedMaterial()!=this){-1!=l.indexOf(this._options.uniforms,"view",0)&&this._effect.setMatrix("view",this.getScene().getViewMatrix()),-1!=l.indexOf(this._options.uniforms,"projection",0)&&this._effect.setMatrix("projection",this.getScene().getProjectionMatrix()),-1!=l.indexOf(this._options.uniforms,"viewProjection",0)&&this._effect.setMatrix("viewProjection",this.getScene().getTransformMatrix()),null!=t&&t.get_useBones()&&t.computeBonesUsingShaders&&this._effect.setMatrices("mBones",t.get_skeleton().getTransformMatrices());for(var r=this._textures.keys();r.hasNext();){var n=r.next();this._effect.setTexture(n,this._textures.get(n))}for(var i=this._floats.keys();i.hasNext();){var s=i.next();this._effect.setFloat(s,this._floats.get(s))}for(var o=this._floatsArrays.keys();o.hasNext();){var a=o.next();this._effect.setArray(a,this._floatsArrays.get(a))}for(var h=this._colors3.keys();h.hasNext();){var c=h.next();this._effect.setColor3(c,this._colors3.get(c))}for(var u=this._colors4.keys();u.hasNext();){var f=u.next(),d=this._colors4.get(f);this._effect.setFloat4(f,d.r,d.g,d.b,d.a)}for(var m=this._vectors2.keys();m.hasNext();){var _=m.next();this._effect.setVector2(_,this._vectors2.get(_))}for(var p=this._vectors3.keys();p.hasNext();){var v=p.next();this._effect.setVector3(v,this._vectors3.get(v))}for(var g=this._matrices.keys();g.hasNext();){var x=g.next();this._effect.setMatrix(x,this._matrices.get(x))}for(var y=this._matrices3x3.keys();y.hasNext();){var b=y.next();this._effect.setMatrix3x3(b,this._matrices3x3.get(b))}for(var S=this._matrices2x2.keys();S.hasNext();){var w=S.next();this._effect.setMatrix2x2(w,this._matrices2x2.get(w))}}We.prototype.bind.call(this,e,null)},clone:function(e,t){null==t&&(t=!1);var r=new dt(e,this.getScene(),this._shaderPath,this._options);return r},dispose:function(e){null==e&&(e=!1);for(var t=this._textures.keys();t.hasNext();){var r=t.next();this._textures.get(r).dispose()}this._textures=null,We.prototype.dispose.call(this,e)},serialize:function(){var e=We.prototype.serialize.call(this);e.options=this._options,e.shaderPath=this._shaderPath,e.customType="ShaderMaterial",e.textures={};for(var t=this._textures.keys();t.hasNext();){var r=t.next();e.textures.name=this._textures.get(r).serialize()}e.floats={};for(var n=this._floats.keys();n.hasNext();){var i=n.next();e.floats.name=this._floats.get(i)}e.floatArrays={};for(var s=this._floatsArrays.keys();s.hasNext();){var o=s.next();e.floatArrays.name=this._floatsArrays.get(o)}e.colors3={};for(var a=this._colors3.keys();a.hasNext();){var l=a.next();e.colors3.name=this._colors3.get(l).asArray()}e.colors4={};for(var h=this._colors4.keys();h.hasNext();){var c=h.next();e.colors4.name=this._colors4.get(c).asArray()}e.vectors2={};for(var u=this._vectors2.keys();u.hasNext();){var f=u.next();e.vectors2.name=this._vectors2.get(f).asArray()}e.vectors3={};for(var d=this._vectors3.keys();d.hasNext();){var m=d.next();e.vectors3.name=this._vectors3.get(m).asArray()}e.vectors4={};for(var _=this._vectors4.keys();_.hasNext();){var p=_.next();e.vectors4.name=this._vectors4.get(p).asArray()}e.matrices={};for(var v=this._matrices.keys();v.hasNext();){var g=v.next();e.matrices.name=this._matrices.get(g).asArray()}e.matrices3x3={};for(var x=this._matrices3x3.keys();x.hasNext();){var y=x.next();e.matrices3x3.name=this._matrices3x3.get(y)}e.matrices2x2={};for(var b=this._matrices2x2.keys();b.hasNext();){var S=b.next();e.matrices2x2.name=this._matrices2x2.get(S)}return e},__class__:dt});var mt=t.BABYLON.ShadersStore=function(){};s["com.babylonhx.materials.ShadersStore"]=mt,mt.__name__=["com","babylonhx","materials","ShadersStore"];var _t=function(){this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,ft.call(this);var e,t,r=["DIFFUSE","AMBIENT","OPACITY","OPACITYRGB","REFLECTION","EMISSIVE","SPECULAR","BUMP","SPECULAROVERALPHA","CLIPPLANE","ALPHATEST","ALPHAFROMDIFFUSE","POINTSIZE","FOG","LIGHT0","LIGHT1","LIGHT2","LIGHT3","SPOTLIGHT0","SPOTLIGHT1","SPOTLIGHT2","SPOTLIGHT3","HEMILIGHT0","HEMILIGHT1","HEMILIGHT2","HEMILIGHT3","POINTLIGHT0","POINTLIGHT1","POINTLIGHT2","POINTLIGHT3","DIRLIGHT0","DIRLIGHT1","DIRLIGHT2","DIRLIGHT3","SPECULARTERM","SHADOW0","SHADOW1","SHADOW2","SHADOW3","SHADOWS","SHADOWVSM0","SHADOWVSM1","SHADOWVSM2","SHADOWVSM3","SHADOWPCF0","SHADOWPCF1","SHADOWPCF2","SHADOWPCF3","DIFFUSEFRESNEL","OPACITYFRESNEL","REFLECTIONFRESNEL","EMISSIVEFRESNEL","FRESNEL","NORMAL","UV1","UV2","VERTEXCOLOR","VERTEXALPHA","INSTANCES","GLOSSINESS","ROUGHNESS","EMISSIVEASILLUMINATION","LINKEMISSIVEWITHDIFFUSE","REFLECTIONFRESNELFROMSPECULAR","LIGHTMAP","USELIGHTMAPASSHADOWMAP","REFLECTIONMAP_3D","REFLECTIONMAP_SPHERICAL","REFLECTIONMAP_PLANAR","REFLECTIONMAP_CUBIC","REFLECTIONMAP_PROJECTION","REFLECTIONMAP_SKYBOX","REFLECTIONMAP_EXPLICIT","REFLECTIONMAP_EQUIRECTANGULAR","REFLECTIONMAP_EQUIRECTANGULAR_FIXED","INVERTCUBICMAP","LOGARITHMICDEPTH"];t=new Array(r.length),e=t;for(var n=0,i=r.length;i>n;){var s=n++;e[s]=r[s]}this._keys=e;var o;o=new Array(this._keys.length),this.defines=o;for(var a=0,l=this._keys.length;l>a;){var h=a++;this.defines[h]=!1}this.BonesPerMesh=0,this.NUM_BONE_INFLUENCERS=0};s["com.babylonhx.materials.StandardMaterialDefines"]=_t,_t.__name__=["com","babylonhx","materials","StandardMaterialDefines"],_t.__super__=ft,_t.prototype=n(ft.prototype,{cloneTo:function(e){ft.prototype.cloneTo.call(this,e),e.BonesPerMesh=this.BonesPerMesh,e.NUM_BONE_INFLUENCERS=this.NUM_BONE_INFLUENCERS},reset:function(){ft.prototype.reset.call(this),this.BonesPerMesh=0,this.NUM_BONE_INFLUENCERS=0},toString:function(){var e=ft.prototype.toString.call(this);return e+="#define BonesPerMesh "+this.BonesPerMesh+"\n",e+="#define NUM_BONE_INFLUENCERS "+this.NUM_BONE_INFLUENCERS+"\n"},getLight:function(e,t){switch(e){case"POINTLIGHT":switch(t){case 0:return 26;case 1:return 27;case 2:return 28;case 3:return 29}break;case"HEMILIGHT":switch(t){case 0:return 22;case 1:return 23;case 2:return 24;case 3:return 25}break;case"DIRLIGHT":switch(t){case 0:return 30;case 1:return 31;case 2:return 32;case 3:return 33}break;case"SPOTLIGHT":switch(t){case 0:return 18;case 1:return 19;case 2:return 20;case 3:return 21}}return-1},__class__:_t});var pt=t.BABYLON.VideoTexture=function(e){Ye.call(this,e)};s["com.babylonhx.materials.textures.VideoTexture"]=pt,pt.__name__=["com","babylonhx","materials","textures","VideoTexture"],pt.__super__=Ye,pt.prototype=n(Ye.prototype,{__class__:pt});var vt=t.BABYLON.WebGLTexture=function(e,t){this.noMipmap=!0,this.url=e,this.data=t,this.generateMipMaps=!1,this.isCube=!1,this.samplingMode=3,this._size=null,this._width=1,this._height=1,this._baseHeight=1,this._baseWidth=1,this._cachedWrapU=-1,this._cachedWrapV=-1,this._framebuffer=null,this._depthBuffer=null,this._cachedCoordinatesMode=-1,this._isDisabled=!1,this.isReady=!1,this.noMipmap=!1,this.references=0};s["com.babylonhx.materials.textures.WebGLTexture"]=vt,vt.__name__=["com","babylonhx","materials","textures","WebGLTexture"],vt.__interfaces__=[g],vt.prototype={__class__:vt};var gt=t.BABYLON.ProceduralTexture=function(e,t,r,n,i,s){null==s&&(s=!0),this._fallbackTextureUsed=!1,this._matrices=new Er,this._vectors3=new Er,this._vectors2=new Er,this._colors4=new Er,this._colors3=new Er,this._floatsArrays=new Er,this._floats=new Er,this._textures=new Er,this._samplers=[],this._uniforms=[],this._vertexStrideSize=8,this._vertexDeclaration=[2],this._refreshRate=1,this._currentRefreshId=-1,this.isEnabled=!0,je.call(this,null,n,!s),n._proceduralTextures.push(this),this.name=e,this.isRenderTarget=!0,this._size=t,this._generateMipMaps=s,this.setFragment(r),this._fallbackTexture=i,this._texture=n._engine.createRenderTargetTexture(t,s);var o=[];o.push(1),o.push(1),o.push(-1),o.push(1),o.push(-1),o.push(-1),o.push(1),o.push(-1),this._vertexBuffer=n._engine.createVertexBuffer(o);var a=[];a.push(0),a.push(1),a.push(2),a.push(0),a.push(2),a.push(3),this._indexBuffer=n._engine.createIndexBuffer(a)};s["com.babylonhx.materials.textures.procedurals.ProceduralTexture"]=gt,gt.__name__=["com","babylonhx","materials","textures","procedurals","ProceduralTexture"],gt.__super__=je,gt.prototype=n(je.prototype,{reset:function(){if(null!=this._effect){var e=this.getScene().getEngine();e._releaseEffect(this._effect)}},isReady:function(){var e=this,t=this.getScene().getEngine(),r=null;return null==this._fragment?!1:this._fallbackTextureUsed?!0:(r=null!=this._fragment.fragmentElement?{vertex:"procedural",fragmentElement:this._fragment.fragmentElement}:{vertex:"procedural",fragment:this._fragment},this._effect=t.createEffect(r,["position"],this._uniforms,this._samplers,"",null,null,function(t,r){e.releaseInternalTexture(),null!=e._fallbackTexture&&(e._texture=e._fallbackTexture._texture,e._texture.references++),e._fallbackTextureUsed=!0}),this._effect._isReady)},resetRefreshCounter:function(){this._currentRefreshId=-1},setFragment:function(e){this._fragment=e},get_refreshRate:function(){return this._refreshRate},set_refreshRate:function(e){return this._refreshRate=e,this._currentRefreshId=-1,e},_shouldRender:function(){return this.isEnabled&&this.isReady()&&null!=this._texture?this._fallbackTextureUsed?!1:-1==this._currentRefreshId?(this._currentRefreshId=1,!0):this.get_refreshRate()==this._currentRefreshId?(this._currentRefreshId=1,!0):(this._currentRefreshId++,!1):!1},getRenderSize:function(){return this._size},resize:function(e,t){this._fallbackTextureUsed||(this.releaseInternalTexture(),this._texture=this.getScene().getEngine().createRenderTargetTexture(e,t))},_checkUniform:function(e){-1==l.indexOf(this._uniforms,e,0)&&this._uniforms.push(e)},setTexture:function(e,t){return-1==l.indexOf(this._samplers,e,0)&&this._samplers.push(e),this._textures.set(e,t),this},setFloat:function(e,t){return-1==l.indexOf(this._uniforms,e,0)&&this._uniforms.push(e),this._floats.set(e,t),this},setFloats:function(e,t){return-1==l.indexOf(this._uniforms,e,0)&&this._uniforms.push(e),this._floatsArrays.set(e,t),this},setColor3:function(e,t){return-1==l.indexOf(this._uniforms,e,0)&&this._uniforms.push(e),this._colors3.set(e,t),this},setColor4:function(e,t){return-1==l.indexOf(this._uniforms,e,0)&&this._uniforms.push(e),this._colors4.set(e,t),this},setVector2:function(e,t){return-1==l.indexOf(this._uniforms,e,0)&&this._uniforms.push(e),this._vectors2.set(e,t),this},setVector3:function(e,t){return-1==l.indexOf(this._uniforms,e,0)&&this._uniforms.push(e),this._vectors3.set(e,t),this},setMatrix:function(e,t){return-1==l.indexOf(this._uniforms,e,0)&&this._uniforms.push(e),this._matrices.set(e,t),this},render:function(e){null==e&&(e=!1);var t=this.getScene(),r=t._engine;r.bindFramebuffer(this._texture),r.clear(t.clearColor,!0,!0),r.enableEffect(this._effect),r.setState(!1,null,null,null);for(var n=this._textures.keys();n.hasNext();){var i=n.next();this._effect.setTexture(i,this._textures.get(i))}for(var s=this._floats.keys();s.hasNext();){var o=s.next();this._effect.setFloat(o,this._floats.get(o))}for(var a=this._floatsArrays.keys();a.hasNext();){var l=a.next();this._effect.setArray(l,this._floatsArrays.get(l))}for(var h=this._colors3.keys();h.hasNext();){var c=h.next();this._effect.setColor3(c,this._colors3.get(c))}for(var u=this._colors4.keys();u.hasNext();){var f=u.next(),d=this._colors4.get(f);this._effect.setFloat4(f,d.r,d.g,d.b,d.a)}for(var m=this._vectors2.keys();m.hasNext();){var _=m.next();this._effect.setVector2(_,this._vectors2.get(_))}for(var p=this._vectors3.keys();p.hasNext();){var v=p.next();this._effect.setVector3(v,this._vectors3.get(v))}for(var g=this._matrices.keys();g.hasNext();){var x=g.next();this._effect.setMatrix(x,this._matrices.get(x))}r.bindBuffers(this._vertexBuffer,this._indexBuffer,this._vertexDeclaration,this._vertexStrideSize,this._effect),r.draw(!0,0,6),r.unBindFramebuffer(this._texture,null)},clone:function(){var e=this.getSize(),t=new gt(this.name,e.width,this._fragment,this.getScene(),this._fallbackTexture,this._generateMipMaps);return t.hasAlpha=this.hasAlpha,t.level=this.level,t.coordinatesMode=this.coordinatesMode,t},dispose:function(){var e,t=this.getScene()._proceduralTextures;e=l.indexOf(t,this,0),e>=0&&this.getScene()._proceduralTextures.splice(e,1),je.prototype.dispose.call(this)},__class__:gt,__properties__:{set_refreshRate:"set_refreshRate",get_refreshRate:"get_refreshRate"}});var xt=t.BABYLON.Axis=function(){};s["com.babylonhx.math.Axis"]=xt,xt.__name__=["com","babylonhx","math","Axis"];var yt=t.BABYLON.Frustum=function(){};s["com.babylonhx.math.Frustum"]=yt,yt.__name__=["com","babylonhx","math","Frustum"],yt.GetPlanes=function(e){for(var t=[],r=0;6>r;){r++;t.push(new Qe(0,0,0,0))}return t[0].normal.x=e.m[3]+e.m[2],t[0].normal.y=e.m[7]+e.m[6],t[0].normal.z=e.m[11]+e.m[10],t[0].d=e.m[15]+e.m[14],t[0].normalize(),t[1].normal.x=e.m[3]-e.m[2],t[1].normal.y=e.m[7]-e.m[6],t[1].normal.z=e.m[11]-e.m[10],t[1].d=e.m[15]-e.m[14],t[1].normalize(),t[2].normal.x=e.m[3]+e.m[0],t[2].normal.y=e.m[7]+e.m[4],t[2].normal.z=e.m[11]+e.m[8],t[2].d=e.m[15]+e.m[12],t[2].normalize(),t[3].normal.x=e.m[3]-e.m[0],t[3].normal.y=e.m[7]-e.m[4],t[3].normal.z=e.m[11]-e.m[8],t[3].d=e.m[15]-e.m[12],t[3].normalize(),t[4].normal.x=e.m[3]-e.m[1],t[4].normal.y=e.m[7]-e.m[5],t[4].normal.z=e.m[11]-e.m[9],t[4].d=e.m[15]-e.m[13],t[4].normalize(),t[5].normal.x=e.m[3]+e.m[1],t[5].normal.y=e.m[7]+e.m[5],t[5].normal.z=e.m[11]+e.m[9],t[5].d=e.m[15]+e.m[13],t[5].normalize(),t},yt.GetPlanesToRef=function(e,t){t[0].normal.x=e.m[3]+e.m[2],t[0].normal.y=e.m[7]+e.m[6],t[0].normal.z=e.m[11]+e.m[10],t[0].d=e.m[15]+e.m[14],t[0].normalize(),t[1].normal.x=e.m[3]-e.m[2],t[1].normal.y=e.m[7]-e.m[6],t[1].normal.z=e.m[11]-e.m[10],t[1].d=e.m[15]-e.m[14],t[1].normalize(),t[2].normal.x=e.m[3]+e.m[0],t[2].normal.y=e.m[7]+e.m[4],t[2].normal.z=e.m[11]+e.m[8],t[2].d=e.m[15]+e.m[12],t[2].normalize(),t[3].normal.x=e.m[3]-e.m[0],t[3].normal.y=e.m[7]-e.m[4],t[3].normal.z=e.m[11]-e.m[8],t[3].d=e.m[15]-e.m[12],t[3].normalize(),t[4].normal.x=e.m[3]-e.m[1],t[4].normal.y=e.m[7]-e.m[5],t[4].normal.z=e.m[11]-e.m[9],t[4].d=e.m[15]-e.m[13],t[4].normalize(),t[5].normal.x=e.m[3]+e.m[1],t[5].normal.y=e.m[7]+e.m[5],t[5].normal.z=e.m[11]+e.m[9],t[5].d=e.m[15]+e.m[13],t[5].normalize()};var bt=t.BABYLON.Path3D=function(e,t,r){null==r&&(r=!1),this._raw=!1,this._binormals=[],this._normals=[],this._tangents=[],this._distances=[],this._curve=[];for(var n=0,i=e.length;i>n;){var s=n++;this._curve[s]=e[s].clone()}this._raw=r,this._compute(t)};s["com.babylonhx.math.Path3D"]=bt,bt.__name__=["com","babylonhx","math","Path3D"],bt.prototype={getCurve:function(){return this._curve},getTangents:function(){return this._tangents},getNormals:function(){return this._normals},getBinormals:function(){return this._binormals},getDistances:function(){return this._distances},update:function(e,t){for(var r=0,n=e.length;n>r;){var i=r++;this._curve[i].x=e[i].x,this._curve[i].y=e[i].y,this._curve[i].z=e[i].z}return this._compute(t),this},_compute:function(e){var t=this._curve.length;this._tangents[0]=this._getFirstNonNullVector(0),this._raw||this._tangents[0].normalize(),this._tangents[t-1]=this._curve[t-1].subtract(this._curve[t-2]),this._raw||this._tangents[t-1].normalize();var r=this._tangents[0],n=this._normalVector(this._curve[0],r,e);this._normals[0]=n,this._raw||this._normals[0].normalize(),this._binormals[0]=L.Cross(r,this._normals[0]),this._raw||this._binormals[0].normalize(),this._distances[0]=0;for(var i=new L(0,0,0),s=new L(0,0,0),o=new L(0,0,0),a=new L(0,0,0),l=new L(0,0,0),h=1;t>h;){var c=h++;i=this._getLastNonNullVector(c),t-1>c&&(s=this._getFirstNonNullVector(c),this._tangents[c]=new L(i.x+s.x,i.y+s.y,i.z+s.z),this._tangents[c].normalize()),this._distances[c]=this._distances[c-1]+Math.sqrt(i.x*i.x+i.y*i.y+i.z*i.z),o=this._tangents[c],a=this._normals[c-1],l=this._binormals[c-1],this._normals[c]=L.Cross(l,o),this._raw||this._normals[c].normalize(),this._binormals[c]=L.Cross(o,this._normals[c]),this._raw||this._binormals[c].normalize()}},_getFirstNonNullVector:function(e){for(var t=1,r=this._curve[e+t].subtract(this._curve[e]);0==Math.sqrt(r.x*r.x+r.y*r.y+r.z*r.z)&&e+t+1<this._curve.length;)t++,r=this._curve[e+t].subtract(this._curve[e]);return r},_getLastNonNullVector:function(e){for(var t=1,r=this._curve[e].subtract(this._curve[e-t]);0==Math.sqrt(r.x*r.x+r.y*r.y+r.z*r.z)&&e>t+1;)t++,r=this._curve[e].subtract(this._curve[e-t]);return r},_normalVector:function(e,t,r){var n=new L(0,0,0);if(null==r){var i=new L(0,0,0);Ae.WithinEpsilon(t.y,1,.001)?Ae.WithinEpsilon(t.x,1,.001)?Ae.WithinEpsilon(t.z,1,.001)||(i=new L(0,0,1)):i=new L(1,0,0):i=new L(0,-1,0),n=L.Cross(t,i)}else n=L.Cross(t,r),n.x=n.y*t.z-n.z*t.y,n.y=n.z*t.x-n.x*t.z,n.z=n.x*t.y-n.y*t.x;return n.normalize(),n},__class__:bt};var St=function(e,t,r){null!=e?this.position=e:this.position=new L(0,0,0),null!=t?this.normal=t:this.normal=new L(0,1,0),null!=r?this.uv=r:this.uv=new Mt(0,0)};s["com.babylonhx.math.PositionNormalTextureVertex"]=St,St.__name__=["com","babylonhx","math","PositionNormalTextureVertex"],St.prototype={clone:function(){return new St(this.position.clone(),this.normal.clone(),this.uv.clone())},__class__:St};var wt=function(e,t){null!=e?this.position=e:this.position=new L(0,0,0),null!=t?this.normal=t:this.normal=new L(0,1,0)};s["com.babylonhx.math.PositionNormalVertex"]=wt,wt.__name__=["com","babylonhx","math","PositionNormalVertex"],wt.prototype={clone:function(){return new wt(this.position.clone(),this.normal.clone())},__class__:wt};var Ct=t.BABYLON.Ray=function(e,t,r){this.origin=e,this.direction=t,null!=r?this.length=r:this.length=1/0};s["com.babylonhx.math.Ray"]=Ct,Ct.__name__=["com","babylonhx","math","Ray"],Ct.CreateNew=function(e,t,r,n,i,s,o){var a=L.Unproject(new L(e,t,0),r,n,i,s,o),l=L.Unproject(new L(e,t,1),r,n,i,s,o),h=new L(l.x-a.x,l.y-a.y,l.z-a.z);return h.normalize(),new Ct(a,h)},Ct.CreateNewFromTo=function(e,t,r){null==r&&(r=Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1));var n=new L(t.x-e.x,t.y-e.y,t.z-e.z),i=Math.sqrt(n.x*n.x+n.y*n.y+n.z*n.z);return n.normalize(),Ct.Transform(new Ct(e,n,i),r)},Ct.Transform=function(e,t){var r=L.TransformCoordinates(e.origin,t),n=L.TransformNormal(e.direction,t);return new Ct(r,n)},Ct.prototype={intersectsBoxMinMax:function(e,t){var r=0,n=1/0;if(Math.abs(this.direction.x)<1e-7){if(this.origin.x<e.x||this.origin.x>t.x)return!1}else{var i=1/this.direction.x,s=(e.x-this.origin.x)*i,o=(t.x-this.origin.x)*i;if(o==-(1/0)&&(o=1/0),s>o){var a=s;s=o,o=a}if(r=Math.max(s,r),n=Math.min(o,n),r>n)return!1}if(Math.abs(this.direction.y)<1e-7){if(this.origin.y<e.y||this.origin.y>t.y)return!1}else{var l=1/this.direction.y,h=(e.y-this.origin.y)*l,c=(t.y-this.origin.y)*l;if(c==-(1/0)&&(c=1/0),h>c){var u=h;h=c,c=u}if(r=Math.max(h,r),n=Math.min(c,n),r>n)return!1}if(Math.abs(this.direction.z)<1e-7){if(this.origin.z<e.z||this.origin.z>t.z)return!1}else{var f=1/this.direction.z,d=(e.z-this.origin.z)*f,m=(t.z-this.origin.z)*f;if(m==-(1/0)&&(m=1/0),d>m){var _=d;d=m,m=_}if(r=Math.max(d,r),n=Math.min(m,n),r>n)return!1}return!0},intersectsBox:function(e){return this.intersectsBoxMinMax(e.minimum,e.maximum)},intersectsSphere:function(e){var t=e.center.x-this.origin.x,r=e.center.y-this.origin.y,n=e.center.z-this.origin.z,i=t*t+r*r+n*n,s=e.radius*e.radius;if(s>=i)return!0;var o=t*this.direction.x+r*this.direction.y+n*this.direction.z;if(0>o)return!1;var a=i-o*o;return s>=a},intersectsTriangle:function(e,t,r){null==this._edge1&&(this._edge1=new L(0,0,0),this._edge2=new L(0,0,0),this._pvec=new L(0,0,0),this._tvec=new L(0,0,0),this._qvec=new L(0,0,0)),t.subtractToRef(e,this._edge1),r.subtractToRef(e,this._edge2),L.CrossToRef(this.direction,this._edge2,this._pvec);var n=L.Dot(this._edge1,this._pvec);if(0==n)return null;var i=1/n;this.origin.subtractToRef(e,this._tvec);var s=L.Dot(this._tvec,this._pvec)*i;if(0>s||s>1)return null;L.CrossToRef(this._tvec,this._edge1,this._qvec);var o=L.Dot(this.direction,this._qvec)*i;return 0>o||s+o>1?null:new oe(s,o,L.Dot(this._edge2,this._qvec)*i)},__class__:Ct};var Tt={__ename__:!0,__constructs__:["LOCAL","WORLD"]};Tt.LOCAL=["LOCAL",0],Tt.LOCAL.toString=o,Tt.LOCAL.__enum__=Tt,Tt.WORLD=["WORLD",1],Tt.WORLD.toString=o,Tt.WORLD.__enum__=Tt;var Mt=t.BABYLON.Vector2=function(e,t){this.x=e,this.y=t};s["com.babylonhx.math.Vector2"]=Mt,Mt.__name__=["com","babylonhx","math","Vector2"],Mt.Zero=function(){return new Mt(0,0)},Mt.FromArray=function(e,t){return null==t&&(t=0),new Mt(e[t],e[t+1])},Mt.FromArrayToRef=function(e,t,r){return r.x=e[t],r.y=e[t+1],r},Mt.CatmullRom=function(e,t,r,n,i){var s=i*i,o=i*s,a=.5*(2*t.x+(-e.x+r.x)*i+(2*e.x-5*t.x+4*r.x-n.x)*s+(-e.x+3*t.x-3*r.x+n.x)*o),l=.5*(2*t.y+(-e.y+r.y)*i+(2*e.y-5*t.y+4*r.y-n.y)*s+(-e.y+3*t.y-3*r.y+n.y)*o);return new Mt(a,l)},Mt.Clamp=function(e,t,r){var n=e.x;n=n>r.x?r.x:n,n=n<t.x?t.x:n;var i=e.y;return i=i>r.y?r.y:i,i=i<t.y?t.y:i,new Mt(n,i)},Mt.Hermite=function(e,t,r,n,i){var s=i*i,o=i*s,a=2*o-3*s+1,l=-2*o+3*s,h=o-2*s+i,c=o-s,u=e.x*a+r.x*l+t.x*h+n.x*c,f=e.y*a+r.y*l+t.y*h+n.y*c;return new Mt(u,f)},Mt.Lerp=function(e,t,r){var n=e.x+(t.x-e.x)*r,i=e.y+(t.y-e.y)*r;return new Mt(n,i)},Mt.Dot=function(e,t){return e.x*t.x+e.y*t.y},Mt.Normalize=function(e){var t=new Mt(e.x,e.y);return t.normalize(),t},Mt.Minimize=function(e,t){var r;r=e.x<t.x?e.x:t.x;var n;return n=e.y<t.y?e.y:t.y,new Mt(r,n)},Mt.Maximize=function(e,t){var r;r=e.x>t.x?e.x:t.x;var n;return n=e.y>t.y?e.y:t.y,new Mt(r,n)},Mt.Transform=function(e,t){var r=e.x*t.m[0]+e.y*t.m[4],n=e.x*t.m[1]+e.y*t.m[5];return new Mt(r,n)},Mt.Distance=function(e,t){return Math.sqrt(Mt.DistanceSquared(e,t))},Mt.DistanceSquared=function(e,t){var r=e.x-t.x,n=e.y-t.y;return r*r+n*n},Mt.prototype={toString:function(){return"{X:"+this.x+" Y:"+this.y+"}"},toArray:function(e,t){return null==t&&(t=0),e[t]=this.x,e[t+1]=this.y,this},asArray:function(){var e=[];return this.toArray(e,0),e},copyFrom:function(e){return this.x=e.x,this.y=e.y,this},copyFromFloats:function(e,t){return this.x=e,this.y=t,this},add:function(e){return new Mt(this.x+e.x,this.y+e.y)},addVector3:function(e){return new Mt(this.x+e.x,this.y+e.y)},subtract:function(e){return new Mt(this.x-e.x,this.y-e.y)},subtractInPlace:function(e){return this.x-=e.x,this.y-=e.y,this},multiplyInPlace:function(e){return this.x*=e.x,this.y*=e.y,this},multiply:function(e){return new Mt(this.x*e.x,this.y*e.y)},multiplyToRef:function(e,t){return t.x=this.x*e.x,t.y=this.y*e.y,this},multiplyByFloats:function(e,t){return new Mt(this.x*e,this.y*t)},divide:function(e){return new Mt(this.x/e.x,this.y/e.y)},divideToRef:function(e,t){return t.x=this.x/e.x,t.y=this.y/e.y,this},negate:function(){return new Mt(-this.x,-this.y)},scaleInPlace:function(e){return this.x*=e,this.y*=e,this},scale:function(e){return new Mt(this.x*e,this.y*e)},equals:function(e){return null!=e&&this.x==e.x&&this.y==e.y},equalsWithEpsilon:function(e,t){return null==t&&(t=.001),null!=e&&Ae.WithinEpsilon(this.x,e.x,t)&&Ae.WithinEpsilon(this.y,e.y,t)},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthSquared:function(){return this.x*this.x+this.y*this.y},normalize:function(){var e=Math.sqrt(this.x*this.x+this.y*this.y);if(0==e)return this;var t=1/e;return this.x*=t,this.y*=t,this},clone:function(){return new Mt(this.x,this.y)},__class__:Mt};var Pt=function(){};s["com.babylonhx.math.Tmp"]=Pt,Pt.__name__=["com","babylonhx","math","Tmp"],Pt.prototype={__class__:Pt};var Et=t.BABYLON.Viewport=function(e,t,r,n){this.x=e,this.y=t,this.width=r,this.height=n};s["com.babylonhx.math.Viewport"]=Et,Et.__name__=["com","babylonhx","math","Viewport"],Et.prototype={toGlobal:function(e){var t=e.getRenderWidth(),r=e.getRenderHeight();return new Et(this.x*t,this.y*r,this.width*t,this.height*r)},toScreenGlobal:function(e){var t=e.getRenderWidth(!0),r=e.getRenderHeight(!0);return new Et(this.x*t,this.y*r,this.width*t,this.height*r)},__class__:Et};var It=t.BABYLON.GroundMesh=function(e,t){this._worldInverse=new Le,this.generateOctree=!1,tt.call(this,e,t)};s["com.babylonhx.mesh.GroundMesh"]=It,It.__name__=["com","babylonhx","mesh","GroundMesh"],It.__super__=tt,It.prototype=n(tt.prototype,{get_subdivisions:function(){return this._subdivisions},optimize:function(e,t){null==t&&(t=32),this._subdivisions=e,this.subdivide(this._subdivisions),this.createOrUpdateSubmeshesOctree(t,null)},getHeightAtCoordinates:function(e,t){if(e-=this.position.x,t-=this.position.z,e/=this.scaling.x,t/=this.scaling.z,e<this._minX||e>this._maxX||t<this._minZ||t>this._maxZ)return this.position.y;(null==this._heightQuads||0==this._heightQuads.length)&&this._computeHeightQuads();var r=this._getFacetAt(e,t),n=-(r.x*e+r.z*t+r.w)/r.y;return n*this.scaling.y+this.position.y},getNormalAtCoordinates:function(e,t){var r=new L(0,1,0);return this.getNormalAtCoordinatesToRef(e,t,r),r},getNormalAtCoordinatesToRef:function(e,t,r){if(e-=this.position.x,t-=this.position.z,e/=this.scaling.x,t/=this.scaling.z,!(e<this._minX||e>this._maxX||t<this._minZ||t>this._maxZ)){(null==this._heightQuads||0==this._heightQuads.length)&&this._computeHeightQuads();var n=this._getFacetAt(e,t);r.x=n.x,r.y=n.y,r.z=n.z}},_getFacetAt:function(e,t){var r=Math.floor((e+this._maxX)*this._subdivisions/this._width),n=Math.floor(-(t+this._maxZ)*this._subdivisions/this._height+this._subdivisions),i=this._heightQuads[n*this._subdivisions+r],s=null;return s=t<i.slope.x*e+i.slope.y?i.facet1:i.facet2},_computeHeightQuads:function(){this._heightQuads=[];for(var e=this.getVerticesData("position"),t=new L(0,0,0),r=new L(0,0,0),n=new L(0,0,0),i=new L(0,0,0),s=new L(0,0,0),o=new L(0,0,0),a=new L(0,0,0),l=new L(0,0,0),h=new L(0,0,0),c=0,u=0,f=0,d=0,m=0,_=0,p=0,v=0,g=this._subdivisions;g>v;)for(var x=v++,y=0,b=this._subdivisions;b>y;){var S=y++;c=3*S|0,u=x*(this._subdivisions+1)*3|0,f=(x+1)*(this._subdivisions+1)*3|0,t.x=e[u+c],t.y=e[u+c+1],t.z=e[u+c+2],r.x=e[u+c+3],r.y=e[u+c+4],r.z=e[u+c+5],n.x=e[f+c],n.y=e[f+c+1],n.z=e[f+c+2],i.x=e[f+c+3],i.y=e[f+c+4],i.z=e[f+c+5],d=(i.z-t.z)/(i.x-t.x),m=t.z-d*t.x;var w=new Mt(d,m);s.x=r.x-t.x,s.y=r.y-t.y,s.z=r.z-t.z,o.x=n.x-t.x,o.y=n.y-t.y,o.z=n.z-t.z,a.x=i.x-t.x,a.y=i.y-t.y,a.z=i.z-t.z,l.x=a.y*o.z-a.z*o.y,l.y=a.z*o.x-a.x*o.z,l.z=a.x*o.y-a.y*o.x,h.x=s.y*a.z-s.z*a.y,h.y=s.z*a.x-s.x*a.z,h.z=s.x*a.y-s.y*a.x,l.normalize(),h.normalize(),_=-(l.x*t.x+l.y*t.y+l.z*t.z),p=-(h.x*r.x+h.y*r.y+h.z*r.z);var C=new lt(l.x,l.y,l.z,_),T=new lt(h.x,h.y,h.z,p),M={slope:w,facet1:C,facet2:T};this._heightQuads.push(M)}},__class__:It,__properties__:n(tt.prototype.__properties__,{get_subdivisions:"get_subdivisions"})});var Dt=t.BABYLON.InstancedMesh=function(e,t){et.call(this,e,t._scene),t.instances.push(this),this._sourceMesh=t,this.position.copyFrom(t.position),this.rotation.copyFrom(t.rotation),this.scaling.copyFrom(t.scaling),null!=t.rotationQuaternion&&(this.rotationQuaternion=t.rotationQuaternion.clone()),this.infiniteDistance=t.infiniteDistance,this._pivotMatrix=t._pivotMatrix,this._cache.pivotMatrixUpdated=!0,this.refreshBoundingInfo(),
this._syncSubMeshes()};s["com.babylonhx.mesh.InstancedMesh"]=Dt,Dt.__name__=["com","babylonhx","mesh","InstancedMesh"],Dt.__interfaces__=[B],Dt.__super__=et,Dt.prototype=n(et.prototype,{get_receiveShadows:function(){return this._sourceMesh.get_receiveShadows()},get_material:function(){return this._sourceMesh.get_material()},get_visibility:function(){return this._sourceMesh.get_visibility()},get_skeleton:function(){return this._sourceMesh.get_skeleton()},getTotalVertices:function(){return this._sourceMesh.getTotalVertices()},get_sourceMesh:function(){return this._sourceMesh},getVerticesData:function(e,t){return null==t&&(t=!1),this._sourceMesh.getVerticesData(e,t)},isVerticesDataPresent:function(e){return this._sourceMesh.isVerticesDataPresent(e)},getIndices:function(e){return null==e&&(e=!1),this._sourceMesh.getIndices(e)},get_positions:function(){return this._sourceMesh._positions},refreshBoundingInfo:function(){var e=this._sourceMesh.getBoundingInfo();this._boundingInfo=new he(e.minimum.clone(),e.maximum.clone()),null==this._boundingInfo?this._boundingInfo=new he(this.get_absolutePosition(),this.get_absolutePosition()):this._boundingInfo=this._boundingInfo,this._boundingInfo._update(this.get_worldMatrixFromCache()),this._updateSubMeshesBoundingInfo(this.get_worldMatrixFromCache())},_preActivate:function(){null!=this._currentLOD&&this._currentLOD._preActivate()},_activate:function(e){null!=this._currentLOD&&this.get_sourceMesh()._registerInstanceForRenderId(this,e)},getLOD:function(e,t){return this._currentLOD=this.get_sourceMesh().getLOD(this._scene.activeCamera,this.getBoundingInfo().boundingSphere),this._currentLOD==this.get_sourceMesh()?this:this._currentLOD},_syncSubMeshes:function(){if(this.releaseSubMeshes(),null!=this._sourceMesh.subMeshes)for(var e=0,t=this._sourceMesh.subMeshes.length;t>e;){var r=e++;this._sourceMesh.subMeshes[r].clone(this,this._sourceMesh)}},_generatePointsArray:function(){return this._sourceMesh._generatePointsArray()},clone:function(e,t,r){null==r&&(r=!1);var n=this._sourceMesh.createInstance(e);if(this.refreshBoundingInfo(),null!=t&&(n.parent=t),!r)for(var i=0,s=this._scene.meshes.length;s>i;){var o=i++,a=this._scene.meshes[o];a.parent==this&&a.clone(a.name,n)}return n.computeWorldMatrix(!0),n},dispose:function(e){null==e&&(e=!1),l.remove(this._sourceMesh.instances,this),et.prototype.dispose.call(this,e)},__class__:Dt,__properties__:n(et.prototype.__properties__,{get_sourceMesh:"get_sourceMesh"})});var At=t.BABYLON.LinesMesh=function(e,t,r,n,i){null==i&&(i=!1),this.gapSize=0,this.dashSize=0,this.alpha=1,this.color=new Ge(1,1,1),tt.call(this,e,t,r,n,i),this._colorShader=new dt("colorShader",t,"color",{attributes:["position"],uniforms:["worldViewProjection","color"],needAlphaBlending:!0})};s["com.babylonhx.mesh.LinesMesh"]=At,At.__name__=["com","babylonhx","mesh","LinesMesh"],At.__super__=tt,At.prototype=n(tt.prototype,{get_material:function(){return this._colorShader},get_isPickable:function(){return!1},get_checkCollisions:function(){return!1},_bind:function(e,t,r){var n=this._scene._engine,i=this._geometry.getIndexBuffer();n.bindBuffers(this._geometry.getVertexBuffer("position").getBuffer(),i,[3],12,this._colorShader.getEffect()),this._colorShader.setColor4("color",this.color.toColor4(this.alpha))},_draw:function(e,t,r){if(null!=this._geometry&&null!=this._geometry.getVertexBuffers()&&null!=this._geometry.getIndexBuffer()){var n=this._scene._engine;n.draw(!1,e.indexStart,e.indexCount)}},intersects:function(e,t){return null==t&&(t=!1),null},dispose:function(e){null==e&&(e=!1),this._colorShader.dispose(),tt.prototype.dispose.call(this,e)},clone:function(e,t,r){return null==r&&(r=!1),new At(e,this._scene,t,this,r)},__class__:At});var Rt=function(){};s["com.babylonhx.mesh.MeshBuilder"]=Rt,Rt.__name__=["com","babylonhx","mesh","MeshBuilder"],Rt.CreateBox=function(e,t,r){var n=new tt(e,r),i=Fe.CreateBox(t);return null!=r._physicsEngine&&(n.physicsDim={},n.physicsDim.size=t),i.applyToMesh(n,t.updatable),n},Rt.CreateSphere=function(e,t,r){var n=new tt(e,r),i=Fe.CreateSphere(t);return i.applyToMesh(n,t.updatable),null!=r._physicsEngine&&(n.physicsDim={},n.physicsDim.diameter=t.diameterX/2),n},Rt.CreateIcoSphere=function(e,t,r){var n=new tt(e,r);null==t.sideOrientation&&(t.sideOrientation=0),null==t.updatable&&(t.updatable=!1);var i=Fe.CreateIcoSphere(t);return i.applyToMesh(n,t.updatable),n},Rt.CreateDisc=function(e,t,r){var n=new tt(e,r),i=Fe.CreateDisc(t);return i.applyToMesh(n,t.updatable),n},Rt.CreateRibbon=function(e,t,r){var n=t.pathArray,i=t.closeArray,s=t.closePath,o=t.offset,a=t.updatable,l=t.sideOrientation,h=t.instance;if(null!=h){var c=function(e){var t,r=n[0].length,i=0;t=2==h._sideOrientation?2:1;for(var s=1,o=t+1;o>s;)for(var a=(s++,0),l=n.length;l>a;){var c=a++,u=n[c],f=u.length;r=f>r?r:f;for(var d=0;r>d;)e[i]=u[d].x,e[i+1]=u[d].y,e[i+2]=u[d].z,d++,i+=3;h._closePath&&(e[i]=u[0].x,e[i+1]=u[0].y,e[i+2]=u[0].z,i+=3)}},u=h.getVerticesData("position");if(c(u),h.updateVerticesData("position",u,!0,!1),!h._areNormalsFrozen){var f=h.getIndices(),d=h.getVerticesData("normal");if(Fe.ComputeNormals(u,f,d),h._closePath)for(var m=0,_=0,p=0,v=n.length;v>p;){var g=p++;m=3*h._idx[g],_=g+1<n.length?3*(h._idx[g+1]-1):d.length-3,d[m]=.5*(d[m]+d[_]),d[m+1]=.5*(d[m+1]+d[_+1]),d[m+2]=.5*(d[m+2]+d[_+2]),d[_]=d[m],d[_+1]=d[m+1],d[_+2]=d[m+2]}h.updateVerticesData("normal",d,!0,!1)}return h}var x=new tt(e,r);x._sideOrientation=l;var y=Fe.CreateRibbon({pathArray:n,closeArray:i,closePath:s,offset:o,sideOrientation:l});return s&&(x._idx=y._idx),x._closePath=s,x._closeArray=i,y.applyToMesh(x,a),x},Rt.CreateCylinder=function(e,t,r){var n=new tt(e,r),i=Fe.CreateCylinder(t);return null!=r._physicsEngine&&(n.physicsDim={},n.physicsDim.height=t.height,t.diameterBottom>t.diameterTop?n.physicsDim.diameter=t.diameterBottom:n.physicsDim.diameter=t.diameterTop),i.applyToMesh(n,t.updatable),n},Rt.CreateTorus=function(e,t,r){var n=new tt(e,r),i=Fe.CreateTorus(t);return i.applyToMesh(n,t.updatable),n},Rt.CreateTorusKnot=function(e,t,r){var n=new tt(e,r),i=Fe.CreateTorusKnot(t);return i.applyToMesh(n,t.updatable),n},Rt.CreateLines=function(e,t,r){var n=t.instance,i=t.points;if(null!=n){var s=function(e){for(var t=0,r=0,n=i.length;n>r;){var s=r++;e[t]=i[s].x,e[t+1]=i[s].y,e[t+2]=i[s].z,t+=3}};return n.updateMeshPositions(s,!1),n}var o=new At(e,r),a=Fe.CreateLines(t);return a.applyToMesh(o,t.updatable),o},Rt.CreateDashedLines=function(e,t,r){var n=t.points,i=t.instance,s=t.gapSize,o=(t.dashNb,t.dashSize);if(null!=i){var a=function(e){for(var t=new L(0,0,0),r=e.length/6,s=0,o=0,a=0,l=0,h=0,c=0,u=0,f=0,d=0,m=n.length-1;m>d;){var _=d++;n[_+1].subtractToRef(n[_],t),s+=Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z)}for(a=s/r,l=i.dashSize*a/(i.dashSize+i.gapSize);u<n.length-1;){for(n[u+1].subtractToRef(n[u],t),o=Math.floor(Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z)/a),t.normalize(),f=0;o>f&&c<e.length;)h=a*f,e[c]=n[u].x+h*t.x,e[c+1]=n[u].y+h*t.y,e[c+2]=n[u].z+h*t.z,e[c+3]=n[u].x+(h+l)*t.x,e[c+4]=n[u].y+(h+l)*t.y,e[c+5]=n[u].z+(h+l)*t.z,c+=6,f++;++u}for(;c<e.length;)e[c]=n[u].x,e[c+1]=n[u].y,e[c+2]=n[u].z,c+=3};return i.updateMeshPositions(a,!1),i}var l=new At(e,r),h=Fe.CreateDashedLines(t);return h.applyToMesh(l,t.updatable),l.dashSize=o,l.gapSize=s,l},Rt.ExtrudeShape=function(e,t,r){var n,i=t.path,s=t.shape;n=null!=t.scale?t.scale:1;var o;o=null!=t.rotation?t.rotation:0;var a;a=null!=t.cap?t.cap:0;var l,h=t.updatable;l=null!=t.sideOrientation?t.sideOrientation:0;var c=t.extrudedInstance;return Rt._ExtrudeShapeGeneric(e,s,i,n,o,null,null,!1,!1,a,!1,r,h,l,c)},Rt.ExtrudeShapeCustom=function(e,t,r){var n,i=t.path,s=t.shape;n=null!=t.scaleFunction?t.scaleFunction:function(e,t){return null==t&&(t=0),null==e&&(e=0),1};var o;o=null!=t.rotationFunction?t.rotationFunction:function(e,t){return null==t&&(t=0),null==e&&(e=0),0};var a;a=null!=t.ribbonCloseArray?t.ribbonCloseArray:!1;var l;l=null!=t.ribbonClosePath?t.ribbonClosePath:!1;var h;h=null!=t.cap?t.cap:0;var c,u=t.updatable;c=null!=t.sideOrientation?t.sideOrientation:0;var f=t.extrudedInstance;return Rt._ExtrudeShapeGeneric(e,s,i,null,null,n,o,a,l,h,!0,r,u,c,f)},Rt.CreateLathe=function(e,t,r){var n;n=null!=t.arc?t.arc:1,0>=n&&(n=1);var i;i=null==t.closed?!0:t.closed;var s,o=t.shape;s=null!=t.radius?t.radius:1;var a;a=null!=t.tessellation?t.tessellation:64;var l,h=t.updatable;l=null!=t.sideOrientation?t.sideOrientation:0;var c;c=null!=t.cap?t.cap:0;for(var u=2*Math.PI,f=[],d=u/a*n,m=null,_=0,p=a+1;p>_;){var v=_++,g=[];(1==c||3==c)&&(g.push(new L(0,o[0].y,0)),g.push(new L(Math.cos(v*d)*o[0].x*s,o[0].y,Math.sin(v*d)*o[0].x*s)));for(var x=0,y=o.length;y>x;){var b=x++;m=new L(Math.cos(v*d)*o[b].x*s,o[b].y,Math.sin(v*d)*o[b].x*s),g.push(m)}(2==c||3==c)&&(g.push(new L(Math.cos(v*d)*o[o.length-1].x*s,o[o.length-1].y,Math.sin(v*d)*o[o.length-1].x*s)),g.push(new L(0,o[o.length-1].y,0))),f.push(g)}var S=Rt.CreateRibbon(e,{pathArray:f,closeArray:i,sideOrientation:l,updatable:h},r);return S},Rt.CreatePlane=function(e,t,r){var n=new tt(e,r),i=Fe.CreatePlane(t);return i.applyToMesh(n,t.updatable),n},Rt.CreateGround=function(e,t,r){var n=new It(e,r);n._setReady(!1),null!=t.subdivision?n._subdivisions=t.subdivision:n._subdivisions=1;var i=Fe.CreateGround(t);return i.applyToMesh(n,t.updatable),n._setReady(!0),n},Rt.CreateTiledGround=function(e,t,r){var n=new tt(e,r),i=Fe.CreateTiledGround(t);return i.applyToMesh(n,t.updatable),n},Rt.CreateGroundFromHeightMap=function(e,t,r,n){var i;i=null!=r.width?r.width:10;var s;s=null!=r.height?r.height:10;var o;o=null!=r.subdivisions?r.subdivisions:1;var a;a=null!=r.minHeight?r.minHeight:0;var l;l=null!=r.maxHeight?r.maxHeight:10;var h=r.updatable,c=r.onReady,u=new It(e,n);u._subdivisions=o,u._setReady(!1);var f=function(e){r.buffer=e.data,r.bufferWidth=e.width,r.bufferHeight=e.height;var t=Fe.CreateGroundFromHeightMap(r);t.applyToMesh(u,h),u._setReady(!0),null!=c&&c(u)};return Ae.LoadImage(t,f),u},Rt.CreateTube=function(e,t,r){var n,i=t.path;n=null!=t.radius?t.radius:1;var s;s=null!=t.tessellation?t.tessellation:64;var o,a=t.radiusFunction;o=null!=t.cap?t.cap:0;var l,h=t.updatable;l=null!=t.sideOrientation?t.sideOrientation:0;var c=t.instance,u=function(e,t,r,n,i,s,o,a){null==a&&(a=1);var l,h=t.getTangents(),c=t.getNormals(),u=t.getDistances(),f=2*Math.PI,d=f/i,m=function(e,t){return n};l=null!=s?s:m;var _,p=[],v=0,g=new L(0,0,0),x=new L(0,0,0),y=Pt.matrix[0];_=0==o||2==o?0:2;for(var b=0,S=e.length;S>b;){var w=b++;v=l(w,u[w]),p=[],g=c[w];for(var C=0;i>C;){var T=C++;Le.RotationAxisToRef(h[w],d*T,y),x=null!=p[T]?p[T]:new L(0,0,0),L.TransformCoordinatesToRef(g,y,x),function(e){var t;return x.x*=v,x.y*=v,x.z*=v,t=x}(this).addInPlace(e[w]),p[T]=x}r[_]=p,_++}var M=function(t,r){for(var n=[],i=0;t>i;){i++;n.push(e[r])}return n};switch(o){case 0:break;case 1:r.unshift(M(i+1,0));break;case 2:r.push(M(i+1,e.length-1));break;case 3:r.unshift(M(i+1,0)),r.push(M(i+1,e.length-1))}return r};if(null!=c){var f=c.path3D.update(i),d=u(i,f,c.pathArray,n,c.tessellation,a,c.cap);return c=Rt.CreateRibbon(null,{pathArray:d,instance:c},r)}var m=new bt(i),_=[];o=0>o||o>3?0:o;var p=u(i,m,_,n,s,a,o),v=Rt.CreateRibbon(e,{pathArray:p,closeArray:!1,closePath:!0,offset:0,updatable:h,sideOrientation:l},r);return v.pathArray=p,v.path3D=m,v.tessellation=s,v.cap=o,v},Rt.CreatePolyhedron=function(e,t,r){var n=new tt(e,r),i=Fe.CreatePolyhedron(t);return i.applyToMesh(n,t.updatable),n},Rt.CreateDecal=function(e,t,r){var n;n=null!=r.position?r.position:new L(0,0,0);var i,s=r.normal;i=null!=r.size?r.size:new L(1,1,1);var o=r.angle;if(Rt.CreateDecal_indices=t.getIndices(),Rt.CreateDecal_positions=t.getVerticesData("position"),Rt.CreateDecal_normals=t.getVerticesData("normal"),null==s){var a=t._scene.activeCamera;Rt.CreateDecal_cameraWorldTarget=L.TransformCoordinates(Rt.CreateDecal_target,a.getWorldMatrix()),s=a.get_globalPosition().subtract(Rt.CreateDecal_cameraWorldTarget)}var l=-Math.atan2(s.z,s.x)-Math.PI/2,h=Math.sqrt(s.x*s.x+s.z*s.z),c=Math.atan2(s.y,h);Rt.decalWorldMatrix=Le.RotationYawPitchRoll(l,c,o).multiply(Le.Translation(n.x,n.y,n.z)),Rt.inverseDecalWorldMatrix=Le.Invert(Rt.decalWorldMatrix),Rt.CreateDecal_meshWorldMatrix=t.getWorldMatrix(),Rt.CreateDecal_transformMatrix=Rt.CreateDecal_meshWorldMatrix.multiply(Rt.inverseDecalWorldMatrix),Rt.CreateDecal_vertexData.indices=[],Rt.CreateDecal_vertexData.positions=[],Rt.CreateDecal_vertexData.normals=[],Rt.CreateDecal_vertexData.uvs=[];for(var u=0,f=function(e){var t=Rt.CreateDecal_indices[e],r=new wt;return r.position=new L(Rt.CreateDecal_positions[3*t],Rt.CreateDecal_positions[3*t+1],Rt.CreateDecal_positions[3*t+2]),r.position=L.TransformCoordinates(r.position,Rt.CreateDecal_transformMatrix),r.normal=new L(Rt.CreateDecal_normals[3*t],Rt.CreateDecal_normals[3*t+1],Rt.CreateDecal_normals[3*t+2]),r},d=function(e,t){if(0==e.length)return e;for(var r=.5*Math.abs(i.x*t.x+i.y*t.y+i.z*t.z),n=function(e,n){var i=L.GetClipFactor(e.position,n.position,t,r);return new wt(L.Lerp(e.position,n.position,i),L.Lerp(e.normal,n.normal,i))},s=[],o=!1,a=!1,l=!1,h=0,c=null,u=null,f=null,d=null,m=0,_=0,p=0,v=0;v<e.length;){switch(m=L.Dot(e[v].position,t)-r,_=L.Dot(e[v+1].position,t)-r,p=L.Dot(e[v+2].position,t)-r,o=m>0,a=_>0,l=p>0,h=(o?1:0)+(a?1:0)+(l?1:0)){case 0:s.push(e[v]),s.push(e[v+1]),s.push(e[v+2]);break;case 1:o&&(c=e[v+1],u=e[v+2],f=n(e[v],c),d=n(e[v],u)),a?(c=e[v],u=e[v+2],f=n(e[v+1],c),d=n(e[v+1],u),s.push(f),s.push(u.clone()),s.push(c.clone()),s.push(u.clone()),s.push(f.clone()),s.push(d)):(l&&(c=e[v],u=e[v+1],f=n(e[v+2],c),d=n(e[v+2],u)),s.push(c.clone()),s.push(u.clone()),s.push(f),s.push(d),s.push(f.clone()),s.push(u.clone()));break;case 2:o||(c=e[v].clone(),u=n(c,e[v+1]),f=n(c,e[v+2]),s.push(c),s.push(u),s.push(f)),a||(c=e[v+1].clone(),u=n(c,e[v+2]),f=n(c,e[v]),s.push(c),s.push(u),s.push(f)),l||(c=e[v+2].clone(),u=n(c,e[v]),f=n(c,e[v+1]),s.push(c),s.push(u),s.push(f));break;case 3:}v+=3}return s},m=[],_=0;_<Rt.CreateDecal_indices.length;)if(m=[],m.push(f(_)),m.push(f(_+1)),m.push(f(_+2)),m=d(m,new L(1,0,0)),m=d(m,new L(-1,0,0)),m=d(m,new L(0,1,0)),m=d(m,new L(0,-1,0)),m=d(m,new L(0,0,1)),m=d(m,new L(0,0,-1)),0!=m.length){for(var p=(Le.RotationYawPitchRoll(l,c,o),null),v=0,g=m.length;g>v;){var x=v++;p=m[x],Rt.CreateDecal_vertexData.indices.push(u),p.position.toArray(Rt.CreateDecal_vertexData.positions,3*u),p.normal.toArray(Rt.CreateDecal_vertexData.normals,3*u),Rt.CreateDecal_vertexData.uvs.push(.5+p.position.x/i.x),Rt.CreateDecal_vertexData.uvs.push(.5+p.position.y/i.y),u++}_+=3}else _+=3;var y=new tt(e,t._scene);return Rt.CreateDecal_vertexData.applyToMesh(y),y.position=new L(n.x,n.y,n.z),y.rotation=new L(c,l,o),y},Rt._ExtrudeShapeGeneric=function(e,t,r,n,i,s,o,a,l,h,c,u,f,d,m){var _=function(e,t,r,n,i,s,o,a,l,h){null==h&&(h=!1);var c,u=r.getTangents(),f=r.getNormals(),d=r.getBinormals(),m=r.getDistances(),_=0,p=function(e,t){return i},v=function(e,t){return s};c=null!=a?a:v;var g;g=null!=o?o:p;var x;x=0==l||2==l?0:2;for(var y=Pt.matrix[0],b=0,S=t.length;S>b;){for(var w=b++,C=[],T=c(w,m[w]),M=g(w,m[w]),P=0,E=e.length;E>P;){var I=P++;Le.RotationAxisToRef(u[w],_,y);var D,A=u[w].scale(e[I].z).add(f[w].scale(e[I].x)).add(d[w].scale(e[I].y));D=null!=C[I]?C[I]:new L(0,0,0),L.TransformCoordinatesToRef(A,y,D),function(e){var t;return D.x*=M,D.y*=M,D.z*=M,t=D}(this).addInPlace(t[w]),C[I]=D}n[x]=C,_+=T,x++}var R=function(e){for(var t=[],r=new L(0,0,0),n=0,i=e.length;i>n;){var s=n++;r.addInPlace(e[s])}r.scaleInPlace(1/e.length);for(var o=0,a=e.length;a>o;){o++;t.push(r)}return t};switch(l){case 0:break;case 1:n[0]=R(n[2]),n[1]=n[2].slice(0);break;case 2:n[x]=n[x-1],n[x+1]=R(n[x-1]);break;case 3:n[0]=R(n[2]),n[1]=n[2].slice(0),n[x]=n[x-1],n[x+1]=R(n[x-1])}return n};if(null!=m){var p=(m.path3D.update(r),_(t,r,m.path3D,m.pathArray,n,i,s,o,m.cap,c));return m=tt.CreateRibbon(null,p,!1,!1,0,null,!1,0,m)}var v=new bt(r),g=[];h=0>h||h>3?0:h;var x=_(t,r,v,g,n,i,s,o,h,c),y=tt.CreateRibbon(e,x,a,l,0,u,f,d);return y.pathArray=x,y.path3D=v,y.cap=h,y};var Lt=t.BABYLON.MeshLODLevel=function(e,t){this.distance=e,this.mesh=t};s["com.babylonhx.mesh.MeshLODLevel"]=Lt,Lt.__name__=["com","babylonhx","mesh","MeshLODLevel"],Lt.prototype={__class__:Lt};var Ft=t.BABYLON.VertexBuffer=function(e,t,r,n,i,s){if(null==i&&(i=!1),this._engine=e,this._updatable=n,this._data=t,i||this.create(),this._kind=r,null!=s)return void(this._strideSize=s);switch(r){case"position":this._strideSize=3;break;case"normal":this._strideSize=3;break;case"uv":case"uv2":case"uv3":case"uv4":case"uv5":case"uv6":this._strideSize=2;break;case"color":this._strideSize=4;break;case"matricesIndices":case"matricesIndicesExtra":this._strideSize=4;break;case"matricesWeights":case"matricesWeightsExtra":this._strideSize=4}};s["com.babylonhx.mesh.VertexBuffer"]=Ft,Ft.__name__=["com","babylonhx","mesh","VertexBuffer"],Ft.prototype={isUpdatable:function(){return this._updatable},getData:function(){return this._data},getBuffer:function(){return this._buffer},getStrideSize:function(){return this._strideSize},create:function(e){(null!=e||null==this._buffer)&&(e=null!=e?e:this._data,null==this._buffer&&(this._updatable?this._buffer=this._engine.createDynamicVertexBuffer(4*e.length):this._buffer=this._engine.createVertexBuffer(e)),this._updatable&&(xr.context.bindBuffer(34962,this._buffer.buffer),e instanceof Array&&null==e.__enum__?xr.bufferSubData(34962,0,new Float32Array(e)):xr.bufferSubData(34962,0,e),xr.context.bindBuffer(34962,null),this._engine._cachedVertexBuffers=null,this._data=e))},update:function(e){this.create(e)},updateDirectly:function(e,t){null!=this._buffer&&this._updatable&&(xr.context.bindBuffer(34962,this._buffer.buffer),e instanceof Array&&null==e.__enum__?xr.bufferSubData(34962,t,new Float32Array(e)):xr.bufferSubData(34962,t,e),xr.context.bindBuffer(34962,null),this._engine._cachedVertexBuffers=null,this._data=null)},dispose:function(){null!=this._buffer&&this._engine._releaseBuffer(this._buffer)&&(this._buffer=null)},__class__:Ft};var Ot=t.BABYLON.WebGLBuffer=function(e){this.is32Bits=!1,this.capacity=0,this.buffer=e,this.references=1};s["com.babylonhx.mesh.WebGLBuffer"]=Ot,Ot.__name__=["com","babylonhx","mesh","WebGLBuffer"],Ot.prototype={__class__:Ot};var Nt=t.BABYLON._InstancesBatch=function(){this.renderSelf=[],this.visibleInstances=[],this.mustReturn=!1,this.mustReturn=!1,this.visibleInstances=[],this.renderSelf=[]};s["com.babylonhx.mesh._InstancesBatch"]=Nt,Nt.__name__=["com","babylonhx","mesh","_InstancesBatch"],Nt.prototype={__class__:Nt};var Bt=t.BABYLON._VisibleInstances=function(e,t){this.map=new Mr,this.defaultRenderId=e,this.selfDefaultRenderId=t};s["com.babylonhx.mesh._VisibleInstances"]=Bt,Bt.__name__=["com","babylonhx","mesh","_VisibleInstances"],Bt.prototype={__class__:Bt};var kt=t.BABYLON.DecimationTriangle=function(e){this.error=[],this.deleted=!1,this.isDirty=!1,this.borderFactor=0,this.vertices=e,this.deletePending=!1};s["com.babylonhx.mesh.simplification.DecimationTriangle"]=kt,kt.__name__=["com","babylonhx","mesh","simplification","DecimationTriangle"],kt.prototype={__class__:kt};var Vt=t.BABYLON.DecimationVertex=function(e,t){this.id=t,this.position=e,this.isBorder=!0,this.q=new Gt,this.triangleCount=0,this.triangleStart=0,this.originalOffsets=[]};s["com.babylonhx.mesh.simplification.DecimationVertex"]=Vt,Vt.__name__=["com","babylonhx","mesh","simplification","DecimationVertex"],Vt.prototype={updatePosition:function(e){this.position.copyFrom(e)},__class__:Vt};var Ut=t.BABYLON.ISimplificationSettings=function(){};s["com.babylonhx.mesh.simplification.ISimplificationSettings"]=Ut,Ut.__name__=["com","babylonhx","mesh","simplification","ISimplificationSettings"],Ut.prototype={__class__:Ut};var zt=t.BABYLON.ISimplifier=function(){};s["com.babylonhx.mesh.simplification.ISimplifier"]=zt,zt.__name__=["com","babylonhx","mesh","simplification","ISimplifier"],zt.prototype={__class__:zt};var Wt=t.BABYLON.QuadraticErrorSimplification=function(e){this.syncIterations=5e3,this.initialised=!1,this.aggressiveness=7,this.decimationIterations=100,this.boundingBoxEpsilon=.001};s["com.babylonhx.mesh.simplification.QuadraticErrorSimplification"]=Wt,Wt.__name__=["com","babylonhx","mesh","simplification","QuadraticErrorSimplification"],Wt.__interfaces__=[zt],Wt.prototype={simplify:function(e,t,r){var n=this;this.initDecimatedMesh(),_r.Run(this._mesh.subMeshes.length,function(t){n.initWithMesh(t.index,function(){n.runDecimation(e,t.index,function(){t.executeNext()})})},function(){Ae.delay(function(){t(n._reconstructedMesh)},0)})},isTriangleOnBoundingBox:function(t){for(var r=0,n=0,i=t.vertices;n<i.length;){var s=i[n];++n;var o=0,a=s.position,l=this._mesh.getBoundingInfo().boundingBox;(l.maximum.x-a.x<this.boundingBoxEpsilon||a.x-l.minimum.x>this.boundingBoxEpsilon)&&++o,(l.maximum.y==a.y||a.y==l.minimum.y)&&++o,(l.maximum.z==a.z||a.z==l.minimum.z)&&++o,o>1&&++r}return r>1&&(e.log(t),e.log(r)),r>1},runDecimation:function(e,t,r){var n=this,s=this.triangles.length*e.quality|0,o=0,a=this.triangles.length,h=function(e,t){Ae.delay(function(){e%5==0&&n.updateMesh(0==e);for(var r=0,i=n.triangles.length;i>r;){var h=r++;n.triangles[h].isDirty=!1}var c=1e-9*Math.pow(e+3,n.aggressiveness),u=function(e){var t=(n.triangles.length/2+e)%n.triangles.length|0,r=n.triangles[t];if(null!=r&&!(r.error[3]>c||r.deleted||r.isDirty))for(var i=0;3>i;){var s=i++;if(r.error[s]<c){var a=[],h=[],u=r.vertices[s],f=r.vertices[(s+1)%3];if(u.isBorder!=f.isBorder)continue;var d=new L(0,0,0),m=new L(0,0,0),_=new Mt(0,0),p=new Oe(0,0,0,1);n.calculateError(u,f,d,m,_,p);var v=[];if(n.isFlipped(u,f,d,a,r.borderFactor,v))continue;if(n.isFlipped(f,u,d,h,r.borderFactor,v))continue;if(l.indexOf(a,!0,0)<0||l.indexOf(h,!0,0)<0)continue;for(var g=[],x=0;x<v.length;){var y=v[x];++x,-1==l.indexOf(g,y,0)&&(y.deletePending=!0,g.push(y))}if(g.length%2!=0)continue;u.q=f.q.add(u.q),u.updatePosition(d);var b=n.references.length;o=n.updateTriangles(u,u,a,o),o=n.updateTriangles(u,f,h,o);var S=n.references.length-b;if(S<=u.triangleCount){if(S>0)for(var w=0;S>w;){var C=w++;n.references[u.triangleStart+C]=n.references[b+C]}}else u.triangleStart=b;u.triangleCount=S;break}}};_r.SyncAsyncForLoop(n.triangles.length,n.syncIterations,u,t,function(){return s>=a-o})},0)};_r.Run(this.decimationIterations,function(e){s>=a-o?e.breakLoop():h(e.index,i(e,e.executeNext))},function(){Ae.delay(function(){n.reconstructMesh(t),r()},0)})},initWithMesh:function(e,t,r){null==r&&(r=!1);var n=this;this.vertices=[],this.triangles=[];var i=this._mesh.getVerticesData("position"),s=this._mesh.getIndices(),o=this._mesh.subMeshes[e],a=function(e){if(r)for(var t=0,i=n.vertices.length;i>t;){var s=t++;if(n.vertices[s].position.equals(e))return n.vertices[s]}return null},l=[],h=function(e){var t=e+o.verticesStart,r=L.FromArray(i,3*t),s=a(r);null==s&&(s=new Vt(r,n.vertices.length)),s.originalOffsets.push(t),s.id==n.vertices.length&&n.vertices.push(s),l.push(s.id)},c=o.verticesCount;_r.SyncAsyncForLoop(c,this.syncIterations/4|0,h,function(){var e=function(e){var t=o.indexStart/3+e,r=3*t|0,i=s[r],a=s[r+1],h=s[r+2],c=n.vertices[l[i-o.verticesStart]],u=n.vertices[l[a-o.verticesStart]],f=n.vertices[l[h-o.verticesStart]],d=new kt([c,u,f]);d.originalOffset=r,n.triangles.push(d)};_r.SyncAsyncForLoop(s.length/3|0,n.syncIterations,e,function(){n.init(t)})})},init:function(e){var t=this,r=function(e){var r=t.triangles[e];r.normal=L.Cross(r.vertices[1].position.subtract(r.vertices[0].position),r.vertices[2].position.subtract(r.vertices[0].position)).normalize();for(var n=0;3>n;){var i=n++;r.vertices[i].q.addArrayInPlace(Gt.DataFromNumbers(r.normal.x,r.normal.y,r.normal.z,-L.Dot(r.normal,r.vertices[0].position)))}};_r.SyncAsyncForLoop(this.triangles.length,this.syncIterations,r,function(){var r=function(e){for(var r=t.triangles[e],n=0;3>n;){var i=n++;r.error[i]=t.calculateError(r.vertices[i],r.vertices[(i+1)%3])}r.error[3]=Math.min(r.error[0],r.error[1]),r.error[3]=Math.min(r.error[3],r.error[2])};_r.SyncAsyncForLoop(t.triangles.length,t.syncIterations,r,function(){t.initialised=!0,e()})})},reconstructMesh:function(e){for(var t=[],r=0,n=this.vertices.length;n>r;){var i=r++;this.vertices[i].triangleCount=0}for(var s=null,o=0,a=this.triangles.length;a>o;){var h=o++;if(!this.triangles[h].deleted){s=this.triangles[h];for(var c=0;3>c;){var u=c++;s.vertices[u].triangleCount=1}t.push(s)}}var f=this._reconstructedMesh.getVerticesData("position");null==f&&(f=[]);var d=this._reconstructedMesh.getVerticesData("normal");null==d&&(d=[]);var m=this._reconstructedMesh.getVerticesData("uv");null==m&&(m=[]);var _=this._reconstructedMesh.getVerticesData("color");null==_&&(_=[]);for(var p=this._mesh.getVerticesData("normal"),v=this._mesh.getVerticesData("uv"),g=this._mesh.getVerticesData("color"),x=0,y=0,b=this.vertices.length;b>y;){var S=y++,w=this.vertices[S];if(w.id=x,w.triangleCount>0)for(var C=0,T=w.originalOffsets;C<T.length;){var M=T[C];++C,f.push(w.position.x),f.push(w.position.y),f.push(w.position.z),d.push(p[3*M]),d.push(p[3*M+1]),d.push(p[3*M+2]),null!=v&&v.length>0?(m.push(v[2*M]),m.push(v[2*M+1])):null!=g&&g.length>0&&(_.push(g[4*M]),_.push(g[4*M+1]),_.push(g[4*M+2]),_.push(g[4*M+3])),++x}}var P=this._reconstructedMesh.getTotalIndices(),E=this._reconstructedMesh.getTotalVertices(),I=this._reconstructedMesh.subMeshes;this._reconstructedMesh.subMeshes=[];for(var D=this._reconstructedMesh.getIndices(),A=this._mesh.getIndices(),R=0,L=t.length;L>R;)for(var F=R++,O=t[F],N=0,B=[0,1,2];N<B.length;){var k=B[N];++N;var V=A[O.originalOffset+k],U=l.indexOf(O.vertices[k].originalOffsets,V,0);0>U&&(U=0),D.push(O.vertices[k].id+U+E)}this._reconstructedMesh.setIndices(D),this._reconstructedMesh.setVerticesData("position",f),this._reconstructedMesh.setVerticesData("normal",d),m.length>0&&this._reconstructedMesh.setVerticesData("uv",m),_.length>0&&this._reconstructedMesh.setVerticesData("color",_);var z=this._mesh.subMeshes[e];if(e>0){this._reconstructedMesh.subMeshes=[];for(var W=0;W<I.length;){var G=I[W];++W,new rt(G.materialIndex,G.verticesStart,G.verticesCount,G.indexStart,G.indexCount,G._mesh)}new rt(z.materialIndex,E,x,P,3*t.length,this._reconstructedMesh)}},initDecimatedMesh:function(){this._reconstructedMesh=new tt(this._mesh.name+"Decimated",this._mesh._scene),this._reconstructedMesh.set_material(this._mesh.get_material()),this._reconstructedMesh.parent=this._mesh.parent,this._reconstructedMesh.isVisible=!1,this._reconstructedMesh.renderingGroupId=this._mesh.renderingGroupId},isFlipped:function(e,t,r,n,i,s){for(var o=0,a=e.triangleCount;a>o;){var l=o++,h=this.triangles[this.references[e.triangleStart+l].triangleId];if(!h.deleted){var c=this.references[e.triangleStart+l].vertexId,u=h.vertices[(c+1)%3],f=h.vertices[(c+2)%3];if(u!=t&&f!=t){var d=u.position.subtract(r);d=d.normalize();var m=f.position.subtract(r);if(m=m.normalize(),Math.abs(d.x*m.x+d.y*m.y+d.z*m.z)>.999)return!0;var _=L.Cross(d,m).normalize();if(n[l]=!1,L.Dot(_,h.normal)<.2)return!0}else n[l]=!0,s.push(h)}}return!1},updateTriangles:function(e,t,r,n){for(var i=n,s=0,o=t.triangleCount;o>s;){var a=s++,l=this.references[t.triangleStart+a],h=this.triangles[l.triangleId];h.deleted||(r[a]&&h.deletePending?(h.deleted=!0,i++):(h.vertices[l.vertexId]=e,h.isDirty=!0,h.error[0]=this.calculateError(h.vertices[0],h.vertices[1])+h.borderFactor/2,h.error[1]=this.calculateError(h.vertices[1],h.vertices[2])+h.borderFactor/2,h.error[2]=this.calculateError(h.vertices[2],h.vertices[0])+h.borderFactor/2,h.error[3]=Math.min(h.error[0],h.error[1]),h.error[3]=Math.min(h.error[3],h.error[2]),this.references.push(l)))}return i},identifyBorder:function(){for(var e=0,t=this.vertices.length;t>e;){for(var r=e++,n=[],i=[],s=this.vertices[r],o=0,a=s.triangleCount;a>o;)for(var l=o++,h=this.triangles[this.references[s.triangleStart+l].triangleId],c=0;3>c;){for(var u=c++,f=0,d=h.vertices[u];f<n.length&&i[f]!=d.id;)++f;f==n.length?(n.push(1),i.push(d.id)):n[f]++}for(var m=0,_=n.length;_>m;){var p=m++;1==n[p]?this.vertices[i[p]].isBorder=!0:this.vertices[i[p]].isBorder=!1}}},updateMesh:function(e){if(null==e&&(e=!1),!e){for(var t=[],r=0,n=this.triangles.length;n>r;){var i=r++;this.triangles[i].deleted||t.push(this.triangles[i])}this.triangles=t}for(var s=0,o=this.vertices.length;o>s;){var a=s++;this.vertices[a].triangleCount=0,this.vertices[a].triangleStart=0}for(var l=null,h=null,c=0,u=this.triangles.length;u>c;){var f=c++;l=this.triangles[f];for(var d=0;3>d;){var m=d++;h=l.vertices[m],h.triangleCount++}}for(var _=0,p=0,v=this.vertices.length;v>p;){var g=p++;this.vertices[g].triangleStart=_,_+=this.vertices[g].triangleCount,this.vertices[g].triangleCount=0}for(var x=[],y=0,b=this.triangles.length;b>y;){var S=y++;l=this.triangles[S];for(var w=0;3>w;){var C=w++;h=l.vertices[C],x[h.triangleStart+h.triangleCount]=new Ht(C,S),h.triangleCount++}}this.references=x,e&&this.identifyBorder()},vertexError:function(e,t){var r=t.x,n=t.y,i=t.z;return e.data[0]*r*r+2*e.data[1]*r*n+2*e.data[2]*r*i+2*e.data[3]*r+e.data[4]*n*n+2*e.data[5]*n*i+2*e.data[6]*n+e.data[7]*i*i+2*e.data[8]*i+e.data[9]},calculateError:function(e,t,r,n,i,s){var o=e.q.add(t.q),a=e.isBorder&&t.isBorder,l=0,h=o.det(0,1,2,1,4,5,2,5,7);if(0==h||a){var c=e.position.add(t.position).divide(new L(2,2,2)),u=this.vertexError(o,e.position),f=this.vertexError(o,t.position),d=this.vertexError(o,c);l=Math.min(u,f),l=Math.min(l,d),l==u?null!=r&&r.copyFrom(e.position):l==f?null!=r&&r.copyFrom(t.position):null!=r&&(r.x=c.x,r.y=c.y,r.z=c.z)}else null==r&&(r=new L(0,0,0)),r.x=-1/h*o.det(1,2,3,4,5,6,5,7,8),r.y=1/h*o.det(0,2,3,1,5,6,2,7,8),r.z=-1/h*o.det(0,1,3,1,4,6,2,5,8),l=this.vertexError(o,r);return l},__class__:Wt};var Gt=t.BABYLON.QuadraticMatrix=function(e){if(this.data=[],null!=e)for(var t=0;10>t;){var r=t++;r<=e.length?this.data[r]=e[r]:this.data[r]=0}};s["com.babylonhx.mesh.simplification.QuadraticMatrix"]=Gt,Gt.__name__=["com","babylonhx","mesh","simplification","QuadraticMatrix"],Gt.FromData=function(e,t,r,n){return new Gt(Gt.DataFromNumbers(e,t,r,n))},Gt.DataFromNumbers=function(e,t,r,n){return[e*e,e*t,e*r,e*n,t*t,t*r,t*n,r*r,r*n,n*n]},Gt.prototype={det:function Kr(e,t,r,n,i,s,o,a,l){var Kr=this.data[e]*this.data[i]*this.data[l]+this.data[r]*this.data[n]*this.data[a]+this.data[t]*this.data[s]*this.data[o]-this.data[r]*this.data[i]*this.data[o]-this.data[e]*this.data[s]*this.data[a]-this.data[t]*this.data[n]*this.data[l];return Kr},addInPlace:function(e){for(var t=0;10>t;){var r=t++;this.data[r]+=e.data[r]}},addArrayInPlace:function(e){for(var t=0;10>t;){var r=t++;this.data[r]+=e[r]}},add:function(e){for(var t=new Gt,r=0;10>r;){var n=r++;t.data[n]=this.data[n]+e.data[n]}return t},__class__:Gt};var Ht=t.BABYLON.Reference=function(e,t){this.vertexId=e,this.triangleId=t};s["com.babylonhx.mesh.simplification.Reference"]=Ht,Ht.__name__=["com","babylonhx","mesh","simplification","Reference"],Ht.prototype={__class__:Ht};var Yt=t.BABYLON.SimplificationQueue=function(){this.running=!1,this._simplificationArray=[]};s["com.babylonhx.mesh.simplification.SimplificationQueue"]=Yt,Yt.__name__=["com","babylonhx","mesh","simplification","SimplificationQueue"],Yt.prototype={addTask:function(e){this._simplificationArray.push(e)},executeNext:function(){var e=this._simplificationArray.pop();null!=e?(this.running=!0,this.runSimplification(e)):this.running=!1},runSimplification:function(e){var t=this;if(e.parallelProcessing)for(var r=0,n=e.settings;r<n.length;){var i=[n[r]];++r;var s=this.getSimplifier(e);s.simplify(i[0],function(r){return function(n){e.mesh.addLODLevel(r[0].distance,n),n.isVisible=!0,r[0].quality==e.settings[e.settings.length-1].quality&&null!=e.successCallback&&e.successCallback(),t.executeNext()}}(i))}else{var o=this.getSimplifier(e),a=function(t,r){o.simplify(t,function(n){e.mesh.addLODLevel(t.distance,n),n.isVisible=!0,r()})};_r.Run(e.settings.length,function(t){a(e.settings[t.index],function(){t.executeNext()})},function(){null!=e.successCallback&&e.successCallback(),t.executeNext()})}},getSimplifier:function(e){var t=e.simplificationType;switch(t){
case 0:return new Wt(e.mesh);default:return new Wt(e.mesh)}return null},__class__:Yt};var Xt=t.BABYLON.SimplificationSettings=function(e,t,r){null==r&&(r=!1),this.quality=e,this.distance=t,this.optimizeMesh=r};s["com.babylonhx.mesh.simplification.SimplificationSettings"]=Xt,Xt.__name__=["com","babylonhx","mesh","simplification","SimplificationSettings"],Xt.__interfaces__=[Ut],Xt.prototype={__class__:Xt};var jt=t.BABYLON.SimplificationTask=function(e,t,r,n,i){null==i&&(i=!1),this.settings=e,this.simplificationType=t,this.mesh=r,this.successCallback=n,this.parallelProcessing=i};s["com.babylonhx.mesh.simplification.SimplificationTask"]=jt,jt.__name__=["com","babylonhx","mesh","simplification","SimplificationTask"],jt.prototype={__class__:jt};var qt=t.BABYLON.Particle=function(){this.angularSpeed=0,this.angle=0,this.size=0,this.age=0,this.lifeTime=1,this.colorStep=new Oe(0,0,0,0),this.color=new Oe(0,0,0,0),this.direction=new L(0,0,0),this.position=new L(0,0,0)};s["com.babylonhx.particles.Particle"]=qt,qt.__name__=["com","babylonhx","particles","Particle"],qt.prototype={__class__:qt};var Kt=t.BABYLON.IPhysicsEnginePlugin=function(){};s["com.babylonhx.physics.IPhysicsEnginePlugin"]=Kt,Kt.__name__=["com","babylonhx","physics","IPhysicsEnginePlugin"],Kt.prototype={__class__:Kt};var Zt=t.BABYLON.PhysicsCompoundBodyPart=function(){};s["com.babylonhx.physics.PhysicsCompoundBodyPart"]=Zt,Zt.__name__=["com","babylonhx","physics","PhysicsCompoundBodyPart"],Zt.prototype={__class__:Zt};var Qt=t.BABYLON.PhysicsEngine=function(e){this._currentPlugin=e};s["com.babylonhx.physics.PhysicsEngine"]=Qt,Qt.__name__=["com","babylonhx","physics","PhysicsEngine"],Qt.prototype={_initialize:function(e){this._currentPlugin.initialize(),this._setGravity(e)},_runOneStep:function(e){e>.1?e=.1:0>=e&&(e=.016666666666666666),this._currentPlugin.runOneStep(e)},_setGravity:function(e){null!=e?this.gravity=e:this.gravity=new L(0,-9.82,0),this._currentPlugin.setGravity(this.gravity)},_registerMesh:function(e,t,r){return this._currentPlugin.registerMesh(e,t,r)},_registerMeshesAsCompound:function(e,t){return this._currentPlugin.registerMeshesAsCompound(e,t)},_unregisterMesh:function(e){this._currentPlugin.unregisterMesh(e)},_applyImpulse:function(e,t,r){this._currentPlugin.applyImpulse(e,t,r)},_createLink:function(e,t,r,n,i){return this._currentPlugin.createLink(e,t,r,n,i)},_updateBodyPosition:function(e){this._currentPlugin.updateBodyPosition(e)},dispose:function(){this._currentPlugin.dispose()},isSupported:function(){return null!=this._currentPlugin?this._currentPlugin.isSupported():!1},__class__:Qt};var $t=t.BABYLON.DisplayPassPostProcess=function(e,t,r,n,i,s){null==s&&(s=!1),st.call(this,e,"displayPass",["passSampler"],["passSampler"],t,r,n,i,s)};s["com.babylonhx.postprocess.DisplayPassPostProcess"]=$t,$t.__name__=["com","babylonhx","postprocess","DisplayPassPostProcess"],$t.__super__=st,$t.prototype=n(st.prototype,{__class__:$t});var Jt=t.BABYLON.PostProcessManager=function(e){this._vertexStrideSize=8,this._vertexDeclaration=[2],this._scene=e};s["com.babylonhx.postprocess.PostProcessManager"]=Jt,Jt.__name__=["com","babylonhx","postprocess","PostProcessManager"],Jt.prototype={_prepareBuffers:function(){if(null==this._vertexBuffer){var e=[1,1,-1,1,-1,-1,1,-1];this._vertexBuffer=this._scene._engine.createVertexBuffer(e);var t=[0,1,2,0,2,3];this._indexBuffer=this._scene._engine.createIndexBuffer(t)}},_prepareFrame:function(e){var t=this._scene.activeCamera._postProcesses,r=this._scene.activeCamera._postProcessesTakenIndices;return 0!=r.length&&this._scene.postProcessesEnabled?(t[this._scene.activeCamera._postProcessesTakenIndices[0]].activate(this._scene.activeCamera,e),!0):!1},directRender:function(e,t){for(var r=this._scene._engine,n=0,i=e.length;i>n;){var s=n++;s<e.length-1?e[s+1].activate(this._scene.activeCamera,t):null!=t?r.bindFramebuffer(t):(r._currentRenderTarget=null,xr.context.bindFramebuffer(36160,null),r.setViewport(r._cachedViewport,null,null),r.wipeCaches());var o=e[s],a=o.apply();null!=a&&(null!=o.onBeforeRender&&o.onBeforeRender(a),this._prepareBuffers(),r.bindBuffers(this._vertexBuffer,this._indexBuffer,this._vertexDeclaration,this._vertexStrideSize,a),r.draw(!0,0,6),null!=o.onAfterRender&&o.onAfterRender(a))}r._depthCullingState.set_depthTest(!0),r._depthCullingState.set_depthMask(!0)},_finalizeFrame:function(e,t,r,n){null==r&&(r=0),null==e&&(e=!1),null==n&&(n=this._scene.activeCamera._postProcesses);var i=this._scene.activeCamera._postProcessesTakenIndices;if(0!=i.length&&this._scene.postProcessesEnabled){for(var s=this._scene._engine,o=0,a=i.length;a>o;){var l=o++;if(l<i.length-1?n[i[l+1]].activate(this._scene.activeCamera,t):null!=t?s.bindFramebuffer(t,r):(s._currentRenderTarget=null,xr.context.bindFramebuffer(36160,null),s.setViewport(s._cachedViewport,null,null),s.wipeCaches()),e)break;var h=n[i[l]],c=h.apply();null!=c&&(null!=h.onBeforeRender&&h.onBeforeRender(c),this._prepareBuffers(),s.bindBuffers(this._vertexBuffer,this._indexBuffer,this._vertexDeclaration,this._vertexStrideSize,c),s.draw(!0,0,6),null!=h.onAfterRender&&h.onAfterRender(c))}s._depthCullingState.set_depthTest(!0),s._depthCullingState.set_depthMask(!0)}},dispose:function(){null!=this._vertexBuffer&&(this._scene._engine._releaseBuffer(this._vertexBuffer),this._vertexBuffer=null),null!=this._indexBuffer&&(this._scene._engine._releaseBuffer(this._indexBuffer),this._indexBuffer=null)},__class__:Jt};var er=function(e,t,r,n,i){var s=this;st.call(this,e,"stereoscopicInterlace",["stepSize"],["camASampler"],1,t,i,t._scene._engine,!1,n?"#define IS_STEREOSCOPIC_HORIZ 1":null),this._stepSize=new Mt(1/this.width,1/this.height),this.onSizeChanged=function(){s._stepSize=new Mt(1/s.width,1/s.height)},this.onApply=function(e){e._engine.setTextureFromPostProcess(l.indexOf(e._samplers,"camASampler",0),r),e.setFloat2("stepSize",s._stepSize.x,s._stepSize.y)}};s["com.babylonhx.postprocess.StereoscopicInterlacePostProcess"]=er,er.__name__=["com","babylonhx","postprocess","StereoscopicInterlacePostProcess"],er.__super__=st,er.prototype=n(st.prototype,{__class__:er});var tr=function(e,t,r,n){var i=this;st.call(this,e,"vrDistortionCorrection",["LensCenter","Scale","ScaleIn","HmdWarpParam"],null,n.postProcessScaleFactor,t,2,null,!1),this._isRightEye=r,this._distortionFactors=n.distortionK,this._postProcessScaleFactor=n.postProcessScaleFactor,this._lensCenterOffset=n.lensCenterOffset,this.onSizeChanged=function(){i.aspectRatio=.5*i.width/i.height,i._scaleIn=new Mt(2,2/i.aspectRatio),i._scaleFactor=new Mt(.5*(1/i._postProcessScaleFactor),.5*(1/i._postProcessScaleFactor)*i.aspectRatio),i._lensCenter=new Mt(i._isRightEye?.5-.5*i._lensCenterOffset:.5+.5*i._lensCenterOffset,.5)},this.onApply=function(e){e.setFloat2("LensCenter",i._lensCenter.x,i._lensCenter.y),e.setFloat2("Scale",i._scaleFactor.x,i._scaleFactor.y),e.setFloat2("ScaleIn",i._scaleIn.x,i._scaleIn.y),e.setFloat4("HmdWarpParam",i._distortionFactors[0],i._distortionFactors[1],i._distortionFactors[2],i._distortionFactors[3])}};s["com.babylonhx.postprocess.VRDistortionCorrectionPostProcess"]=tr,tr.__name__=["com","babylonhx","postprocess","VRDistortionCorrectionPostProcess"],tr.__super__=st,tr.prototype=n(st.prototype,{__class__:tr});var rr=t.BABYLON.PostProcessRenderEffect=function(e,t,r,n){null==n&&(n=!0),this._engine=e,this._name=t,this._singleInstance=n,this._getPostProcess=r,this._cameras=new Er,this._indicesForCamera=new Er,this._postProcesses=new Er,this._renderPasses=new Er,this._renderEffectAsPasses=new Er};s["com.babylonhx.postprocess.renderpipeline.PostProcessRenderEffect"]=rr,rr.__name__=["com","babylonhx","postprocess","renderpipeline","PostProcessRenderEffect"],rr.prototype={get_isSupported:function(){for(var e=this._postProcesses.keys();e.hasNext();){var t=e.next();if(!this._postProcesses.get(t).get_isSupported())return!1}return!0},_update:function(){for(var e=this._renderPasses.keys();e.hasNext();){var t=e.next();this._renderPasses.get(t)._update()}},addPass:function(e){this._renderPasses.set(e._name,e),this._linkParameters()},removePass:function(e){this._renderPasses.set(e._name,null),this._renderPasses.remove(e._name),this._linkParameters()},addRenderEffectAsPass:function(e){this._renderEffectAsPasses.set(e._name,e),this._linkParameters()},getPass:function(e){for(var t=this._renderPasses.keys();t.hasNext();){var r=t.next();if(r==e)return this._renderPasses.get(e)}return null},emptyPasses:function(){this._renderPasses=new Er,this._linkParameters()},_attachCameras:function(e){for(var t="",r=Ae.MakeArray(null!=e?e:this._cameras),n=0;n<r.length;){var i=r[n];++n;var s=i,o=s.name;t=this._singleInstance?"0":o;var a;a=this._postProcesses.exists(t)?this._postProcesses.get(t):this._getPostProcess(),this._postProcesses.set(t,a);var l=s.attachPostProcess(this._postProcesses.get(t));this._indicesForCamera.exists(o)||this._indicesForCamera.set(o,[]),this._indicesForCamera.get(o).push(l),this._cameras.exists(s.name)||this._cameras.set(o,s);for(var h=this._renderPasses.keys();h.hasNext();){var c=h.next();this._renderPasses.get(c)._incRefCount()}}this._linkParameters()},_detachCameras:function(e){for(var t=Ae.MakeArray(null!=e?e:this._cameras),r=0;r<t.length;){var n=t[r];++r;var i=n,s=i.name;i.detachPostProcess(this._postProcesses.get(this._singleInstance?"0":s),this._indicesForCamera.get(s)),this._cameras.remove(s),this._indicesForCamera.remove(s);for(var o=this._renderPasses.keys();o.hasNext();){var a=o.next();this._renderPasses.get(a)._decRefCount()}}},_enable:function(e){for(var t=Ae.MakeArray(null!=e?e:this._cameras),r=0;r<t.length;){var n=t[r];++r;for(var i=n,s=i.name,o=0,a=this._indicesForCamera.get(s).length;a>o;){var l=o++;null==i._postProcesses[this._indicesForCamera.get(s)[l]]&&n.attachPostProcess(this._postProcesses.get(this._singleInstance?"0":s),this._indicesForCamera.get(s)[l])}for(var h=this._renderPasses.keys();h.hasNext();){var c=h.next();this._renderPasses.get(c)._incRefCount()}}},_disable:function(e){for(var t=Ae.MakeArray(null!=e?e:this._cameras),r=0;r<t.length;){var n=t[r];++r;var i=n,s=n.name;i.detachPostProcess(this._postProcesses.get(this._singleInstance?"0":s),this._indicesForCamera.get(s));for(var o=this._renderPasses.keys();o.hasNext();){var a=o.next();this._renderPasses.get(a)._decRefCount()}}},getPostProcess:function(e){return this._singleInstance?this._postProcesses.get("0"):this._postProcesses.get(e.name)},_linkParameters:function(){for(var e=this,t=this._postProcesses.keys();t.hasNext();){var r=t.next();null!=this.applyParameters&&this.applyParameters(this._postProcesses.get(r)),this._postProcesses.get(r).onBeforeRender=function(t){e._linkTextures(t)}}},_linkTextures:function(e){for(var t=this._renderPasses.keys();t.hasNext();){var r=t.next();e.setTexture(r,this._renderPasses.get(r).getRenderTexture())}for(var n=this._renderEffectAsPasses.keys();n.hasNext();){var i=n.next();e.setTextureFromPostProcess(i+"Sampler",this._renderEffectAsPasses.get(i).getPostProcess())}},__class__:rr,__properties__:{get_isSupported:"get_isSupported"}};var nr=t.BABYLON.PostProcessRenderPass=function(e,t,r,n,i,s){this._refCount=0,this._enabled=!0,this._name=t,this._renderTexture=new qe(t,r,e),this.setRenderList(n),this._renderTexture.onBeforeRender=i,this._renderTexture.onAfterRender=s,this._scene=e,this._renderList=n};s["com.babylonhx.postprocess.renderpipeline.PostProcessRenderPass"]=nr,nr.__name__=["com","babylonhx","postprocess","renderpipeline","PostProcessRenderPass"],nr.prototype={_incRefCount:function(){return 0==this._refCount&&this._scene.customRenderTargets.push(this._renderTexture),++this._refCount},_decRefCount:function(){return this._refCount--,this._refCount<=0&&this._scene.customRenderTargets.splice(l.indexOf(this._scene.customRenderTargets,this._renderTexture,0),1),this._refCount},_update:function(){this.setRenderList(this._renderList)},setRenderList:function(e){this._renderTexture.renderList=e},getRenderTexture:function(){return this._renderTexture},__class__:nr};var ir=t.BABYLON.PostProcessRenderPipeline=function(e,t){this._engine=e,this._name=t,this._renderEffects=new Er,this._renderEffectsForIsolatedPass=new Er,this._cameras=new Er};s["com.babylonhx.postprocess.renderpipeline.PostProcessRenderPipeline"]=ir,ir.__name__=["com","babylonhx","postprocess","renderpipeline","PostProcessRenderPipeline"],ir.prototype={get_isSupported:function(){for(var e=this._renderEffects.keys();e.hasNext();){var t=e.next();if(!this._renderEffects.get(t).get_isSupported())return!1}return!0},addEffect:function(e){this._renderEffects.set(e._name,e)},_enableEffect:function(e,t){var r=this._renderEffects.get(e);null!=r&&r._enable(null!=t?t:this._cameras)},_disableEffect:function(e,t){var r=this._renderEffects.get(e);null!=r&&r._disable(Ae.MakeArray(null!=t?t:this._cameras))},_attachCameras:function(e,t){for(var r=Ae.MakeArray(null!=e?e:this._cameras),n=[],i=0,s=r.length;s>i;){var o=i++,a=r[o],l=a.name;this._cameras.exists(l)?t&&n.push(o):this._cameras.set(l,a)}for(var h=0,c=n.length;c>h;){var u=h++;r.splice(n[u],1)}for(var f=this._renderEffects.keys();f.hasNext();){var d=f.next();this._renderEffects.get(d)._attachCameras(r)}},_detachCameras:function(e){for(var t=Ae.MakeArray(null!=e?e:this._cameras),r=this._renderEffects.keys();r.hasNext();){var n=r.next();this._renderEffects.get(n)._detachCameras(t)}for(var i=0;i<t.length;){var s=t[i];++i;var o=s.name;this._cameras.remove(o)}},_enableDisplayOnlyPass:function(e,t){for(var r=this,n=Ae.MakeArray(null!=t?t:this._cameras),i=null,s=this._renderEffects.keys();s.hasNext();){var o=s.next();if(i=this._renderEffects.get(o).getPass(e),null!=i)break}if(null!=i){for(var a=this._renderEffects.keys();a.hasNext();){var l=a.next();this._renderEffects.get(l)._disable(n)}i._name="passSampler";for(var h=0;h<n.length;){var c=n[h];++h;var u,f=c,d=c.name;u=null!=this._renderEffectsForIsolatedPass.get(d)?this._renderEffectsForIsolatedPass.get(d):new rr(this._engine,"passEffect",function(){return new $t("passEffect",1,null,null,r._engine,!0)}),this._renderEffectsForIsolatedPass.set(d,u),this._renderEffectsForIsolatedPass.get(d).emptyPasses(),this._renderEffectsForIsolatedPass.get(d).addPass(i),this._renderEffectsForIsolatedPass.get(d)._attachCameras(f)}}},_disableDisplayOnlyPass:function(e){for(var t=this,r=Ae.MakeArray(null!=e?e:this._cameras),n=0;n<r.length;){var i=r[n];++n;var s,o=i,a=i.name;s=null!=this._renderEffectsForIsolatedPass.get(a)?this._renderEffectsForIsolatedPass.get(a):new rr(this._engine,"passEffect",function(){return new $t("passEffect",1,null,null,t._engine,!0)}),this._renderEffectsForIsolatedPass.set(a,s),this._renderEffectsForIsolatedPass.get(a)._disable(o)}for(var l=this._renderEffects.keys();l.hasNext();){var h=l.next();this._renderEffects.get(h)._enable(r)}},_update:function(){for(var e=this._renderEffects.keys();e.hasNext();){var t=e.next();this._renderEffects.get(t)._update()}for(var r=this._cameras.keys();r.hasNext();){var n=r.next(),i=this._cameras.get(n).name;this._renderEffectsForIsolatedPass.exists(i)&&this._renderEffectsForIsolatedPass.get(i)._update()}},dispose:function(e){null==e&&(e=!1)},__class__:ir,__properties__:{get_isSupported:"get_isSupported"}};var sr=t.BABYLON.PostProcessRenderPipelineManager=function(){this._renderPipelines=new Er};s["com.babylonhx.postprocess.renderpipeline.PostProcessRenderPipelineManager"]=sr,sr.__name__=["com","babylonhx","postprocess","renderpipeline","PostProcessRenderPipelineManager"],sr.prototype={addPipeline:function(e){this._renderPipelines.set(e._name,e)},attachCamerasToRenderPipeline:function(e,t,r){null==r&&(r=!1);var n=this._renderPipelines.get(e);null!=n&&n._attachCameras(t,r)},detachCamerasFromRenderPipeline:function(e,t){var r=this._renderPipelines.get(e);null!=r&&r._detachCameras(t)},enableEffectInPipeline:function(e,t,r){var n=this._renderPipelines.get(e);null!=n&&n._enableEffect(t,r)},disableEffectInPipeline:function(e,t,r){var n=this._renderPipelines.get(e);null!=n&&n._disableEffect(t,r)},enableDisplayOnlyPassInPipeline:function(e,t,r){var n=this._renderPipelines.get(e);null!=n&&n._enableDisplayOnlyPass(t,r)},disableDisplayOnlyPassInPipeline:function(e,t){var r=this._renderPipelines.get(e);null!=r&&r._disableDisplayOnlyPass(t)},update:function(){for(var e=this._renderPipelines.keys();e.hasNext();){var t=e.next(),r=this._renderPipelines.get(t);r.get_isSupported()?r._update():(r.dispose(),this._renderPipelines.remove(t))}},__class__:sr};var or=function(e,t,r,n){null==n&&(n=!0),this.position=new L(0,0,0),this._add=new L(0,0,0),this._target=new L(0,0,0),this._viewMatrix=Le.FromValues(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);var i=this;this._scene=r,this._scene.reflectionProbes.push(this),this._renderTargetTexture=new qe(e,t,r,n,!0,0,!0),this._renderTargetTexture.onBeforeRender=function(e){switch(e){case 0:i._add.copyFromFloats(1,0,0);break;case 1:i._add.copyFromFloats(-1,0,0);break;case 2:i._add.copyFromFloats(0,-1,0);break;case 3:i._add.copyFromFloats(0,1,0);break;case 4:i._add.copyFromFloats(0,0,1);break;case 5:i._add.copyFromFloats(0,0,-1)}null!=i._attachedMesh&&i.position.copyFrom(i._attachedMesh.getAbsolutePosition()),i.position.addToRef(i._add,i._target),Le.LookAtLHToRef(i.position,i._target,new L(0,1,0),i._viewMatrix),r._viewMatrix=i._viewMatrix,r._projectionMatrix=i._projectionMatrix,r._viewMatrix.multiplyToRef(r._projectionMatrix,r._transformMatrix)},this._renderTargetTexture.onAfterUnbind=function(){r.setTransformMatrix(r.activeCamera.getViewMatrix(),r.activeCamera.getProjectionMatrix(!0))},this._projectionMatrix=Le.PerspectiveFovLH(Math.PI/2,1,r.activeCamera.minZ,r.activeCamera.maxZ)};s["com.babylonhx.probes.ReflectionProbe"]=or,or.__name__=["com","babylonhx","probes","ReflectionProbe"],or.prototype={get_refreshRate:function(){return this._renderTargetTexture.get_refreshRate()},set_refreshRate:function(e){return this._renderTargetTexture.set_refreshRate(e),e},getScene:function(){return this._scene},get_cubeTexture:function(){return this._renderTargetTexture},get_renderList:function(){return this._renderTargetTexture.renderList},attachToMesh:function(e){this._attachedMesh=e},dispose:function(){var e=l.indexOf(this._scene.reflectionProbes,this,0);-1!=e&&this._scene.reflectionProbes.splice(e,1),null!=this._renderTargetTexture&&(this._renderTargetTexture.dispose(),this._renderTargetTexture=null)},__class__:or,__properties__:{get_renderList:"get_renderList",get_cubeTexture:"get_cubeTexture",set_refreshRate:"set_refreshRate",get_refreshRate:"get_refreshRate"}};var ar=t.BABYLON.BoundingBoxRenderer=function(e){this.renderList=new pr(32),this.showBackLines=!0,this.backColor=new Ge(.1,.1,.1),this.frontColor=new Ge(1,1,1),this._scene=e};s["com.babylonhx.rendering.BoundingBoxRenderer"]=ar,ar.__name__=["com","babylonhx","rendering","BoundingBoxRenderer"],ar.prototype={_prepareRessources:function(){if(null==this._colorShader){this._colorShader=new dt("colorShader",this._scene,"color",{attributes:["position"],uniforms:["worldViewProjection","color"]});var e=this._scene._engine,t=Fe.CreateBox(1);this._vb=new Ft(e,t.positions,"position",!1),this._ib=e.createIndexBuffer([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,7,1,6,2,5,3,4])}},reset:function(){this.renderList.reset()},render:function(){if(0!=this.renderList.length&&(this._prepareRessources(),this._colorShader.isReady())){var e=this._scene._engine;e._depthCullingState.set_depthMask(!1),this._colorShader._preBind();for(var t=0,r=this.renderList.length;r>t;){var n=t++,i=this.renderList.data[n],s=i.minimum,o=i.maximum,a=new L(o.x-s.x,o.y-s.y,o.z-s.z),l=s.add(new L(.5*a.x,.5*a.y,.5*a.z)),h=Le.Scaling(a.x,a.y,a.z).multiply(Le.Translation(l.x,l.y,l.z)).multiply(i._worldMatrix);e.bindBuffers(this._vb._buffer,this._ib,[3],12,this._colorShader.getEffect()),this.showBackLines&&(e._depthCullingState.set_depthFunc(518),this._scene._cachedMaterial=null,this._colorShader.setColor4("color",this.backColor.toColor4(null)),this._colorShader.bind(h),e.draw(!1,0,24)),e._depthCullingState.set_depthFunc(513),this._scene._cachedMaterial=null,this._colorShader.setColor4("color",this.frontColor.toColor4(null)),this._colorShader.bind(h),e.draw(!1,0,24)}this._colorShader.unbind(),e._depthCullingState.set_depthFunc(515),e._depthCullingState.set_depthMask(!0)}},dispose:function(){null!=this._colorShader&&(this._colorShader.dispose(),this._vb.dispose(),this._scene._engine._releaseBuffer(this._ib))},__class__:ar};var lr=t.BABYLON.DepthRenderer=function(e,t){null==t&&(t=1),this._worldViewProjection=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._transformMatrix=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._projectionMatrix=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),this._viewMatrix=Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);var r=this;this._scene=e;var n=e._engine;this._depthMap=new qe("depthMap",n.getRenderWidth(),this._scene,!1,!0,t),this._depthMap.wrapU=0,this._depthMap.wrapV=0,this._depthMap.set_refreshRate(1),this._depthMap.renderParticles=!1,this._depthMap.renderList=null,this._depthMap.onClear=function(e){e.clear(new Oe(1,1,1,1),!0,!0)};var i=function(e){var t=e._renderingMesh,n=r._scene,i=n._engine;i.setState(e.getMaterial().backFaceCulling,null,null,null);var s=t._getInstancesRenderList(e._id);if(!s.mustReturn){var o=null!=i.getCaps().instancedArrays&&null!=s.visibleInstances[e._id];if(r.isReady(e,o)){i.enableEffect(r._effect),t._bind(e,r._effect,0);var a=e.getMaterial();if(r._effect.setMatrix("viewProjection",n._transformMatrix),r._effect.setFloat("far",n.activeCamera.maxZ),null!=a&&a.needAlphaTesting()){var l=a.getAlphaTestTexture();r._effect.setTexture("diffuseSampler",l),r._effect.setMatrix("diffuseMatrix",l.getTextureMatrix())}t.get_useBones()&&t.computeBonesUsingShaders&&r._effect.setMatrices("mBones",t.get_skeleton().getTransformMatrices()),t._processRendering(e,r._effect,0,s,o,function(e,t){r._effect.setMatrix("world",t)})}}};this._depthMap.customRenderFunction=function(e,t){for(var r=0,n=e.length;n>r;){var s=r++;i(e.data[s])}for(var o=0,a=t.length;a>o;){var l=o++;i(t.data[l])}}};s["com.babylonhx.rendering.DepthRenderer"]=lr,lr.__name__=["com","babylonhx","rendering","DepthRenderer"],lr.prototype={isReady:function(e,t){var r=[],n=["position"],i=e._mesh,s=(i._scene,e.getMaterial());null!=s&&s.needAlphaTesting()&&(r.push("#define ALPHATEST"),i.isVerticesDataPresent("uv")&&(n.push("uv"),r.push("#define UV1")),i.isVerticesDataPresent("uv2")&&(n.push("uv2"),r.push("#define UV2"))),i.get_useBones()&&i.computeBonesUsingShaders?(n.push("matricesIndices"),n.push("matricesWeights"),i.numBoneInfluencers>4&&(n.push("matricesIndicesExtra"),n.push("matricesWeightsExtra")),r.push("#define NUM_BONE_INFLUENCERS "+i.numBoneInfluencers),r.push("#define BonesPerMesh "+(i.get_skeleton().bones.length+1))):r.push("#define NUM_BONE_INFLUENCERS 0"),t&&(r.push("#define INSTANCES"),n.push("world0"),n.push("world1"),n.push("world2"),n.push("world3"));var o=r.join("\n");return this._cachedDefines!=o&&(this._cachedDefines=o,this._effect=this._scene._engine.createEffect("depth",n,["world","mBones","viewProjection","diffuseMatrix","far"],["diffuseSampler"],o)),this._effect._isReady},getDepthMap:function(){return this._depthMap},dispose:function(){this._depthMap.dispose()},__class__:lr};var hr=function(){this.edgesConnectedCount=0,this.edges=[]};s["com.babylonhx.rendering.FaceAdjacencies"]=hr,hr.__name__=["com","babylonhx","rendering","FaceAdjacencies"],hr.prototype={__class__:hr};var cr=function(e,t,r){null==r&&(r=!1),null==t&&(t=.95),this._checkVerticesInsteadOfIndices=!1,this._buffers=new Er,this._linesIndices=[],this._linesNormals=[],this._linesPositions=[],this.edgesWidthScalerForPerspective=50,this.edgesWidthScalerForOrthographic=1e3,this._source=e,this._checkVerticesInsteadOfIndices=r,this._epsilon=t,this._prepareRessources(),this._generateEdgesLines()};s["com.babylonhx.rendering.EdgesRenderer"]=cr,cr.__name__=["com","babylonhx","rendering","EdgesRenderer"],cr.__interfaces__=[g],cr.prototype={_prepareRessources:function(){null==this._lineShader&&(this._lineShader=new dt("lineShader",this._source._scene,"line",{attributes:["position","normal"],uniforms:["worldViewProjection","color","width","aspectRatio"]}),this._lineShader.disableDepthWrite=!0,this._lineShader.backFaceCulling=!1)},dispose:function(){this._vb0.dispose(),this._vb1.dispose(),this._source._scene._engine._releaseBuffer(this._ib),this._lineShader.dispose()},_processEdgeForAdjacencies:function(e,t,r,n,i){return e==r&&t==n||e==n&&t==r?0:e==n&&t==i||e==i&&t==n?1:e==i&&t==r||e==r&&t==i?2:-1},_processEdgeForAdjacenciesWithVertices:function(e,t,r,n,i){return null!=r&&Ae.WithinEpsilon(e.x,r.x,.001)&&Ae.WithinEpsilon(e.y,r.y,.001)&&Ae.WithinEpsilon(e.z,r.z,.001)&&null!=n&&Ae.WithinEpsilon(t.x,n.x,.001)&&Ae.WithinEpsilon(t.y,n.y,.001)&&Ae.WithinEpsilon(t.z,n.z,.001)||null!=n&&Ae.WithinEpsilon(e.x,n.x,.001)&&Ae.WithinEpsilon(e.y,n.y,.001)&&Ae.WithinEpsilon(e.z,n.z,.001)&&null!=r&&Ae.WithinEpsilon(t.x,r.x,.001)&&Ae.WithinEpsilon(t.y,r.y,.001)&&Ae.WithinEpsilon(t.z,r.z,.001)?0:null!=n&&Ae.WithinEpsilon(e.x,n.x,.001)&&Ae.WithinEpsilon(e.y,n.y,.001)&&Ae.WithinEpsilon(e.z,n.z,.001)&&null!=i&&Ae.WithinEpsilon(t.x,i.x,.001)&&Ae.WithinEpsilon(t.y,i.y,.001)&&Ae.WithinEpsilon(t.z,i.z,.001)||null!=i&&Ae.WithinEpsilon(e.x,i.x,.001)&&Ae.WithinEpsilon(e.y,i.y,.001)&&Ae.WithinEpsilon(e.z,i.z,.001)&&null!=n&&Ae.WithinEpsilon(t.x,n.x,.001)&&Ae.WithinEpsilon(t.y,n.y,.001)&&Ae.WithinEpsilon(t.z,n.z,.001)?1:null!=i&&Ae.WithinEpsilon(e.x,i.x,.001)&&Ae.WithinEpsilon(e.y,i.y,.001)&&Ae.WithinEpsilon(e.z,i.z,.001)&&null!=r&&Ae.WithinEpsilon(t.x,r.x,.001)&&Ae.WithinEpsilon(t.y,r.y,.001)&&Ae.WithinEpsilon(t.z,r.z,.001)||null!=r&&Ae.WithinEpsilon(e.x,r.x,.001)&&Ae.WithinEpsilon(e.y,r.y,.001)&&Ae.WithinEpsilon(e.z,r.z,.001)&&null!=i&&Ae.WithinEpsilon(t.x,i.x,.001)&&Ae.WithinEpsilon(t.y,i.y,.001)&&Ae.WithinEpsilon(t.z,i.z,.001)?2:-1},_checkEdge:function(e,t,r,n,i){null==t&&(t=-1);var s=!1;if(-1==t)s=!0;else{var o=L.Dot(r[e],r[t]);s=o<this._epsilon}if(s){var a=this._linesPositions.length/3|0,l=new L(n.x-i.x,n.y-i.y,n.z-i.z);l.normalize(),this._linesPositions.push(n.x),this._linesPositions.push(n.y),this._linesPositions.push(n.z),this._linesPositions.push(n.x),this._linesPositions.push(n.y),this._linesPositions.push(n.z),this._linesPositions.push(i.x),this._linesPositions.push(i.y),this._linesPositions.push(i.z),this._linesPositions.push(i.x),this._linesPositions.push(i.y),this._linesPositions.push(i.z),this._linesNormals.push(i.x),this._linesNormals.push(i.y),this._linesNormals.push(i.z),this._linesNormals.push(-1),this._linesNormals.push(i.x),this._linesNormals.push(i.y),this._linesNormals.push(i.z),this._linesNormals.push(1),this._linesNormals.push(n.x),this._linesNormals.push(n.y),this._linesNormals.push(n.z),this._linesNormals.push(-1),this._linesNormals.push(n.x),this._linesNormals.push(n.y),this._linesNormals.push(n.z),this._linesNormals.push(1),this._linesIndices.push(a),this._linesIndices.push(a+1),this._linesIndices.push(a+2),this._linesIndices.push(a),this._linesIndices.push(a+2),this._linesIndices.push(a+3)}},_generateEdgesLines:function(){for(var e,t=this._source.getVerticesData("position"),r=this._source.getIndices(),n=[],i=[],s=0;s<r.length;){e=new hr;var o=r[s],a=r[s+1],l=r[s+2];e.p0=new L(t[3*o],t[3*o+1],t[3*o+2]),e.p1=new L(t[3*a],t[3*a+1],t[3*a+2]),e.p2=new L(t[3*l],t[3*l+1],t[3*l+2]);var h=L.Cross(e.p1.subtract(e.p0),e.p2.subtract(e.p1));h.normalize(),i.push(h),n.push(e),s+=3}for(var c=0,u=n.length;u>c;){var f=c++;e=n[f];for(var d=f+1,m=n.length;m>d;){var _=d++,p=n[_];if(3==e.edgesConnectedCount)break;if(3!=p.edgesConnectedCount)for(var v=r[3*_],g=r[3*_+1],x=r[3*_+2],y=0;3>y;){var b=y++,S=0;if(!(e.edges.length<b)){switch(b){case 0:S=this._checkVerticesInsteadOfIndices?this._processEdgeForAdjacenciesWithVertices(e.p0,e.p1,p.p0,p.p1,p.p2):this._processEdgeForAdjacencies(r[3*f],r[3*f+1],v,g,x);break;case 1:S=this._checkVerticesInsteadOfIndices?this._processEdgeForAdjacenciesWithVertices(e.p1,e.p2,p.p0,p.p1,p.p2):this._processEdgeForAdjacencies(r[3*f+1],r[3*f+2],v,g,x);break;case 2:S=this._checkVerticesInsteadOfIndices?this._processEdgeForAdjacenciesWithVertices(e.p2,e.p0,p.p0,p.p1,p.p2):this._processEdgeForAdjacencies(r[3*f+2],r[3*f],v,g,x)}if(-1!=S&&(e.edges[b]=_,p.edges[S]=f,e.edgesConnectedCount++,p.edgesConnectedCount++,3==e.edgesConnectedCount))break}}}}for(var w=0,C=n.length;C>w;){var T=w++,M=n[T];this._checkEdge(T,M.edges[0],i,M.p0,M.p1),this._checkEdge(T,M.edges[1],i,M.p1,M.p2),this._checkEdge(T,M.edges[2],i,M.p2,M.p0)}var P=this._source._scene._engine;this._vb0=new Ft(P,this._linesPositions,"position",!1),this._vb1=new Ft(P,this._linesNormals,"normal",!1,!1,4);var E=this._vb0;this._buffers.set("position",E);var I=this._vb1;this._buffers.set("normal",I),this._ib=P.createIndexBuffer(this._linesIndices),this._indicesCount=this._linesIndices.length},render:function(){if(this._lineShader.isReady()){var e=this._source._scene,t=e._engine;this._lineShader._preBind(),t.bindMultiBuffers(this._buffers,this._ib,this._lineShader.getEffect()),e._cachedMaterial=null,this._lineShader.setColor4("color",this._source.edgesColor),1==e.activeCamera.mode?this._lineShader.setFloat("width",this._source.edgesWidth/this.edgesWidthScalerForOrthographic):this._lineShader.setFloat("width",this._source.edgesWidth/this.edgesWidthScalerForPerspective),this._lineShader.setFloat("aspectRatio",t.getAspectRatio(e.activeCamera)),this._lineShader.bind(this._source.getWorldMatrix()),t.draw(!0,0,this._indicesCount),this._lineShader.unbind(),t._depthCullingState.set_depthMask(!0)}},__class__:cr};var ur=t.BABYLON.OutlineRenderer=function(e){this._scene=e};s["com.babylonhx.rendering.OutlineRenderer"]=ur,ur.__name__=["com","babylonhx","rendering","OutlineRenderer"],ur.prototype={render:function(e,t,r){null==r&&(r=!1);var n=this,i=this._scene,s=this._scene._engine,o=null!=s.getCaps().instancedArrays&&null!=t.visibleInstances[e._id];if(this.isReady(e,o)){var a=e._renderingMesh,l=e.getMaterial();if(s.enableEffect(this._effect),this._effect.setFloat("offset",r?0:a.outlineWidth),this._effect.setColor4("color",r?a.overlayColor:a.outlineColor,r?a.overlayAlpha:1),this._effect.setMatrix("viewProjection",i._transformMatrix),a.get_useBones()&&a.computeBonesUsingShaders&&this._effect.setMatrices("mBones",a.get_skeleton().getTransformMatrices()),a._bind(e,this._effect,0),null!=l&&l.needAlphaTesting()){var h=l.getAlphaTestTexture();this._effect.setTexture("diffuseSampler",h),this._effect.setMatrix("diffuseMatrix",h.getTextureMatrix())}a._processRendering(e,this._effect,0,t,o,function(e,t){n._effect.setMatrix("world",t)})}},isReady:function(e,t){var r=[],n=["position","normal"],i=e._mesh,s=e.getMaterial();null!=s&&s.needAlphaTesting()&&(r.push("#define ALPHATEST"),i.isVerticesDataPresent("uv")&&(n.push("uv"),r.push("#define UV1")),i.isVerticesDataPresent("uv2")&&(n.push("uv2"),r.push("#define UV2"))),i.get_useBones()&&i.computeBonesUsingShaders?(n.push("matricesIndices"),n.push("matricesWeights"),i.numBoneInfluencers>4&&(n.push("matricesIndicesExtra"),n.push("matricesWeightsExtra")),r.push("#define NUM_BONE_INFLUENCERS "+i.numBoneInfluencers),r.push("#define BonesPerMesh "+(i.get_skeleton().bones.length+1))):r.push("#define NUM_BONE_INFLUENCERS 0"),t&&(r.push("#define INSTANCES"),n.push("world0"),n.push("world1"),n.push("world2"),n.push("world3"));var o=r.join("\n");return this._cachedDefines!=o&&(this._cachedDefines=o,this._effect=this._scene._engine.createEffect("outline",n,["world","mBones","viewProjection","diffuseMatrix","offset","color"],["diffuseSampler"],o)),this._effect._isReady},__class__:ur};var fr=t.BABYLON.RenderingGroup=function(e,t){this.submesh=null,this._activeVertices=0,this._alphaTestSubMeshes=new pr,this._transparentSubMeshes=new pr,this._opaqueSubMeshes=new pr,this._scene=t,this.index=e};s["com.babylonhx.rendering.RenderingGroup"]=fr,fr.__name__=["com","babylonhx","rendering","RenderingGroup"],fr.prototype={render:function(e){if(null!=e)return e(this._opaqueSubMeshes,this._alphaTestSubMeshes,this._transparentSubMeshes),
!0;if(0==this._opaqueSubMeshes.length&&0==this._alphaTestSubMeshes.length&&0==this._transparentSubMeshes.length)return null!=this.onBeforeTransparentRendering&&this.onBeforeTransparentRendering(),!1;for(var t=this._scene._engine,r=0,n=this._opaqueSubMeshes.length;n>r;){var i=r++;this.submesh=this._opaqueSubMeshes.data[i],this.submesh.render(!1)}t._alphaTest=!0;for(var s=0,o=this._alphaTestSubMeshes.length;o>s;){var a=s++;this.submesh=this._alphaTestSubMeshes.data[a],this.submesh.render(!1)}if(t._alphaTest=!1,null!=this.onBeforeTransparentRendering&&this.onBeforeTransparentRendering(),this._transparentSubMeshes.length>0){for(var l=0,h=this._transparentSubMeshes.length;h>l;){var c=l++;this.submesh=this._transparentSubMeshes.data[c],this.submesh._alphaIndex=this.submesh._mesh.alphaIndex,this.submesh._distanceToCamera=this.submesh.getBoundingInfo().boundingSphere.centerWorld.subtract(this._scene.activeCamera.get_globalPosition()).length()}var u=this._transparentSubMeshes.data.slice(0,this._transparentSubMeshes.length);u.sort(function(e,t){return e._alphaIndex>t._alphaIndex?1:e._alphaIndex<t._alphaIndex?-1:e._distanceToCamera<t._distanceToCamera?1:e._distanceToCamera>t._distanceToCamera?-1:0});for(var f=0,d=u.length;d>f;){var m=f++;this.submesh=u[m],this.submesh.render(!0)}0==t._alphaMode||(t._depthCullingState.set_depthMask(!0),t._alphaState.set_alphaBlend(!1),t._alphaMode=0)}return!0},prepare:function(){this._opaqueSubMeshes.reset(),this._transparentSubMeshes.reset(),this._alphaTestSubMeshes.reset()},dispatch:function(e){this.material=e.getMaterial(),this.mesh=e._mesh,this.material.needAlphaBlending()||this.mesh.get_visibility()<1||this.mesh.hasVertexAlpha?this._transparentSubMeshes.push(e):this.material.needAlphaTesting()?this._alphaTestSubMeshes.push(e):this._opaqueSubMeshes.push(e)},__class__:fr};var dr=t.BABYLON.Sprite=function(e,t){this._time=0,this._frameCount=0,this._direction=1,this._delay=0,this._toIndex=0,this._fromIndex=0,this._loopAnimation=!1,this._animationStarted=!1,this.isPickable=!1,this.animations=[],this.invertV=!1,this.invertU=!1,this.cellIndex=0,this.angle=0,this.height=1,this.width=1,this.color=new Oe(1,1,1,1),this.name=e,this._manager=t,this._manager.sprites.push(this),this.position=new L(0,0,0)};s["com.babylonhx.sprites.Sprite"]=dr,dr.__name__=["com","babylonhx","sprites","Sprite"],dr.prototype={get_size:function(){return this.width},set_size:function(e){return this.width=e,this.height=e,e},playAnimation:function(e,t,r,n){this._fromIndex=e,this._toIndex=t,this._loopAnimation=r,this._delay=n,this._animationStarted=!0,t>e?this._direction=1:this._direction=-1,this.cellIndex=e,this._time=0},stopAnimation:function(){this._animationStarted=!1},_animate:function(e){this._animationStarted&&(this._time+=e,this._time>this._delay&&(this._time=this._time%this._delay,this.cellIndex+=this._direction,this.cellIndex==this._toIndex&&(this._loopAnimation?this.cellIndex=this._fromIndex:(this._animationStarted=!1,this.disposeWhenFinishedAnimating&&this.dispose()))))},dispose:function(){for(var e=0,t=this._manager.sprites.length;t>e;){var r=e++;this._manager.sprites[r]==this&&this._manager.sprites.splice(r,1)}},__class__:dr,__properties__:{set_size:"set_size",get_size:"get_size"}};var mr=t.BABYLON.SpriteManager=function(e,t,r,n,i,s,o){null==o&&(o=3),this._vertexStrideSize=64,this._vertexDeclaration=[4,4,4,4],this.isPickable=!1,this.fogEnabled=!0,this.layerMask=268435455,this.renderingGroupId=0,this.sprites=[],this.name=e,this.cellSize=n,this._capacity=r,this._spriteTexture=new je(t,i,!0,!1,o),this._spriteTexture.wrapU=0,this._spriteTexture.wrapV=0,null==s?this._epsilon=.01:this._epsilon=s,1==o&&(this._spriteTexture.anisotropicFilteringLevel=1),this._scene=i,this._scene.spriteManagers.push(this),this._vertexBuffer=i._engine.createDynamicVertexBuffer(r*this._vertexStrideSize*4);for(var a=[],l=0,h=0;r>h;){h++;a.push(l),a.push(l+1),a.push(l+2),a.push(l),a.push(l+2),a.push(l+3),l+=4}this._indexBuffer=i._engine.createIndexBuffer(a),this._vertices=new Float32Array(r*this._vertexStrideSize),this._effectBase=this._scene._engine.createEffect("sprites",["position","options","cellInfo","color"],["view","projection","textureInfos","alphaTest"],["diffuseSampler"],""),this._effectFog=this._scene._engine.createEffect("sprites",["position","options","cellInfo","color"],["view","projection","textureInfos","alphaTest","vFogInfos","vFogColor"],["diffuseSampler"],"#define FOG")};s["com.babylonhx.sprites.SpriteManager"]=mr,mr.__name__=["com","babylonhx","sprites","SpriteManager"],mr.prototype={_appendSpriteVertex:function(e,t,r,n,i){var s=16*e;0==r?r=this._epsilon:1==r&&(r=1-this._epsilon),0==n?n=this._epsilon:1==n&&(n=1-this._epsilon),this._vertices[s]=t.position.x,this._vertices[s+1]=t.position.y,this._vertices[s+2]=t.position.z,this._vertices[s+3]=t.angle,this._vertices[s+4]=t.width,this._vertices[s+5]=t.height,this._vertices[s+6]=r,this._vertices[s+7]=n,t.invertU?this._vertices[s+8]=1:this._vertices[s+8]=0,t.invertV?this._vertices[s+9]=1:this._vertices[s+9]=0;var o=t.cellIndex/i|0;this._vertices[s+10]=t.cellIndex-o*i,this._vertices[s+11]=o,this._vertices[s+12]=t.color.r,this._vertices[s+13]=t.color.g,this._vertices[s+14]=t.color.b,this._vertices[s+15]=t.color.a},intersects:function(e,t,r,n){null==n&&(n=!1);for(var i=u["int"](Math.min(this._capacity,this.sprites.length)),s=new L(0,0,0),o=new L(0,0,0),a=1/0,l=null,h=new L(0,0,0),c=t.getViewMatrix(),f=0;i>f;){var d=f++,m=this.sprites[d];if(null!=m){if(null!=r){if(!r(m))continue}else if(!m.isPickable)continue;if(L.TransformCoordinatesToRef(m.position,c,h),s.x=h.x-m.width/2,s.y=h.y-m.height/2,s.z=h.z,o.x=h.x+m.width/2,o.y=h.y+m.height/2,o.z=h.z,e.intersectsBoxMinMax(s,o)){var _=Math.sqrt(L.DistanceSquared(h,e.origin));if(a>_&&(a=_,l=m,n))break}}}if(null!=l){var p=new ae;return p.hit=!0,p.pickedSprite=l,p.distance=a,p}return null},render:function(){if(this._effectBase._isReady&&this._effectFog._isReady&&null!=this._spriteTexture&&this._spriteTexture.isReady()){for(var e=this._scene._engine,t=this._spriteTexture.getBaseSize(),r=e.deltaTime,n=Math.min(this._capacity,this.sprites.length),i=t.width/this.cellSize,s=0,o=0;n>o;){var a=o++,h=this.sprites[a];null!=h&&(h._animationStarted&&(h._time+=r,h._time>h._delay&&(h._time=h._time%h._delay,h.cellIndex+=h._direction,h.cellIndex==h._toIndex&&(h._loopAnimation?h.cellIndex=h._fromIndex:(h._animationStarted=!1,h.disposeWhenFinishedAnimating&&h.dispose())))),this._appendSpriteVertex(s++,h,0,0,i),this._appendSpriteVertex(s++,h,1,0,i),this._appendSpriteVertex(s++,h,1,1,i),this._appendSpriteVertex(s++,h,0,1,i))}e.updateDynamicVertexBuffer(this._vertexBuffer,this._vertices,null);var c=this._effectBase;this._scene.fogEnabled&&this._scene.fogMode!=b.FOGMODE_NONE&&this.fogEnabled&&(c=this._effectFog),e.enableEffect(c);var u=this._scene._viewMatrix;c._engine.setTexture(l.indexOf(c._samplers,"diffuseSampler",0),this._spriteTexture),c._engine.setMatrix(c._uniforms.get("view"),u),c._engine.setMatrix(c._uniforms.get("projection"),this._scene._projectionMatrix),c.setFloat2("textureInfos",this.cellSize/t.width,this.cellSize/t.height),this._scene.fogEnabled&&this._scene.fogMode!=b.FOGMODE_NONE&&this.fogEnabled&&(c.setFloat4("vFogInfos",this._scene.fogMode,this._scene.fogStart,this._scene.fogEnd,this._scene.fogDensity),c.setColor3("vFogColor",this._scene.fogColor)),e.bindBuffers(this._vertexBuffer,this._indexBuffer,this._vertexDeclaration,this._vertexStrideSize,c),e._depthCullingState.set_depthFunc(515),c.setBool("alphaTest",!0),xr.context.colorMask(!1,!1,!1,!1),e.draw(!0,0,6*n),xr.context.colorMask(!0,!0,!0,!0),c.setBool("alphaTest",!1),2==e._alphaMode||(e._depthCullingState.set_depthMask(!1),e._alphaState.setAlphaBlendFunctionParameters(770,771,1,1),e._alphaState.set_alphaBlend(!0),e._alphaMode=2),e.draw(!0,0,6*n),0==e._alphaMode||(e._depthCullingState.set_depthMask(!0),e._alphaState.set_alphaBlend(!1),e._alphaMode=0)}},dispose:function(){null!=this._vertexBuffer&&(this._scene._engine._releaseBuffer(this._vertexBuffer),this._vertexBuffer=null),null!=this._indexBuffer&&(this._scene._engine._releaseBuffer(this._indexBuffer),this._indexBuffer=null),null!=this._spriteTexture&&(this._spriteTexture.dispose(),this._spriteTexture=null),l.remove(this._scene.spriteManagers,this),null!=this.onDispose&&this.onDispose()},__class__:mr};var _r=t.BABYLON.AsyncLoop=function(e,t,r,n){null==n&&(n=0),this.iterations=e,this._fn=t,this._successCallback=r,this.index=n-1,this._done=!1};s["com.babylonhx.tools.AsyncLoop"]=_r,_r.__name__=["com","babylonhx","tools","AsyncLoop"],_r.Run=function(e,t,r,n){null==n&&(n=0);var i=new _r(e,t,r,n);return i.executeNext(),i},_r.SyncAsyncForLoop=function(e,t,r,n,i,s){null==s&&(s=0),_r.Run(Math.ceil(e/t),function(n){null!=i&&i()?n.breakLoop():Ae.delay(function(){for(var s=0;t>s;){var o=s++,a=n.index*t+o;if(a>=e)break;if(r(a),null!=i&&i()){n.breakLoop();break}}n.executeNext()},s)},n)},_r.prototype={executeNext:function(){this._done||(this.index+1<this.iterations?(++this.index,this._fn(this)):this.breakLoop())},breakLoop:function(){this._done=!0,this._successCallback()},__class__:_r};var pr=t.BABYLON.SmartArray=function(e){null==e&&(e=256),this._duplicateId=0,this.length=0,this.data=[],this._id=pr._GlobalId++};s["com.babylonhx.tools.SmartArray"]=pr,pr.__name__=["com","babylonhx","tools","SmartArray"],pr.prototype={push:function(e){this.data[this.length++]=e,null==e.__smartArrayFlags&&(e.__smartArrayFlags=[]),e.__smartArrayFlags[this._id]=this._duplicateId},pushNoDuplicate:function(e){(null==e.__smartArrayFlags||e.__smartArrayFlags[this._id]!=this._duplicateId)&&(this.data[this.length++]=e,null==e.__smartArrayFlags&&(e.__smartArrayFlags=[]),e.__smartArrayFlags[this._id]=this._duplicateId)},sort:function(e){this.data.sort(e)},reset:function(){this.length=0,this._duplicateId++},concatArray:function(e){if(0!=e.length)for(var t=0,r=e.length;r>t;){var n=t++;this.data[this.length++]=e[n]}},concatSmartArray:function(e){if(0!=e.length)for(var t=0,r=e.length;r>t;){var n=t++;this.data[this.length++]=e.data[n]}},concatArrayWithNoDuplicate:function(e){if(0!=e.length)for(var t=0,r=e.length;r>t;){var n=t++,i=e[n];this.pushNoDuplicate(i)}},concatSmartArrayWithNoDuplicate:function(e){if(0!=e.length)for(var t=0,r=e.length;r>t;){var n=t++,i=e.data[n];this.pushNoDuplicate(i)}},indexOf:function(e){var t=l.indexOf(this.data,e,0);return t>=this.length?-1:t},__class__:pr};var vr=t.BABYLON.SmartCollection=function(e){null==e&&(e=10),this.count=0,this._initialCapacity=e,this.items=new Pr,this._keys=[]};s["com.babylonhx.tools.SmartCollection"]=vr,vr.__name__=["com","babylonhx","tools","SmartCollection"],vr.prototype={add:function(e,t){return null!=this.items.get(e)?-1:(this.items.set(e,t),this._keys[this.count++]=e,this.count)},remove:function(e){return null==this.items.get(e)?-1:this.removeItemOfIndex(this.indexOf(e))},removeItemOfIndex:function(e){if(!(e<this.count&&e>-1))return-1;for(this.items.set(this._keys[e],null),this.items.remove(this._keys[e]);e<this.count;)this._keys[e]=this._keys[e+1],e++;return--this.count},indexOf:function(e){for(var t=0,r=this.count;r>t;){var n=t++;if(this._keys[n]==e)return n}return-1},item:function(e){return null!=e?this.items.get(e):null},getAllKeys:function(){if(this.count>0){for(var e=[],t=0,r=this.count;r>t;){var n=t++;e[n]=this._keys[n]}return e}return null},getKeyByIndex:function(e){return e<this.count&&e>-1?this._keys[e]:null},getItemByIndex:function(e){return e<this.count&&e>-1?this.items.get(this._keys[e]):null},empty:function(){this.count>0&&(this.count=0,this.items=new Pr,this._keys=[])},forEach:function(e){for(var t=this.items.iterator();t.hasNext();){var r=t.next();null!=this.items.h.__keys__[r.__id__]&&e(this.items.h[r.__id__])}},__class__:vr};var gr=function(){};s["com.babylonhx.tools.Ts2Hx"]=gr,gr.__name__=["com","babylonhx","tools","Ts2Hx"],gr.getValue=function(e,t){return e instanceof Array&&null==e.__enum__?Re.__cast(e,Array)[u["int"](t)]:c.field(e,Re.__cast(t,String))},gr.setValue=function(e,t,r){return e instanceof Array&&null==e.__enum__?Re.__cast(e,Array)[u["int"](t)]=r:c.setField(e,Re.__cast(t,String),r),r},gr.isTrueInt=function(e){return 0!=e&&e==e},gr.isTrueFloat=function(e){return 0!=e&&e==e},gr.isTrueString=function(e){return null!=e&&e.length>0},gr.isTrue=function(e){return c.isObject(e)&&(!("string"==typeof e)||Re.__cast(e,String).length>0)||"boolean"==typeof e&&1==Re.__cast(e,Wr)||(0|e)===e&&gr.isTrueInt(Re.__cast(e,Vr))||"number"==typeof e&&gr.isTrueFloat(Re.__cast(e,zr))},gr.areEqual=function(e,t){return e==t},gr.setTimeout=function(e,t){var r=gr._nextTimerId++,n=new De(t);return gr._timeouts.h[r]=n,n.run=function(){n.stop(),gr._timeouts.remove(r),e()},r},gr.clearTimeout=function(e){if(gr._timeouts.h.hasOwnProperty(e)){var t=gr._timeouts.h[e];gr._timeouts.remove(e),t.stop()}},gr.setInterval=function(e,t){var r=gr._nextTimerId++,n=new De(t);return gr._intervals.h[r]=n,n.run=e,r},gr.clearInterval=function(e){if(gr._intervals.h.hasOwnProperty(e)){var t=gr._intervals.h[e];gr._intervals.remove(e),t.stop()}},gr.JSONstringify=function(e,t,r){var n;if((0|r)===r){n="";for(var i=0;r>i;)n+=" ",i++}else n=r;return JSON.stringify(e,t,n)},gr.JSONparse=function(e){return JSON.parse(e)},gr.forEach=function(e,t){if(e instanceof Array&&null==e.__enum__){var r;r=Re.__cast(e,Array);var n=r.length,i=0,s=-1;if(n>i){try{t(r[i],i,r),s=3}catch(o){o instanceof Ar&&(o=o.val);try{t(r[i],i),s=2}catch(a){a instanceof Ar&&(a=a.val),t(r[i]),s=1}}i++}if(3==s)for(;n>i;)t(r[i],i,r),i++;else if(2==s)for(;n>i;)t(r[i],i),i++;else for(;n>i;)t(r[i]),i++}};var xr=function(){};s["com.babylonhx.utils.GL"]=xr,xr.__name__=["com","babylonhx","utils","GL"],xr.__properties__={get_version:"get_version"},xr.activeTexture=function(e){xr.context.activeTexture(e)},xr.attachShader=function(e,t){xr.context.attachShader(e,t)},xr.bindAttribLocation=function(e,t,r){xr.context.bindAttribLocation(e,t,r)},xr.bindBuffer=function(e,t){xr.context.bindBuffer(e,t)},xr.bindFramebuffer=function(e,t){xr.context.bindFramebuffer(e,t)},xr.bindRenderbuffer=function(e,t){xr.context.bindRenderbuffer(e,t)},xr.bindTexture=function(e,t){xr.context.bindTexture(e,t)},xr.blendColor=function(e,t,r,n){xr.context.blendColor(e,t,r,n)},xr.blendEquation=function(e){xr.context.blendEquation(e)},xr.blendEquationSeparate=function(e,t){xr.context.blendEquationSeparate(e,t)},xr.blendFunc=function(e,t){xr.context.blendFunc(e,t)},xr.blendFuncSeparate=function(e,t,r,n){xr.context.blendFuncSeparate(e,t,r,n)},xr.bufferData=function(e,t,r){xr.context.bufferData(e,t,r)},xr.bufferSubData=function(e,t,r){xr.context.bufferSubData(e,t,r)},xr.checkFramebufferStatus=function(e){return xr.context.checkFramebufferStatus(e)},xr.clear=function(e){xr.context.clear(e)},xr.clearColor=function(e,t,r,n){xr.context.clearColor(e,t,r,n)},xr.clearDepth=function(e){xr.context.clearDepth(e)},xr.clearStencil=function(e){xr.context.clearStencil(e)},xr.colorMask=function(e,t,r,n){xr.context.colorMask(e,t,r,n)},xr.compileShader=function(e){xr.context.compileShader(e)},xr.compressedTexImage2D=function(e,t,r,n,i,s,o){xr.context.compressedTexImage2D(e,t,r,n,i,s,o)},xr.compressedTexSubImage2D=function(e,t,r,n,i,s,o,a){xr.context.compressedTexSubImage2D(e,t,r,n,i,s,o,a)},xr.copyTexImage2D=function(e,t,r,n,i,s,o,a){xr.context.copyTexImage2D(e,t,r,n,i,s,o,a)},xr.copyTexSubImage2D=function(e,t,r,n,i,s,o,a){xr.context.copyTexSubImage2D(e,t,r,n,i,s,o,a)},xr.createBuffer=function(){return xr.context.createBuffer()},xr.createFramebuffer=function(){return xr.context.createFramebuffer()},xr.createProgram=function(){return xr.context.createProgram()},xr.createRenderbuffer=function(){return xr.context.createRenderbuffer()},xr.createShader=function(e){return xr.context.createShader(e)},xr.createTexture=function(){return xr.context.createTexture()},xr.cullFace=function(e){xr.context.cullFace(e)},xr.deleteBuffer=function(e){xr.context.deleteBuffer(e)},xr.deleteFramebuffer=function(e){xr.context.deleteFramebuffer(e)},xr.deleteProgram=function(e){xr.context.deleteProgram(e)},xr.deleteRenderbuffer=function(e){xr.context.deleteRenderbuffer(e)},xr.deleteShader=function(e){xr.context.deleteShader(e)},xr.deleteTexture=function(e){xr.context.deleteTexture(e)},xr.depthFunc=function(e){xr.context.depthFunc(e)},xr.depthMask=function(e){xr.context.depthMask(e)},xr.depthRange=function(e,t){xr.context.depthRange(e,t)},xr.detachShader=function(e,t){xr.context.detachShader(e,t)},xr.disable=function(e){xr.context.disable(e)},xr.disableVertexAttribArray=function(e){xr.context.disableVertexAttribArray(e)},xr.drawArrays=function(e,t,r){xr.context.drawArrays(e,t,r)},xr.drawElements=function(e,t,r,n){xr.context.drawElements(e,t,r,n)},xr.enable=function(e){xr.context.enable(e)},xr.enableVertexAttribArray=function(e){xr.context.enableVertexAttribArray(e)},xr.finish=function(){xr.context.finish()},xr.flush=function(){xr.context.flush()},xr.framebufferRenderbuffer=function(e,t,r,n){xr.context.framebufferRenderbuffer(e,t,r,n)},xr.framebufferTexture2D=function(e,t,r,n,i){xr.context.framebufferTexture2D(e,t,r,n,i)},xr.frontFace=function(e){xr.context.frontFace(e)},xr.generateMipmap=function(e){xr.context.generateMipmap(e)},xr.getActiveAttrib=function(e,t){return xr.context.getActiveAttrib(e,t)},xr.getActiveUniform=function(e,t){return xr.context.getActiveUniform(e,t)},xr.getAttachedShaders=function(e){return xr.context.getAttachedShaders(e)},xr.getAttribLocation=function(e,t){return xr.context.getAttribLocation(e,t)},xr.getBufferParameter=function(e,t){return xr.context.getBufferParameter(e,t)},xr.getContextAttributes=function(){return xr.context.getContextAttributes()},xr.getError=function(){return xr.context.getError()},xr.getExtension=function(e){return xr.context.getExtension(e)},xr.getFramebufferAttachmentParameter=function(e,t,r){return xr.context.getFramebufferAttachmentParameter(e,t,r)},xr.getParameter=function(e){return xr.context.getParameter(e)},xr.getProgramInfoLog=function(e){return xr.context.getProgramInfoLog(e)},xr.getProgramParameter=function(e,t){return xr.context.getProgramParameter(e,t)},xr.getRenderbufferParameter=function(e,t){return xr.context.getRenderbufferParameter(e,t)},xr.getShaderInfoLog=function(e){return xr.context.getShaderInfoLog(e)},xr.getShaderParameter=function(e,t){return xr.context.getShaderParameter(e,t)},xr.getShaderPrecisionFormat=function(e,t){return xr.context.getShaderPrecisionFormat(e,t)},xr.getShaderSource=function(e){return xr.context.getShaderSource(e)},xr.getSupportedExtensions=function(){return xr.context.getSupportedExtensions()},xr.getTexParameter=function(e,t){return xr.context.getTexParameter(e,t)},xr.getUniform=function(e,t){return xr.context.getUniform(e,t)},xr.getUniformLocation=function(e,t){return xr.context.getUniformLocation(e,t)},xr.getVertexAttrib=function(e,t){return xr.context.getVertexAttrib(e,t)},xr.getVertexAttribOffset=function(e,t){return xr.context.getVertexAttribOffset(e,t)},xr.hint=function(e,t){xr.context.hint(e,t)},xr.isBuffer=function(e){return xr.context.isBuffer(e)},xr.isContextLost=function(){return xr.context.isContextLost()},xr.isEnabled=function(e){return xr.context.isEnabled(e)},xr.isFramebuffer=function(e){return xr.context.isFramebuffer(e)},xr.isProgram=function(e){return xr.context.isProgram(e)},xr.isRenderbuffer=function(e){return xr.context.isRenderbuffer(e)},xr.isShader=function(e){return xr.context.isShader(e)},xr.isTexture=function(e){return xr.context.isTexture(e)},xr.lineWidth=function(e){xr.context.lineWidth(e)},xr.linkProgram=function(e){xr.context.linkProgram(e)},xr.pixelStorei=function(e,t){xr.context.pixelStorei(e,t)},xr.polygonOffset=function(e,t){xr.context.polygonOffset(e,t)},xr.readPixels=function(e,t,r,n,i,s,o){xr.context.readPixels(e,t,r,n,i,s,o)},xr.renderbufferStorage=function(e,t,r,n){xr.context.renderbufferStorage(e,t,r,n)},xr.sampleCoverage=function(e,t){xr.context.sampleCoverage(e,t)},xr.scissor=function(e,t,r,n){xr.context.scissor(e,t,r,n)},xr.shaderSource=function(e,t){xr.context.shaderSource(e,t)},xr.stencilFunc=function(e,t,r){xr.context.stencilFunc(e,t,r)},xr.stencilFuncSeparate=function(e,t,r,n){xr.context.stencilFuncSeparate(e,t,r,n)},xr.stencilMask=function(e){xr.context.stencilMask(e)},xr.stencilMaskSeparate=function(e,t){xr.context.stencilMaskSeparate(e,t)},xr.stencilOp=function(e,t,r){xr.context.stencilOp(e,t,r)},xr.stencilOpSeparate=function(e,t,r,n){xr.context.stencilOpSeparate(e,t,r,n)},xr.texImage2D=function(e,t,r,n,i,s,o,a,l){xr.context.texImage2D(e,t,r,n,i,s,o,a,l)},xr.texParameterf=function(e,t,r){xr.context.texParameterf(e,t,r)},xr.texParameteri=function(e,t,r){xr.context.texParameteri(e,t,r)},xr.texSubImage2D=function(e,t,r,n,i,s,o,a,l){xr.context.texSubImage2D(e,t,r,n,i,s,o,a,l)},xr.uniform1f=function(e,t){xr.context.uniform1f(e,t)},xr.uniform1fv=function(e,t){xr.context.uniform1fv(e,t)},xr.uniform1i=function(e,t){xr.context.uniform1i(e,t)},xr.uniform1iv=function(e,t){xr.context.uniform1iv(e,t)},xr.uniform2f=function(e,t,r){xr.context.uniform2f(e,t,r)},xr.uniform2fv=function(e,t){xr.context.uniform2fv(e,t)},xr.uniform2i=function(e,t,r){xr.context.uniform2i(e,t,r)},xr.uniform2iv=function(e,t){xr.context.uniform2iv(e,t)},xr.uniform3f=function(e,t,r,n){xr.context.uniform3f(e,t,r,n)},xr.uniform3fv=function(e,t){xr.context.uniform3fv(e,t)},xr.uniform3i=function(e,t,r,n){xr.context.uniform3i(e,t,r,n)},xr.uniform3iv=function(e,t){xr.context.uniform3iv(e,t)},xr.uniform4f=function(e,t,r,n,i){xr.context.uniform4f(e,t,r,n,i)},xr.uniform4fv=function(e,t){xr.context.uniform4fv(e,t)},xr.uniform4i=function(e,t,r,n,i){xr.context.uniform4i(e,t,r,n,i)},xr.uniform4iv=function(e,t){xr.context.uniform4iv(e,t)},xr.uniformMatrix2fv=function(e,t,r){xr.context.uniformMatrix2fv(e,t,r)},xr.uniformMatrix3fv=function(e,t,r){xr.context.uniformMatrix3fv(e,t,r)},xr.uniformMatrix4fv=function(e,t,r){xr.context.uniformMatrix4fv(e,t,r)},xr.useProgram=function(e){xr.context.useProgram(e)},xr.validateProgram=function(e){xr.context.validateProgram(e)},xr.vertexAttrib1f=function(e,t){xr.context.vertexAttrib1f(e,t)},xr.vertexAttrib1fv=function(e,t){xr.context.vertexAttrib1fv(e,t)},xr.vertexAttrib2f=function(e,t,r){xr.context.vertexAttrib2f(e,t,r)},xr.vertexAttrib2fv=function(e,t){xr.context.vertexAttrib2fv(e,t)},xr.vertexAttrib3f=function(e,t,r,n){xr.context.vertexAttrib3f(e,t,r,n)},xr.vertexAttrib3fv=function(e,t){xr.context.vertexAttrib3fv(e,t)},xr.vertexAttrib4f=function(e,t,r,n,i){xr.context.vertexAttrib4f(e,t,r,n,i)},xr.vertexAttrib4fv=function(e,t){xr.context.vertexAttrib4fv(e,t)},xr.vertexAttribPointer=function(e,t,r,n,i,s){xr.context.vertexAttribPointer(e,t,r,n,i,s)},xr.viewport=function(e,t,r,n){xr.context.viewport(e,t,r,n)},xr.get_version=function(){return 2};var yr=function(e,t,r){this.width=0,this.height=0,this.width=t,this.height=r,null!=e?this.data=e:this.data=new jr(t*r*4)};s["com.babylonhx.utils.Image"]=yr,yr.__name__=["com","babylonhx","utils","Image"],yr.prototype={__class__:yr};var br=function(){};s["com.babylonhx.utils.Scancodes"]=br,br.__name__=["com","babylonhx","utils","Scancodes"],br.$name=function(e){var t=null;return e>=0&&e<br.scancode_names.length&&(t=br.scancode_names[e]),null!=t?t:""};var Sr=function(){};s["com.babylonhx.utils.Keycodes"]=Sr,Sr.__name__=["com","babylonhx","utils","Keycodes"],Sr.from_scan=function(e){return e|br.MASK},Sr.to_scan=function(e){if(0!=(e&br.MASK))return e&~br.MASK;switch(e){case 13:return br.enter;case 27:return br.escape;case 8:return br.backspace;case 9:return br.tab;case 32:return br.space;case 47:return br.slash;case 48:return br.key_0;case 49:return br.key_1;case 50:return br.key_2;case 51:return br.key_3;case 52:return br.key_4;case 53:return br.key_5;case 54:return br.key_6;case 55:return br.key_7;case 56:return br.key_8;case 57:return br.key_9;case 59:return br.semicolon;case 61:return br.equals;case 91:return br.leftbracket;case 92:return br.backslash;case 93:return br.rightbracket;case 96:return br.grave;case 97:return br.key_a;case 98:return br.key_b;case 99:return br.key_c;case 100:return br.key_d;case 101:return br.key_e;case 102:return br.key_f;case 103:return br.key_g;case 104:return br.key_h;case 105:return br.key_i;case 106:return br.key_j;case 107:return br.key_k;case 108:return br.key_l;case 109:return br.key_m;case 110:return br.key_n;case 111:return br.key_o;case 112:return br.key_p;case 113:return br.key_q;case 114:return br.key_r;case 115:return br.key_s;case 116:return br.key_t;case 117:return br.key_u;case 118:return br.key_v;case 119:return br.key_w;case 120:return br.key_x;case 121:return br.key_y;case 122:return br.key_z}return br.unknown},Sr.$name=function(e){if(0!=(e&br.MASK))return br.$name(e&~br.MASK);switch(e){case 13:return br.$name(br.enter);case 27:return br.$name(br.escape);case 8:return br.$name(br.backspace);case 9:return br.$name(br.tab);case 32:return br.$name(br.space);case 127:return br.$name(br["delete"]);default:var t=new Tr;return t.__b+=String.fromCharCode(e),t.__b}};var wr=function(){};s["haxe.IMap"]=wr,wr.__name__=["haxe","IMap"],wr.prototype={__class__:wr};var Cr=function(e,t){this.high=e,this.low=t};s["haxe._Int64.___Int64"]=Cr,Cr.__name__=["haxe","_Int64","___Int64"],Cr.prototype={__class__:Cr};var Tr=function(e){this.__b=""};s["haxe.Utf8"]=Tr,Tr.__name__=["haxe","Utf8"],Tr.prototype={__class__:Tr};var Mr=function(){this.h={}};s["haxe.ds.IntMap"]=Mr,Mr.__name__=["haxe","ds","IntMap"],Mr.__interfaces__=[wr],Mr.prototype={remove:function(e){return this.h.hasOwnProperty(e)?(delete this.h[e],!0):!1},keys:function(){var e=[];for(var t in this.h)this.h.hasOwnProperty(t)&&e.push(0|t);return l.iter(e)},__class__:Mr};var Pr=function(){this.h={},this.h.__keys__={}};s["haxe.ds.ObjectMap"]=Pr,Pr.__name__=["haxe","ds","ObjectMap"],Pr.__interfaces__=[wr],Pr.prototype={set:function(e,t){var r=e.__id__||(e.__id__=++Pr.count);this.h[r]=t,this.h.__keys__[r]=e},get:function(e){return this.h[e.__id__]},remove:function(e){var t=e.__id__;return null==this.h.__keys__[t]?!1:(delete this.h[t],delete this.h.__keys__[t],!0)},keys:function(){var e=[];for(var t in this.h.__keys__)this.h.hasOwnProperty(t)&&e.push(this.h.__keys__[t]);return l.iter(e)},iterator:function(){return{ref:this.h,it:this.keys(),hasNext:function(){return this.it.hasNext()},next:function(){var e=this.it.next();return this.ref[e.__id__]}}},__class__:Pr};var Er=function(){this.h={}};s["haxe.ds.StringMap"]=Er,Er.__name__=["haxe","ds","StringMap"],Er.__interfaces__=[wr],Er.prototype={set:function(e,t){null!=Yr[e]?this.setReserved(e,t):this.h[e]=t},get:function(e){return null!=Yr[e]?this.getReserved(e):this.h[e]},exists:function(e){return null!=Yr[e]?this.existsReserved(e):this.h.hasOwnProperty(e)},setReserved:function(e,t){null==this.rh&&(this.rh={}),this.rh["$"+e]=t},getReserved:function(e){return null==this.rh?null:this.rh["$"+e]},existsReserved:function(e){return null==this.rh?!1:this.rh.hasOwnProperty("$"+e)},remove:function(e){return null!=Yr[e]?(e="$"+e,null!=this.rh&&this.rh.hasOwnProperty(e)?(delete this.rh[e],!0):!1):this.h.hasOwnProperty(e)?(delete this.h[e],!0):!1},keys:function(){var e=this.arrayKeys();return l.iter(e)},arrayKeys:function(){var e=[];for(var t in this.h)this.h.hasOwnProperty(t)&&e.push(t);if(null!=this.rh)for(var t in this.rh)36==t.charCodeAt(0)&&e.push(t.substr(1));return e},__class__:Er};var Ir={__ename__:!0,__constructs__:["Blocked","Overflow","OutsideBounds","Custom"]};Ir.Blocked=["Blocked",0],Ir.Blocked.toString=o,Ir.Blocked.__enum__=Ir,Ir.Overflow=["Overflow",1],Ir.Overflow.toString=o,Ir.Overflow.__enum__=Ir,Ir.OutsideBounds=["OutsideBounds",2],Ir.OutsideBounds.toString=o,Ir.OutsideBounds.__enum__=Ir,Ir.Custom=function(e){var t=["Custom",3,e];return t.__enum__=Ir,t.toString=o,t};var Dr=function(){};s["haxe.io.FPHelper"]=Dr,Dr.__name__=["haxe","io","FPHelper"],Dr.i32ToFloat=function(e){var t=1-(e>>>31<<1),r=e>>>23&255,n=8388607&e;return 0==n&&0==r?0:t*(1+Math.pow(2,-23)*n)*Math.pow(2,r-127)},Dr.floatToI32=function(e){if(0==e)return 0;var t;t=0>e?-e:e;var r=Math.floor(Math.log(t)/.6931471805599453);-127>r?r=-127:r>128&&(r=128);var n=8388607&Math.round(8388608*(t/Math.pow(2,r)-1));return(0>e?-2147483648:0)|r+127<<23|n},Dr.i64ToDouble=function(e,t){var r=1-(t>>>31<<1),n=(t>>20&2047)-1023,i=4294967296*(1048575&t)+2147483648*(e>>>31)+(2147483647&e);return 0==i&&-1023==n?0:r*(1+Math.pow(2,-52)*i)*Math.pow(2,n)},Dr.doubleToI64=function(e){var t=Dr.i64tmp;if(0==e)t.low=0,t.high=0;else{var r;r=0>e?-e:e;var n,i=Math.floor(Math.log(r)/.6931471805599453),s=4503599627370496*(r/Math.pow(2,i)-1);n=Math.round(s);var o=0|n,a=n/4294967296|0;t.low=o,t.high=(0>e?-2147483648:0)|i+1023<<20|a}return t};var Ar=function Zr(e){Error.call(this),this.val=e,this.message=String(e),Error.captureStackTrace&&Error.captureStackTrace(this,Zr)};s["js._Boot.HaxeError"]=Ar,Ar.__name__=["js","_Boot","HaxeError"],Ar.__super__=Error,Ar.prototype=n(Error.prototype,{__class__:Ar});var Rr=function(e){if(e instanceof Array&&null==e.__enum__)this.a=e,this.byteLength=e.length;else{var t=e;this.a=[];for(var r=0;t>r;){var n=r++;this.a[n]=0}this.byteLength=t}};s["js.html.compat.ArrayBuffer"]=Rr,Rr.__name__=["js","html","compat","ArrayBuffer"],Rr.sliceImpl=function(e,t){var r=new jr(this,e,null==t?null:t-e),n=new Xr(r.byteLength),i=new jr(n);return i.set(r),n},Rr.prototype={slice:function(e,t){return new Rr(this.a.slice(e,t))},__class__:Rr};var Lr=function(e,t,r){if(this.buf=e,null==t?this.offset=0:this.offset=t,null==r?this.length=e.byteLength-this.offset:this.length=r,this.offset<0||this.length<0||this.offset+this.length>e.byteLength)throw new Ar(Ir.OutsideBounds)};s["js.html.compat.DataView"]=Lr,Lr.__name__=["js","html","compat","DataView"],Lr.prototype={getInt8:function(e){var t=this.buf.a[this.offset+e];return t>=128?t-256:t},getUint8:function(e){return this.buf.a[this.offset+e]},getInt16:function(e,t){var r=this.getUint16(e,t);return r>=32768?r-65536:r},getUint16:function(e,t){return t?this.buf.a[this.offset+e]|this.buf.a[this.offset+e+1]<<8:this.buf.a[this.offset+e]<<8|this.buf.a[this.offset+e+1]},getInt32:function(e,t){var r=this.offset+e,n=this.buf.a[r++],i=this.buf.a[r++],s=this.buf.a[r++],o=this.buf.a[r++];return t?n|i<<8|s<<16|o<<24:o|s<<8|i<<16|n<<24},getUint32:function(e,t){var r=this.getInt32(e,t);return 0>r?r+4294967296:r},getFloat32:function(e,t){return Dr.i32ToFloat(this.getInt32(e,t))},getFloat64:function(e,t){var r=this.getInt32(e,t),n=this.getInt32(e+4,t);return Dr.i64ToDouble(t?r:n,t?n:r)},setInt8:function(e,t){0>t?this.buf.a[e+this.offset]=t+128&255:this.buf.a[e+this.offset]=255&t},setUint8:function(e,t){this.buf.a[e+this.offset]=255&t},setInt16:function(e,t,r){this.setUint16(e,0>t?t+65536:t,r)},setUint16:function(e,t,r){var n=e+this.offset;r?(this.buf.a[n]=255&t,this.buf.a[n++]=t>>8&255):(this.buf.a[n++]=t>>8&255,this.buf.a[n]=255&t)},setInt32:function(e,t,r){this.setUint32(e,t,r)},setUint32:function(e,t,r){var n=e+this.offset;r?(this.buf.a[n++]=255&t,this.buf.a[n++]=t>>8&255,this.buf.a[n++]=t>>16&255,this.buf.a[n++]=t>>>24):(this.buf.a[n++]=t>>>24,this.buf.a[n++]=t>>16&255,this.buf.a[n++]=t>>8&255,this.buf.a[n++]=255&t)},setFloat32:function(e,t,r){this.setUint32(e,Dr.floatToI32(t),r)},setFloat64:function(e,t,r){var n=Dr.doubleToI64(t);r?(this.setUint32(e,n.low),this.setUint32(e,n.high)):(this.setUint32(e,n.high),this.setUint32(e,n.low))},__class__:Lr};var Fr=function(){};s["js.html.compat.Uint8Array"]=Fr,Fr.__name__=["js","html","compat","Uint8Array"],Fr._new=function(e,t,r){var n;if("number"==typeof e){n=[];for(var i=0;e>i;){var s=i++;n[s]=0}n.byteLength=n.length,n.byteOffset=0,n.buffer=new Rr(n)}else if(Re.__instanceof(e,Rr)){var o=e;null==t&&(t=0),null==r&&(r=o.byteLength-t),n=0==t?o.a:o.a.slice(t,t+r),n.byteLength=n.length,n.byteOffset=t,n.buffer=o}else{if(!(e instanceof Array&&null==e.__enum__))throw new Ar("TODO "+u.string(e));n=e.slice(),n.byteLength=n.length,n.byteOffset=0,n.buffer=new Rr(n)}return n.subarray=Fr._subarray,n.set=Fr._set,n},Fr._set=function(e,t){var r=this;if(Re.__instanceof(e.buffer,Rr)){
var n=e;if(e.byteLength+t>r.byteLength)throw new Ar("set() outside of range");for(var i=0,s=e.byteLength;s>i;){var o=i++;r[o+t]=n[o]}}else{if(!(e instanceof Array&&null==e.__enum__))throw new Ar("TODO");var a=e;if(a.length+t>r.byteLength)throw new Ar("set() outside of range");for(var l=0,h=a.length;h>l;){var c=l++;r[c+t]=a[c]}}},Fr._subarray=function(e,t){var r=this,n=Fr._new(r.slice(e,t));return n.byteOffset=e,n};var Or=function(e,t){this.bjs="assets/img/metal.png",this.square="assets/img/square.jpg",this.bar=[];var r=this;this.camera=new q("Camera",284,42,-63,new L(0,0,0),e),window._camera=this.camera,this.camera.setTarget(new L(0,0,0)),this.camera.attachControl(),e.clearColor=new Ge(0,0,0);var n=(new ye("light1",new L(0,1,0),e),new W("Music",t,e,null,{streaming:!0,autoplay:!0}),new He("m",e));n.backFaceCulling=!1,n.bumpTexture=new je("assets/img/grained_uv.png",e),n.reflectionTexture=new je(this.bjs,e),n.reflectionTexture.level=.5,n.reflectionTexture.coordinatesMode=2,n.set_wireframe(!0);var i=new He("m2",e);i.backFaceCulling=!1,i.bumpTexture=new je("assets/img/grained_uv.png",e),i.reflectionTexture=new je(this.bjs,e),i.reflectionTexture.level=.5,i.reflectionTexture.coordinatesMode=2;var s=new He("redmat",e);s.diffuseColor=new Ge(1,0,0);var o=new Je("multiMat",e);o.subMaterials.push(n),o.subMaterials.push(i);var a=new Nr(e);a.wavePlane.set_material(n),window._sPlane=a;var l=new U(e);e._engine.audioEngine.connectToAnalyser(l),l.FFT_SIZE=512,l.SMOOTHING=.9;var h=0;e.registerBeforeRender(function(){r.fft=l.getByteFrequencyData(),a.buildWaveDataRow(r.fft),a.smearWave(),h+=.1}),e._engine.runRenderLoop(function(){e.render()})};s["samples.MilkDrop"]=Or,Or.__name__=["samples","MilkDrop"],Or.prototype={stopPlaying:function(){this.music.dispose()},rnd:function(e,t){return Math.floor(Math.random()*(t-e+1)+e)},createRingcubes:function(e,t,r){var n=2*Math.PI,i=n/t,s=new He("m",r);s.diffuseTexture=new je(this.square,r),s.bumpTexture=new je("assets/img/grained_uv.png",r),s.reflectionTexture=new je(this.bjs,r),s.reflectionTexture.level=.8,s.reflectionTexture.coordinatesMode=1;for(var o=0;t>o;){var a=o++;0==a?(this.bar[a]=tt.CreateBox("b",.02,r),this.bar[a].material=s,this.bar[a].isVisible=!1):(this.bar[a]=this.bar[0].createInstance("b"+a),this.bar[a].position.x=e*Math.sin(i*a),this.bar[a].position.y=e*Math.cos(i*a),this.bar[a].position.z=0,this.bar[a].scaling.y=20,this.bar[a].scaling.x=200,this.bar[a].lookAt(new L(0,0,0)))}},__class__:Or};var Nr=t.BABYLON.WavePlane=function(e,t,r){null==r&&(r=256),null==t&&(t=128),this._posCounter=[],this._width=t,this._height=r,this.wavePlane=new tt("WavePlane",e),this.buildGeometry()};s["samples.WavePlane"]=Nr,Nr.__name__=["samples","WavePlane"],Nr.prototype={buildGeometry:function(){var e=[],t=[],r=[];this._vertexData=new Fe;for(var n=0,i=0,s=0,o=this._height;o>s;)for(var a=s++,l=0,h=this._width;h>l;){var c=l++;e.push(a),e.push(0),e.push(-c),this._posCounter[n]={x:a,y:0,z:-c,actualPosX:i,actualPosY:i+1,actualPosZ:i+2},r.push(0),r.push(0),r.push(-1),t.push(0),t.push(0),i+=3,n++}this._vertexData.positions=e,this._vertexData.normals=r,this.buildFaces()},buildFaces:function(){for(var e,t=[],r=[],n=this._height,i=this._width,s=0;n-1>s;){for(var o=0;i-1>o;)e=s*i,t.push([e+o,e+o+1,e+o+i+1]),t.push([e+o+i+1,e+i+o,e+o]),o++;s++}for(var a=0,l=t.length;l>a;){var h=a++,c=t[h];r.push(c[0]),r.push(c[1]),r.push(c[2])}window._vertexData=this._vertexData,this._vertexData.indices=r,this._vertexData.applyToMesh(this.wavePlane,!0)},buildWaveDataRow:function(e){for(var t=1;t<this._width;)this._vertexData.positions[this._posCounter[t].actualPosY]=e[t]/5,t++;this._vertexData.applyToMesh(this.wavePlane,!0)},smearWave:function(){for(var e,t=this._height-1;t>0;){for(var r=0;r<this._width;)e=this._width*t+r,this._vertexData.positions[this._posCounter[e].actualPosY]=this._vertexData.positions[this._posCounter[e-this._width].actualPosY],r++;t--}this._vertexData.applyToMesh(this.wavePlane,!0)},__class__:Nr};var Br,kr=0;Array.prototype.indexOf&&(l.indexOf=function(e,t,r){return Array.prototype.indexOf.call(e,t,r)}),s.Math=Math,String.prototype.__class__=s.String=String,String.__name__=["String"],s.Array=Array,Array.__name__=["Array"],Date.prototype.__class__=s.Date=Date,Date.__name__=["Date"];var Vr=s.Int={__name__:["Int"]},Ur=s.Dynamic={__name__:["Dynamic"]},zr=s.Float=Number;zr.__name__=["Float"];var Wr=Boolean;Wr.__ename__=["Bool"];var Gr=s.Class={__name__:["Class"]},Hr={},Yr={},Xr=r.ArrayBuffer||Rr;null==Xr.prototype.slice&&(Xr.prototype.slice=Rr.sliceImpl);var jr=(r.DataView||Lr,r.Uint8Array||Fr._new);_.ALPHA_DISABLE=0,_.ALPHA_ADD=1,_.ALPHA_COMBINE=2,_.ALPHA_SUBTRACT=3,_.ALPHA_MULTIPLY=4,_.ALPHA_MAXIMIZED=5,_.ALPHA_ONEONE=6,_.DELAYLOADSTATE_NONE=0,_.DELAYLOADSTATE_LOADED=1,_.DELAYLOADSTATE_LOADING=2,_.DELAYLOADSTATE_NOTLOADED=4,_.TEXTUREFORMAT_ALPHA=0,_.TEXTUREFORMAT_LUMINANCE=1,_.TEXTUREFORMAT_LUMINANCE_ALPHA=2,_.TEXTUREFORMAT_RGB=4,_.TEXTUREFORMAT_RGBA=5,_.TEXTURETYPE_UNSIGNED_INT=0,_.TEXTURETYPE_FLOAT=1,_.Version="2.0.0",_.Epsilon=.001,_.CollisionsEpsilon=.001,_.ShadersRepository="assets/shaders/",_.mouseDown=[],_.mouseUp=[],_.mouseMove=[],_.mouseWheel=[],_.touchDown=[],_.touchUp=[],_.touchMove=[],_.keyUp=[],_.keyDown=[],b.FOGMODE_NONE=0,b.FOGMODE_EXP=1,b.FOGMODE_EXP2=2,b.FOGMODE_LINEAR=3,b.MinDeltaTime=1,b.MaxDeltaTime=1e3,b._activeMeshes_=[],M.NothingTrigger=0,M.OnPickTrigger=1,M.OnLeftPickTrigger=2,M.OnRightPickTrigger=3,M.OnCenterPickTrigger=4,M.OnPickDownTrigger=5,M.OnPickUpTrigger=6,M.OnLongPressTrigger=7,M.OnPointerOverTrigger=8,M.OnPointerOutTrigger=9,M.OnEveryFrameTrigger=10,M.OnIntersectionEnterTrigger=11,M.OnIntersectionExitTrigger=12,M.OnKeyDownTrigger=13,M.OnKeyUpTrigger=14,M.DragMovementThreshold=10,M.LongPressDelay=500,D.IsEqual=0,D.IsDifferent=1,D.IsGreater=2,D.IsLesser=3,F.ANIMATIONTYPE_FLOAT=0,F.ANIMATIONTYPE_VECTOR3=1,F.ANIMATIONTYPE_QUATERNION=2,F.ANIMATIONTYPE_MATRIX=3,F.ANIMATIONTYPE_COLOR3=4,F.ANIMATIONTYPE_VECTOR2=5,F.ANIMATIONLOOPMODE_RELATIVE=0,F.ANIMATIONLOOPMODE_CYCLE=1,F.ANIMATIONLOOPMODE_CONSTANT=2,F.matrixInterpolateFunction_startScale=new L(0,0,0),F.matrixInterpolateFunction_startRotation=new R,F.matrixInterpolateFunction_startTranslation=new L(0,0,0),F.matrixInterpolateFunction_endScale=new L(0,0,0),F.matrixInterpolateFunction_endRotation=new R,F.matrixInterpolateFunction_endTranslation=new L(0,0,0),V.EASINGMODE_EASEIN=0,V.EASINGMODE_EASEOUT=1,V.EASINGMODE_EASEINOUT=2,X.PERSPECTIVE_CAMERA=0,X.ORTHOGRAPHIC_CAMERA=1,X.FOVMODE_VERTICAL_FIXED=0,X.FOVMODE_HORIZONTAL_FIXED=1,X.RIG_MODE_NONE=0,X.RIG_MODE_STEREOSCOPIC_ANAGLYPH=10,X.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_PARALLEL=11,X.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_CROSSEYED=12,X.RIG_MODE_STEREOSCOPIC_OVERUNDER=13,X.RIG_MODE_VR=20,j.zUpVector=new L(0,1,0),j.vDir=new L(0,0,0),le.IntersectsSphere_vector=new L,we.FILTER_NONE=0,we.FILTER_VARIANCESHADOWMAP=1,we.FILTER_POISSONSAMPLING=2,we.FILTER_BLURVARIANCESHADOWMAP=3,Ce.ForceFullSceneLoadingForIncremental=!1,Ce.ShowLoadingScreen=!0,Ce._registeredPlugins=[],Me.UID_CHARS="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",Ae.BaseUrl="",Ae.__startTime=De.stamp(),Re.__toStr={}.toString,Le._tempQuaternion=new R,Le._xAxis=new L(0,0,0),Le._yAxis=new L(0,0,0),Le._zAxis=new L(0,0,0),Fe.transformed=new L(0,0,0),We.TriangleFillMode=0,We.WireFrameFillMode=1,We.PointFillMode=2,We.ClockWiseSideOrientation=0,We.CounterClockWiseSideOrientation=1,We.maxSimultaneousLights=4,Ge.ToGammaSpace=.45454545454545453,Ge.ToLinearSpace=2.2,He.DiffuseTextureEnabled=!0,He.AmbientTextureEnabled=!0,He.OpacityTextureEnabled=!0,He.ReflectionTextureEnabled=!0,He.EmissiveTextureEnabled=!0,He.SpecularTextureEnabled=!0,He.BumpTextureEnabled=!0,He.FresnelEnabled=!0,He.LightmapEnabled=!0,He._scaledDiffuse=new Ge,He._scaledSpecular=new Ge,je.NEAREST_SAMPLINGMODE=1,je.BILINEAR_SAMPLINGMODE=2,je.TRILINEAR_SAMPLINGMODE=3,je.EXPLICIT_MODE=0,je.SPHERICAL_MODE=1,je.PLANAR_MODE=2,je.CUBIC_MODE=3,je.PROJECTION_MODE=4,je.SKYBOX_MODE=5,je.INVCUBIC_MODE=6,je.EQUIRECTANGULAR_MODE=7,je.FIXED_EQUIRECTANGULAR_MODE=8,je.CLAMP_ADDRESSMODE=0,je.WRAP_ADDRESSMODE=1,je.MIRROR_ADDRESSMODE=2,qe.REFRESHRATE_RENDER_ONCE=0,qe.REFRESHRATE_RENDER_ONEVERYFRAME=1,qe.REFRESHRATE_RENDER_ONEVERYTWOFRAMES=2,Ze.MAX_RENDERINGGROUPS=4,Qe.transposedMatrix=new Le,et.BILLBOARDMODE_NONE=0,et.BILLBOARDMODE_X=1,et.BILLBOARDMODE_Y=2,et.BILLBOARDMODE_Z=4,et.BILLBOARDMODE_ALL=7,et.cameraGlobalPosition=new L,tt.FRONTSIDE=0,tt.BACKSIDE=1,tt.DOUBLESIDE=2,tt.DEFAULTSIDE=0,tt.NO_CAP=0,tt.CAP_START=1,tt.CAP_END=2,tt.CAP_ALL=3,it.BLENDMODE_ONEONE=0,it.BLENDMODE_STANDARD=1,ht._plugin={extensions:".babylon",importMesh:function(t,r,n,i,s,o,a){for(var h=JSON.parse(n),u=[],f=[],d=[],m=h.meshes,_=0,p=m.length;p>_;){var v=_++,g=m[v];if(null==t||""==t||ht.isDescendantOf(g,t,d)){if(t instanceof Array&&null==t.__enum__&&t.splice(t.indexOf(g.name),1),null!=g.geometryId&&null!=h.geometries){for(var x=!1,y=0,b=["boxes","spheres","cylinders","toruses","grounds","planes","torusKnots","vertexData"];y<b.length;){var S=b[y];if(++y,!x&&null!=c.getProperty(h.geometries,S)&&c.getProperty(h.geometries,S)instanceof Array&&null==c.getProperty(h.geometries,S).__enum__)for(var w=c.getProperty(h.geometries,S),C=0;C<w.length;){var T=w[C];if(++C,T.id==g.geometryId){switch(S){case"boxes":Ee.ParseBox(T,r);break;case"spheres":Ne.ParseSphere(T,r);break;case"cylinders":Be.ParseCylinder(T,r);break;case"toruses":ke.ParseTorus(T,r);break;case"grounds":Ve.ParseGround(T,r);break;case"planes":Ue.ParsePlane(T,r);break;case"torusKnots":ze.ParseTorusKnot(T,r);break;case"vertexData":Me.ParseGeometry(T,r,i)}x=!0}}}x||e.log("Geometry not found for mesh "+g.id)}if(Object.prototype.hasOwnProperty.call(g,"materialId")){var M=-1!=l.indexOf(f,g.materialId,0);if(!M&&null!=h.multiMaterials)for(var P=h.multiMaterials,E=0,I=P.length;I>E;){var D=E++,A=P[D];if(A.id==g.materialId){for(var R=A.materials,L=0,F=R.length;F>L;){var O=L++,N=R[O];f.push(N),ht.parseMaterialById(null==N?"null":""+N,h,r,i)}f.push(A.id),ht.parseMultiMaterial(A,r),M=!0;break}}M||(f.push(g.materialId),ht.parseMaterialById(g.materialId,h,r,i))}if(g.skeletonId>-1&&null!=r.skeletons){var B=l.indexOf(u,g.skeletonId,0)>-1;if(!B)for(var k=h.skeletons,V=0,U=k.length;U>V;){var z=V++,W=k[z];W.id==g.skeletonId&&(a.push(Y.Parse(W,r)),u.push(W.id))}}var G=tt.ParseMesh(g,r,i);s.push(G)}}for(var H=0,X=r.meshes.length;X>H;){var j=H++,q=r.meshes[j];null!=q._waitingParentId&&(q.parent=r.getLastEntryByID(q._waitingParentId),q._waitingParentId=null)}if(null!=h.particleSystems)for(var K=h.particleSystems,Z=0,Q=K.length;Q>Z;){var $=Z++,J=K[$];-1!=l.indexOf(d,J.emitterId,0)&&o.push(ht.parseParticleSystem(J,r,i))}return!0},load:function(t,r,n){if(null==r)return e.log("error: no data!"),!1;var i=JSON.parse(r);t.useDelayedTextureLoading=i.useDelayedTextureLoading&&!Ce.ForceFullSceneLoadingForIncremental,t.autoClear=i.autoClear,t.clearColor=Ge.FromArray(i.clearColor,null),t.ambientColor=Ge.FromArray(i.ambientColor,null),t.gravity=L.FromArray(i.gravity,null),null!=i.fogMode&&0!=i.fogMode&&(t.fogMode=i.fogMode,t.fogColor=Ge.FromArray(i.fogColor,null),t.fogStart=i.fogStart,t.fogEnd=i.fogEnd,t.fogDensity=i.fogDensity);for(var s=0,o=i.lights.length;o>s;){var a=s++,l=i.lights[a];ht.parseLight(l,t)}if(null!=i.materials)for(var h=0,c=i.materials.length;c>h;){var u=h++,f=i.materials[u];He.Parse(f,t,n)}if(null!=i.multiMaterials)for(var d=0,m=i.multiMaterials.length;m>d;){var _=d++,p=i.multiMaterials[_];ht.parseMultiMaterial(p,t)}if(null!=i.skeletons)for(var v=0,g=i.skeletons.length;g>v;){var x=v++,y=i.skeletons[x];Y.Parse(y,t)}var b=i.geometries;if(null!=b){var S=b.boxes;if(null!=S)for(var w=0,C=S.length;C>w;){var T=w++,M=S[T];Ee.ParseBox(M,t)}var P=b.spheres;if(null!=P)for(var E=0,I=P.length;I>E;){var D=E++,A=P[D];Ne.ParseSphere(A,t)}var R=b.cylinders;if(null!=R)for(var F=0,O=R.length;O>F;){var N=F++,B=R[N];Be.ParseCylinder(B,t)}var k=b.toruses;if(null!=k)for(var V=0,U=k.length;U>V;){var z=V++,W=k[z];ke.ParseTorus(W,t)}var G=b.grounds;if(null!=G)for(var H=0,X=G.length;X>H;){var j=H++,q=G[j];Ve.ParseGround(q,t)}var K=b.planes;if(null!=K)for(var Z=0,Q=K.length;Q>Z;){var $=Z++,J=K[$];Ue.ParsePlane(J,t)}var ee=b.torusKnots;if(null!=ee)for(var te=0,re=ee.length;re>te;){var ne=te++,ie=ee[ne];ze.ParseTorusKnot(ie,t)}var se=b.vertexData;if(null!=se)for(var oe=0,ae=se.length;ae>oe;){var le=oe++,he=se[le];Me.ParseGeometry(he,t,n)}}for(var ce=i.meshes,ue=0,fe=ce.length;fe>ue;){var de=ue++,me=ce[de];tt.ParseMesh(me,t,n)}for(var _e=(i.cameras,0),pe=i.cameras.length;pe>_e;){var ve=_e++,ge=i.cameras[ve];ht.parseCamera(ge,t)}null!=i.activeCameraID&&t.setActiveCameraByID(i.activeCameraID);for(var xe=0,ye=t.cameras.length;ye>xe;){var be=xe++,Se=t.cameras[be];null!=Se._waitingParentId&&(Se.parent=t.getLastEntryByID(Se._waitingParentId),Se._waitingParentId=null)}for(var we=0,Te=t.lights.length;Te>we;){var Pe=we++,Ie=t.lights[Pe];null!=Ie._waitingParentId&&(Ie.parent=t.getLastEntryByID(Ie._waitingParentId),Ie._waitingParentId=null)}for(var De=0,Ae=t.meshes.length;Ae>De;){var Re=De++,Le=t.meshes[Re];null!=Le._waitingParentId&&(Le.parent=t.getLastEntryByID(Le._waitingParentId),Le._waitingParentId=null),null!=Le._waitingActions&&(ht.parseActions(Le._waitingActions,Le,t),Le._waitingActions=null)}if(null!=i.particleSystems)for(var Fe=0,Oe=i.particleSystems.length;Oe>Fe;){var We=Fe++,Ye=i.particleSystems[We];ht.parseParticleSystem(Ye,t,n)}if(null!=i.lensFlareSystems)for(var Xe=0,je=i.lensFlareSystems.length;je>Xe;){var qe=Xe++,Ke=i.lensFlareSystems[qe];ht.parseLensFlareSystem(Ke,t,n)}if(null!=i.shadowGenerators)for(var Ze=0,Qe=i.shadowGenerators.length;Qe>Ze;){var $e=Ze++,Je=i.shadowGenerators[$e];ht.parseShadowGenerator(Je,t)}return null!=i.actions&&ht.parseActions(i.actions,null,t),!0}},mt.Shaders=function(e){var t,r=new Er;return null!=Yr["anaglyph.fragment"]?r.setReserved("anaglyph.fragment","precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\nuniform sampler2D leftSampler;\r\n\r\nvoid main(void)\r\n{\r\n    vec4 leftFrag = texture2D(leftSampler, vUV);\r\n    leftFrag = vec4(1.0, leftFrag.g, leftFrag.b, 1.0);\r\n\r\n	vec4 rightFrag = texture2D(textureSampler, vUV);\r\n    rightFrag = vec4(rightFrag.r, 1.0, 1.0, 1.0);\r\n\r\n    gl_FragColor = vec4(rightFrag.rgb * leftFrag.rgb, 1.0);\r\n}"):r.h["anaglyph.fragment"]="precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\nuniform sampler2D leftSampler;\r\n\r\nvoid main(void)\r\n{\r\n    vec4 leftFrag = texture2D(leftSampler, vUV);\r\n    leftFrag = vec4(1.0, leftFrag.g, leftFrag.b, 1.0);\r\n\r\n	vec4 rightFrag = texture2D(textureSampler, vUV);\r\n    rightFrag = vec4(rightFrag.r, 1.0, 1.0, 1.0);\r\n\r\n    gl_FragColor = vec4(rightFrag.rgb * leftFrag.rgb, 1.0);\r\n}",null!=Yr["blackAndWhite.fragment"]?r.setReserved("blackAndWhite.fragment","precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\n\r\nvoid main(void) \r\n{\r\n	float luminance = dot(texture2D(textureSampler, vUV).rgb, vec3(0.3, 0.59, 0.11));\r\n	gl_FragColor = vec4(luminance, luminance, luminance, 1.0);\r\n}"):r.h["blackAndWhite.fragment"]="precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\n\r\nvoid main(void) \r\n{\r\n	float luminance = dot(texture2D(textureSampler, vUV).rgb, vec3(0.3, 0.59, 0.11));\r\n	gl_FragColor = vec4(luminance, luminance, luminance, 1.0);\r\n}",null!=Yr["blur.fragment"]?r.setReserved("blur.fragment","precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\n\r\n// Parameters\r\nuniform vec2 screenSize;\r\nuniform vec2 direction;\r\nuniform float blurWidth;\r\n\r\nvoid main(void)\r\n{\r\n	float weights[7];\r\n	weights[0] = 0.05;\r\n	weights[1] = 0.1;\r\n	weights[2] = 0.2;\r\n	weights[3] = 0.3;\r\n	weights[4] = 0.2;\r\n	weights[5] = 0.1;\r\n	weights[6] = 0.05;\r\n\r\n	vec2 texelSize = vec2(1.0 / screenSize.x, 1.0 / screenSize.y);\r\n	vec2 texelStep = texelSize * direction * blurWidth;\r\n	vec2 start = vUV - 3.0 * texelStep;\r\n\r\n	vec4 baseColor = vec4(0., 0., 0., 0.);\r\n	vec2 texelOffset = vec2(0., 0.);\r\n\r\n	for (int i = 0; i < 7; i++)\r\n	{\r\n		baseColor += texture2D(textureSampler, start + texelOffset) * weights[i];\r\n		texelOffset += texelStep;\r\n	}\r\n\r\n	gl_FragColor = baseColor;\r\n}"):r.h["blur.fragment"]="precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\n\r\n// Parameters\r\nuniform vec2 screenSize;\r\nuniform vec2 direction;\r\nuniform float blurWidth;\r\n\r\nvoid main(void)\r\n{\r\n	float weights[7];\r\n	weights[0] = 0.05;\r\n	weights[1] = 0.1;\r\n	weights[2] = 0.2;\r\n	weights[3] = 0.3;\r\n	weights[4] = 0.2;\r\n	weights[5] = 0.1;\r\n	weights[6] = 0.05;\r\n\r\n	vec2 texelSize = vec2(1.0 / screenSize.x, 1.0 / screenSize.y);\r\n	vec2 texelStep = texelSize * direction * blurWidth;\r\n	vec2 start = vUV - 3.0 * texelStep;\r\n\r\n	vec4 baseColor = vec4(0., 0., 0., 0.);\r\n	vec2 texelOffset = vec2(0., 0.);\r\n\r\n	for (int i = 0; i < 7; i++)\r\n	{\r\n		baseColor += texture2D(textureSampler, start + texelOffset) * weights[i];\r\n		texelOffset += texelStep;\r\n	}\r\n\r\n	gl_FragColor = baseColor;\r\n}",null!=Yr["bricktexture.fragment"]?r.setReserved("bricktexture.fragment","precision highp float;\r\n\r\nvarying vec2 vPosition;\r\nvarying vec2 vUV;\r\n\r\nuniform float numberOfBricksHeight;\r\nuniform float numberOfBricksWidth;\r\nuniform vec3 brickColor;\r\nuniform vec3 jointColor;\r\n\r\nfloat rand(vec2 n) {\r\n	return fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nfloat noise(vec2 n) {\r\n	const vec2 d = vec2(0.0, 1.0);\r\n	vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\r\n	return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat fbm(vec2 n) {\r\n	float total = 0.0, amplitude = 1.0;\r\n	for (int i = 0; i < 4; i++) {\r\n		total += noise(n) * amplitude;\r\n		n += n;\r\n		amplitude *= 0.5;\r\n	}\r\n	return total;\r\n}\r\n\r\nfloat round(float number){\r\n	return sign(number)*floor(abs(number) + 0.5);\r\n}\r\n\r\nvoid main(void)\r\n{\r\n	float brickW = 1.0 / numberOfBricksWidth;\r\n	float brickH = 1.0 / numberOfBricksHeight;\r\n	float jointWPercentage = 0.01;\r\n	float jointHPercentage = 0.05;\r\n	vec3 color = brickColor;\r\n	float yi = vUV.y / brickH;\r\n	float nyi = round(yi);\r\n	float xi = vUV.x / brickW;\r\n\r\n	if (mod(floor(yi), 2.0) == 0.0){\r\n		xi = xi - 0.5;\r\n	}\r\n\r\n	float nxi = round(xi);\r\n	vec2 brickvUV = vec2((xi - floor(xi)) / brickH, (yi - floor(yi)) /  brickW);\r\n\r\n	if (yi < nyi + jointHPercentage && yi > nyi - jointHPercentage){\r\n		color = mix(jointColor, vec3(0.37, 0.25, 0.25), (yi - nyi) / jointHPercentage + 0.2);\r\n	}\r\n	else if (xi < nxi + jointWPercentage && xi > nxi - jointWPercentage){\r\n		color = mix(jointColor, vec3(0.44, 0.44, 0.44), (xi - nxi) / jointWPercentage + 0.2);\r\n	}\r\n	else {\r\n		float brickColorSwitch = mod(floor(yi) + floor(xi), 3.0);\r\n\r\n		if (brickColorSwitch == 0.0)\r\n			color = mix(color, vec3(0.33, 0.33, 0.33), 0.3);\r\n		else if (brickColorSwitch == 2.0)\r\n			color = mix(color, vec3(0.11, 0.11, 0.11), 0.3);\r\n	}\r\n\r\n	gl_FragColor = vec4(color, 1.0);\r\n}"):r.h["bricktexture.fragment"]="precision highp float;\r\n\r\nvarying vec2 vPosition;\r\nvarying vec2 vUV;\r\n\r\nuniform float numberOfBricksHeight;\r\nuniform float numberOfBricksWidth;\r\nuniform vec3 brickColor;\r\nuniform vec3 jointColor;\r\n\r\nfloat rand(vec2 n) {\r\n	return fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nfloat noise(vec2 n) {\r\n	const vec2 d = vec2(0.0, 1.0);\r\n	vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\r\n	return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat fbm(vec2 n) {\r\n	float total = 0.0, amplitude = 1.0;\r\n	for (int i = 0; i < 4; i++) {\r\n		total += noise(n) * amplitude;\r\n		n += n;\r\n		amplitude *= 0.5;\r\n	}\r\n	return total;\r\n}\r\n\r\nfloat round(float number){\r\n	return sign(number)*floor(abs(number) + 0.5);\r\n}\r\n\r\nvoid main(void)\r\n{\r\n	float brickW = 1.0 / numberOfBricksWidth;\r\n	float brickH = 1.0 / numberOfBricksHeight;\r\n	float jointWPercentage = 0.01;\r\n	float jointHPercentage = 0.05;\r\n	vec3 color = brickColor;\r\n	float yi = vUV.y / brickH;\r\n	float nyi = round(yi);\r\n	float xi = vUV.x / brickW;\r\n\r\n	if (mod(floor(yi), 2.0) == 0.0){\r\n		xi = xi - 0.5;\r\n	}\r\n\r\n	float nxi = round(xi);\r\n	vec2 brickvUV = vec2((xi - floor(xi)) / brickH, (yi - floor(yi)) /  brickW);\r\n\r\n	if (yi < nyi + jointHPercentage && yi > nyi - jointHPercentage){\r\n		color = mix(jointColor, vec3(0.37, 0.25, 0.25), (yi - nyi) / jointHPercentage + 0.2);\r\n	}\r\n	else if (xi < nxi + jointWPercentage && xi > nxi - jointWPercentage){\r\n		color = mix(jointColor, vec3(0.44, 0.44, 0.44), (xi - nxi) / jointWPercentage + 0.2);\r\n	}\r\n	else {\r\n		float brickColorSwitch = mod(floor(yi) + floor(xi), 3.0);\r\n\r\n		if (brickColorSwitch == 0.0)\r\n			color = mix(color, vec3(0.33, 0.33, 0.33), 0.3);\r\n		else if (brickColorSwitch == 2.0)\r\n			color = mix(color, vec3(0.11, 0.11, 0.11), 0.3);\r\n	}\r\n\r\n	gl_FragColor = vec4(color, 1.0);\r\n}",null!=Yr["chromaticAberration.fragment"]?r.setReserved("chromaticAberration.fragment","// BABYLON.JS Chromatic Aberration GLSL Shader\r\n// Author: Olivier Guyot\r\n// Separates very slightly R, G and B colors on the edges of the screen\r\n// Inspired by Francois Tarlier & Martins Upitis\r\n\r\nprecision highp float;\r\n\r\n// samplers\r\nuniform sampler2D textureSampler;	// original color\r\n\r\n// uniforms\r\nuniform float chromatic_aberration;\r\nuniform float screen_width;\r\nuniform float screen_height;\r\n\r\n// varyings\r\nvarying vec2 vUV;\r\n\r\nvoid main(void)\r\n{\r\n	vec2 centered_screen_pos = vec2(vUV.x - 0.5, vUV.y - 0.5);\r\n	float radius2 = centered_screen_pos.x*centered_screen_pos.x\r\n		+ centered_screen_pos.y*centered_screen_pos.y;\r\n	float radius = sqrt(radius2);\r\n\r\n	vec4 original = texture2D(textureSampler, vUV);\r\n\r\n	if (chromatic_aberration > 0.0) {\r\n		//index of refraction of each color channel, causing chromatic dispersion\r\n		vec3 ref_indices = vec3(-0.3, 0.0, 0.3);\r\n		float ref_shiftX = chromatic_aberration * radius * 17.0 / screen_width;\r\n		float ref_shiftY = chromatic_aberration * radius * 17.0 / screen_height;\r\n\r\n		// shifts for red, green & blue\r\n		vec2 ref_coords_r = vec2(vUV.x + ref_indices.r*ref_shiftX, vUV.y + ref_indices.r*ref_shiftY*0.5);\r\n		vec2 ref_coords_g = vec2(vUV.x + ref_indices.g*ref_shiftX, vUV.y + ref_indices.g*ref_shiftY*0.5);\r\n		vec2 ref_coords_b = vec2(vUV.x + ref_indices.b*ref_shiftX, vUV.y + ref_indices.b*ref_shiftY*0.5);\r\n\r\n		original.r = texture2D(textureSampler, ref_coords_r).r;\r\n		original.g = texture2D(textureSampler, ref_coords_g).g;\r\n		original.b = texture2D(textureSampler, ref_coords_b).b;\r\n	}\r\n\r\n	gl_FragColor = original;\r\n}"):r.h["chromaticAberration.fragment"]="// BABYLON.JS Chromatic Aberration GLSL Shader\r\n// Author: Olivier Guyot\r\n// Separates very slightly R, G and B colors on the edges of the screen\r\n// Inspired by Francois Tarlier & Martins Upitis\r\n\r\nprecision highp float;\r\n\r\n// samplers\r\nuniform sampler2D textureSampler;	// original color\r\n\r\n// uniforms\r\nuniform float chromatic_aberration;\r\nuniform float screen_width;\r\nuniform float screen_height;\r\n\r\n// varyings\r\nvarying vec2 vUV;\r\n\r\nvoid main(void)\r\n{\r\n	vec2 centered_screen_pos = vec2(vUV.x - 0.5, vUV.y - 0.5);\r\n	float radius2 = centered_screen_pos.x*centered_screen_pos.x\r\n		+ centered_screen_pos.y*centered_screen_pos.y;\r\n	float radius = sqrt(radius2);\r\n\r\n	vec4 original = texture2D(textureSampler, vUV);\r\n\r\n	if (chromatic_aberration > 0.0) {\r\n		//index of refraction of each color channel, causing chromatic dispersion\r\n		vec3 ref_indices = vec3(-0.3, 0.0, 0.3);\r\n		float ref_shiftX = chromatic_aberration * radius * 17.0 / screen_width;\r\n		float ref_shiftY = chromatic_aberration * radius * 17.0 / screen_height;\r\n\r\n		// shifts for red, green & blue\r\n		vec2 ref_coords_r = vec2(vUV.x + ref_indices.r*ref_shiftX, vUV.y + ref_indices.r*ref_shiftY*0.5);\r\n		vec2 ref_coords_g = vec2(vUV.x + ref_indices.g*ref_shiftX, vUV.y + ref_indices.g*ref_shiftY*0.5);\r\n		vec2 ref_coords_b = vec2(vUV.x + ref_indices.b*ref_shiftX, vUV.y + ref_indices.b*ref_shiftY*0.5);\r\n\r\n		original.r = texture2D(textureSampler, ref_coords_r).r;\r\n		original.g = texture2D(textureSampler, ref_coords_g).g;\r\n		original.b = texture2D(textureSampler, ref_coords_b).b;\r\n	}\r\n\r\n	gl_FragColor = original;\r\n}",null!=Yr["cloudtexture.fragment"]?r.setReserved("cloudtexture.fragment","precision highp float;\r\n\r\nvarying vec2 vUV;\r\n\r\nuniform vec4 skyColor;\r\nuniform vec4 cloudColor;\r\n\r\nfloat rand(vec2 n) {\r\n	return fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nfloat noise(vec2 n) {\r\n	const vec2 d = vec2(0.0, 1.0);\r\n	vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\r\n	return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat fbm(vec2 n) {\r\n	float total = 0.0, amplitude = 1.0;\r\n	for (int i = 0; i < 4; i++) {\r\n		total += noise(n) * amplitude;\r\n		n += n;\r\n		amplitude *= 0.5;\r\n	}\r\n	return total;\r\n}\r\n\r\nvoid main() {\r\n\r\n	vec2 p = vUV * 12.0;\r\n	vec4 c = mix(skyColor, cloudColor, fbm(p));\r\n	gl_FragColor = c;\r\n\r\n}\r\n\r\n"):r.h["cloudtexture.fragment"]="precision highp float;\r\n\r\nvarying vec2 vUV;\r\n\r\nuniform vec4 skyColor;\r\nuniform vec4 cloudColor;\r\n\r\nfloat rand(vec2 n) {\r\n	return fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nfloat noise(vec2 n) {\r\n	const vec2 d = vec2(0.0, 1.0);\r\n	vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\r\n	return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat fbm(vec2 n) {\r\n	float total = 0.0, amplitude = 1.0;\r\n	for (int i = 0; i < 4; i++) {\r\n		total += noise(n) * amplitude;\r\n		n += n;\r\n		amplitude *= 0.5;\r\n	}\r\n	return total;\r\n}\r\n\r\nvoid main() {\r\n\r\n	vec2 p = vUV * 12.0;\r\n	vec4 c = mix(skyColor, cloudColor, fbm(p));\r\n	gl_FragColor = c;\r\n\r\n}\r\n\r\n",null!=Yr["color.fragment"]?r.setReserved("color.fragment","precision highp float;\r\n\r\nuniform vec4 color;\r\n\r\nvoid main(void) {\r\n	gl_FragColor = color;\r\n}"):r.h["color.fragment"]="precision highp float;\r\n\r\nuniform vec4 color;\r\n\r\nvoid main(void) {\r\n	gl_FragColor = color;\r\n}",null!=Yr["color.vertex"]?r.setReserved("color.vertex","precision highp float;\r\n\r\n// Attributes\r\nattribute vec3 position;\r\n\r\n// Uniforms\r\nuniform mat4 worldViewProjection;\r\n\r\nvoid main(void) {\r\n	gl_Position = worldViewProjection * vec4(position, 1.0);\r\n}"):r.h["color.vertex"]="precision highp float;\r\n\r\n// Attributes\r\nattribute vec3 position;\r\n\r\n// Uniforms\r\nuniform mat4 worldViewProjection;\r\n\r\nvoid main(void) {\r\n	gl_Position = worldViewProjection * vec4(position, 1.0);\r\n}",null!=Yr["colorCorrection.fragment"]?r.setReserved("colorCorrection.fragment","precision highp float;\r\n\r\n// samplers\r\nuniform sampler2D textureSampler;	// screen render\r\nuniform sampler2D colorTable;		// color table with modified colors\r\n\r\n// varyings\r\nvarying vec2 vUV;\r\n\r\n// constants\r\nconst float SLICE_COUNT = 16.0;		// how many slices in the color cube; 1 slice = 1 pixel\r\n// it means the image is 256x16 pixels\r\n\r\nvec4 sampleAs3DTexture(sampler2D texture, vec3 uv, float width) {\r\n	float sliceSize = 1.0 / width;              // space of 1 slice\r\n	float slicePixelSize = sliceSize / width;           // space of 1 pixel\r\n	float sliceInnerSize = slicePixelSize * (width - 1.0);  // space of width pixels\r\n	float zSlice0 = min(floor(uv.z * width), width - 1.0);\r\n	float zSlice1 = min(zSlice0 + 1.0, width - 1.0);\r\n	float xOffset = slicePixelSize * 0.5 + uv.x * sliceInnerSize;\r\n	float s0 = xOffset + (zSlice0 * sliceSize);\r\n	float s1 = xOffset + (zSlice1 * sliceSize);\r\n	vec4 slice0Color = texture2D(texture, vec2(s0, uv.y));\r\n	vec4 slice1Color = texture2D(texture, vec2(s1, uv.y));\r\n	float zOffset = mod(uv.z * width, 1.0);\r\n	vec4 result = mix(slice0Color, slice1Color, zOffset);\r\n	return result;\r\n}\r\n\r\nvoid main(void)\r\n{\r\n	vec4 screen_color = texture2D(textureSampler, vUV);\r\n	gl_FragColor = sampleAs3DTexture(colorTable, screen_color.rgb, SLICE_COUNT);\r\n\r\n}"):r.h["colorCorrection.fragment"]="precision highp float;\r\n\r\n// samplers\r\nuniform sampler2D textureSampler;	// screen render\r\nuniform sampler2D colorTable;		// color table with modified colors\r\n\r\n// varyings\r\nvarying vec2 vUV;\r\n\r\n// constants\r\nconst float SLICE_COUNT = 16.0;		// how many slices in the color cube; 1 slice = 1 pixel\r\n// it means the image is 256x16 pixels\r\n\r\nvec4 sampleAs3DTexture(sampler2D texture, vec3 uv, float width) {\r\n	float sliceSize = 1.0 / width;              // space of 1 slice\r\n	float slicePixelSize = sliceSize / width;           // space of 1 pixel\r\n	float sliceInnerSize = slicePixelSize * (width - 1.0);  // space of width pixels\r\n	float zSlice0 = min(floor(uv.z * width), width - 1.0);\r\n	float zSlice1 = min(zSlice0 + 1.0, width - 1.0);\r\n	float xOffset = slicePixelSize * 0.5 + uv.x * sliceInnerSize;\r\n	float s0 = xOffset + (zSlice0 * sliceSize);\r\n	float s1 = xOffset + (zSlice1 * sliceSize);\r\n	vec4 slice0Color = texture2D(texture, vec2(s0, uv.y));\r\n	vec4 slice1Color = texture2D(texture, vec2(s1, uv.y));\r\n	float zOffset = mod(uv.z * width, 1.0);\r\n	vec4 result = mix(slice0Color, slice1Color, zOffset);\r\n	return result;\r\n}\r\n\r\nvoid main(void)\r\n{\r\n	vec4 screen_color = texture2D(textureSampler, vUV);\r\n	gl_FragColor = sampleAs3DTexture(colorTable, screen_color.rgb, SLICE_COUNT);\r\n\r\n}",null!=Yr["convolution.fragment"]?r.setReserved("convolution.fragment","precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\n\r\nuniform vec2 screenSize;\r\nuniform float kernel[9];\r\n\r\nvoid main(void)\r\n{\r\n	vec2 onePixel = vec2(1.0, 1.0) / screenSize;\r\n	vec4 colorSum =\r\n		texture2D(textureSampler, vUV + onePixel * vec2(-1, -1)) * kernel[0] +\r\n		texture2D(textureSampler, vUV + onePixel * vec2(0, -1)) * kernel[1] +\r\n		texture2D(textureSampler, vUV + onePixel * vec2(1, -1)) * kernel[2] +\r\n		texture2D(textureSampler, vUV + onePixel * vec2(-1, 0)) * kernel[3] +\r\n		texture2D(textureSampler, vUV + onePixel * vec2(0, 0)) * kernel[4] +\r\n		texture2D(textureSampler, vUV + onePixel * vec2(1, 0)) * kernel[5] +\r\n		texture2D(textureSampler, vUV + onePixel * vec2(-1, 1)) * kernel[6] +\r\n		texture2D(textureSampler, vUV + onePixel * vec2(0, 1)) * kernel[7] +\r\n		texture2D(textureSampler, vUV + onePixel * vec2(1, 1)) * kernel[8];\r\n\r\n	float kernelWeight =\r\n		kernel[0] +\r\n		kernel[1] +\r\n		kernel[2] +\r\n		kernel[3] +\r\n		kernel[4] +\r\n		kernel[5] +\r\n		kernel[6] +\r\n		kernel[7] +\r\n		kernel[8];\r\n\r\n	if (kernelWeight <= 0.0) {\r\n		kernelWeight = 1.0;\r\n	}\r\n\r\n	gl_FragColor = vec4((colorSum / kernelWeight).rgb, 1);\r\n}"):r.h["convolution.fragment"]="precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\n\r\nuniform vec2 screenSize;\r\nuniform float kernel[9];\r\n\r\nvoid main(void)\r\n{\r\n	vec2 onePixel = vec2(1.0, 1.0) / screenSize;\r\n	vec4 colorSum =\r\n		texture2D(textureSampler, vUV + onePixel * vec2(-1, -1)) * kernel[0] +\r\n		texture2D(textureSampler, vUV + onePixel * vec2(0, -1)) * kernel[1] +\r\n		texture2D(textureSampler, vUV + onePixel * vec2(1, -1)) * kernel[2] +\r\n		texture2D(textureSampler, vUV + onePixel * vec2(-1, 0)) * kernel[3] +\r\n		texture2D(textureSampler, vUV + onePixel * vec2(0, 0)) * kernel[4] +\r\n		texture2D(textureSampler, vUV + onePixel * vec2(1, 0)) * kernel[5] +\r\n		texture2D(textureSampler, vUV + onePixel * vec2(-1, 1)) * kernel[6] +\r\n		texture2D(textureSampler, vUV + onePixel * vec2(0, 1)) * kernel[7] +\r\n		texture2D(textureSampler, vUV + onePixel * vec2(1, 1)) * kernel[8];\r\n\r\n	float kernelWeight =\r\n		kernel[0] +\r\n		kernel[1] +\r\n		kernel[2] +\r\n		kernel[3] +\r\n		kernel[4] +\r\n		kernel[5] +\r\n		kernel[6] +\r\n		kernel[7] +\r\n		kernel[8];\r\n\r\n	if (kernelWeight <= 0.0) {\r\n		kernelWeight = 1.0;\r\n	}\r\n\r\n	gl_FragColor = vec4((colorSum / kernelWeight).rgb, 1);\r\n}",
null!=Yr["default.fragment"]?r.setReserved("default.fragment","#ifdef BUMP\r\n#extension GL_OES_standard_derivatives : enable\r\n#endif\r\n\r\n#ifdef LOGARITHMICDEPTH\r\n#extension GL_EXT_frag_depth : enable\r\n#endif\r\n\r\nprecision highp float;\r\n\r\n// Constants\r\n#define RECIPROCAL_PI2 0.15915494\r\n\r\nuniform vec3 vEyePosition;\r\nuniform vec3 vAmbientColor;\r\nuniform vec4 vDiffuseColor;\r\n#ifdef SPECULARTERM\r\nuniform vec4 vSpecularColor;\r\n#endif\r\nuniform vec3 vEmissiveColor;\r\n\r\n// Input\r\nvarying vec3 vPositionW;\r\n\r\n#ifdef NORMAL\r\nvarying vec3 vNormalW;\r\n#endif\r\n\r\n#ifdef VERTEXCOLOR\r\nvarying vec4 vColor;\r\n#endif\r\n\r\n// Lights\r\n#ifdef LIGHT0\r\nuniform vec4 vLightData0;\r\nuniform vec4 vLightDiffuse0;\r\n#ifdef SPECULARTERM\r\nuniform vec3 vLightSpecular0;\r\n#endif\r\n#ifdef SHADOW0\r\n#if defined(SPOTLIGHT0) || defined(DIRLIGHT0)\r\nvarying vec4 vPositionFromLight0;\r\nuniform sampler2D shadowSampler0;\r\n#else\r\nuniform samplerCube shadowSampler0;\r\n#endif\r\nuniform vec3 shadowsInfo0;\r\n#endif\r\n#ifdef SPOTLIGHT0\r\nuniform vec4 vLightDirection0;\r\n#endif\r\n#ifdef HEMILIGHT0\r\nuniform vec3 vLightGround0;\r\n#endif\r\n#endif\r\n\r\n#ifdef LIGHT1\r\nuniform vec4 vLightData1;\r\nuniform vec4 vLightDiffuse1;\r\n#ifdef SPECULARTERM\r\nuniform vec3 vLightSpecular1;\r\n#endif\r\n#ifdef SHADOW1\r\n#if defined(SPOTLIGHT1) || defined(DIRLIGHT1)\r\nvarying vec4 vPositionFromLight1;\r\nuniform sampler2D shadowSampler1;\r\n#else\r\nuniform samplerCube shadowSampler1;\r\n#endif\r\nuniform vec3 shadowsInfo1;\r\n#endif\r\n#ifdef SPOTLIGHT1\r\nuniform vec4 vLightDirection1;\r\n#endif\r\n#ifdef HEMILIGHT1\r\nuniform vec3 vLightGround1;\r\n#endif\r\n#endif\r\n\r\n#ifdef LIGHT2\r\nuniform vec4 vLightData2;\r\nuniform vec4 vLightDiffuse2;\r\n#ifdef SPECULARTERM\r\nuniform vec3 vLightSpecular2;\r\n#endif\r\n#ifdef SHADOW2\r\n#if defined(SPOTLIGHT2) || defined(DIRLIGHT2)\r\nvarying vec4 vPositionFromLight2;\r\nuniform sampler2D shadowSampler2;\r\n#else\r\nuniform samplerCube shadowSampler2;\r\n#endif\r\nuniform vec3 shadowsInfo2;\r\n#endif\r\n#ifdef SPOTLIGHT2\r\nuniform vec4 vLightDirection2;\r\n#endif\r\n#ifdef HEMILIGHT2\r\nuniform vec3 vLightGround2;\r\n#endif\r\n#endif\r\n\r\n#ifdef LIGHT3\r\nuniform vec4 vLightData3;\r\nuniform vec4 vLightDiffuse3;\r\n#ifdef SPECULARTERM\r\nuniform vec3 vLightSpecular3;\r\n#endif\r\n#ifdef SHADOW3\r\n#if defined(SPOTLIGHT3) || defined(DIRLIGHT3)\r\nvarying vec4 vPositionFromLight3;\r\nuniform sampler2D shadowSampler3;\r\n#else\r\nuniform samplerCube shadowSampler3;\r\n#endif\r\nuniform vec3 shadowsInfo3;\r\n#endif\r\n#ifdef SPOTLIGHT3\r\nuniform vec4 vLightDirection3;\r\n#endif\r\n#ifdef HEMILIGHT3\r\nuniform vec3 vLightGround3;\r\n#endif\r\n#endif\r\n\r\n// Samplers\r\n#ifdef DIFFUSE\r\nvarying vec2 vDiffuseUV;\r\nuniform sampler2D diffuseSampler;\r\nuniform vec2 vDiffuseInfos;\r\n#endif\r\n\r\n#ifdef AMBIENT\r\nvarying vec2 vAmbientUV;\r\nuniform sampler2D ambientSampler;\r\nuniform vec2 vAmbientInfos;\r\n#endif\r\n\r\n#ifdef OPACITY	\r\nvarying vec2 vOpacityUV;\r\nuniform sampler2D opacitySampler;\r\nuniform vec2 vOpacityInfos;\r\n#endif\r\n\r\n#ifdef EMISSIVE\r\nvarying vec2 vEmissiveUV;\r\nuniform vec2 vEmissiveInfos;\r\nuniform sampler2D emissiveSampler;\r\n#endif\r\n\r\n#ifdef LIGHTMAP\r\nvarying vec2 vLightmapUV;\r\nuniform vec2 vLightmapInfos;\r\nuniform sampler2D lightmapSampler;\r\n#endif\r\n\r\n#if defined(SPECULAR) && defined(SPECULARTERM)\r\nvarying vec2 vSpecularUV;\r\nuniform vec2 vSpecularInfos;\r\nuniform sampler2D specularSampler;\r\n#endif\r\n\r\n// Fresnel\r\n#ifdef FRESNEL\r\nfloat computeFresnelTerm(vec3 viewDirection, vec3 worldNormal, float bias, float power)\r\n{\r\n	float fresnelTerm = pow(bias + abs(dot(viewDirection, worldNormal)), power);\r\n	return clamp(fresnelTerm, 0., 1.);\r\n}\r\n#endif\r\n\r\n#ifdef DIFFUSEFRESNEL\r\nuniform vec4 diffuseLeftColor;\r\nuniform vec4 diffuseRightColor;\r\n#endif\r\n\r\n#ifdef OPACITYFRESNEL\r\nuniform vec4 opacityParts;\r\n#endif\r\n\r\n#ifdef EMISSIVEFRESNEL\r\nuniform vec4 emissiveLeftColor;\r\nuniform vec4 emissiveRightColor;\r\n#endif\r\n\r\n// Reflection\r\n#ifdef REFLECTION\r\nuniform vec2 vReflectionInfos;\r\n\r\n#ifdef REFLECTIONMAP_3D\r\nuniform samplerCube reflectionCubeSampler;\r\n#else\r\nuniform sampler2D reflection2DSampler;\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_SKYBOX\r\nvarying vec3 vPositionUVW;\r\n#else\r\n#ifdef REFLECTIONMAP_EQUIRECTANGULAR\r\nvarying vec3 vDirectionW;\r\n#endif\r\n\r\n#if defined(REFLECTIONMAP_PLANAR) || defined(REFLECTIONMAP_CUBIC) || defined(REFLECTIONMAP_PROJECTION)\r\nuniform mat4 reflectionMatrix;\r\n#endif\r\n#if defined(REFLECTIONMAP_SPHERICAL) || defined(REFLECTIONMAP_PROJECTION)\r\nuniform mat4 view;\r\n#endif\r\n#endif\r\n\r\nvec3 computeReflectionCoords(vec4 worldPos, vec3 worldNormal)\r\n{\r\n#ifdef REFLECTIONMAP_EQUIRECTANGULAR\r\n	vec3 direction = normalize(vDirectionW);\r\n\r\n	float t = clamp(direction.y * -0.5 + 0.5, 0., 1.0);\r\n	float s = atan(direction.z, direction.x) * RECIPROCAL_PI2 + 0.5;\r\n\r\n	return vec3(s, t, 0);\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_SPHERICAL\r\n	vec3 viewDir = normalize(vec3(view * worldPos));\r\n	vec3 viewNormal = normalize(vec3(view * vec4(worldNormal, 0.0)));\r\n\r\n	vec3 r = reflect(viewDir, viewNormal);\r\n	r.z = r.z - 1.0;\r\n\r\n	float m = 2.0 * length(r);\r\n\r\n	return vec3(r.x / m + 0.5, 1.0 - r.y / m - 0.5, 0);\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_PLANAR\r\n	vec3 viewDir = worldPos.xyz - vEyePosition;\r\n	vec3 coords = normalize(reflect(viewDir, worldNormal));\r\n\r\n	return vec3(reflectionMatrix * vec4(coords, 1));\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_CUBIC\r\n	vec3 viewDir = worldPos.xyz - vEyePosition;\r\n	vec3 coords = reflect(viewDir, worldNormal);\r\n#ifdef INVERTCUBICMAP\r\n	coords.y = 1.0 - coords.y;\r\n#endif\r\n	return vec3(reflectionMatrix * vec4(coords, 0));\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_PROJECTION\r\n	return vec3(reflectionMatrix * (view * worldPos));\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_SKYBOX\r\n	return vPositionUVW;\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_EXPLICIT\r\n	return vec3(0, 0, 0);\r\n#endif\r\n}\r\n\r\n#ifdef REFLECTIONFRESNEL\r\nuniform vec4 reflectionLeftColor;\r\nuniform vec4 reflectionRightColor;\r\n#endif\r\n\r\n#endif\r\n\r\n// Shadows\r\n#ifdef SHADOWS\r\n\r\nfloat unpack(vec4 color)\r\n{\r\n	const vec4 bit_shift = vec4(1.0 / (255.0 * 255.0 * 255.0), 1.0 / (255.0 * 255.0), 1.0 / 255.0, 1.0);\r\n	return dot(color, bit_shift);\r\n}\r\n\r\n#if defined(POINTLIGHT0) || defined(POINTLIGHT1) || defined(POINTLIGHT2) || defined(POINTLIGHT3)\r\nfloat computeShadowCube(vec3 lightPosition, samplerCube shadowSampler, float darkness, float bias)\r\n{\r\n	vec3 directionToLight = vPositionW - lightPosition;\r\n	float depth = length(directionToLight);\r\n\r\n	depth = clamp(depth, 0., 1.);\r\n\r\n	directionToLight.y = 1.0 - directionToLight.y;\r\n\r\n	float shadow = unpack(textureCube(shadowSampler, directionToLight)) + bias;\r\n\r\n	if (depth > shadow)\r\n	{\r\n		return darkness;\r\n	}\r\n	return 1.0;\r\n}\r\n\r\nfloat computeShadowWithPCFCube(vec3 lightPosition, samplerCube shadowSampler, float mapSize, float bias, float darkness)\r\n{\r\n	vec3 directionToLight = vPositionW - lightPosition;\r\n	float depth = length(directionToLight);\r\n	float diskScale = (1.0 - (1.0 + depth * 3.0)) / mapSize;\r\n\r\n	depth = clamp(depth, 0., 1.);\r\n\r\n	directionToLight.y = 1.0 - directionToLight.y;\r\n\r\n	float visibility = 1.;\r\n\r\n	vec3 poissonDisk[4];\r\n	poissonDisk[0] = vec3(-1.0, 1.0, -1.0);\r\n	poissonDisk[1] = vec3(1.0, -1.0, -1.0);\r\n	poissonDisk[2] = vec3(-1.0, -1.0, -1.0);\r\n	poissonDisk[3] = vec3(1.0, -1.0, 1.0);\r\n\r\n	// Poisson Sampling\r\n	float biasedDepth = depth - bias;\r\n\r\n	if (unpack(textureCube(shadowSampler, directionToLight + poissonDisk[0] * diskScale)) < biasedDepth) visibility -= 0.25;\r\n	if (unpack(textureCube(shadowSampler, directionToLight + poissonDisk[1] * diskScale)) < biasedDepth) visibility -= 0.25;\r\n	if (unpack(textureCube(shadowSampler, directionToLight + poissonDisk[2] * diskScale)) < biasedDepth) visibility -= 0.25;\r\n	if (unpack(textureCube(shadowSampler, directionToLight + poissonDisk[3] * diskScale)) < biasedDepth) visibility -= 0.25;\r\n\r\n	return  min(1.0, visibility + darkness);\r\n}\r\n#endif\r\n\r\n#if defined(SPOTLIGHT0) || defined(SPOTLIGHT1) || defined(SPOTLIGHT2) || defined(SPOTLIGHT3) ||  defined(DIRLIGHT0) || defined(DIRLIGHT1) || defined(DIRLIGHT2) || defined(DIRLIGHT3)\r\nfloat computeShadow(vec4 vPositionFromLight, sampler2D shadowSampler, float darkness, float bias)\r\n{\r\n	vec3 depth = vPositionFromLight.xyz / vPositionFromLight.w;\r\n	depth = 0.5 * depth + vec3(0.5);\r\n	vec2 uv = depth.xy;\r\n\r\n	if (uv.x < 0. || uv.x > 1.0 || uv.y < 0. || uv.y > 1.0)\r\n	{\r\n		return 1.0;\r\n	}\r\n\r\n	float shadow = unpack(texture2D(shadowSampler, uv)) + bias;\r\n\r\n	if (depth.z > shadow)\r\n	{\r\n		return darkness;\r\n	}\r\n	return 1.;\r\n}\r\n\r\nfloat computeShadowWithPCF(vec4 vPositionFromLight, sampler2D shadowSampler, float mapSize, float bias, float darkness)\r\n{\r\n	vec3 depth = vPositionFromLight.xyz / vPositionFromLight.w;\r\n	depth = 0.5 * depth + vec3(0.5);\r\n	vec2 uv = depth.xy;\r\n\r\n	if (uv.x < 0. || uv.x > 1.0 || uv.y < 0. || uv.y > 1.0)\r\n	{\r\n		return 1.0;\r\n	}\r\n\r\n	float visibility = 1.;\r\n\r\n	vec2 poissonDisk[4];\r\n	poissonDisk[0] = vec2(-0.94201624, -0.39906216);\r\n	poissonDisk[1] = vec2(0.94558609, -0.76890725);\r\n	poissonDisk[2] = vec2(-0.094184101, -0.92938870);\r\n	poissonDisk[3] = vec2(0.34495938, 0.29387760);\r\n\r\n	// Poisson Sampling\r\n	float biasedDepth = depth.z - bias;\r\n\r\n	if (unpack(texture2D(shadowSampler, uv + poissonDisk[0] / mapSize)) < biasedDepth) visibility -= 0.25;\r\n	if (unpack(texture2D(shadowSampler, uv + poissonDisk[1] / mapSize)) < biasedDepth) visibility -= 0.25;\r\n	if (unpack(texture2D(shadowSampler, uv + poissonDisk[2] / mapSize)) < biasedDepth) visibility -= 0.25;\r\n	if (unpack(texture2D(shadowSampler, uv + poissonDisk[3] / mapSize)) < biasedDepth) visibility -= 0.25;\r\n\r\n	return  min(1.0, visibility + darkness);\r\n}\r\n\r\n// Thanks to http://devmaster.net/\r\nfloat unpackHalf(vec2 color)\r\n{\r\n	return color.x + (color.y / 255.0);\r\n}\r\n\r\nfloat linstep(float low, float high, float v) {\r\n	return clamp((v - low) / (high - low), 0.0, 1.0);\r\n}\r\n\r\nfloat ChebychevInequality(vec2 moments, float compare, float bias)\r\n{\r\n	float p = smoothstep(compare - bias, compare, moments.x);\r\n	float variance = max(moments.y - moments.x * moments.x, 0.02);\r\n	float d = compare - moments.x;\r\n	float p_max = linstep(0.2, 1.0, variance / (variance + d * d));\r\n\r\n	return clamp(max(p, p_max), 0.0, 1.0);\r\n}\r\n\r\nfloat computeShadowWithVSM(vec4 vPositionFromLight, sampler2D shadowSampler, float bias, float darkness)\r\n{\r\n	vec3 depth = vPositionFromLight.xyz / vPositionFromLight.w;\r\n	depth = 0.5 * depth + vec3(0.5);\r\n	vec2 uv = depth.xy;\r\n\r\n	if (uv.x < 0. || uv.x > 1.0 || uv.y < 0. || uv.y > 1.0 || depth.z >= 1.0)\r\n	{\r\n		return 1.0;\r\n	}\r\n\r\n	vec4 texel = texture2D(shadowSampler, uv);\r\n\r\n	vec2 moments = vec2(unpackHalf(texel.xy), unpackHalf(texel.zw));\r\n	return min(1.0, 1.0 - ChebychevInequality(moments, depth.z, bias) + darkness);\r\n}\r\n#endif\r\n#endif\r\n\r\n// Bump\r\n#ifdef BUMP\r\nvarying vec2 vBumpUV;\r\nuniform vec2 vBumpInfos;\r\nuniform sampler2D bumpSampler;\r\n\r\n// Thanks to http://www.thetenthplanet.de/archives/1180\r\nmat3 cotangent_frame(vec3 normal, vec3 p, vec2 uv)\r\n{\r\n	// get edge vectors of the pixel triangle\r\n	vec3 dp1 = dFdx(p);\r\n	vec3 dp2 = dFdy(p);\r\n	vec2 duv1 = dFdx(uv);\r\n	vec2 duv2 = dFdy(uv);\r\n\r\n	// solve the linear system\r\n	vec3 dp2perp = cross(dp2, normal);\r\n	vec3 dp1perp = cross(normal, dp1);\r\n	vec3 tangent = dp2perp * duv1.x + dp1perp * duv2.x;\r\n	vec3 binormal = dp2perp * duv1.y + dp1perp * duv2.y;\r\n\r\n	// construct a scale-invariant frame \r\n	float invmax = inversesqrt(max(dot(tangent, tangent), dot(binormal, binormal)));\r\n	return mat3(tangent * invmax, binormal * invmax, normal);\r\n}\r\n\r\nvec3 perturbNormal(vec3 viewDir)\r\n{\r\n	vec3 map = texture2D(bumpSampler, vBumpUV).xyz;\r\n	map = map * 255. / 127. - 128. / 127.;\r\n	mat3 TBN = cotangent_frame(vNormalW * vBumpInfos.y, -viewDir, vBumpUV);\r\n	return normalize(TBN * map);\r\n}\r\n#endif\r\n\r\n#ifdef CLIPPLANE\r\nvarying float fClipDistance;\r\n#endif\r\n\r\n#ifdef LOGARITHMICDEPTH\r\nuniform float logarithmicDepthConstant;\r\nvarying float vFragmentDepth;\r\n#endif\r\n\r\n// Fog\r\n#ifdef FOG\r\n\r\n#define FOGMODE_NONE    0.\r\n#define FOGMODE_EXP     1.\r\n#define FOGMODE_EXP2    2.\r\n#define FOGMODE_LINEAR  3.\r\n#define E 2.71828\r\n\r\nuniform vec4 vFogInfos;\r\nuniform vec3 vFogColor;\r\nvarying float fFogDistance;\r\n\r\nfloat CalcFogFactor()\r\n{\r\n	float fogCoeff = 1.0;\r\n	float fogStart = vFogInfos.y;\r\n	float fogEnd = vFogInfos.z;\r\n	float fogDensity = vFogInfos.w;\r\n\r\n	if (FOGMODE_LINEAR == vFogInfos.x)\r\n	{\r\n		fogCoeff = (fogEnd - fFogDistance) / (fogEnd - fogStart);\r\n	}\r\n	else if (FOGMODE_EXP == vFogInfos.x)\r\n	{\r\n		fogCoeff = 1.0 / pow(E, fFogDistance * fogDensity);\r\n	}\r\n	else if (FOGMODE_EXP2 == vFogInfos.x)\r\n	{\r\n		fogCoeff = 1.0 / pow(E, fFogDistance * fFogDistance * fogDensity * fogDensity);\r\n	}\r\n\r\n	return clamp(fogCoeff, 0.0, 1.0);\r\n}\r\n#endif\r\n\r\n// Light Computing\r\nstruct lightingInfo\r\n{\r\n	vec3 diffuse;\r\n#ifdef SPECULARTERM\r\n	vec3 specular;\r\n#endif\r\n};\r\n\r\nlightingInfo computeLighting(vec3 viewDirectionW, vec3 vNormal, vec4 lightData, vec3 diffuseColor, vec3 specularColor, float range, float glossiness) {\r\n	lightingInfo result;\r\n\r\n	vec3 lightVectorW;\r\n	float attenuation = 1.0;\r\n	if (lightData.w == 0.)\r\n	{\r\n		vec3 direction = lightData.xyz - vPositionW;\r\n\r\n		attenuation = max(0., 1.0 - length(direction) / range);\r\n		lightVectorW = normalize(direction);\r\n	}\r\n	else\r\n	{\r\n		lightVectorW = normalize(-lightData.xyz);\r\n	}\r\n\r\n	// diffuse\r\n	float ndl = max(0., dot(vNormal, lightVectorW));\r\n	result.diffuse = ndl * diffuseColor * attenuation;\r\n\r\n#ifdef SPECULARTERM\r\n	// Specular\r\n	vec3 angleW = normalize(viewDirectionW + lightVectorW);\r\n	float specComp = max(0., dot(vNormal, angleW));\r\n	specComp = pow(specComp, max(1., glossiness));\r\n\r\n	result.specular = specComp * specularColor * attenuation;\r\n#endif\r\n	return result;\r\n}\r\n\r\nlightingInfo computeSpotLighting(vec3 viewDirectionW, vec3 vNormal, vec4 lightData, vec4 lightDirection, vec3 diffuseColor, vec3 specularColor, float range, float glossiness) {\r\n	lightingInfo result;\r\n\r\n	vec3 direction = lightData.xyz - vPositionW;\r\n	vec3 lightVectorW = normalize(direction);\r\n	float attenuation = max(0., 1.0 - length(direction) / range);\r\n\r\n	// diffuse\r\n	float cosAngle = max(0., dot(-lightDirection.xyz, lightVectorW));\r\n	float spotAtten = 0.0;\r\n\r\n	if (cosAngle >= lightDirection.w)\r\n	{\r\n		cosAngle = max(0., pow(cosAngle, lightData.w));\r\n		spotAtten = clamp((cosAngle - lightDirection.w) / (1. - cosAngle), 0.0, 1.0);\r\n\r\n		// Diffuse\r\n		float ndl = max(0., dot(vNormal, -lightDirection.xyz));\r\n		result.diffuse = ndl * spotAtten * diffuseColor * attenuation;\r\n\r\n#ifdef SPECULARTERM\r\n		// Specular\r\n		vec3 angleW = normalize(viewDirectionW - lightDirection.xyz);\r\n		float specComp = max(0., dot(vNormal, angleW));\r\n		specComp = pow(specComp, max(1., glossiness));\r\n\r\n		result.specular = specComp * specularColor * spotAtten * attenuation;\r\n#endif\r\n\r\n		return result;\r\n	}\r\n\r\n	result.diffuse = vec3(0.);\r\n#ifdef SPECULARTERM\r\n	result.specular = vec3(0.);\r\n#endif\r\n\r\n	return result;\r\n}\r\n\r\nlightingInfo computeHemisphericLighting(vec3 viewDirectionW, vec3 vNormal, vec4 lightData, vec3 diffuseColor, vec3 specularColor, vec3 groundColor, float glossiness) {\r\n	lightingInfo result;\r\n\r\n	// Diffuse\r\n	float ndl = dot(vNormal, lightData.xyz) * 0.5 + 0.5;\r\n	result.diffuse = mix(groundColor, diffuseColor, ndl);\r\n\r\n#ifdef SPECULARTERM\r\n	// Specular\r\n	vec3 angleW = normalize(viewDirectionW + lightData.xyz);\r\n	float specComp = max(0., dot(vNormal, angleW));\r\n	specComp = pow(specComp, max(1., glossiness));\r\n\r\n	result.specular = specComp * specularColor;\r\n#endif\r\n\r\n	return result;\r\n}\r\n\r\nvoid main(void) {\r\n	// Clip plane\r\n#ifdef CLIPPLANE\r\n	if (fClipDistance > 0.0)\r\n		discard;\r\n#endif\r\n\r\n	vec3 viewDirectionW = normalize(vEyePosition - vPositionW);\r\n\r\n	// Base color\r\n	vec4 baseColor = vec4(1., 1., 1., 1.);\r\n	vec3 diffuseColor = vDiffuseColor.rgb;\r\n\r\n	// Alpha\r\n	float alpha = vDiffuseColor.a;\r\n\r\n#ifdef DIFFUSE\r\n	baseColor = texture2D(diffuseSampler, vDiffuseUV);\r\n\r\n#ifdef ALPHATEST\r\n	if (baseColor.a < 0.4)\r\n		discard;\r\n#endif\r\n\r\n#ifdef ALPHAFROMDIFFUSE\r\n	alpha *= baseColor.a;\r\n#endif\r\n\r\n	baseColor.rgb *= vDiffuseInfos.y;\r\n#endif\r\n\r\n#ifdef VERTEXCOLOR\r\n	baseColor.rgb *= vColor.rgb;\r\n#endif\r\n\r\n	// Bump\r\n#ifdef NORMAL\r\n	vec3 normalW = normalize(vNormalW);\r\n#else\r\n	vec3 normalW = vec3(1.0, 1.0, 1.0);\r\n#endif\r\n\r\n\r\n#ifdef BUMP\r\n	normalW = perturbNormal(viewDirectionW);\r\n#endif\r\n\r\n	// Ambient color\r\n	vec3 baseAmbientColor = vec3(1., 1., 1.);\r\n\r\n#ifdef AMBIENT\r\n	baseAmbientColor = texture2D(ambientSampler, vAmbientUV).rgb * vAmbientInfos.y;\r\n#endif\r\n\r\n\r\n	// Specular map\r\n#ifdef SPECULARTERM\r\n	float glossiness = vSpecularColor.a;\r\n	vec3 specularColor = vSpecularColor.rgb;\r\n\r\n#ifdef SPECULAR\r\n	vec4 specularMapColor = texture2D(specularSampler, vSpecularUV);\r\n	specularColor = specularMapColor.rgb;\r\n#ifdef GLOSSINESS\r\n	glossiness = glossiness * specularMapColor.a;\r\n#endif\r\n#endif\r\n#else\r\n	float glossiness = 0.;\r\n#endif\r\n\r\n	// Lighting\r\n	vec3 diffuseBase = vec3(0., 0., 0.);\r\n#ifdef SPECULARTERM\r\n	vec3 specularBase = vec3(0., 0., 0.);\r\n#endif\r\n	float shadow = 1.;\r\n\r\n#ifdef LIGHT0\r\n#ifndef SPECULARTERM\r\n	vec3 vLightSpecular0 = vec3(0.0);\r\n#endif\r\n#ifdef SPOTLIGHT0\r\n	lightingInfo info = computeSpotLighting(viewDirectionW, normalW, vLightData0, vLightDirection0, vLightDiffuse0.rgb, vLightSpecular0, vLightDiffuse0.a, glossiness);\r\n#endif\r\n#ifdef HEMILIGHT0\r\n	lightingInfo info = computeHemisphericLighting(viewDirectionW, normalW, vLightData0, vLightDiffuse0.rgb, vLightSpecular0, vLightGround0, glossiness);\r\n#endif\r\n#if defined(POINTLIGHT0) || defined(DIRLIGHT0)\r\n	lightingInfo info = computeLighting(viewDirectionW, normalW, vLightData0, vLightDiffuse0.rgb, vLightSpecular0, vLightDiffuse0.a, glossiness);\r\n#endif\r\n#ifdef SHADOW0\r\n#ifdef SHADOWVSM0\r\n	shadow = computeShadowWithVSM(vPositionFromLight0, shadowSampler0, shadowsInfo0.z, shadowsInfo0.x);\r\n#else\r\n#ifdef SHADOWPCF0\r\n#if defined(POINTLIGHT0)\r\n	shadow = computeShadowWithPCFCube(vLightData0.xyz, shadowSampler0, shadowsInfo0.y, shadowsInfo0.z, shadowsInfo0.x);\r\n#else\r\n	shadow = computeShadowWithPCF(vPositionFromLight0, shadowSampler0, shadowsInfo0.y, shadowsInfo0.z, shadowsInfo0.x);\r\n#endif\r\n#else\r\n#if defined(POINTLIGHT0)\r\n	shadow = computeShadowCube(vLightData0.xyz, shadowSampler0, shadowsInfo0.x, shadowsInfo0.z);\r\n#else\r\n	shadow = computeShadow(vPositionFromLight0, shadowSampler0, shadowsInfo0.x, shadowsInfo0.z);\r\n#endif\r\n#endif\r\n#endif\r\n#else\r\n	shadow = 1.;\r\n#endif\r\n	diffuseBase += info.diffuse * shadow;\r\n#ifdef SPECULARTERM\r\n	specularBase += info.specular * shadow;\r\n#endif\r\n#endif\r\n\r\n#ifdef LIGHT1\r\n#ifndef SPECULARTERM\r\n	vec3 vLightSpecular1 = vec3(0.0);\r\n#endif\r\n#ifdef SPOTLIGHT1\r\n	info = computeSpotLighting(viewDirectionW, normalW, vLightData1, vLightDirection1, vLightDiffuse1.rgb, vLightSpecular1, vLightDiffuse1.a, glossiness);\r\n#endif\r\n#ifdef HEMILIGHT1\r\n	info = computeHemisphericLighting(viewDirectionW, normalW, vLightData1, vLightDiffuse1.rgb, vLightSpecular1, vLightGround1, glossiness);\r\n#endif\r\n#if defined(POINTLIGHT1) || defined(DIRLIGHT1)\r\n	info = computeLighting(viewDirectionW, normalW, vLightData1, vLightDiffuse1.rgb, vLightSpecular1, vLightDiffuse1.a, glossiness);\r\n#endif\r\n#ifdef SHADOW1\r\n#ifdef SHADOWVSM1\r\n	shadow = computeShadowWithVSM(vPositionFromLight1, shadowSampler1, shadowsInfo1.z, shadowsInfo1.x);\r\n#else\r\n#ifdef SHADOWPCF1\r\n#if defined(POINTLIGHT1)\r\n	shadow = computeShadowWithPCFCube(vLightData1.xyz, shadowSampler1, shadowsInfo1.y, shadowsInfo1.z, shadowsInfo1.x);\r\n#else\r\n	shadow = computeShadowWithPCF(vPositionFromLight1, shadowSampler1, shadowsInfo1.y, shadowsInfo1.z, shadowsInfo1.x);\r\n#endif\r\n#else\r\n#if defined(POINTLIGHT1)\r\n	shadow = computeShadowCube(vLightData1.xyz, shadowSampler1, shadowsInfo1.x, shadowsInfo1.z);\r\n#else\r\n	shadow = computeShadow(vPositionFromLight1, shadowSampler1, shadowsInfo1.x, shadowsInfo1.z);\r\n#endif\r\n#endif\r\n#endif\r\n#else\r\n	shadow = 1.;\r\n#endif\r\n	diffuseBase += info.diffuse * shadow;\r\n#ifdef SPECULARTERM\r\n	specularBase += info.specular * shadow;\r\n#endif\r\n#endif\r\n\r\n#ifdef LIGHT2\r\n#ifndef SPECULARTERM\r\n	vec3 vLightSpecular2 = vec3(0.0);\r\n#endif\r\n#ifdef SPOTLIGHT2\r\n	info = computeSpotLighting(viewDirectionW, normalW, vLightData2, vLightDirection2, vLightDiffuse2.rgb, vLightSpecular2, vLightDiffuse2.a, glossiness);\r\n#endif\r\n#ifdef HEMILIGHT2\r\n	info = computeHemisphericLighting(viewDirectionW, normalW, vLightData2, vLightDiffuse2.rgb, vLightSpecular2, vLightGround2, glossiness);\r\n#endif\r\n#if defined(POINTLIGHT2) || defined(DIRLIGHT2)\r\n	info = computeLighting(viewDirectionW, normalW, vLightData2, vLightDiffuse2.rgb, vLightSpecular2, vLightDiffuse2.a, glossiness);\r\n#endif\r\n#ifdef SHADOW2\r\n#ifdef SHADOWVSM2\r\n	shadow = computeShadowWithVSM(vPositionFromLight2, shadowSampler2, shadowsInfo2.z, shadowsInfo2.x);\r\n#else\r\n#ifdef SHADOWPCF2\r\n#if defined(POINTLIGHT2)\r\n	shadow = computeShadowWithPCFCube(vLightData2.xyz, shadowSampler2, shadowsInfo2.y, shadowsInfo2.z, shadowsInfo2.x);\r\n#else\r\n	shadow = computeShadowWithPCF(vPositionFromLight2, shadowSampler2, shadowsInfo2.y, shadowsInfo2.z, shadowsInfo2.x);\r\n#endif\r\n#else\r\n#if defined(POINTLIGHT2)\r\n	shadow = computeShadowCube(vLightData2.xyz, shadowSampler2, shadowsInfo2.x, shadowsInfo2.z);\r\n#else\r\n	shadow = computeShadow(vPositionFromLight2, shadowSampler2, shadowsInfo2.x, shadowsInfo2.z);\r\n#endif\r\n#endif	\r\n#endif	\r\n#else\r\n	shadow = 1.;\r\n#endif\r\n	diffuseBase += info.diffuse * shadow;\r\n#ifdef SPECULARTERM\r\n	specularBase += info.specular * shadow;\r\n#endif\r\n#endif\r\n\r\n#ifdef LIGHT3\r\n#ifndef SPECULARTERM\r\n	vec3 vLightSpecular3 = vec3(0.0);\r\n#endif\r\n#ifdef SPOTLIGHT3\r\n	info = computeSpotLighting(viewDirectionW, normalW, vLightData3, vLightDirection3, vLightDiffuse3.rgb, vLightSpecular3, vLightDiffuse3.a, glossiness);\r\n#endif\r\n#ifdef HEMILIGHT3\r\n	info = computeHemisphericLighting(viewDirectionW, normalW, vLightData3, vLightDiffuse3.rgb, vLightSpecular3, vLightGround3, glossiness);\r\n#endif\r\n#if defined(POINTLIGHT3) || defined(DIRLIGHT3)\r\n	info = computeLighting(viewDirectionW, normalW, vLightData3, vLightDiffuse3.rgb, vLightSpecular3, vLightDiffuse3.a, glossiness);\r\n#endif\r\n#ifdef SHADOW3\r\n#ifdef SHADOWVSM3\r\n	shadow = computeShadowWithVSM(vPositionFromLight3, shadowSampler3, shadowsInfo3.z, shadowsInfo3.x);\r\n#else\r\n#ifdef SHADOWPCF3\r\n#if defined(POINTLIGHT3)\r\n	shadow = computeShadowWithPCFCube(vLightData3.xyz, shadowSampler3, shadowsInfo3.y, shadowsInfo3.z, shadowsInfo3.x);\r\n#else\r\n	shadow = computeShadowWithPCF(vPositionFromLight3, shadowSampler3, shadowsInfo3.y, shadowsInfo3.z, shadowsInfo3.x);\r\n#endif\r\n#else\r\n#if defined(POINTLIGHT3)\r\n	shadow = computeShadowCube(vLightData3.xyz, shadowSampler3, shadowsInfo3.x, shadowsInfo3.z);\r\n#else\r\n	shadow = computeShadow(vPositionFromLight3, shadowSampler3, shadowsInfo3.x, shadowsInfo3.z);\r\n#endif\r\n#endif	\r\n#endif	\r\n#else\r\n	shadow = 1.;\r\n#endif\r\n	diffuseBase += info.diffuse * shadow;\r\n#ifdef SPECULARTERM\r\n	specularBase += info.specular * shadow;\r\n#endif\r\n#endif\r\n\r\n	// Reflection\r\n	vec3 reflectionColor = vec3(0., 0., 0.);\r\n\r\n\r\n#ifdef REFLECTION\r\n	vec3 vReflectionUVW = computeReflectionCoords(vec4(vPositionW, 1.0), normalW);\r\n\r\n#ifdef REFLECTIONMAP_3D\r\n#ifdef ROUGHNESS\r\n	 float bias = vReflectionInfos.y;\r\n\r\n	#ifdef SPECULARTERM\r\n	#ifdef SPECULAR\r\n	#ifdef GLOSSINESS\r\n		bias *= (1.0 - specularMapColor.a);\r\n	#endif\r\n	#endif\r\n	#endif\r\n\r\n	reflectionColor = textureCube(reflectionCubeSampler, vReflectionUVW, bias).rgb * vReflectionInfos.x;\r\n#else\r\n	reflectionColor = textureCube(reflectionCubeSampler, vReflectionUVW).rgb * vReflectionInfos.x;\r\n#endif\r\n\r\n#else\r\n	vec2 coords = vReflectionUVW.xy;\r\n\r\n#ifdef REFLECTIONMAP_PROJECTION\r\n	coords /= vReflectionUVW.z;\r\n#endif\r\n\r\n	coords.y = 1.0 - coords.y;\r\n\r\n	reflectionColor = texture2D(reflection2DSampler, coords).rgb * vReflectionInfos.x;\r\n#endif\r\n\r\n#ifdef REFLECTIONFRESNEL\r\n	float reflectionFresnelTerm = computeFresnelTerm(viewDirectionW, normalW, reflectionRightColor.a, reflectionLeftColor.a);\r\n\r\n#ifdef REFLECTIONFRESNELFROMSPECULAR\r\n#ifdef SPECULARTERM\r\n	reflectionColor *= specularColor.rgb * (1.0 - reflectionFresnelTerm) + reflectionFresnelTerm * reflectionRightColor.rgb;\r\n#else\r\n	reflectionColor *= reflectionLeftColor.rgb * (1.0 - reflectionFresnelTerm) + reflectionFresnelTerm * reflectionRightColor.rgb;\r\n#endif\r\n#else\r\n	reflectionColor *= reflectionLeftColor.rgb * (1.0 - reflectionFresnelTerm) + reflectionFresnelTerm * reflectionRightColor.rgb;\r\n#endif\r\n#endif\r\n#endif\r\n\r\n\r\n#ifdef OPACITY\r\n	vec4 opacityMap = texture2D(opacitySampler, vOpacityUV);\r\n\r\n#ifdef OPACITYRGB\r\n	opacityMap.rgb = opacityMap.rgb * vec3(0.3, 0.59, 0.11);\r\n	alpha *= (opacityMap.x + opacityMap.y + opacityMap.z)* vOpacityInfos.y;\r\n#else\r\n	alpha *= opacityMap.a * vOpacityInfos.y;\r\n#endif\r\n\r\n#endif\r\n\r\n#ifdef VERTEXALPHA\r\n	alpha *= vColor.a;\r\n#endif\r\n\r\n#ifdef OPACITYFRESNEL\r\n	float opacityFresnelTerm = computeFresnelTerm(viewDirectionW, normalW, opacityParts.z, opacityParts.w);\r\n\r\n	alpha += opacityParts.x * (1.0 - opacityFresnelTerm) + opacityFresnelTerm * opacityParts.y;\r\n#endif\r\n\r\n	// Emissive\r\n	vec3 emissiveColor = vEmissiveColor;\r\n#ifdef EMISSIVE\r\n	emissiveColor += texture2D(emissiveSampler, vEmissiveUV).rgb * vEmissiveInfos.y;\r\n#endif\r\n\r\n#ifdef EMISSIVEFRESNEL\r\n	float emissiveFresnelTerm = computeFresnelTerm(viewDirectionW, normalW, emissiveRightColor.a, emissiveLeftColor.a);\r\n\r\n	emissiveColor *= emissiveLeftColor.rgb * (1.0 - emissiveFresnelTerm) + emissiveFresnelTerm * emissiveRightColor.rgb;\r\n#endif\r\n\r\n	// Fresnel\r\n#ifdef DIFFUSEFRESNEL\r\n	float diffuseFresnelTerm = computeFresnelTerm(viewDirectionW, normalW, diffuseRightColor.a, diffuseLeftColor.a);\r\n\r\n	diffuseBase *= diffuseLeftColor.rgb * (1.0 - diffuseFresnelTerm) + diffuseFresnelTerm * diffuseRightColor.rgb;\r\n#endif\r\n\r\n	// Composition\r\n#ifdef EMISSIVEASILLUMINATION\r\n	vec3 finalDiffuse = clamp(diffuseBase * diffuseColor + vAmbientColor, 0.0, 1.0) * baseColor.rgb;\r\n#else\r\n#ifdef LINKEMISSIVEWITHDIFFUSE\r\n	vec3 finalDiffuse = clamp((diffuseBase + emissiveColor) * diffuseColor + vAmbientColor, 0.0, 1.0) * baseColor.rgb;\r\n#else\r\n	vec3 finalDiffuse = clamp(diffuseBase * diffuseColor + emissiveColor + vAmbientColor, 0.0, 1.0) * baseColor.rgb;\r\n#endif\r\n#endif\r\n\r\n#ifdef SPECULARTERM\r\n	vec3 finalSpecular = specularBase * specularColor;\r\n#else\r\n	vec3 finalSpecular = vec3(0.0);\r\n#endif\r\n\r\n#ifdef SPECULAROVERALPHA\r\n	alpha = clamp(alpha + dot(finalSpecular, vec3(0.3, 0.59, 0.11)), 0., 1.);\r\n#endif\r\n\r\n	// Composition\r\n#ifdef EMISSIVEASILLUMINATION\r\n	vec4 color = vec4(clamp(finalDiffuse * baseAmbientColor + finalSpecular + reflectionColor + emissiveColor, 0.0, 1.0), alpha);\r\n#else\r\n	vec4 color = vec4(finalDiffuse * baseAmbientColor + finalSpecular + reflectionColor, alpha);\r\n#endif\r\n\r\n#ifdef LIGHTMAP\r\n	vec3 lightmapColor = texture2D(lightmapSampler, vLightmapUV).rgb * vLightmapInfos.y;\r\n\r\n#ifdef USELIGHTMAPASSHADOWMAP\r\n	color.rgb *= lightmapColor;\r\n#else\r\n	color.rgb += lightmapColor;\r\n#endif\r\n#endif\r\n\r\n#ifdef LOGARITHMICDEPTH\r\n	gl_FragDepthEXT = log2(vFragmentDepth) * logarithmicDepthConstant * 0.5;\r\n#endif\r\n\r\n#ifdef FOG\r\n	float fog = CalcFogFactor();\r\n	color.rgb = fog * color.rgb + (1.0 - fog) * vFogColor;\r\n#endif\r\n\r\n	gl_FragColor = color;\r\n}"):r.h["default.fragment"]="#ifdef BUMP\r\n#extension GL_OES_standard_derivatives : enable\r\n#endif\r\n\r\n#ifdef LOGARITHMICDEPTH\r\n#extension GL_EXT_frag_depth : enable\r\n#endif\r\n\r\nprecision highp float;\r\n\r\n// Constants\r\n#define RECIPROCAL_PI2 0.15915494\r\n\r\nuniform vec3 vEyePosition;\r\nuniform vec3 vAmbientColor;\r\nuniform vec4 vDiffuseColor;\r\n#ifdef SPECULARTERM\r\nuniform vec4 vSpecularColor;\r\n#endif\r\nuniform vec3 vEmissiveColor;\r\n\r\n// Input\r\nvarying vec3 vPositionW;\r\n\r\n#ifdef NORMAL\r\nvarying vec3 vNormalW;\r\n#endif\r\n\r\n#ifdef VERTEXCOLOR\r\nvarying vec4 vColor;\r\n#endif\r\n\r\n// Lights\r\n#ifdef LIGHT0\r\nuniform vec4 vLightData0;\r\nuniform vec4 vLightDiffuse0;\r\n#ifdef SPECULARTERM\r\nuniform vec3 vLightSpecular0;\r\n#endif\r\n#ifdef SHADOW0\r\n#if defined(SPOTLIGHT0) || defined(DIRLIGHT0)\r\nvarying vec4 vPositionFromLight0;\r\nuniform sampler2D shadowSampler0;\r\n#else\r\nuniform samplerCube shadowSampler0;\r\n#endif\r\nuniform vec3 shadowsInfo0;\r\n#endif\r\n#ifdef SPOTLIGHT0\r\nuniform vec4 vLightDirection0;\r\n#endif\r\n#ifdef HEMILIGHT0\r\nuniform vec3 vLightGround0;\r\n#endif\r\n#endif\r\n\r\n#ifdef LIGHT1\r\nuniform vec4 vLightData1;\r\nuniform vec4 vLightDiffuse1;\r\n#ifdef SPECULARTERM\r\nuniform vec3 vLightSpecular1;\r\n#endif\r\n#ifdef SHADOW1\r\n#if defined(SPOTLIGHT1) || defined(DIRLIGHT1)\r\nvarying vec4 vPositionFromLight1;\r\nuniform sampler2D shadowSampler1;\r\n#else\r\nuniform samplerCube shadowSampler1;\r\n#endif\r\nuniform vec3 shadowsInfo1;\r\n#endif\r\n#ifdef SPOTLIGHT1\r\nuniform vec4 vLightDirection1;\r\n#endif\r\n#ifdef HEMILIGHT1\r\nuniform vec3 vLightGround1;\r\n#endif\r\n#endif\r\n\r\n#ifdef LIGHT2\r\nuniform vec4 vLightData2;\r\nuniform vec4 vLightDiffuse2;\r\n#ifdef SPECULARTERM\r\nuniform vec3 vLightSpecular2;\r\n#endif\r\n#ifdef SHADOW2\r\n#if defined(SPOTLIGHT2) || defined(DIRLIGHT2)\r\nvarying vec4 vPositionFromLight2;\r\nuniform sampler2D shadowSampler2;\r\n#else\r\nuniform samplerCube shadowSampler2;\r\n#endif\r\nuniform vec3 shadowsInfo2;\r\n#endif\r\n#ifdef SPOTLIGHT2\r\nuniform vec4 vLightDirection2;\r\n#endif\r\n#ifdef HEMILIGHT2\r\nuniform vec3 vLightGround2;\r\n#endif\r\n#endif\r\n\r\n#ifdef LIGHT3\r\nuniform vec4 vLightData3;\r\nuniform vec4 vLightDiffuse3;\r\n#ifdef SPECULARTERM\r\nuniform vec3 vLightSpecular3;\r\n#endif\r\n#ifdef SHADOW3\r\n#if defined(SPOTLIGHT3) || defined(DIRLIGHT3)\r\nvarying vec4 vPositionFromLight3;\r\nuniform sampler2D shadowSampler3;\r\n#else\r\nuniform samplerCube shadowSampler3;\r\n#endif\r\nuniform vec3 shadowsInfo3;\r\n#endif\r\n#ifdef SPOTLIGHT3\r\nuniform vec4 vLightDirection3;\r\n#endif\r\n#ifdef HEMILIGHT3\r\nuniform vec3 vLightGround3;\r\n#endif\r\n#endif\r\n\r\n// Samplers\r\n#ifdef DIFFUSE\r\nvarying vec2 vDiffuseUV;\r\nuniform sampler2D diffuseSampler;\r\nuniform vec2 vDiffuseInfos;\r\n#endif\r\n\r\n#ifdef AMBIENT\r\nvarying vec2 vAmbientUV;\r\nuniform sampler2D ambientSampler;\r\nuniform vec2 vAmbientInfos;\r\n#endif\r\n\r\n#ifdef OPACITY	\r\nvarying vec2 vOpacityUV;\r\nuniform sampler2D opacitySampler;\r\nuniform vec2 vOpacityInfos;\r\n#endif\r\n\r\n#ifdef EMISSIVE\r\nvarying vec2 vEmissiveUV;\r\nuniform vec2 vEmissiveInfos;\r\nuniform sampler2D emissiveSampler;\r\n#endif\r\n\r\n#ifdef LIGHTMAP\r\nvarying vec2 vLightmapUV;\r\nuniform vec2 vLightmapInfos;\r\nuniform sampler2D lightmapSampler;\r\n#endif\r\n\r\n#if defined(SPECULAR) && defined(SPECULARTERM)\r\nvarying vec2 vSpecularUV;\r\nuniform vec2 vSpecularInfos;\r\nuniform sampler2D specularSampler;\r\n#endif\r\n\r\n// Fresnel\r\n#ifdef FRESNEL\r\nfloat computeFresnelTerm(vec3 viewDirection, vec3 worldNormal, float bias, float power)\r\n{\r\n	float fresnelTerm = pow(bias + abs(dot(viewDirection, worldNormal)), power);\r\n	return clamp(fresnelTerm, 0., 1.);\r\n}\r\n#endif\r\n\r\n#ifdef DIFFUSEFRESNEL\r\nuniform vec4 diffuseLeftColor;\r\nuniform vec4 diffuseRightColor;\r\n#endif\r\n\r\n#ifdef OPACITYFRESNEL\r\nuniform vec4 opacityParts;\r\n#endif\r\n\r\n#ifdef EMISSIVEFRESNEL\r\nuniform vec4 emissiveLeftColor;\r\nuniform vec4 emissiveRightColor;\r\n#endif\r\n\r\n// Reflection\r\n#ifdef REFLECTION\r\nuniform vec2 vReflectionInfos;\r\n\r\n#ifdef REFLECTIONMAP_3D\r\nuniform samplerCube reflectionCubeSampler;\r\n#else\r\nuniform sampler2D reflection2DSampler;\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_SKYBOX\r\nvarying vec3 vPositionUVW;\r\n#else\r\n#ifdef REFLECTIONMAP_EQUIRECTANGULAR\r\nvarying vec3 vDirectionW;\r\n#endif\r\n\r\n#if defined(REFLECTIONMAP_PLANAR) || defined(REFLECTIONMAP_CUBIC) || defined(REFLECTIONMAP_PROJECTION)\r\nuniform mat4 reflectionMatrix;\r\n#endif\r\n#if defined(REFLECTIONMAP_SPHERICAL) || defined(REFLECTIONMAP_PROJECTION)\r\nuniform mat4 view;\r\n#endif\r\n#endif\r\n\r\nvec3 computeReflectionCoords(vec4 worldPos, vec3 worldNormal)\r\n{\r\n#ifdef REFLECTIONMAP_EQUIRECTANGULAR\r\n	vec3 direction = normalize(vDirectionW);\r\n\r\n	float t = clamp(direction.y * -0.5 + 0.5, 0., 1.0);\r\n	float s = atan(direction.z, direction.x) * RECIPROCAL_PI2 + 0.5;\r\n\r\n	return vec3(s, t, 0);\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_SPHERICAL\r\n	vec3 viewDir = normalize(vec3(view * worldPos));\r\n	vec3 viewNormal = normalize(vec3(view * vec4(worldNormal, 0.0)));\r\n\r\n	vec3 r = reflect(viewDir, viewNormal);\r\n	r.z = r.z - 1.0;\r\n\r\n	float m = 2.0 * length(r);\r\n\r\n	return vec3(r.x / m + 0.5, 1.0 - r.y / m - 0.5, 0);\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_PLANAR\r\n	vec3 viewDir = worldPos.xyz - vEyePosition;\r\n	vec3 coords = normalize(reflect(viewDir, worldNormal));\r\n\r\n	return vec3(reflectionMatrix * vec4(coords, 1));\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_CUBIC\r\n	vec3 viewDir = worldPos.xyz - vEyePosition;\r\n	vec3 coords = reflect(viewDir, worldNormal);\r\n#ifdef INVERTCUBICMAP\r\n	coords.y = 1.0 - coords.y;\r\n#endif\r\n	return vec3(reflectionMatrix * vec4(coords, 0));\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_PROJECTION\r\n	return vec3(reflectionMatrix * (view * worldPos));\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_SKYBOX\r\n	return vPositionUVW;\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_EXPLICIT\r\n	return vec3(0, 0, 0);\r\n#endif\r\n}\r\n\r\n#ifdef REFLECTIONFRESNEL\r\nuniform vec4 reflectionLeftColor;\r\nuniform vec4 reflectionRightColor;\r\n#endif\r\n\r\n#endif\r\n\r\n// Shadows\r\n#ifdef SHADOWS\r\n\r\nfloat unpack(vec4 color)\r\n{\r\n	const vec4 bit_shift = vec4(1.0 / (255.0 * 255.0 * 255.0), 1.0 / (255.0 * 255.0), 1.0 / 255.0, 1.0);\r\n	return dot(color, bit_shift);\r\n}\r\n\r\n#if defined(POINTLIGHT0) || defined(POINTLIGHT1) || defined(POINTLIGHT2) || defined(POINTLIGHT3)\r\nfloat computeShadowCube(vec3 lightPosition, samplerCube shadowSampler, float darkness, float bias)\r\n{\r\n	vec3 directionToLight = vPositionW - lightPosition;\r\n	float depth = length(directionToLight);\r\n\r\n	depth = clamp(depth, 0., 1.);\r\n\r\n	directionToLight.y = 1.0 - directionToLight.y;\r\n\r\n	float shadow = unpack(textureCube(shadowSampler, directionToLight)) + bias;\r\n\r\n	if (depth > shadow)\r\n	{\r\n		return darkness;\r\n	}\r\n	return 1.0;\r\n}\r\n\r\nfloat computeShadowWithPCFCube(vec3 lightPosition, samplerCube shadowSampler, float mapSize, float bias, float darkness)\r\n{\r\n	vec3 directionToLight = vPositionW - lightPosition;\r\n	float depth = length(directionToLight);\r\n	float diskScale = (1.0 - (1.0 + depth * 3.0)) / mapSize;\r\n\r\n	depth = clamp(depth, 0., 1.);\r\n\r\n	directionToLight.y = 1.0 - directionToLight.y;\r\n\r\n	float visibility = 1.;\r\n\r\n	vec3 poissonDisk[4];\r\n	poissonDisk[0] = vec3(-1.0, 1.0, -1.0);\r\n	poissonDisk[1] = vec3(1.0, -1.0, -1.0);\r\n	poissonDisk[2] = vec3(-1.0, -1.0, -1.0);\r\n	poissonDisk[3] = vec3(1.0, -1.0, 1.0);\r\n\r\n	// Poisson Sampling\r\n	float biasedDepth = depth - bias;\r\n\r\n	if (unpack(textureCube(shadowSampler, directionToLight + poissonDisk[0] * diskScale)) < biasedDepth) visibility -= 0.25;\r\n	if (unpack(textureCube(shadowSampler, directionToLight + poissonDisk[1] * diskScale)) < biasedDepth) visibility -= 0.25;\r\n	if (unpack(textureCube(shadowSampler, directionToLight + poissonDisk[2] * diskScale)) < biasedDepth) visibility -= 0.25;\r\n	if (unpack(textureCube(shadowSampler, directionToLight + poissonDisk[3] * diskScale)) < biasedDepth) visibility -= 0.25;\r\n\r\n	return  min(1.0, visibility + darkness);\r\n}\r\n#endif\r\n\r\n#if defined(SPOTLIGHT0) || defined(SPOTLIGHT1) || defined(SPOTLIGHT2) || defined(SPOTLIGHT3) ||  defined(DIRLIGHT0) || defined(DIRLIGHT1) || defined(DIRLIGHT2) || defined(DIRLIGHT3)\r\nfloat computeShadow(vec4 vPositionFromLight, sampler2D shadowSampler, float darkness, float bias)\r\n{\r\n	vec3 depth = vPositionFromLight.xyz / vPositionFromLight.w;\r\n	depth = 0.5 * depth + vec3(0.5);\r\n	vec2 uv = depth.xy;\r\n\r\n	if (uv.x < 0. || uv.x > 1.0 || uv.y < 0. || uv.y > 1.0)\r\n	{\r\n		return 1.0;\r\n	}\r\n\r\n	float shadow = unpack(texture2D(shadowSampler, uv)) + bias;\r\n\r\n	if (depth.z > shadow)\r\n	{\r\n		return darkness;\r\n	}\r\n	return 1.;\r\n}\r\n\r\nfloat computeShadowWithPCF(vec4 vPositionFromLight, sampler2D shadowSampler, float mapSize, float bias, float darkness)\r\n{\r\n	vec3 depth = vPositionFromLight.xyz / vPositionFromLight.w;\r\n	depth = 0.5 * depth + vec3(0.5);\r\n	vec2 uv = depth.xy;\r\n\r\n	if (uv.x < 0. || uv.x > 1.0 || uv.y < 0. || uv.y > 1.0)\r\n	{\r\n		return 1.0;\r\n	}\r\n\r\n	float visibility = 1.;\r\n\r\n	vec2 poissonDisk[4];\r\n	poissonDisk[0] = vec2(-0.94201624, -0.39906216);\r\n	poissonDisk[1] = vec2(0.94558609, -0.76890725);\r\n	poissonDisk[2] = vec2(-0.094184101, -0.92938870);\r\n	poissonDisk[3] = vec2(0.34495938, 0.29387760);\r\n\r\n	// Poisson Sampling\r\n	float biasedDepth = depth.z - bias;\r\n\r\n	if (unpack(texture2D(shadowSampler, uv + poissonDisk[0] / mapSize)) < biasedDepth) visibility -= 0.25;\r\n	if (unpack(texture2D(shadowSampler, uv + poissonDisk[1] / mapSize)) < biasedDepth) visibility -= 0.25;\r\n	if (unpack(texture2D(shadowSampler, uv + poissonDisk[2] / mapSize)) < biasedDepth) visibility -= 0.25;\r\n	if (unpack(texture2D(shadowSampler, uv + poissonDisk[3] / mapSize)) < biasedDepth) visibility -= 0.25;\r\n\r\n	return  min(1.0, visibility + darkness);\r\n}\r\n\r\n// Thanks to http://devmaster.net/\r\nfloat unpackHalf(vec2 color)\r\n{\r\n	return color.x + (color.y / 255.0);\r\n}\r\n\r\nfloat linstep(float low, float high, float v) {\r\n	return clamp((v - low) / (high - low), 0.0, 1.0);\r\n}\r\n\r\nfloat ChebychevInequality(vec2 moments, float compare, float bias)\r\n{\r\n	float p = smoothstep(compare - bias, compare, moments.x);\r\n	float variance = max(moments.y - moments.x * moments.x, 0.02);\r\n	float d = compare - moments.x;\r\n	float p_max = linstep(0.2, 1.0, variance / (variance + d * d));\r\n\r\n	return clamp(max(p, p_max), 0.0, 1.0);\r\n}\r\n\r\nfloat computeShadowWithVSM(vec4 vPositionFromLight, sampler2D shadowSampler, float bias, float darkness)\r\n{\r\n	vec3 depth = vPositionFromLight.xyz / vPositionFromLight.w;\r\n	depth = 0.5 * depth + vec3(0.5);\r\n	vec2 uv = depth.xy;\r\n\r\n	if (uv.x < 0. || uv.x > 1.0 || uv.y < 0. || uv.y > 1.0 || depth.z >= 1.0)\r\n	{\r\n		return 1.0;\r\n	}\r\n\r\n	vec4 texel = texture2D(shadowSampler, uv);\r\n\r\n	vec2 moments = vec2(unpackHalf(texel.xy), unpackHalf(texel.zw));\r\n	return min(1.0, 1.0 - ChebychevInequality(moments, depth.z, bias) + darkness);\r\n}\r\n#endif\r\n#endif\r\n\r\n// Bump\r\n#ifdef BUMP\r\nvarying vec2 vBumpUV;\r\nuniform vec2 vBumpInfos;\r\nuniform sampler2D bumpSampler;\r\n\r\n// Thanks to http://www.thetenthplanet.de/archives/1180\r\nmat3 cotangent_frame(vec3 normal, vec3 p, vec2 uv)\r\n{\r\n	// get edge vectors of the pixel triangle\r\n	vec3 dp1 = dFdx(p);\r\n	vec3 dp2 = dFdy(p);\r\n	vec2 duv1 = dFdx(uv);\r\n	vec2 duv2 = dFdy(uv);\r\n\r\n	// solve the linear system\r\n	vec3 dp2perp = cross(dp2, normal);\r\n	vec3 dp1perp = cross(normal, dp1);\r\n	vec3 tangent = dp2perp * duv1.x + dp1perp * duv2.x;\r\n	vec3 binormal = dp2perp * duv1.y + dp1perp * duv2.y;\r\n\r\n	// construct a scale-invariant frame \r\n	float invmax = inversesqrt(max(dot(tangent, tangent), dot(binormal, binormal)));\r\n	return mat3(tangent * invmax, binormal * invmax, normal);\r\n}\r\n\r\nvec3 perturbNormal(vec3 viewDir)\r\n{\r\n	vec3 map = texture2D(bumpSampler, vBumpUV).xyz;\r\n	map = map * 255. / 127. - 128. / 127.;\r\n	mat3 TBN = cotangent_frame(vNormalW * vBumpInfos.y, -viewDir, vBumpUV);\r\n	return normalize(TBN * map);\r\n}\r\n#endif\r\n\r\n#ifdef CLIPPLANE\r\nvarying float fClipDistance;\r\n#endif\r\n\r\n#ifdef LOGARITHMICDEPTH\r\nuniform float logarithmicDepthConstant;\r\nvarying float vFragmentDepth;\r\n#endif\r\n\r\n// Fog\r\n#ifdef FOG\r\n\r\n#define FOGMODE_NONE    0.\r\n#define FOGMODE_EXP     1.\r\n#define FOGMODE_EXP2    2.\r\n#define FOGMODE_LINEAR  3.\r\n#define E 2.71828\r\n\r\nuniform vec4 vFogInfos;\r\nuniform vec3 vFogColor;\r\nvarying float fFogDistance;\r\n\r\nfloat CalcFogFactor()\r\n{\r\n	float fogCoeff = 1.0;\r\n	float fogStart = vFogInfos.y;\r\n	float fogEnd = vFogInfos.z;\r\n	float fogDensity = vFogInfos.w;\r\n\r\n	if (FOGMODE_LINEAR == vFogInfos.x)\r\n	{\r\n		fogCoeff = (fogEnd - fFogDistance) / (fogEnd - fogStart);\r\n	}\r\n	else if (FOGMODE_EXP == vFogInfos.x)\r\n	{\r\n		fogCoeff = 1.0 / pow(E, fFogDistance * fogDensity);\r\n	}\r\n	else if (FOGMODE_EXP2 == vFogInfos.x)\r\n	{\r\n		fogCoeff = 1.0 / pow(E, fFogDistance * fFogDistance * fogDensity * fogDensity);\r\n	}\r\n\r\n	return clamp(fogCoeff, 0.0, 1.0);\r\n}\r\n#endif\r\n\r\n// Light Computing\r\nstruct lightingInfo\r\n{\r\n	vec3 diffuse;\r\n#ifdef SPECULARTERM\r\n	vec3 specular;\r\n#endif\r\n};\r\n\r\nlightingInfo computeLighting(vec3 viewDirectionW, vec3 vNormal, vec4 lightData, vec3 diffuseColor, vec3 specularColor, float range, float glossiness) {\r\n	lightingInfo result;\r\n\r\n	vec3 lightVectorW;\r\n	float attenuation = 1.0;\r\n	if (lightData.w == 0.)\r\n	{\r\n		vec3 direction = lightData.xyz - vPositionW;\r\n\r\n		attenuation = max(0., 1.0 - length(direction) / range);\r\n		lightVectorW = normalize(direction);\r\n	}\r\n	else\r\n	{\r\n		lightVectorW = normalize(-lightData.xyz);\r\n	}\r\n\r\n	// diffuse\r\n	float ndl = max(0., dot(vNormal, lightVectorW));\r\n	result.diffuse = ndl * diffuseColor * attenuation;\r\n\r\n#ifdef SPECULARTERM\r\n	// Specular\r\n	vec3 angleW = normalize(viewDirectionW + lightVectorW);\r\n	float specComp = max(0., dot(vNormal, angleW));\r\n	specComp = pow(specComp, max(1., glossiness));\r\n\r\n	result.specular = specComp * specularColor * attenuation;\r\n#endif\r\n	return result;\r\n}\r\n\r\nlightingInfo computeSpotLighting(vec3 viewDirectionW, vec3 vNormal, vec4 lightData, vec4 lightDirection, vec3 diffuseColor, vec3 specularColor, float range, float glossiness) {\r\n	lightingInfo result;\r\n\r\n	vec3 direction = lightData.xyz - vPositionW;\r\n	vec3 lightVectorW = normalize(direction);\r\n	float attenuation = max(0., 1.0 - length(direction) / range);\r\n\r\n	// diffuse\r\n	float cosAngle = max(0., dot(-lightDirection.xyz, lightVectorW));\r\n	float spotAtten = 0.0;\r\n\r\n	if (cosAngle >= lightDirection.w)\r\n	{\r\n		cosAngle = max(0., pow(cosAngle, lightData.w));\r\n		spotAtten = clamp((cosAngle - lightDirection.w) / (1. - cosAngle), 0.0, 1.0);\r\n\r\n		// Diffuse\r\n		float ndl = max(0., dot(vNormal, -lightDirection.xyz));\r\n		result.diffuse = ndl * spotAtten * diffuseColor * attenuation;\r\n\r\n#ifdef SPECULARTERM\r\n		// Specular\r\n		vec3 angleW = normalize(viewDirectionW - lightDirection.xyz);\r\n		float specComp = max(0., dot(vNormal, angleW));\r\n		specComp = pow(specComp, max(1., glossiness));\r\n\r\n		result.specular = specComp * specularColor * spotAtten * attenuation;\r\n#endif\r\n\r\n		return result;\r\n	}\r\n\r\n	result.diffuse = vec3(0.);\r\n#ifdef SPECULARTERM\r\n	result.specular = vec3(0.);\r\n#endif\r\n\r\n	return result;\r\n}\r\n\r\nlightingInfo computeHemisphericLighting(vec3 viewDirectionW, vec3 vNormal, vec4 lightData, vec3 diffuseColor, vec3 specularColor, vec3 groundColor, float glossiness) {\r\n	lightingInfo result;\r\n\r\n	// Diffuse\r\n	float ndl = dot(vNormal, lightData.xyz) * 0.5 + 0.5;\r\n	result.diffuse = mix(groundColor, diffuseColor, ndl);\r\n\r\n#ifdef SPECULARTERM\r\n	// Specular\r\n	vec3 angleW = normalize(viewDirectionW + lightData.xyz);\r\n	float specComp = max(0., dot(vNormal, angleW));\r\n	specComp = pow(specComp, max(1., glossiness));\r\n\r\n	result.specular = specComp * specularColor;\r\n#endif\r\n\r\n	return result;\r\n}\r\n\r\nvoid main(void) {\r\n	// Clip plane\r\n#ifdef CLIPPLANE\r\n	if (fClipDistance > 0.0)\r\n		discard;\r\n#endif\r\n\r\n	vec3 viewDirectionW = normalize(vEyePosition - vPositionW);\r\n\r\n	// Base color\r\n	vec4 baseColor = vec4(1., 1., 1., 1.);\r\n	vec3 diffuseColor = vDiffuseColor.rgb;\r\n\r\n	// Alpha\r\n	float alpha = vDiffuseColor.a;\r\n\r\n#ifdef DIFFUSE\r\n	baseColor = texture2D(diffuseSampler, vDiffuseUV);\r\n\r\n#ifdef ALPHATEST\r\n	if (baseColor.a < 0.4)\r\n		discard;\r\n#endif\r\n\r\n#ifdef ALPHAFROMDIFFUSE\r\n	alpha *= baseColor.a;\r\n#endif\r\n\r\n	baseColor.rgb *= vDiffuseInfos.y;\r\n#endif\r\n\r\n#ifdef VERTEXCOLOR\r\n	baseColor.rgb *= vColor.rgb;\r\n#endif\r\n\r\n	// Bump\r\n#ifdef NORMAL\r\n	vec3 normalW = normalize(vNormalW);\r\n#else\r\n	vec3 normalW = vec3(1.0, 1.0, 1.0);\r\n#endif\r\n\r\n\r\n#ifdef BUMP\r\n	normalW = perturbNormal(viewDirectionW);\r\n#endif\r\n\r\n	// Ambient color\r\n	vec3 baseAmbientColor = vec3(1., 1., 1.);\r\n\r\n#ifdef AMBIENT\r\n	baseAmbientColor = texture2D(ambientSampler, vAmbientUV).rgb * vAmbientInfos.y;\r\n#endif\r\n\r\n\r\n	// Specular map\r\n#ifdef SPECULARTERM\r\n	float glossiness = vSpecularColor.a;\r\n	vec3 specularColor = vSpecularColor.rgb;\r\n\r\n#ifdef SPECULAR\r\n	vec4 specularMapColor = texture2D(specularSampler, vSpecularUV);\r\n	specularColor = specularMapColor.rgb;\r\n#ifdef GLOSSINESS\r\n	glossiness = glossiness * specularMapColor.a;\r\n#endif\r\n#endif\r\n#else\r\n	float glossiness = 0.;\r\n#endif\r\n\r\n	// Lighting\r\n	vec3 diffuseBase = vec3(0., 0., 0.);\r\n#ifdef SPECULARTERM\r\n	vec3 specularBase = vec3(0., 0., 0.);\r\n#endif\r\n	float shadow = 1.;\r\n\r\n#ifdef LIGHT0\r\n#ifndef SPECULARTERM\r\n	vec3 vLightSpecular0 = vec3(0.0);\r\n#endif\r\n#ifdef SPOTLIGHT0\r\n	lightingInfo info = computeSpotLighting(viewDirectionW, normalW, vLightData0, vLightDirection0, vLightDiffuse0.rgb, vLightSpecular0, vLightDiffuse0.a, glossiness);\r\n#endif\r\n#ifdef HEMILIGHT0\r\n	lightingInfo info = computeHemisphericLighting(viewDirectionW, normalW, vLightData0, vLightDiffuse0.rgb, vLightSpecular0, vLightGround0, glossiness);\r\n#endif\r\n#if defined(POINTLIGHT0) || defined(DIRLIGHT0)\r\n	lightingInfo info = computeLighting(viewDirectionW, normalW, vLightData0, vLightDiffuse0.rgb, vLightSpecular0, vLightDiffuse0.a, glossiness);\r\n#endif\r\n#ifdef SHADOW0\r\n#ifdef SHADOWVSM0\r\n	shadow = computeShadowWithVSM(vPositionFromLight0, shadowSampler0, shadowsInfo0.z, shadowsInfo0.x);\r\n#else\r\n#ifdef SHADOWPCF0\r\n#if defined(POINTLIGHT0)\r\n	shadow = computeShadowWithPCFCube(vLightData0.xyz, shadowSampler0, shadowsInfo0.y, shadowsInfo0.z, shadowsInfo0.x);\r\n#else\r\n	shadow = computeShadowWithPCF(vPositionFromLight0, shadowSampler0, shadowsInfo0.y, shadowsInfo0.z, shadowsInfo0.x);\r\n#endif\r\n#else\r\n#if defined(POINTLIGHT0)\r\n	shadow = computeShadowCube(vLightData0.xyz, shadowSampler0, shadowsInfo0.x, shadowsInfo0.z);\r\n#else\r\n	shadow = computeShadow(vPositionFromLight0, shadowSampler0, shadowsInfo0.x, shadowsInfo0.z);\r\n#endif\r\n#endif\r\n#endif\r\n#else\r\n	shadow = 1.;\r\n#endif\r\n	diffuseBase += info.diffuse * shadow;\r\n#ifdef SPECULARTERM\r\n	specularBase += info.specular * shadow;\r\n#endif\r\n#endif\r\n\r\n#ifdef LIGHT1\r\n#ifndef SPECULARTERM\r\n	vec3 vLightSpecular1 = vec3(0.0);\r\n#endif\r\n#ifdef SPOTLIGHT1\r\n	info = computeSpotLighting(viewDirectionW, normalW, vLightData1, vLightDirection1, vLightDiffuse1.rgb, vLightSpecular1, vLightDiffuse1.a, glossiness);\r\n#endif\r\n#ifdef HEMILIGHT1\r\n	info = computeHemisphericLighting(viewDirectionW, normalW, vLightData1, vLightDiffuse1.rgb, vLightSpecular1, vLightGround1, glossiness);\r\n#endif\r\n#if defined(POINTLIGHT1) || defined(DIRLIGHT1)\r\n	info = computeLighting(viewDirectionW, normalW, vLightData1, vLightDiffuse1.rgb, vLightSpecular1, vLightDiffuse1.a, glossiness);\r\n#endif\r\n#ifdef SHADOW1\r\n#ifdef SHADOWVSM1\r\n	shadow = computeShadowWithVSM(vPositionFromLight1, shadowSampler1, shadowsInfo1.z, shadowsInfo1.x);\r\n#else\r\n#ifdef SHADOWPCF1\r\n#if defined(POINTLIGHT1)\r\n	shadow = computeShadowWithPCFCube(vLightData1.xyz, shadowSampler1, shadowsInfo1.y, shadowsInfo1.z, shadowsInfo1.x);\r\n#else\r\n	shadow = computeShadowWithPCF(vPositionFromLight1, shadowSampler1, shadowsInfo1.y, shadowsInfo1.z, shadowsInfo1.x);\r\n#endif\r\n#else\r\n#if defined(POINTLIGHT1)\r\n	shadow = computeShadowCube(vLightData1.xyz, shadowSampler1, shadowsInfo1.x, shadowsInfo1.z);\r\n#else\r\n	shadow = computeShadow(vPositionFromLight1, shadowSampler1, shadowsInfo1.x, shadowsInfo1.z);\r\n#endif\r\n#endif\r\n#endif\r\n#else\r\n	shadow = 1.;\r\n#endif\r\n	diffuseBase += info.diffuse * shadow;\r\n#ifdef SPECULARTERM\r\n	specularBase += info.specular * shadow;\r\n#endif\r\n#endif\r\n\r\n#ifdef LIGHT2\r\n#ifndef SPECULARTERM\r\n	vec3 vLightSpecular2 = vec3(0.0);\r\n#endif\r\n#ifdef SPOTLIGHT2\r\n	info = computeSpotLighting(viewDirectionW, normalW, vLightData2, vLightDirection2, vLightDiffuse2.rgb, vLightSpecular2, vLightDiffuse2.a, glossiness);\r\n#endif\r\n#ifdef HEMILIGHT2\r\n	info = computeHemisphericLighting(viewDirectionW, normalW, vLightData2, vLightDiffuse2.rgb, vLightSpecular2, vLightGround2, glossiness);\r\n#endif\r\n#if defined(POINTLIGHT2) || defined(DIRLIGHT2)\r\n	info = computeLighting(viewDirectionW, normalW, vLightData2, vLightDiffuse2.rgb, vLightSpecular2, vLightDiffuse2.a, glossiness);\r\n#endif\r\n#ifdef SHADOW2\r\n#ifdef SHADOWVSM2\r\n	shadow = computeShadowWithVSM(vPositionFromLight2, shadowSampler2, shadowsInfo2.z, shadowsInfo2.x);\r\n#else\r\n#ifdef SHADOWPCF2\r\n#if defined(POINTLIGHT2)\r\n	shadow = computeShadowWithPCFCube(vLightData2.xyz, shadowSampler2, shadowsInfo2.y, shadowsInfo2.z, shadowsInfo2.x);\r\n#else\r\n	shadow = computeShadowWithPCF(vPositionFromLight2, shadowSampler2, shadowsInfo2.y, shadowsInfo2.z, shadowsInfo2.x);\r\n#endif\r\n#else\r\n#if defined(POINTLIGHT2)\r\n	shadow = computeShadowCube(vLightData2.xyz, shadowSampler2, shadowsInfo2.x, shadowsInfo2.z);\r\n#else\r\n	shadow = computeShadow(vPositionFromLight2, shadowSampler2, shadowsInfo2.x, shadowsInfo2.z);\r\n#endif\r\n#endif	\r\n#endif	\r\n#else\r\n	shadow = 1.;\r\n#endif\r\n	diffuseBase += info.diffuse * shadow;\r\n#ifdef SPECULARTERM\r\n	specularBase += info.specular * shadow;\r\n#endif\r\n#endif\r\n\r\n#ifdef LIGHT3\r\n#ifndef SPECULARTERM\r\n	vec3 vLightSpecular3 = vec3(0.0);\r\n#endif\r\n#ifdef SPOTLIGHT3\r\n	info = computeSpotLighting(viewDirectionW, normalW, vLightData3, vLightDirection3, vLightDiffuse3.rgb, vLightSpecular3, vLightDiffuse3.a, glossiness);\r\n#endif\r\n#ifdef HEMILIGHT3\r\n	info = computeHemisphericLighting(viewDirectionW, normalW, vLightData3, vLightDiffuse3.rgb, vLightSpecular3, vLightGround3, glossiness);\r\n#endif\r\n#if defined(POINTLIGHT3) || defined(DIRLIGHT3)\r\n	info = computeLighting(viewDirectionW, normalW, vLightData3, vLightDiffuse3.rgb, vLightSpecular3, vLightDiffuse3.a, glossiness);\r\n#endif\r\n#ifdef SHADOW3\r\n#ifdef SHADOWVSM3\r\n	shadow = computeShadowWithVSM(vPositionFromLight3, shadowSampler3, shadowsInfo3.z, shadowsInfo3.x);\r\n#else\r\n#ifdef SHADOWPCF3\r\n#if defined(POINTLIGHT3)\r\n	shadow = computeShadowWithPCFCube(vLightData3.xyz, shadowSampler3, shadowsInfo3.y, shadowsInfo3.z, shadowsInfo3.x);\r\n#else\r\n	shadow = computeShadowWithPCF(vPositionFromLight3, shadowSampler3, shadowsInfo3.y, shadowsInfo3.z, shadowsInfo3.x);\r\n#endif\r\n#else\r\n#if defined(POINTLIGHT3)\r\n	shadow = computeShadowCube(vLightData3.xyz, shadowSampler3, shadowsInfo3.x, shadowsInfo3.z);\r\n#else\r\n	shadow = computeShadow(vPositionFromLight3, shadowSampler3, shadowsInfo3.x, shadowsInfo3.z);\r\n#endif\r\n#endif	\r\n#endif	\r\n#else\r\n	shadow = 1.;\r\n#endif\r\n	diffuseBase += info.diffuse * shadow;\r\n#ifdef SPECULARTERM\r\n	specularBase += info.specular * shadow;\r\n#endif\r\n#endif\r\n\r\n	// Reflection\r\n	vec3 reflectionColor = vec3(0., 0., 0.);\r\n\r\n\r\n#ifdef REFLECTION\r\n	vec3 vReflectionUVW = computeReflectionCoords(vec4(vPositionW, 1.0), normalW);\r\n\r\n#ifdef REFLECTIONMAP_3D\r\n#ifdef ROUGHNESS\r\n	 float bias = vReflectionInfos.y;\r\n\r\n	#ifdef SPECULARTERM\r\n	#ifdef SPECULAR\r\n	#ifdef GLOSSINESS\r\n		bias *= (1.0 - specularMapColor.a);\r\n	#endif\r\n	#endif\r\n	#endif\r\n\r\n	reflectionColor = textureCube(reflectionCubeSampler, vReflectionUVW, bias).rgb * vReflectionInfos.x;\r\n#else\r\n	reflectionColor = textureCube(reflectionCubeSampler, vReflectionUVW).rgb * vReflectionInfos.x;\r\n#endif\r\n\r\n#else\r\n	vec2 coords = vReflectionUVW.xy;\r\n\r\n#ifdef REFLECTIONMAP_PROJECTION\r\n	coords /= vReflectionUVW.z;\r\n#endif\r\n\r\n	coords.y = 1.0 - coords.y;\r\n\r\n	reflectionColor = texture2D(reflection2DSampler, coords).rgb * vReflectionInfos.x;\r\n#endif\r\n\r\n#ifdef REFLECTIONFRESNEL\r\n	float reflectionFresnelTerm = computeFresnelTerm(viewDirectionW, normalW, reflectionRightColor.a, reflectionLeftColor.a);\r\n\r\n#ifdef REFLECTIONFRESNELFROMSPECULAR\r\n#ifdef SPECULARTERM\r\n	reflectionColor *= specularColor.rgb * (1.0 - reflectionFresnelTerm) + reflectionFresnelTerm * reflectionRightColor.rgb;\r\n#else\r\n	reflectionColor *= reflectionLeftColor.rgb * (1.0 - reflectionFresnelTerm) + reflectionFresnelTerm * reflectionRightColor.rgb;\r\n#endif\r\n#else\r\n	reflectionColor *= reflectionLeftColor.rgb * (1.0 - reflectionFresnelTerm) + reflectionFresnelTerm * reflectionRightColor.rgb;\r\n#endif\r\n#endif\r\n#endif\r\n\r\n\r\n#ifdef OPACITY\r\n	vec4 opacityMap = texture2D(opacitySampler, vOpacityUV);\r\n\r\n#ifdef OPACITYRGB\r\n	opacityMap.rgb = opacityMap.rgb * vec3(0.3, 0.59, 0.11);\r\n	alpha *= (opacityMap.x + opacityMap.y + opacityMap.z)* vOpacityInfos.y;\r\n#else\r\n	alpha *= opacityMap.a * vOpacityInfos.y;\r\n#endif\r\n\r\n#endif\r\n\r\n#ifdef VERTEXALPHA\r\n	alpha *= vColor.a;\r\n#endif\r\n\r\n#ifdef OPACITYFRESNEL\r\n	float opacityFresnelTerm = computeFresnelTerm(viewDirectionW, normalW, opacityParts.z, opacityParts.w);\r\n\r\n	alpha += opacityParts.x * (1.0 - opacityFresnelTerm) + opacityFresnelTerm * opacityParts.y;\r\n#endif\r\n\r\n	// Emissive\r\n	vec3 emissiveColor = vEmissiveColor;\r\n#ifdef EMISSIVE\r\n	emissiveColor += texture2D(emissiveSampler, vEmissiveUV).rgb * vEmissiveInfos.y;\r\n#endif\r\n\r\n#ifdef EMISSIVEFRESNEL\r\n	float emissiveFresnelTerm = computeFresnelTerm(viewDirectionW, normalW, emissiveRightColor.a, emissiveLeftColor.a);\r\n\r\n	emissiveColor *= emissiveLeftColor.rgb * (1.0 - emissiveFresnelTerm) + emissiveFresnelTerm * emissiveRightColor.rgb;\r\n#endif\r\n\r\n	// Fresnel\r\n#ifdef DIFFUSEFRESNEL\r\n	float diffuseFresnelTerm = computeFresnelTerm(viewDirectionW, normalW, diffuseRightColor.a, diffuseLeftColor.a);\r\n\r\n	diffuseBase *= diffuseLeftColor.rgb * (1.0 - diffuseFresnelTerm) + diffuseFresnelTerm * diffuseRightColor.rgb;\r\n#endif\r\n\r\n	// Composition\r\n#ifdef EMISSIVEASILLUMINATION\r\n	vec3 finalDiffuse = clamp(diffuseBase * diffuseColor + vAmbientColor, 0.0, 1.0) * baseColor.rgb;\r\n#else\r\n#ifdef LINKEMISSIVEWITHDIFFUSE\r\n	vec3 finalDiffuse = clamp((diffuseBase + emissiveColor) * diffuseColor + vAmbientColor, 0.0, 1.0) * baseColor.rgb;\r\n#else\r\n	vec3 finalDiffuse = clamp(diffuseBase * diffuseColor + emissiveColor + vAmbientColor, 0.0, 1.0) * baseColor.rgb;\r\n#endif\r\n#endif\r\n\r\n#ifdef SPECULARTERM\r\n	vec3 finalSpecular = specularBase * specularColor;\r\n#else\r\n	vec3 finalSpecular = vec3(0.0);\r\n#endif\r\n\r\n#ifdef SPECULAROVERALPHA\r\n	alpha = clamp(alpha + dot(finalSpecular, vec3(0.3, 0.59, 0.11)), 0., 1.);\r\n#endif\r\n\r\n	// Composition\r\n#ifdef EMISSIVEASILLUMINATION\r\n	vec4 color = vec4(clamp(finalDiffuse * baseAmbientColor + finalSpecular + reflectionColor + emissiveColor, 0.0, 1.0), alpha);\r\n#else\r\n	vec4 color = vec4(finalDiffuse * baseAmbientColor + finalSpecular + reflectionColor, alpha);\r\n#endif\r\n\r\n#ifdef LIGHTMAP\r\n	vec3 lightmapColor = texture2D(lightmapSampler, vLightmapUV).rgb * vLightmapInfos.y;\r\n\r\n#ifdef USELIGHTMAPASSHADOWMAP\r\n	color.rgb *= lightmapColor;\r\n#else\r\n	color.rgb += lightmapColor;\r\n#endif\r\n#endif\r\n\r\n#ifdef LOGARITHMICDEPTH\r\n	gl_FragDepthEXT = log2(vFragmentDepth) * logarithmicDepthConstant * 0.5;\r\n#endif\r\n\r\n#ifdef FOG\r\n	float fog = CalcFogFactor();\r\n	color.rgb = fog * color.rgb + (1.0 - fog) * vFogColor;\r\n#endif\r\n\r\n	gl_FragColor = color;\r\n}",
null!=Yr["default.vertex"]?r.setReserved("default.vertex","precision highp float;\r\n\r\n// Attributes\r\nattribute vec3 position;\r\n#ifdef NORMAL\r\nattribute vec3 normal;\r\n#endif\r\n#ifdef UV1\r\nattribute vec2 uv;\r\n#endif\r\n#ifdef UV2\r\nattribute vec2 uv2;\r\n#endif\r\n#ifdef VERTEXCOLOR\r\nattribute vec4 color;\r\n#endif\r\n\r\n#if NUM_BONE_INFLUENCERS > 0\r\n	uniform mat4 mBones[BonesPerMesh];\r\n\r\n	attribute vec4 matricesIndices;\r\n	attribute vec4 matricesWeights;\r\n	#if NUM_BONE_INFLUENCERS > 4\r\n		attribute vec4 matricesIndicesExtra;\r\n		attribute vec4 matricesWeightsExtra;\r\n	#endif\r\n#endif\r\n\r\n// Uniforms\r\n\r\n#ifdef INSTANCES\r\nattribute vec4 world0;\r\nattribute vec4 world1;\r\nattribute vec4 world2;\r\nattribute vec4 world3;\r\n#else\r\nuniform mat4 world;\r\n#endif\r\n\r\nuniform mat4 view;\r\nuniform mat4 viewProjection;\r\n\r\n#ifdef DIFFUSE\r\nvarying vec2 vDiffuseUV;\r\nuniform mat4 diffuseMatrix;\r\nuniform vec2 vDiffuseInfos;\r\n#endif\r\n\r\n#ifdef AMBIENT\r\nvarying vec2 vAmbientUV;\r\nuniform mat4 ambientMatrix;\r\nuniform vec2 vAmbientInfos;\r\n#endif\r\n\r\n#ifdef OPACITY\r\nvarying vec2 vOpacityUV;\r\nuniform mat4 opacityMatrix;\r\nuniform vec2 vOpacityInfos;\r\n#endif\r\n\r\n#ifdef EMISSIVE\r\nvarying vec2 vEmissiveUV;\r\nuniform vec2 vEmissiveInfos;\r\nuniform mat4 emissiveMatrix;\r\n#endif\r\n\r\n#ifdef LIGHTMAP\r\nvarying vec2 vLightmapUV;\r\nuniform vec2 vLightmapInfos;\r\nuniform mat4 lightmapMatrix;\r\n#endif\r\n\r\n#if defined(SPECULAR) && defined(SPECULARTERM)\r\nvarying vec2 vSpecularUV;\r\nuniform vec2 vSpecularInfos;\r\nuniform mat4 specularMatrix;\r\n#endif\r\n\r\n#ifdef BUMP\r\nvarying vec2 vBumpUV;\r\nuniform vec2 vBumpInfos;\r\nuniform mat4 bumpMatrix;\r\n#endif\r\n\r\n#ifdef POINTSIZE\r\nuniform float pointSize;\r\n#endif\r\n\r\n// Output\r\nvarying vec3 vPositionW;\r\n#ifdef NORMAL\r\nvarying vec3 vNormalW;\r\n#endif\r\n\r\n#ifdef VERTEXCOLOR\r\nvarying vec4 vColor;\r\n#endif\r\n\r\n#ifdef CLIPPLANE\r\nuniform vec4 vClipPlane;\r\nvarying float fClipDistance;\r\n#endif\r\n\r\n#ifdef FOG\r\nvarying float fFogDistance;\r\n#endif\r\n\r\n#ifdef SHADOWS\r\n#if defined(SPOTLIGHT0) || defined(DIRLIGHT0)\r\nuniform mat4 lightMatrix0;\r\nvarying vec4 vPositionFromLight0;\r\n#endif\r\n#if defined(SPOTLIGHT1) || defined(DIRLIGHT1)\r\nuniform mat4 lightMatrix1;\r\nvarying vec4 vPositionFromLight1;\r\n#endif\r\n#if defined(SPOTLIGHT2) || defined(DIRLIGHT2)\r\nuniform mat4 lightMatrix2;\r\nvarying vec4 vPositionFromLight2;\r\n#endif\r\n#if defined(SPOTLIGHT3) || defined(DIRLIGHT3)\r\nuniform mat4 lightMatrix3;\r\nvarying vec4 vPositionFromLight3;\r\n#endif\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_SKYBOX\r\nvarying vec3 vPositionUVW;\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_EQUIRECTANGULAR\r\nvarying vec3 vDirectionW;\r\n#endif\r\n\r\n#ifdef LOGARITHMICDEPTH\r\nuniform float logarithmicDepthConstant;\r\nvarying float vFragmentDepth;\r\n#endif\r\n\r\nvoid main(void) {\r\n#ifdef REFLECTIONMAP_SKYBOX\r\n	vPositionUVW = position;\r\n#endif \r\n\r\n#ifdef INSTANCES\r\n	mat4 finalWorld = mat4(world0, world1, world2, world3);\r\n#else\r\n	mat4 finalWorld = world;\r\n#endif\r\n\r\n#if NUM_BONE_INFLUENCERS > 0\r\n	mat4 influence;\r\n	influence = mBones[int(matricesIndices[0])] * matricesWeights[0];\r\n\r\n	#if NUM_BONE_INFLUENCERS > 1\r\n		influence += mBones[int(matricesIndices[1])] * matricesWeights[1];\r\n	#endif \r\n	#if NUM_BONE_INFLUENCERS > 2\r\n		influence += mBones[int(matricesIndices[2])] * matricesWeights[2];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 3\r\n		influence += mBones[int(matricesIndices[3])] * matricesWeights[3];\r\n	#endif	\r\n\r\n	#if NUM_BONE_INFLUENCERS > 4\r\n		influence += mBones[int(matricesIndicesExtra[0])] * matricesWeightsExtra[0];\r\n	#endif\r\n	#if NUM_BONE_INFLUENCERS > 5\r\n		influence += mBones[int(matricesIndicesExtra[1])] * matricesWeightsExtra[1];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 6\r\n		influence += mBones[int(matricesIndicesExtra[2])] * matricesWeightsExtra[2];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 7\r\n		influence += mBones[int(matricesIndicesExtra[3])] * matricesWeightsExtra[3];\r\n	#endif	\r\n\r\n	finalWorld = finalWorld * influence;\r\n#endif\r\n	gl_Position = viewProjection * finalWorld * vec4(position, 1.0);\r\n\r\n	vec4 worldPos = finalWorld * vec4(position, 1.0);\r\n	vPositionW = vec3(worldPos);\r\n\r\n#ifdef NORMAL\r\n	vNormalW = normalize(vec3(finalWorld * vec4(normal, 0.0)));\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_EQUIRECTANGULAR\r\n	vDirectionW = normalize(vec3(finalWorld * vec4(position, 0.0)));\r\n#endif\r\n\r\n	// Texture coordinates\r\n#ifndef UV1\r\n	vec2 uv = vec2(0., 0.);\r\n#endif\r\n#ifndef UV2\r\n	vec2 uv2 = vec2(0., 0.);\r\n#endif\r\n\r\n#ifdef DIFFUSE\r\n	if (vDiffuseInfos.x == 0.)\r\n	{\r\n		vDiffuseUV = vec2(diffuseMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vDiffuseUV = vec2(diffuseMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n\r\n#ifdef AMBIENT\r\n	if (vAmbientInfos.x == 0.)\r\n	{\r\n		vAmbientUV = vec2(ambientMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vAmbientUV = vec2(ambientMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n\r\n#ifdef OPACITY\r\n	if (vOpacityInfos.x == 0.)\r\n	{\r\n		vOpacityUV = vec2(opacityMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vOpacityUV = vec2(opacityMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n\r\n#ifdef EMISSIVE\r\n	if (vEmissiveInfos.x == 0.)\r\n	{\r\n		vEmissiveUV = vec2(emissiveMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vEmissiveUV = vec2(emissiveMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n\r\n#ifdef LIGHTMAP\r\n	if (vLightmapInfos.x == 0.)\r\n	{\r\n		vLightmapUV = vec2(lightmapMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vLightmapUV = vec2(lightmapMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n\r\n#if defined(SPECULAR) && defined(SPECULARTERM)\r\n	if (vSpecularInfos.x == 0.)\r\n	{\r\n		vSpecularUV = vec2(specularMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vSpecularUV = vec2(specularMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n\r\n#ifdef BUMP\r\n	if (vBumpInfos.x == 0.)\r\n	{\r\n		vBumpUV = vec2(bumpMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vBumpUV = vec2(bumpMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n\r\n	// Clip plane\r\n#ifdef CLIPPLANE\r\n	fClipDistance = dot(worldPos, vClipPlane);\r\n#endif\r\n\r\n	// Fog\r\n#ifdef FOG\r\n	fFogDistance = (view * worldPos).z;\r\n#endif\r\n\r\n	// Shadows\r\n#ifdef SHADOWS\r\n#if defined(SPOTLIGHT0) || defined(DIRLIGHT0)\r\n	vPositionFromLight0 = lightMatrix0 * worldPos;\r\n#endif\r\n#if defined(SPOTLIGHT1) || defined(DIRLIGHT1)\r\n	vPositionFromLight1 = lightMatrix1 * worldPos;\r\n#endif\r\n#if defined(SPOTLIGHT2) || defined(DIRLIGHT2)\r\n	vPositionFromLight2 = lightMatrix2 * worldPos;\r\n#endif\r\n#if defined(SPOTLIGHT3) || defined(DIRLIGHT3)\r\n	vPositionFromLight3 = lightMatrix3 * worldPos;\r\n#endif\r\n#endif\r\n\r\n	// Vertex color\r\n#ifdef VERTEXCOLOR\r\n	vColor = color;\r\n#endif\r\n\r\n	// Point size\r\n#ifdef POINTSIZE\r\n	gl_PointSize = pointSize;\r\n#endif\r\n\r\n	// Log. depth\r\n#ifdef LOGARITHMICDEPTH\r\n	vFragmentDepth = 1.0 + gl_Position.w;\r\n	gl_Position.z = log2(max(0.000001, vFragmentDepth)) * logarithmicDepthConstant;\r\n#endif\r\n}"):r.h["default.vertex"]="precision highp float;\r\n\r\n// Attributes\r\nattribute vec3 position;\r\n#ifdef NORMAL\r\nattribute vec3 normal;\r\n#endif\r\n#ifdef UV1\r\nattribute vec2 uv;\r\n#endif\r\n#ifdef UV2\r\nattribute vec2 uv2;\r\n#endif\r\n#ifdef VERTEXCOLOR\r\nattribute vec4 color;\r\n#endif\r\n\r\n#if NUM_BONE_INFLUENCERS > 0\r\n	uniform mat4 mBones[BonesPerMesh];\r\n\r\n	attribute vec4 matricesIndices;\r\n	attribute vec4 matricesWeights;\r\n	#if NUM_BONE_INFLUENCERS > 4\r\n		attribute vec4 matricesIndicesExtra;\r\n		attribute vec4 matricesWeightsExtra;\r\n	#endif\r\n#endif\r\n\r\n// Uniforms\r\n\r\n#ifdef INSTANCES\r\nattribute vec4 world0;\r\nattribute vec4 world1;\r\nattribute vec4 world2;\r\nattribute vec4 world3;\r\n#else\r\nuniform mat4 world;\r\n#endif\r\n\r\nuniform mat4 view;\r\nuniform mat4 viewProjection;\r\n\r\n#ifdef DIFFUSE\r\nvarying vec2 vDiffuseUV;\r\nuniform mat4 diffuseMatrix;\r\nuniform vec2 vDiffuseInfos;\r\n#endif\r\n\r\n#ifdef AMBIENT\r\nvarying vec2 vAmbientUV;\r\nuniform mat4 ambientMatrix;\r\nuniform vec2 vAmbientInfos;\r\n#endif\r\n\r\n#ifdef OPACITY\r\nvarying vec2 vOpacityUV;\r\nuniform mat4 opacityMatrix;\r\nuniform vec2 vOpacityInfos;\r\n#endif\r\n\r\n#ifdef EMISSIVE\r\nvarying vec2 vEmissiveUV;\r\nuniform vec2 vEmissiveInfos;\r\nuniform mat4 emissiveMatrix;\r\n#endif\r\n\r\n#ifdef LIGHTMAP\r\nvarying vec2 vLightmapUV;\r\nuniform vec2 vLightmapInfos;\r\nuniform mat4 lightmapMatrix;\r\n#endif\r\n\r\n#if defined(SPECULAR) && defined(SPECULARTERM)\r\nvarying vec2 vSpecularUV;\r\nuniform vec2 vSpecularInfos;\r\nuniform mat4 specularMatrix;\r\n#endif\r\n\r\n#ifdef BUMP\r\nvarying vec2 vBumpUV;\r\nuniform vec2 vBumpInfos;\r\nuniform mat4 bumpMatrix;\r\n#endif\r\n\r\n#ifdef POINTSIZE\r\nuniform float pointSize;\r\n#endif\r\n\r\n// Output\r\nvarying vec3 vPositionW;\r\n#ifdef NORMAL\r\nvarying vec3 vNormalW;\r\n#endif\r\n\r\n#ifdef VERTEXCOLOR\r\nvarying vec4 vColor;\r\n#endif\r\n\r\n#ifdef CLIPPLANE\r\nuniform vec4 vClipPlane;\r\nvarying float fClipDistance;\r\n#endif\r\n\r\n#ifdef FOG\r\nvarying float fFogDistance;\r\n#endif\r\n\r\n#ifdef SHADOWS\r\n#if defined(SPOTLIGHT0) || defined(DIRLIGHT0)\r\nuniform mat4 lightMatrix0;\r\nvarying vec4 vPositionFromLight0;\r\n#endif\r\n#if defined(SPOTLIGHT1) || defined(DIRLIGHT1)\r\nuniform mat4 lightMatrix1;\r\nvarying vec4 vPositionFromLight1;\r\n#endif\r\n#if defined(SPOTLIGHT2) || defined(DIRLIGHT2)\r\nuniform mat4 lightMatrix2;\r\nvarying vec4 vPositionFromLight2;\r\n#endif\r\n#if defined(SPOTLIGHT3) || defined(DIRLIGHT3)\r\nuniform mat4 lightMatrix3;\r\nvarying vec4 vPositionFromLight3;\r\n#endif\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_SKYBOX\r\nvarying vec3 vPositionUVW;\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_EQUIRECTANGULAR\r\nvarying vec3 vDirectionW;\r\n#endif\r\n\r\n#ifdef LOGARITHMICDEPTH\r\nuniform float logarithmicDepthConstant;\r\nvarying float vFragmentDepth;\r\n#endif\r\n\r\nvoid main(void) {\r\n#ifdef REFLECTIONMAP_SKYBOX\r\n	vPositionUVW = position;\r\n#endif \r\n\r\n#ifdef INSTANCES\r\n	mat4 finalWorld = mat4(world0, world1, world2, world3);\r\n#else\r\n	mat4 finalWorld = world;\r\n#endif\r\n\r\n#if NUM_BONE_INFLUENCERS > 0\r\n	mat4 influence;\r\n	influence = mBones[int(matricesIndices[0])] * matricesWeights[0];\r\n\r\n	#if NUM_BONE_INFLUENCERS > 1\r\n		influence += mBones[int(matricesIndices[1])] * matricesWeights[1];\r\n	#endif \r\n	#if NUM_BONE_INFLUENCERS > 2\r\n		influence += mBones[int(matricesIndices[2])] * matricesWeights[2];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 3\r\n		influence += mBones[int(matricesIndices[3])] * matricesWeights[3];\r\n	#endif	\r\n\r\n	#if NUM_BONE_INFLUENCERS > 4\r\n		influence += mBones[int(matricesIndicesExtra[0])] * matricesWeightsExtra[0];\r\n	#endif\r\n	#if NUM_BONE_INFLUENCERS > 5\r\n		influence += mBones[int(matricesIndicesExtra[1])] * matricesWeightsExtra[1];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 6\r\n		influence += mBones[int(matricesIndicesExtra[2])] * matricesWeightsExtra[2];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 7\r\n		influence += mBones[int(matricesIndicesExtra[3])] * matricesWeightsExtra[3];\r\n	#endif	\r\n\r\n	finalWorld = finalWorld * influence;\r\n#endif\r\n	gl_Position = viewProjection * finalWorld * vec4(position, 1.0);\r\n\r\n	vec4 worldPos = finalWorld * vec4(position, 1.0);\r\n	vPositionW = vec3(worldPos);\r\n\r\n#ifdef NORMAL\r\n	vNormalW = normalize(vec3(finalWorld * vec4(normal, 0.0)));\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_EQUIRECTANGULAR\r\n	vDirectionW = normalize(vec3(finalWorld * vec4(position, 0.0)));\r\n#endif\r\n\r\n	// Texture coordinates\r\n#ifndef UV1\r\n	vec2 uv = vec2(0., 0.);\r\n#endif\r\n#ifndef UV2\r\n	vec2 uv2 = vec2(0., 0.);\r\n#endif\r\n\r\n#ifdef DIFFUSE\r\n	if (vDiffuseInfos.x == 0.)\r\n	{\r\n		vDiffuseUV = vec2(diffuseMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vDiffuseUV = vec2(diffuseMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n\r\n#ifdef AMBIENT\r\n	if (vAmbientInfos.x == 0.)\r\n	{\r\n		vAmbientUV = vec2(ambientMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vAmbientUV = vec2(ambientMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n\r\n#ifdef OPACITY\r\n	if (vOpacityInfos.x == 0.)\r\n	{\r\n		vOpacityUV = vec2(opacityMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vOpacityUV = vec2(opacityMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n\r\n#ifdef EMISSIVE\r\n	if (vEmissiveInfos.x == 0.)\r\n	{\r\n		vEmissiveUV = vec2(emissiveMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vEmissiveUV = vec2(emissiveMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n\r\n#ifdef LIGHTMAP\r\n	if (vLightmapInfos.x == 0.)\r\n	{\r\n		vLightmapUV = vec2(lightmapMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vLightmapUV = vec2(lightmapMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n\r\n#if defined(SPECULAR) && defined(SPECULARTERM)\r\n	if (vSpecularInfos.x == 0.)\r\n	{\r\n		vSpecularUV = vec2(specularMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vSpecularUV = vec2(specularMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n\r\n#ifdef BUMP\r\n	if (vBumpInfos.x == 0.)\r\n	{\r\n		vBumpUV = vec2(bumpMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vBumpUV = vec2(bumpMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n\r\n	// Clip plane\r\n#ifdef CLIPPLANE\r\n	fClipDistance = dot(worldPos, vClipPlane);\r\n#endif\r\n\r\n	// Fog\r\n#ifdef FOG\r\n	fFogDistance = (view * worldPos).z;\r\n#endif\r\n\r\n	// Shadows\r\n#ifdef SHADOWS\r\n#if defined(SPOTLIGHT0) || defined(DIRLIGHT0)\r\n	vPositionFromLight0 = lightMatrix0 * worldPos;\r\n#endif\r\n#if defined(SPOTLIGHT1) || defined(DIRLIGHT1)\r\n	vPositionFromLight1 = lightMatrix1 * worldPos;\r\n#endif\r\n#if defined(SPOTLIGHT2) || defined(DIRLIGHT2)\r\n	vPositionFromLight2 = lightMatrix2 * worldPos;\r\n#endif\r\n#if defined(SPOTLIGHT3) || defined(DIRLIGHT3)\r\n	vPositionFromLight3 = lightMatrix3 * worldPos;\r\n#endif\r\n#endif\r\n\r\n	// Vertex color\r\n#ifdef VERTEXCOLOR\r\n	vColor = color;\r\n#endif\r\n\r\n	// Point size\r\n#ifdef POINTSIZE\r\n	gl_PointSize = pointSize;\r\n#endif\r\n\r\n	// Log. depth\r\n#ifdef LOGARITHMICDEPTH\r\n	vFragmentDepth = 1.0 + gl_Position.w;\r\n	gl_Position.z = log2(max(0.000001, vFragmentDepth)) * logarithmicDepthConstant;\r\n#endif\r\n}",null!=Yr["depth.fragment"]?r.setReserved("depth.fragment","precision highp float;\r\n\r\n#ifdef ALPHATEST\r\nvarying vec2 vUV;\r\nuniform sampler2D diffuseSampler;\r\n#endif\r\n\r\nuniform float far;\r\n\r\nvoid main(void)\r\n{\r\n#ifdef ALPHATEST\r\n	if (texture2D(diffuseSampler, vUV).a < 0.4)\r\n		discard;\r\n#endif\r\n\r\n	float depth = (gl_FragCoord.z / gl_FragCoord.w) / far;\r\n	gl_FragColor = vec4(depth, depth * depth, 0.0, 1.0);\r\n}"):r.h["depth.fragment"]="precision highp float;\r\n\r\n#ifdef ALPHATEST\r\nvarying vec2 vUV;\r\nuniform sampler2D diffuseSampler;\r\n#endif\r\n\r\nuniform float far;\r\n\r\nvoid main(void)\r\n{\r\n#ifdef ALPHATEST\r\n	if (texture2D(diffuseSampler, vUV).a < 0.4)\r\n		discard;\r\n#endif\r\n\r\n	float depth = (gl_FragCoord.z / gl_FragCoord.w) / far;\r\n	gl_FragColor = vec4(depth, depth * depth, 0.0, 1.0);\r\n}",null!=Yr["depth.vertex"]?r.setReserved("depth.vertex","precision highp float;\r\n\r\n// Attribute\r\nattribute vec3 position;\r\n#if NUM_BONE_INFLUENCERS > 0\r\n\r\n	// having bone influencers implies you have bones\r\n	uniform mat4 mBones[BonesPerMesh];\r\n\r\n	attribute vec4 matricesIndices;\r\n	attribute vec4 matricesWeights;\r\n	#if NUM_BONE_INFLUENCERS > 4\r\n		attribute vec4 matricesIndicesExtra;\r\n		attribute vec4 matricesWeightsExtra;\r\n	#endif\r\n#endif\r\n\r\n// Uniform\r\n#ifdef INSTANCES\r\nattribute vec4 world0;\r\nattribute vec4 world1;\r\nattribute vec4 world2;\r\nattribute vec4 world3;\r\n#else\r\nuniform mat4 world;\r\n#endif\r\n\r\nuniform mat4 viewProjection;\r\n\r\n#if defined(ALPHATEST) || defined(NEED_UV)\r\nvarying vec2 vUV;\r\nuniform mat4 diffuseMatrix;\r\n#ifdef UV1\r\nattribute vec2 uv;\r\n#endif\r\n#ifdef UV2\r\nattribute vec2 uv2;\r\n#endif\r\n#endif\r\n\r\nvoid main(void)\r\n{\r\n#ifdef INSTANCES\r\n	mat4 finalWorld = mat4(world0, world1, world2, world3);\r\n#else\r\n	mat4 finalWorld = world;\r\n#endif\r\n\r\n#if NUM_BONE_INFLUENCERS > 0\r\n	mat4 influence;\r\n	influence = mBones[int(matricesIndices[0])] * matricesWeights[0];\r\n\r\n	#if NUM_BONE_INFLUENCERS > 1\r\n		influence += mBones[int(matricesIndices[1])] * matricesWeights[1];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 2\r\n		influence += mBones[int(matricesIndices[2])] * matricesWeights[2];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 3\r\n		influence += mBones[int(matricesIndices[3])] * matricesWeights[3];\r\n	#endif	\r\n	\r\n	#if NUM_BONE_INFLUENCERS > 4\r\n		influence += mBones[int(matricesIndicesExtra[0])] * matricesWeightsExtra[0];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 5\r\n		influence += mBones[int(matricesIndicesExtra[1])] * matricesWeightsExtra[1];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 6\r\n		influence += mBones[int(matricesIndicesExtra[2])] * matricesWeightsExtra[2];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 7\r\n		influence += mBones[int(matricesIndicesExtra[3])] * matricesWeightsExtra[3];\r\n	#endif	\r\n\r\n	finalWorld = finalWorld * influence;\r\n#endif\r\n	gl_Position = viewProjection * finalWorld * vec4(position, 1.0);\r\n\r\n#if defined(ALPHATEST) || defined(BASIC_RENDER)\r\n#ifdef UV1\r\n	vUV = vec2(diffuseMatrix * vec4(uv, 1.0, 0.0));\r\n#endif\r\n#ifdef UV2\r\n	vUV = vec2(diffuseMatrix * vec4(uv2, 1.0, 0.0));\r\n#endif\r\n#endif\r\n}"):r.h["depth.vertex"]="precision highp float;\r\n\r\n// Attribute\r\nattribute vec3 position;\r\n#if NUM_BONE_INFLUENCERS > 0\r\n\r\n	// having bone influencers implies you have bones\r\n	uniform mat4 mBones[BonesPerMesh];\r\n\r\n	attribute vec4 matricesIndices;\r\n	attribute vec4 matricesWeights;\r\n	#if NUM_BONE_INFLUENCERS > 4\r\n		attribute vec4 matricesIndicesExtra;\r\n		attribute vec4 matricesWeightsExtra;\r\n	#endif\r\n#endif\r\n\r\n// Uniform\r\n#ifdef INSTANCES\r\nattribute vec4 world0;\r\nattribute vec4 world1;\r\nattribute vec4 world2;\r\nattribute vec4 world3;\r\n#else\r\nuniform mat4 world;\r\n#endif\r\n\r\nuniform mat4 viewProjection;\r\n\r\n#if defined(ALPHATEST) || defined(NEED_UV)\r\nvarying vec2 vUV;\r\nuniform mat4 diffuseMatrix;\r\n#ifdef UV1\r\nattribute vec2 uv;\r\n#endif\r\n#ifdef UV2\r\nattribute vec2 uv2;\r\n#endif\r\n#endif\r\n\r\nvoid main(void)\r\n{\r\n#ifdef INSTANCES\r\n	mat4 finalWorld = mat4(world0, world1, world2, world3);\r\n#else\r\n	mat4 finalWorld = world;\r\n#endif\r\n\r\n#if NUM_BONE_INFLUENCERS > 0\r\n	mat4 influence;\r\n	influence = mBones[int(matricesIndices[0])] * matricesWeights[0];\r\n\r\n	#if NUM_BONE_INFLUENCERS > 1\r\n		influence += mBones[int(matricesIndices[1])] * matricesWeights[1];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 2\r\n		influence += mBones[int(matricesIndices[2])] * matricesWeights[2];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 3\r\n		influence += mBones[int(matricesIndices[3])] * matricesWeights[3];\r\n	#endif	\r\n	\r\n	#if NUM_BONE_INFLUENCERS > 4\r\n		influence += mBones[int(matricesIndicesExtra[0])] * matricesWeightsExtra[0];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 5\r\n		influence += mBones[int(matricesIndicesExtra[1])] * matricesWeightsExtra[1];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 6\r\n		influence += mBones[int(matricesIndicesExtra[2])] * matricesWeightsExtra[2];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 7\r\n		influence += mBones[int(matricesIndicesExtra[3])] * matricesWeightsExtra[3];\r\n	#endif	\r\n\r\n	finalWorld = finalWorld * influence;\r\n#endif\r\n	gl_Position = viewProjection * finalWorld * vec4(position, 1.0);\r\n\r\n#if defined(ALPHATEST) || defined(BASIC_RENDER)\r\n#ifdef UV1\r\n	vUV = vec2(diffuseMatrix * vec4(uv, 1.0, 0.0));\r\n#endif\r\n#ifdef UV2\r\n	vUV = vec2(diffuseMatrix * vec4(uv2, 1.0, 0.0));\r\n#endif\r\n#endif\r\n}",null!=Yr["depthBoxBlur.fragment"]?r.setReserved("depthBoxBlur.fragment","precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\n\r\n// Parameters\r\nuniform vec2 screenSize;\r\n\r\nvoid main(void)\r\n{\r\n	vec4 colorDepth = vec4(0.0);\r\n\r\n	for (int x = -OFFSET; x <= OFFSET; x++)\r\n		for (int y = -OFFSET; y <= OFFSET; y++)\r\n			colorDepth += texture2D(textureSampler, vUV + vec2(x, y) / screenSize);\r\n\r\n	gl_FragColor = (colorDepth / float((OFFSET * 2 + 1) * (OFFSET * 2 + 1)));\r\n}"):r.h["depthBoxBlur.fragment"]="precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\n\r\n// Parameters\r\nuniform vec2 screenSize;\r\n\r\nvoid main(void)\r\n{\r\n	vec4 colorDepth = vec4(0.0);\r\n\r\n	for (int x = -OFFSET; x <= OFFSET; x++)\r\n		for (int y = -OFFSET; y <= OFFSET; y++)\r\n			colorDepth += texture2D(textureSampler, vUV + vec2(x, y) / screenSize);\r\n\r\n	gl_FragColor = (colorDepth / float((OFFSET * 2 + 1) * (OFFSET * 2 + 1)));\r\n}",null!=Yr["depthOfField.fragment"]?r.setReserved("depthOfField.fragment",'// BABYLON.JS Depth-of-field GLSL Shader\r\n// Author: Olivier Guyot\r\n// Does depth-of-field blur, edge blur\r\n// Inspired by Francois Tarlier & Martins Upitis\r\n\r\nprecision highp float;\r\n\r\n\r\n// samplers\r\nuniform sampler2D textureSampler;\r\nuniform sampler2D highlightsSampler;\r\nuniform sampler2D depthSampler;\r\nuniform sampler2D grainSampler;\r\n\r\n// uniforms\r\nuniform float grain_amount;\r\nuniform bool blur_noise;\r\nuniform float screen_width;\r\nuniform float screen_height;\r\nuniform float distortion;\r\nuniform bool dof_enabled;\r\n//uniform float focus_distance;		// not needed; already used to compute screen distance\r\nuniform float screen_distance;		// precomputed screen distance from lens center; based on focal length & desired focus distance\r\nuniform float aperture;\r\nuniform float darken;\r\nuniform float edge_blur;\r\nuniform bool highlights;\r\n\r\n// preconputed uniforms (not effect parameters)\r\nuniform float near;\r\nuniform float far;\r\n\r\n// varyings\r\nvarying vec2 vUV;\r\n\r\n// constants\r\n#define PI 		3.14159265\r\n#define TWOPI 	6.28318530\r\n#define inverse_focal_length 0.1	// a property of the lens used\r\n\r\n// common calculations\r\nvec2 centered_screen_pos;\r\nvec2 distorted_coords;\r\nfloat radius2;\r\nfloat radius;\r\n\r\n\r\n// on-the-fly constant noise\r\nvec2 rand(vec2 co)\r\n{\r\n	float noise1 = (fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453));\r\n	float noise2 = (fract(sin(dot(co, vec2(12.9898, 78.233)*2.0)) * 43758.5453));\r\n	return clamp(vec2(noise1, noise2), 0.0, 1.0);\r\n}\r\n\r\n// applies edge distortion on texture coords\r\nvec2 getDistortedCoords(vec2 coords) {\r\n\r\n	if (distortion == 0.0) { return coords; }\r\n\r\n	vec2 direction = 1.0 * normalize(centered_screen_pos);\r\n	vec2 dist_coords = vec2(0.5, 0.5);\r\n	dist_coords.x = 0.5 + direction.x * radius2 * 1.0;\r\n	dist_coords.y = 0.5 + direction.y * radius2 * 1.0;\r\n	float dist_amount = clamp(distortion*0.23, 0.0, 1.0);\r\n\r\n	dist_coords = mix(coords, dist_coords, dist_amount);\r\n\r\n	return dist_coords;\r\n}\r\n\r\n// sample screen with an offset (randomize offset angle for better smothness), returns partial sample weight\r\nfloat sampleScreen(inout vec4 color, const in vec2 offset, const in float weight) {\r\n\r\n	// compute coords with offset (a random angle is added)\r\n	vec2 coords = distorted_coords;\r\n	float angle = rand(coords * 100.0).x * TWOPI;\r\n	coords += vec2(offset.x * cos(angle) - offset.y * sin(angle), offset.x * sin(angle) + offset.y * cos(angle));\r\n\r\n	color += texture2D(textureSampler, coords)*weight;\r\n\r\n	return weight;\r\n}\r\n\r\n// returns blur level according to blur size required\r\nfloat getBlurLevel(float size) {\r\n	return min(3.0, ceil(size / 1.0));\r\n}\r\n\r\n// returns original screen color after blur\r\nvec4 getBlurColor(float size) {\r\n\r\n	vec4 col = texture2D(textureSampler, distorted_coords);\r\n	if (size == 0.0) { return col; }\r\n\r\n	// there are max. 30 samples; the number of samples chosen is dependant on the blur size\r\n	// there can be 10, 20 or 30 samples chosen; levels of blur are then 1, 2 or 3\r\n	float blur_level = getBlurLevel(size);\r\n\r\n	float w = (size / screen_width);\r\n	float h = (size / screen_height);\r\n	float total_weight = 1.0;\r\n	vec2 sample_coords;\r\n\r\n	total_weight += sampleScreen(col, vec2(-0.50*w, 0.24*h), 0.93);\r\n	total_weight += sampleScreen(col, vec2(0.30*w, -0.75*h), 0.90);\r\n	total_weight += sampleScreen(col, vec2(0.36*w, 0.96*h), 0.87);\r\n	total_weight += sampleScreen(col, vec2(-1.08*w, -0.55*h), 0.85);\r\n	total_weight += sampleScreen(col, vec2(1.33*w, -0.37*h), 0.83);\r\n	total_weight += sampleScreen(col, vec2(-0.82*w, 1.31*h), 0.80);\r\n	total_weight += sampleScreen(col, vec2(-0.31*w, -1.67*h), 0.78);\r\n	total_weight += sampleScreen(col, vec2(1.47*w, 1.11*h), 0.76);\r\n	total_weight += sampleScreen(col, vec2(-1.97*w, 0.19*h), 0.74);\r\n	total_weight += sampleScreen(col, vec2(1.42*w, -1.57*h), 0.72);\r\n\r\n	if (blur_level > 1.0) {\r\n		total_weight += sampleScreen(col, vec2(0.01*w, 2.25*h), 0.70);\r\n		total_weight += sampleScreen(col, vec2(-1.62*w, -1.74*h), 0.67);\r\n		total_weight += sampleScreen(col, vec2(2.49*w, 0.20*h), 0.65);\r\n		total_weight += sampleScreen(col, vec2(-2.07*w, 1.61*h), 0.63);\r\n		total_weight += sampleScreen(col, vec2(0.46*w, -2.70*h), 0.61);\r\n		total_weight += sampleScreen(col, vec2(1.55*w, 2.40*h), 0.59);\r\n		total_weight += sampleScreen(col, vec2(-2.88*w, -0.75*h), 0.56);\r\n		total_weight += sampleScreen(col, vec2(2.73*w, -1.44*h), 0.54);\r\n		total_weight += sampleScreen(col, vec2(-1.08*w, 3.02*h), 0.52);\r\n		total_weight += sampleScreen(col, vec2(-1.28*w, -3.05*h), 0.49);\r\n	}\r\n\r\n	if (blur_level > 2.0) {\r\n		total_weight += sampleScreen(col, vec2(3.11*w, 1.43*h), 0.46);\r\n		total_weight += sampleScreen(col, vec2(-3.36*w, 1.08*h), 0.44);\r\n		total_weight += sampleScreen(col, vec2(1.80*w, -3.16*h), 0.41);\r\n		total_weight += sampleScreen(col, vec2(0.83*w, 3.65*h), 0.38);\r\n		total_weight += sampleScreen(col, vec2(-3.16*w, -2.19*h), 0.34);\r\n		total_weight += sampleScreen(col, vec2(3.92*w, -0.53*h), 0.31);\r\n		total_weight += sampleScreen(col, vec2(-2.59*w, 3.12*h), 0.26);\r\n		total_weight += sampleScreen(col, vec2(-0.20*w, -4.15*h), 0.22);\r\n		total_weight += sampleScreen(col, vec2(3.02*w, 3.00*h), 0.15);\r\n	}\r\n\r\n	col /= total_weight;		// scales color according to weights\r\n\r\n								// darken if out of focus\r\n	if (darken > 0.0) {\r\n		col.rgb *= clamp(0.3, 1.0, 1.05 - size*0.5*darken);\r\n	}\r\n\r\n	// blur levels debug\r\n	// if(blur_level == 1.0) { col.b *= 0.5; }\r\n	// if(blur_level == 2.0) { col.r *= 0.5; }\r\n	// if(blur_level == 3.0) { col.g *= 0.5; }\r\n\r\n	return col;\r\n}\r\n\r\nvoid main(void)\r\n{\r\n\r\n	// Common calc: position relative to screen center, screen radius, distorted coords, position in texel space\r\n	centered_screen_pos = vec2(vUV.x - 0.5, vUV.y - 0.5);\r\n	radius2 = centered_screen_pos.x*centered_screen_pos.x + centered_screen_pos.y*centered_screen_pos.y;\r\n	radius = sqrt(radius2);\r\n	distorted_coords = getDistortedCoords(vUV);		// we distort the screen coordinates (lens "magnifying" effect)\r\n	vec2 texels_coords = vec2(vUV.x * screen_width, vUV.y * screen_height);	// varies from 0 to SCREEN_WIDTH or _HEIGHT\r\n\r\n	float depth = texture2D(depthSampler, distorted_coords).r;	// depth value from DepthRenderer: 0 to 1\r\n	float distance = near + (far - near)*depth;		// actual distance from the lens\r\n	vec4 color = texture2D(textureSampler, vUV);	// original raster\r\n\r\n\r\n													// compute the circle of confusion size (CoC), i.e. blur radius depending on depth\r\n													// screen_distance is precomputed in code\r\n	float coc = abs(aperture * (screen_distance * (inverse_focal_length - 1.0 / distance) - 1.0));\r\n\r\n	// disable blur\r\n	if (dof_enabled == false || coc < 0.07) { coc = 0.0; }\r\n\r\n	// blur from edge blur effect\r\n	float edge_blur_amount = 0.0;\r\n	if (edge_blur > 0.0) {\r\n		edge_blur_amount = clamp((radius*2.0 - 1.0 + 0.15*edge_blur) * 1.5, 0.0, 1.0) * 1.3;\r\n	}\r\n\r\n	// total blur amount\r\n	float blur_amount = max(edge_blur_amount, coc);\r\n\r\n	// apply blur if necessary\r\n	if (blur_amount == 0.0) {\r\n		gl_FragColor = texture2D(textureSampler, distorted_coords);\r\n	}\r\n	else {\r\n\r\n		// add blurred color\r\n		gl_FragColor = getBlurColor(blur_amount * 1.7);\r\n\r\n		// if we have computed highlights: enhance highlights\r\n		if (highlights) {\r\n			gl_FragColor.rgb += clamp(coc, 0.0, 1.0)*texture2D(highlightsSampler, distorted_coords).rgb;\r\n		}\r\n\r\n		if (blur_noise) {\r\n			// we put a slight amount of noise in the blurred color\r\n			vec2 noise = rand(distorted_coords) * 0.01 * blur_amount;\r\n			vec2 blurred_coord = vec2(distorted_coords.x + noise.x, distorted_coords.y + noise.y);\r\n			gl_FragColor = 0.04 * texture2D(textureSampler, blurred_coord) + 0.96 * gl_FragColor;\r\n		}\r\n	}\r\n\r\n\r\n	// apply grain\r\n	if (grain_amount > 0.0) {\r\n		vec4 grain_color = texture2D(grainSampler, texels_coords*0.003);\r\n		gl_FragColor.rgb += (-0.5 + grain_color.rgb) * 0.30 * grain_amount;\r\n	}\r\n\r\n}\r\n'):r.h["depthOfField.fragment"]='// BABYLON.JS Depth-of-field GLSL Shader\r\n// Author: Olivier Guyot\r\n// Does depth-of-field blur, edge blur\r\n// Inspired by Francois Tarlier & Martins Upitis\r\n\r\nprecision highp float;\r\n\r\n\r\n// samplers\r\nuniform sampler2D textureSampler;\r\nuniform sampler2D highlightsSampler;\r\nuniform sampler2D depthSampler;\r\nuniform sampler2D grainSampler;\r\n\r\n// uniforms\r\nuniform float grain_amount;\r\nuniform bool blur_noise;\r\nuniform float screen_width;\r\nuniform float screen_height;\r\nuniform float distortion;\r\nuniform bool dof_enabled;\r\n//uniform float focus_distance;		// not needed; already used to compute screen distance\r\nuniform float screen_distance;		// precomputed screen distance from lens center; based on focal length & desired focus distance\r\nuniform float aperture;\r\nuniform float darken;\r\nuniform float edge_blur;\r\nuniform bool highlights;\r\n\r\n// preconputed uniforms (not effect parameters)\r\nuniform float near;\r\nuniform float far;\r\n\r\n// varyings\r\nvarying vec2 vUV;\r\n\r\n// constants\r\n#define PI 		3.14159265\r\n#define TWOPI 	6.28318530\r\n#define inverse_focal_length 0.1	// a property of the lens used\r\n\r\n// common calculations\r\nvec2 centered_screen_pos;\r\nvec2 distorted_coords;\r\nfloat radius2;\r\nfloat radius;\r\n\r\n\r\n// on-the-fly constant noise\r\nvec2 rand(vec2 co)\r\n{\r\n	float noise1 = (fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453));\r\n	float noise2 = (fract(sin(dot(co, vec2(12.9898, 78.233)*2.0)) * 43758.5453));\r\n	return clamp(vec2(noise1, noise2), 0.0, 1.0);\r\n}\r\n\r\n// applies edge distortion on texture coords\r\nvec2 getDistortedCoords(vec2 coords) {\r\n\r\n	if (distortion == 0.0) { return coords; }\r\n\r\n	vec2 direction = 1.0 * normalize(centered_screen_pos);\r\n	vec2 dist_coords = vec2(0.5, 0.5);\r\n	dist_coords.x = 0.5 + direction.x * radius2 * 1.0;\r\n	dist_coords.y = 0.5 + direction.y * radius2 * 1.0;\r\n	float dist_amount = clamp(distortion*0.23, 0.0, 1.0);\r\n\r\n	dist_coords = mix(coords, dist_coords, dist_amount);\r\n\r\n	return dist_coords;\r\n}\r\n\r\n// sample screen with an offset (randomize offset angle for better smothness), returns partial sample weight\r\nfloat sampleScreen(inout vec4 color, const in vec2 offset, const in float weight) {\r\n\r\n	// compute coords with offset (a random angle is added)\r\n	vec2 coords = distorted_coords;\r\n	float angle = rand(coords * 100.0).x * TWOPI;\r\n	coords += vec2(offset.x * cos(angle) - offset.y * sin(angle), offset.x * sin(angle) + offset.y * cos(angle));\r\n\r\n	color += texture2D(textureSampler, coords)*weight;\r\n\r\n	return weight;\r\n}\r\n\r\n// returns blur level according to blur size required\r\nfloat getBlurLevel(float size) {\r\n	return min(3.0, ceil(size / 1.0));\r\n}\r\n\r\n// returns original screen color after blur\r\nvec4 getBlurColor(float size) {\r\n\r\n	vec4 col = texture2D(textureSampler, distorted_coords);\r\n	if (size == 0.0) { return col; }\r\n\r\n	// there are max. 30 samples; the number of samples chosen is dependant on the blur size\r\n	// there can be 10, 20 or 30 samples chosen; levels of blur are then 1, 2 or 3\r\n	float blur_level = getBlurLevel(size);\r\n\r\n	float w = (size / screen_width);\r\n	float h = (size / screen_height);\r\n	float total_weight = 1.0;\r\n	vec2 sample_coords;\r\n\r\n	total_weight += sampleScreen(col, vec2(-0.50*w, 0.24*h), 0.93);\r\n	total_weight += sampleScreen(col, vec2(0.30*w, -0.75*h), 0.90);\r\n	total_weight += sampleScreen(col, vec2(0.36*w, 0.96*h), 0.87);\r\n	total_weight += sampleScreen(col, vec2(-1.08*w, -0.55*h), 0.85);\r\n	total_weight += sampleScreen(col, vec2(1.33*w, -0.37*h), 0.83);\r\n	total_weight += sampleScreen(col, vec2(-0.82*w, 1.31*h), 0.80);\r\n	total_weight += sampleScreen(col, vec2(-0.31*w, -1.67*h), 0.78);\r\n	total_weight += sampleScreen(col, vec2(1.47*w, 1.11*h), 0.76);\r\n	total_weight += sampleScreen(col, vec2(-1.97*w, 0.19*h), 0.74);\r\n	total_weight += sampleScreen(col, vec2(1.42*w, -1.57*h), 0.72);\r\n\r\n	if (blur_level > 1.0) {\r\n		total_weight += sampleScreen(col, vec2(0.01*w, 2.25*h), 0.70);\r\n		total_weight += sampleScreen(col, vec2(-1.62*w, -1.74*h), 0.67);\r\n		total_weight += sampleScreen(col, vec2(2.49*w, 0.20*h), 0.65);\r\n		total_weight += sampleScreen(col, vec2(-2.07*w, 1.61*h), 0.63);\r\n		total_weight += sampleScreen(col, vec2(0.46*w, -2.70*h), 0.61);\r\n		total_weight += sampleScreen(col, vec2(1.55*w, 2.40*h), 0.59);\r\n		total_weight += sampleScreen(col, vec2(-2.88*w, -0.75*h), 0.56);\r\n		total_weight += sampleScreen(col, vec2(2.73*w, -1.44*h), 0.54);\r\n		total_weight += sampleScreen(col, vec2(-1.08*w, 3.02*h), 0.52);\r\n		total_weight += sampleScreen(col, vec2(-1.28*w, -3.05*h), 0.49);\r\n	}\r\n\r\n	if (blur_level > 2.0) {\r\n		total_weight += sampleScreen(col, vec2(3.11*w, 1.43*h), 0.46);\r\n		total_weight += sampleScreen(col, vec2(-3.36*w, 1.08*h), 0.44);\r\n		total_weight += sampleScreen(col, vec2(1.80*w, -3.16*h), 0.41);\r\n		total_weight += sampleScreen(col, vec2(0.83*w, 3.65*h), 0.38);\r\n		total_weight += sampleScreen(col, vec2(-3.16*w, -2.19*h), 0.34);\r\n		total_weight += sampleScreen(col, vec2(3.92*w, -0.53*h), 0.31);\r\n		total_weight += sampleScreen(col, vec2(-2.59*w, 3.12*h), 0.26);\r\n		total_weight += sampleScreen(col, vec2(-0.20*w, -4.15*h), 0.22);\r\n		total_weight += sampleScreen(col, vec2(3.02*w, 3.00*h), 0.15);\r\n	}\r\n\r\n	col /= total_weight;		// scales color according to weights\r\n\r\n								// darken if out of focus\r\n	if (darken > 0.0) {\r\n		col.rgb *= clamp(0.3, 1.0, 1.05 - size*0.5*darken);\r\n	}\r\n\r\n	// blur levels debug\r\n	// if(blur_level == 1.0) { col.b *= 0.5; }\r\n	// if(blur_level == 2.0) { col.r *= 0.5; }\r\n	// if(blur_level == 3.0) { col.g *= 0.5; }\r\n\r\n	return col;\r\n}\r\n\r\nvoid main(void)\r\n{\r\n\r\n	// Common calc: position relative to screen center, screen radius, distorted coords, position in texel space\r\n	centered_screen_pos = vec2(vUV.x - 0.5, vUV.y - 0.5);\r\n	radius2 = centered_screen_pos.x*centered_screen_pos.x + centered_screen_pos.y*centered_screen_pos.y;\r\n	radius = sqrt(radius2);\r\n	distorted_coords = getDistortedCoords(vUV);		// we distort the screen coordinates (lens "magnifying" effect)\r\n	vec2 texels_coords = vec2(vUV.x * screen_width, vUV.y * screen_height);	// varies from 0 to SCREEN_WIDTH or _HEIGHT\r\n\r\n	float depth = texture2D(depthSampler, distorted_coords).r;	// depth value from DepthRenderer: 0 to 1\r\n	float distance = near + (far - near)*depth;		// actual distance from the lens\r\n	vec4 color = texture2D(textureSampler, vUV);	// original raster\r\n\r\n\r\n													// compute the circle of confusion size (CoC), i.e. blur radius depending on depth\r\n													// screen_distance is precomputed in code\r\n	float coc = abs(aperture * (screen_distance * (inverse_focal_length - 1.0 / distance) - 1.0));\r\n\r\n	// disable blur\r\n	if (dof_enabled == false || coc < 0.07) { coc = 0.0; }\r\n\r\n	// blur from edge blur effect\r\n	float edge_blur_amount = 0.0;\r\n	if (edge_blur > 0.0) {\r\n		edge_blur_amount = clamp((radius*2.0 - 1.0 + 0.15*edge_blur) * 1.5, 0.0, 1.0) * 1.3;\r\n	}\r\n\r\n	// total blur amount\r\n	float blur_amount = max(edge_blur_amount, coc);\r\n\r\n	// apply blur if necessary\r\n	if (blur_amount == 0.0) {\r\n		gl_FragColor = texture2D(textureSampler, distorted_coords);\r\n	}\r\n	else {\r\n\r\n		// add blurred color\r\n		gl_FragColor = getBlurColor(blur_amount * 1.7);\r\n\r\n		// if we have computed highlights: enhance highlights\r\n		if (highlights) {\r\n			gl_FragColor.rgb += clamp(coc, 0.0, 1.0)*texture2D(highlightsSampler, distorted_coords).rgb;\r\n		}\r\n\r\n		if (blur_noise) {\r\n			// we put a slight amount of noise in the blurred color\r\n			vec2 noise = rand(distorted_coords) * 0.01 * blur_amount;\r\n			vec2 blurred_coord = vec2(distorted_coords.x + noise.x, distorted_coords.y + noise.y);\r\n			gl_FragColor = 0.04 * texture2D(textureSampler, blurred_coord) + 0.96 * gl_FragColor;\r\n		}\r\n	}\r\n\r\n\r\n	// apply grain\r\n	if (grain_amount > 0.0) {\r\n		vec4 grain_color = texture2D(grainSampler, texels_coords*0.003);\r\n		gl_FragColor.rgb += (-0.5 + grain_color.rgb) * 0.30 * grain_amount;\r\n	}\r\n\r\n}\r\n',
null!=Yr["displayPass.fragment"]?r.setReserved("displayPass.fragment","precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\nuniform sampler2D passSampler;\r\n\r\nvoid main(void)\r\n{\r\n    gl_FragColor = texture2D(passSampler, vUV);\r\n}"):r.h["displayPass.fragment"]="precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\nuniform sampler2D passSampler;\r\n\r\nvoid main(void)\r\n{\r\n    gl_FragColor = texture2D(passSampler, vUV);\r\n}",null!=Yr["filter.fragment"]?r.setReserved("filter.fragment","precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\n\r\nuniform mat4 kernelMatrix;\r\n\r\nvoid main(void)\r\n{\r\n	vec3 baseColor = texture2D(textureSampler, vUV).rgb;\r\n	vec3 updatedColor = (kernelMatrix * vec4(baseColor, 1.0)).rgb;\r\n\r\n	gl_FragColor = vec4(updatedColor, 1.0);\r\n}"):r.h["filter.fragment"]="precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\n\r\nuniform mat4 kernelMatrix;\r\n\r\nvoid main(void)\r\n{\r\n	vec3 baseColor = texture2D(textureSampler, vUV).rgb;\r\n	vec3 updatedColor = (kernelMatrix * vec4(baseColor, 1.0)).rgb;\r\n\r\n	gl_FragColor = vec4(updatedColor, 1.0);\r\n}",null!=Yr["firetexture.fragment"]?r.setReserved("firetexture.fragment","precision highp float;\r\n\r\nuniform float time;\r\nuniform vec3 c1;\r\nuniform vec3 c2;\r\nuniform vec3 c3;\r\nuniform vec3 c4;\r\nuniform vec3 c5;\r\nuniform vec3 c6;\r\nuniform vec2 speed;\r\nuniform float shift;\r\nuniform float alphaThreshold;\r\n\r\nvarying vec2 vUV;\r\n\r\nfloat rand(vec2 n) {\r\n	return fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nfloat noise(vec2 n) {\r\n	const vec2 d = vec2(0.0, 1.0);\r\n	vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\r\n	return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat fbm(vec2 n) {\r\n	float total = 0.0, amplitude = 1.0;\r\n	for (int i = 0; i < 4; i++) {\r\n		total += noise(n) * amplitude;\r\n		n += n;\r\n		amplitude *= 0.5;\r\n	}\r\n	return total;\r\n}\r\n\r\nvoid main() {\r\n	vec2 p = vUV * 8.0;\r\n	float q = fbm(p - time * 0.1);\r\n	vec2 r = vec2(fbm(p + q + time * speed.x - p.x - p.y), fbm(p + q - time * speed.y));\r\n	vec3 c = mix(c1, c2, fbm(p + r)) + mix(c3, c4, r.x) - mix(c5, c6, r.y);\r\n	vec3 color = c * cos(shift * vUV.y);\r\n	float luminance = dot(color.rgb, vec3(0.3, 0.59, 0.11));\r\n\r\n	gl_FragColor = vec4(color, luminance * alphaThreshold + (1.0 - alphaThreshold));\r\n}"):r.h["firetexture.fragment"]="precision highp float;\r\n\r\nuniform float time;\r\nuniform vec3 c1;\r\nuniform vec3 c2;\r\nuniform vec3 c3;\r\nuniform vec3 c4;\r\nuniform vec3 c5;\r\nuniform vec3 c6;\r\nuniform vec2 speed;\r\nuniform float shift;\r\nuniform float alphaThreshold;\r\n\r\nvarying vec2 vUV;\r\n\r\nfloat rand(vec2 n) {\r\n	return fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nfloat noise(vec2 n) {\r\n	const vec2 d = vec2(0.0, 1.0);\r\n	vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\r\n	return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat fbm(vec2 n) {\r\n	float total = 0.0, amplitude = 1.0;\r\n	for (int i = 0; i < 4; i++) {\r\n		total += noise(n) * amplitude;\r\n		n += n;\r\n		amplitude *= 0.5;\r\n	}\r\n	return total;\r\n}\r\n\r\nvoid main() {\r\n	vec2 p = vUV * 8.0;\r\n	float q = fbm(p - time * 0.1);\r\n	vec2 r = vec2(fbm(p + q + time * speed.x - p.x - p.y), fbm(p + q - time * speed.y));\r\n	vec3 c = mix(c1, c2, fbm(p + r)) + mix(c3, c4, r.x) - mix(c5, c6, r.y);\r\n	vec3 color = c * cos(shift * vUV.y);\r\n	float luminance = dot(color.rgb, vec3(0.3, 0.59, 0.11));\r\n\r\n	gl_FragColor = vec4(color, luminance * alphaThreshold + (1.0 - alphaThreshold));\r\n}",null!=Yr["fxaa.fragment"]?r.setReserved("fxaa.fragment","precision highp float;\r\n\r\n#define FXAA_REDUCE_MIN   (1.0/128.0)\r\n#define FXAA_REDUCE_MUL   (1.0/8.0)\r\n#define FXAA_SPAN_MAX     8.0\r\n\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\nuniform vec2 texelSize;\r\n\r\nvoid main(){\r\n	vec2 localTexelSize = texelSize;\r\n	vec4 rgbNW = texture2D(textureSampler, (vUV + vec2(-1.0, -1.0) * localTexelSize));\r\n	vec4 rgbNE = texture2D(textureSampler, (vUV + vec2(1.0, -1.0) * localTexelSize));\r\n	vec4 rgbSW = texture2D(textureSampler, (vUV + vec2(-1.0, 1.0) * localTexelSize));\r\n	vec4 rgbSE = texture2D(textureSampler, (vUV + vec2(1.0, 1.0) * localTexelSize));\r\n	vec4 rgbM = texture2D(textureSampler, vUV);\r\n	vec4 luma = vec4(0.299, 0.587, 0.114, 1.0);\r\n	float lumaNW = dot(rgbNW, luma);\r\n	float lumaNE = dot(rgbNE, luma);\r\n	float lumaSW = dot(rgbSW, luma);\r\n	float lumaSE = dot(rgbSE, luma);\r\n	float lumaM = dot(rgbM, luma);\r\n	float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\r\n	float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\r\n\r\n	vec2 dir = vec2(-((lumaNW + lumaNE) - (lumaSW + lumaSE)), ((lumaNW + lumaSW) - (lumaNE + lumaSE)));\r\n\r\n	float dirReduce = max(\r\n		(lumaNW + lumaNE + lumaSW + lumaSE) * (0.25 * FXAA_REDUCE_MUL),\r\n		FXAA_REDUCE_MIN);\r\n\r\n	float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\r\n	dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\r\n		max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\r\n		dir * rcpDirMin)) * localTexelSize;\r\n\r\n	vec4 rgbA = 0.5 * (\r\n		texture2D(textureSampler, vUV + dir * (1.0 / 3.0 - 0.5)) +\r\n		texture2D(textureSampler, vUV + dir * (2.0 / 3.0 - 0.5)));\r\n\r\n	vec4 rgbB = rgbA * 0.5 + 0.25 * (\r\n		texture2D(textureSampler, vUV + dir *  -0.5) +\r\n		texture2D(textureSampler, vUV + dir * 0.5));\r\n	float lumaB = dot(rgbB, luma);\r\n	if ((lumaB < lumaMin) || (lumaB > lumaMax)) {\r\n		gl_FragColor = rgbA;\r\n	}\r\n	else {\r\n		gl_FragColor = rgbB;\r\n	}\r\n}"):r.h["fxaa.fragment"]="precision highp float;\r\n\r\n#define FXAA_REDUCE_MIN   (1.0/128.0)\r\n#define FXAA_REDUCE_MUL   (1.0/8.0)\r\n#define FXAA_SPAN_MAX     8.0\r\n\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\nuniform vec2 texelSize;\r\n\r\nvoid main(){\r\n	vec2 localTexelSize = texelSize;\r\n	vec4 rgbNW = texture2D(textureSampler, (vUV + vec2(-1.0, -1.0) * localTexelSize));\r\n	vec4 rgbNE = texture2D(textureSampler, (vUV + vec2(1.0, -1.0) * localTexelSize));\r\n	vec4 rgbSW = texture2D(textureSampler, (vUV + vec2(-1.0, 1.0) * localTexelSize));\r\n	vec4 rgbSE = texture2D(textureSampler, (vUV + vec2(1.0, 1.0) * localTexelSize));\r\n	vec4 rgbM = texture2D(textureSampler, vUV);\r\n	vec4 luma = vec4(0.299, 0.587, 0.114, 1.0);\r\n	float lumaNW = dot(rgbNW, luma);\r\n	float lumaNE = dot(rgbNE, luma);\r\n	float lumaSW = dot(rgbSW, luma);\r\n	float lumaSE = dot(rgbSE, luma);\r\n	float lumaM = dot(rgbM, luma);\r\n	float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\r\n	float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\r\n\r\n	vec2 dir = vec2(-((lumaNW + lumaNE) - (lumaSW + lumaSE)), ((lumaNW + lumaSW) - (lumaNE + lumaSE)));\r\n\r\n	float dirReduce = max(\r\n		(lumaNW + lumaNE + lumaSW + lumaSE) * (0.25 * FXAA_REDUCE_MUL),\r\n		FXAA_REDUCE_MIN);\r\n\r\n	float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\r\n	dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\r\n		max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\r\n		dir * rcpDirMin)) * localTexelSize;\r\n\r\n	vec4 rgbA = 0.5 * (\r\n		texture2D(textureSampler, vUV + dir * (1.0 / 3.0 - 0.5)) +\r\n		texture2D(textureSampler, vUV + dir * (2.0 / 3.0 - 0.5)));\r\n\r\n	vec4 rgbB = rgbA * 0.5 + 0.25 * (\r\n		texture2D(textureSampler, vUV + dir *  -0.5) +\r\n		texture2D(textureSampler, vUV + dir * 0.5));\r\n	float lumaB = dot(rgbB, luma);\r\n	if ((lumaB < lumaMin) || (lumaB > lumaMax)) {\r\n		gl_FragColor = rgbA;\r\n	}\r\n	else {\r\n		gl_FragColor = rgbB;\r\n	}\r\n}",null!=Yr["grasstexture.fragment"]?r.setReserved("grasstexture.fragment","precision highp float;\r\n\r\nvarying vec2 vPosition;\r\nvarying vec2 vUV;\r\n\r\nuniform vec3 herb1Color;\r\nuniform vec3 herb2Color;\r\nuniform vec3 herb3Color;\r\nuniform vec3 groundColor;\r\n\r\nfloat rand(vec2 n) {\r\n	return fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nfloat noise(vec2 n) {\r\n	const vec2 d = vec2(0.0, 1.0);\r\n	vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\r\n	return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat fbm(vec2 n) {\r\n	float total = 0.0, amplitude = 1.0;\r\n	for (int i = 0; i < 4; i++) {\r\n		total += noise(n) * amplitude;\r\n		n += n;\r\n		amplitude *= 0.5;\r\n	}\r\n	return total;\r\n}\r\n\r\nvoid main(void) {\r\n	vec3 color = mix(groundColor, herb1Color, rand(gl_FragCoord.xy * 4.0));\r\n	color = mix(color, herb2Color, rand(gl_FragCoord.xy * 8.0));\r\n	color = mix(color, herb3Color, rand(gl_FragCoord.xy));\r\n	color = mix(color, herb1Color, fbm(gl_FragCoord.xy * 16.0));\r\n	gl_FragColor = vec4(color, 1.0);\r\n}"):r.h["grasstexture.fragment"]="precision highp float;\r\n\r\nvarying vec2 vPosition;\r\nvarying vec2 vUV;\r\n\r\nuniform vec3 herb1Color;\r\nuniform vec3 herb2Color;\r\nuniform vec3 herb3Color;\r\nuniform vec3 groundColor;\r\n\r\nfloat rand(vec2 n) {\r\n	return fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nfloat noise(vec2 n) {\r\n	const vec2 d = vec2(0.0, 1.0);\r\n	vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\r\n	return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat fbm(vec2 n) {\r\n	float total = 0.0, amplitude = 1.0;\r\n	for (int i = 0; i < 4; i++) {\r\n		total += noise(n) * amplitude;\r\n		n += n;\r\n		amplitude *= 0.5;\r\n	}\r\n	return total;\r\n}\r\n\r\nvoid main(void) {\r\n	vec3 color = mix(groundColor, herb1Color, rand(gl_FragCoord.xy * 4.0));\r\n	color = mix(color, herb2Color, rand(gl_FragCoord.xy * 8.0));\r\n	color = mix(color, herb3Color, rand(gl_FragCoord.xy));\r\n	color = mix(color, herb1Color, fbm(gl_FragCoord.xy * 16.0));\r\n	gl_FragColor = vec4(color, 1.0);\r\n}",null!=Yr["hdr.fragment"]?r.setReserved("hdr.fragment","precision highp float;\r\n\r\nuniform sampler2D textureSampler;\r\nvarying vec2 vUV;\r\n\r\n#if defined(GAUSSIAN_BLUR_H) || defined(GAUSSIAN_BLUR_V)\r\nuniform float blurOffsets[9];\r\nuniform float blurWeights[9];\r\nuniform float multiplier;\r\n\r\nvoid main(void) {\r\n	vec4 color = vec4(0.0, 0.0, 0.0, 0.0);\r\n\r\n	for (int i = 0; i < 9; i++) {\r\n		#ifdef GAUSSIAN_BLUR_H\r\n		color += (texture2D(textureSampler, vUV + vec2(blurOffsets[i] * multiplier, 0.0)) * blurWeights[i]);\r\n		#else\r\n		color += (texture2D(textureSampler, vUV + vec2(0.0, blurOffsets[i] * multiplier)) * blurWeights[i]);\r\n		#endif\r\n	}\r\n\r\n	color.a = 1.0;\r\n	gl_FragColor = color;\r\n}\r\n#endif\r\n\r\n#if defined(TEXTURE_ADDER)\r\nuniform sampler2D otherSampler;\r\n\r\nvoid main() {\r\n	vec4 sum = texture2D(textureSampler, vUV) + texture2D(otherSampler, vUV);\r\n	sum.a = clamp(sum.a, 0.0, 1.0);\r\n\r\n	gl_FragColor = sum;\r\n}\r\n#endif\r\n\r\n#if defined(LUMINANCE_GENERATOR)\r\nuniform vec2 lumOffsets[4];\r\n\r\nvoid main() {\r\n	float average = 0.0;\r\n	vec4 color = vec4(0.0, 0.0, 0.0, 0.0);\r\n	float maximum = -1e20;\r\n\r\n	for (int i = 0; i < 4; i++) {\r\n		color = texture2D(textureSampler, vUV + lumOffsets[i]);\r\n\r\n		float GreyValue = length(color.rgb);\r\n\r\n		maximum = max(maximum, GreyValue);\r\n		average += (0.25 * log(1e-5 + GreyValue));\r\n	}\r\n\r\n	average = exp(average);\r\n\r\n	gl_FragColor = vec4(average, maximum, 0.0, 1.0);\r\n\r\n}\r\n#endif\r\n\r\n#if defined(DOWN_SAMPLE)\r\nuniform vec2 dsOffsets[9];\r\nuniform float halfDestPixelSize;\r\n\r\n#ifdef FINAL_DOWN_SAMPLE\r\nvec4 pack(float value) {\r\n	const vec4 bit_shift = vec4(255.0 * 255.0 * 255.0, 255.0 * 255.0, 255.0, 1.0);\r\n	const vec4 bit_mask = vec4(0.0, 1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0);\r\n\r\n	vec4 res = fract(value * bit_shift);\r\n	res -= res.xxyz * bit_mask;\r\n\r\n	return res;\r\n}\r\n#endif\r\n\r\nvoid main() {\r\n	vec4 color = vec4(0.0, 0.0, 0.0, 0.0);\r\n	float average = 0.0;\r\n\r\n	for (int i = 0; i < 9; i++) {\r\n		color = texture2D(textureSampler, vUV + vec2(halfDestPixelSize, halfDestPixelSize) + dsOffsets[i]);\r\n		average += color.r;\r\n	}\r\n\r\n	average /= 9.0;\r\n\r\n	#ifndef FINAL_DOWN_SAMPLE\r\n	gl_FragColor = vec4(average, average, 0.0, 1.0);\r\n	#else\r\n	gl_FragColor = pack(average);\r\n	#endif\r\n}\r\n#endif\r\n\r\n#if defined(BRIGHT_PASS)\r\nuniform vec2 dsOffsets[4];\r\nuniform float brightThreshold;\r\n\r\nvoid main() {\r\n	vec4 average = vec4(0.0, 0.0, 0.0, 0.0);\r\n\r\n	average = texture2D(textureSampler, vUV + vec2(dsOffsets[0].x, dsOffsets[0].y));\r\n	average += texture2D(textureSampler, vUV + vec2(dsOffsets[1].x, dsOffsets[1].y));\r\n	average += texture2D(textureSampler, vUV + vec2(dsOffsets[2].x, dsOffsets[2].y));\r\n	average += texture2D(textureSampler, vUV + vec2(dsOffsets[3].x, dsOffsets[3].y));\r\n\r\n	average *= 0.25;\r\n\r\n	float luminance = length(average.rgb);\r\n\r\n	if (luminance < brightThreshold) {\r\n		average = vec4(0.0, 0.0, 0.0, 1.0);\r\n	}\r\n\r\n	gl_FragColor = average;\r\n}\r\n#endif\r\n\r\n#if defined(DOWN_SAMPLE_X4)\r\nuniform vec2 dsOffsets[16];\r\n\r\nvoid main() {\r\n	vec4 average = vec4(0.0, 0.0, 0.0, 0.0);\r\n\r\n	average = texture2D(textureSampler, vUV + dsOffsets[0]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[1]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[2]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[3]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[4]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[5]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[6]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[7]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[8]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[9]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[10]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[11]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[12]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[13]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[14]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[15]);\r\n\r\n	average /= 16.0;\r\n\r\n	gl_FragColor = average;\r\n}\r\n#endif\r\n\r\n#if defined(HDR)\r\nuniform sampler2D otherSampler;\r\n\r\nuniform float exposure;\r\nuniform float avgLuminance;\r\n\r\nvoid main() {\r\n	vec4 color = texture2D(textureSampler, vUV) + texture2D(otherSampler, vUV);\r\n	vec4 adjustedColor = color / avgLuminance * exposure;\r\n\r\n	color = adjustedColor;\r\n	color.a = 1.0;\r\n\r\n	gl_FragColor = color;\r\n}\r\n#endif\r\n"):r.h["hdr.fragment"]="precision highp float;\r\n\r\nuniform sampler2D textureSampler;\r\nvarying vec2 vUV;\r\n\r\n#if defined(GAUSSIAN_BLUR_H) || defined(GAUSSIAN_BLUR_V)\r\nuniform float blurOffsets[9];\r\nuniform float blurWeights[9];\r\nuniform float multiplier;\r\n\r\nvoid main(void) {\r\n	vec4 color = vec4(0.0, 0.0, 0.0, 0.0);\r\n\r\n	for (int i = 0; i < 9; i++) {\r\n		#ifdef GAUSSIAN_BLUR_H\r\n		color += (texture2D(textureSampler, vUV + vec2(blurOffsets[i] * multiplier, 0.0)) * blurWeights[i]);\r\n		#else\r\n		color += (texture2D(textureSampler, vUV + vec2(0.0, blurOffsets[i] * multiplier)) * blurWeights[i]);\r\n		#endif\r\n	}\r\n\r\n	color.a = 1.0;\r\n	gl_FragColor = color;\r\n}\r\n#endif\r\n\r\n#if defined(TEXTURE_ADDER)\r\nuniform sampler2D otherSampler;\r\n\r\nvoid main() {\r\n	vec4 sum = texture2D(textureSampler, vUV) + texture2D(otherSampler, vUV);\r\n	sum.a = clamp(sum.a, 0.0, 1.0);\r\n\r\n	gl_FragColor = sum;\r\n}\r\n#endif\r\n\r\n#if defined(LUMINANCE_GENERATOR)\r\nuniform vec2 lumOffsets[4];\r\n\r\nvoid main() {\r\n	float average = 0.0;\r\n	vec4 color = vec4(0.0, 0.0, 0.0, 0.0);\r\n	float maximum = -1e20;\r\n\r\n	for (int i = 0; i < 4; i++) {\r\n		color = texture2D(textureSampler, vUV + lumOffsets[i]);\r\n\r\n		float GreyValue = length(color.rgb);\r\n\r\n		maximum = max(maximum, GreyValue);\r\n		average += (0.25 * log(1e-5 + GreyValue));\r\n	}\r\n\r\n	average = exp(average);\r\n\r\n	gl_FragColor = vec4(average, maximum, 0.0, 1.0);\r\n\r\n}\r\n#endif\r\n\r\n#if defined(DOWN_SAMPLE)\r\nuniform vec2 dsOffsets[9];\r\nuniform float halfDestPixelSize;\r\n\r\n#ifdef FINAL_DOWN_SAMPLE\r\nvec4 pack(float value) {\r\n	const vec4 bit_shift = vec4(255.0 * 255.0 * 255.0, 255.0 * 255.0, 255.0, 1.0);\r\n	const vec4 bit_mask = vec4(0.0, 1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0);\r\n\r\n	vec4 res = fract(value * bit_shift);\r\n	res -= res.xxyz * bit_mask;\r\n\r\n	return res;\r\n}\r\n#endif\r\n\r\nvoid main() {\r\n	vec4 color = vec4(0.0, 0.0, 0.0, 0.0);\r\n	float average = 0.0;\r\n\r\n	for (int i = 0; i < 9; i++) {\r\n		color = texture2D(textureSampler, vUV + vec2(halfDestPixelSize, halfDestPixelSize) + dsOffsets[i]);\r\n		average += color.r;\r\n	}\r\n\r\n	average /= 9.0;\r\n\r\n	#ifndef FINAL_DOWN_SAMPLE\r\n	gl_FragColor = vec4(average, average, 0.0, 1.0);\r\n	#else\r\n	gl_FragColor = pack(average);\r\n	#endif\r\n}\r\n#endif\r\n\r\n#if defined(BRIGHT_PASS)\r\nuniform vec2 dsOffsets[4];\r\nuniform float brightThreshold;\r\n\r\nvoid main() {\r\n	vec4 average = vec4(0.0, 0.0, 0.0, 0.0);\r\n\r\n	average = texture2D(textureSampler, vUV + vec2(dsOffsets[0].x, dsOffsets[0].y));\r\n	average += texture2D(textureSampler, vUV + vec2(dsOffsets[1].x, dsOffsets[1].y));\r\n	average += texture2D(textureSampler, vUV + vec2(dsOffsets[2].x, dsOffsets[2].y));\r\n	average += texture2D(textureSampler, vUV + vec2(dsOffsets[3].x, dsOffsets[3].y));\r\n\r\n	average *= 0.25;\r\n\r\n	float luminance = length(average.rgb);\r\n\r\n	if (luminance < brightThreshold) {\r\n		average = vec4(0.0, 0.0, 0.0, 1.0);\r\n	}\r\n\r\n	gl_FragColor = average;\r\n}\r\n#endif\r\n\r\n#if defined(DOWN_SAMPLE_X4)\r\nuniform vec2 dsOffsets[16];\r\n\r\nvoid main() {\r\n	vec4 average = vec4(0.0, 0.0, 0.0, 0.0);\r\n\r\n	average = texture2D(textureSampler, vUV + dsOffsets[0]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[1]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[2]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[3]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[4]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[5]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[6]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[7]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[8]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[9]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[10]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[11]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[12]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[13]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[14]);\r\n	average += texture2D(textureSampler, vUV + dsOffsets[15]);\r\n\r\n	average /= 16.0;\r\n\r\n	gl_FragColor = average;\r\n}\r\n#endif\r\n\r\n#if defined(HDR)\r\nuniform sampler2D otherSampler;\r\n\r\nuniform float exposure;\r\nuniform float avgLuminance;\r\n\r\nvoid main() {\r\n	vec4 color = texture2D(textureSampler, vUV) + texture2D(otherSampler, vUV);\r\n	vec4 adjustedColor = color / avgLuminance * exposure;\r\n\r\n	color = adjustedColor;\r\n	color.a = 1.0;\r\n\r\n	gl_FragColor = color;\r\n}\r\n#endif\r\n",null!=Yr["layer.fragment"]?r.setReserved("layer.fragment","precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\n\r\n// Color\r\nuniform vec4 color;\r\n\r\nvoid main(void) {\r\n	vec4 baseColor = texture2D(textureSampler, vUV);\r\n\r\n	gl_FragColor = baseColor * color;\r\n}"):r.h["layer.fragment"]="precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\n\r\n// Color\r\nuniform vec4 color;\r\n\r\nvoid main(void) {\r\n	vec4 baseColor = texture2D(textureSampler, vUV);\r\n\r\n	gl_FragColor = baseColor * color;\r\n}",null!=Yr["layer.vertex"]?r.setReserved("layer.vertex","precision highp float;\r\n\r\n// Attributes\r\nattribute vec2 position;\r\n\r\n// Uniforms\r\nuniform mat4 textureMatrix;\r\n\r\n// Output\r\nvarying vec2 vUV;\r\n\r\nconst vec2 madd = vec2(0.5, 0.5);\r\n\r\nvoid main(void) {	\r\n\r\n	vUV = vec2(textureMatrix * vec4(position * madd + madd, 1.0, 0.0));\r\n	gl_Position = vec4(position, 0.0, 1.0);\r\n}"):r.h["layer.vertex"]="precision highp float;\r\n\r\n// Attributes\r\nattribute vec2 position;\r\n\r\n// Uniforms\r\nuniform mat4 textureMatrix;\r\n\r\n// Output\r\nvarying vec2 vUV;\r\n\r\nconst vec2 madd = vec2(0.5, 0.5);\r\n\r\nvoid main(void) {	\r\n\r\n	vUV = vec2(textureMatrix * vec4(position * madd + madd, 1.0, 0.0));\r\n	gl_Position = vec4(position, 0.0, 1.0);\r\n}",null!=Yr["legacydefault.fragment"]?r.setReserved("legacydefault.fragment","precision highp float;\r\n\r\n#define MAP_PROJECTION	4.\r\n\r\n// Constants\r\nuniform vec3 vEyePosition;\r\nuniform vec3 vAmbientColor;\r\nuniform vec4 vDiffuseColor;\r\n#ifdef SPECULARTERM\r\nuniform vec4 vSpecularColor;\r\n#endif\r\nuniform vec3 vEmissiveColor;\r\n\r\n// Input\r\nvarying vec3 vPositionW;\r\nvarying vec3 vNormalW;\r\n\r\n#ifdef VERTEXCOLOR\r\nvarying vec4 vColor;\r\n#endif\r\n\r\n// Lights\r\n#ifdef LIGHT0\r\nuniform vec4 vLightData0;\r\nuniform vec4 vLightDiffuse0;\r\n#ifdef SPECULARTERM\r\nuniform vec3 vLightSpecular0;\r\n#endif\r\n#ifdef SHADOW0\r\n#if defined(SPOTLIGHT0) || defined(DIRLIGHT0)\r\nvarying vec4 vPositionFromLight0;\r\nuniform sampler2D shadowSampler0;\r\n#else\r\nuniform samplerCube shadowSampler0;\r\n#endif\r\nuniform vec3 shadowsInfo0;\r\n#endif\r\n#ifdef SPOTLIGHT0\r\nuniform vec4 vLightDirection0;\r\n#endif\r\n#ifdef HEMILIGHT0\r\nuniform vec3 vLightGround0;\r\n#endif\r\n#endif\r\n\r\n#ifdef LIGHT1\r\nuniform vec4 vLightData1;\r\nuniform vec4 vLightDiffuse1;\r\n#ifdef SPECULARTERM\r\nuniform vec3 vLightSpecular1;\r\n#endif\r\n#ifdef SHADOW1\r\n#if defined(SPOTLIGHT1) || defined(DIRLIGHT1)\r\nvarying vec4 vPositionFromLight1;\r\nuniform sampler2D shadowSampler1;\r\n#else\r\nuniform samplerCube shadowSampler1;\r\n#endif\r\nuniform vec3 shadowsInfo1;\r\n#endif\r\n#ifdef SPOTLIGHT1\r\nuniform vec4 vLightDirection1;\r\n#endif\r\n#ifdef HEMILIGHT1\r\nuniform vec3 vLightGround1;\r\n#endif\r\n#endif\r\n\r\n#ifdef LIGHT2\r\nuniform vec4 vLightData2;\r\nuniform vec4 vLightDiffuse2;\r\n#ifdef SPECULARTERM\r\nuniform vec3 vLightSpecular2;\r\n#endif\r\n#ifdef SHADOW2\r\n#if defined(SPOTLIGHT2) || defined(DIRLIGHT2)\r\nvarying vec4 vPositionFromLight2;\r\nuniform sampler2D shadowSampler2;\r\n#else\r\nuniform samplerCube shadowSampler2;\r\n#endif\r\nuniform vec3 shadowsInfo2;\r\n#endif\r\n#ifdef SPOTLIGHT2\r\nuniform vec4 vLightDirection2;\r\n#endif\r\n#ifdef HEMILIGHT2\r\nuniform vec3 vLightGround2;\r\n#endif\r\n#endif\r\n\r\n#ifdef LIGHT3\r\nuniform vec4 vLightData3;\r\nuniform vec4 vLightDiffuse3;\r\n#ifdef SPECULARTERM\r\nuniform vec3 vLightSpecular3;\r\n#endif\r\n#ifdef SHADOW3\r\n#if defined(SPOTLIGHT3) || defined(DIRLIGHT3)\r\nvarying vec4 vPositionFromLight3;\r\nuniform sampler2D shadowSampler3;\r\n#else\r\nuniform samplerCube shadowSampler3;\r\n#endif\r\nuniform vec3 shadowsInfo3;\r\n#endif\r\n#ifdef SPOTLIGHT3\r\nuniform vec4 vLightDirection3;\r\n#endif\r\n#ifdef HEMILIGHT3\r\nuniform vec3 vLightGround3;\r\n#endif\r\n#endif\r\n\r\n// Samplers\r\n#ifdef DIFFUSE\r\nvarying vec2 vDiffuseUV;\r\nuniform sampler2D diffuseSampler;\r\nuniform vec2 vDiffuseInfos;\r\n#endif\r\n\r\n#ifdef AMBIENT\r\nvarying vec2 vAmbientUV;\r\nuniform sampler2D ambientSampler;\r\nuniform vec2 vAmbientInfos;\r\n#endif\r\n\r\n#ifdef OPACITY	\r\nvarying vec2 vOpacityUV;\r\nuniform sampler2D opacitySampler;\r\nuniform vec2 vOpacityInfos;\r\n#endif\r\n\r\n#ifdef REFLECTION\r\nvarying vec3 vReflectionUVW;\r\n#ifdef REFLECTIONMAP_3D\r\nuniform samplerCube reflectionCubeSampler;\r\n#else\r\nuniform sampler2D reflection2DSampler;\r\n#endif\r\nuniform vec2 vReflectionInfos;\r\n#endif\r\n\r\n#ifdef EMISSIVE\r\nvarying vec2 vEmissiveUV;\r\nuniform vec2 vEmissiveInfos;\r\nuniform sampler2D emissiveSampler;\r\n#endif\r\n\r\n#if defined(SPECULAR) && defined(SPECULARTERM)\r\nvarying vec2 vSpecularUV;\r\nuniform vec2 vSpecularInfos;\r\nuniform sampler2D specularSampler;\r\n#endif\r\n\r\n// Fresnel\r\n#ifdef FRESNEL\r\nfloat computeFresnelTerm(vec3 viewDirection, vec3 worldNormal, float bias, float power)\r\n{\r\n	float fresnelTerm = pow(bias + abs(dot(viewDirection, worldNormal)), power);\r\n	return clamp(fresnelTerm, 0., 1.);\r\n}\r\n#endif\r\n\r\n#ifdef DIFFUSEFRESNEL\r\nuniform vec4 diffuseLeftColor;\r\nuniform vec4 diffuseRightColor;\r\n#endif\r\n\r\n#ifdef OPACITYFRESNEL\r\nuniform vec4 opacityParts;\r\n#endif\r\n\r\n#ifdef REFLECTIONFRESNEL\r\nuniform vec4 reflectionLeftColor;\r\nuniform vec4 reflectionRightColor;\r\n#endif\r\n\r\n#ifdef EMISSIVEFRESNEL\r\nuniform vec4 emissiveLeftColor;\r\nuniform vec4 emissiveRightColor;\r\n#endif\r\n\r\n// Shadows\r\n#ifdef SHADOWS\r\n\r\nfloat unpack(vec4 color)\r\n{\r\n	const vec4 bit_shift = vec4(1.0 / (255.0 * 255.0 * 255.0), 1.0 / (255.0 * 255.0), 1.0 / 255.0, 1.0);\r\n	return dot(color, bit_shift);\r\n}\r\n\r\n#if defined(POINTLIGHT0) || defined(POINTLIGHT1) || defined(POINTLIGHT2) || defined(POINTLIGHT3)\r\nfloat computeShadowCube(vec3 lightPosition, samplerCube shadowSampler, float darkness, float bias)\r\n{\r\n	vec3 directionToLight = vPositionW - lightPosition;\r\n	float depth = length(directionToLight);\r\n\r\n	depth = clamp(depth, 0., 1.);\r\n\r\n	directionToLight.y = 1.0 - directionToLight.y;\r\n\r\n	float shadow = unpack(textureCube(shadowSampler, directionToLight)) + bias;\r\n\r\n	if (depth > shadow)\r\n	{\r\n		return darkness;\r\n	}\r\n	return 1.0;\r\n}\r\n#endif\r\n\r\n#if defined(SPOTLIGHT0) || defined(SPOTLIGHT1) || defined(SPOTLIGHT2) || defined(SPOTLIGHT3) ||  defined(DIRLIGHT0) || defined(DIRLIGHT1) || defined(DIRLIGHT2) || defined(DIRLIGHT3)\r\nfloat computeShadow(vec4 vPositionFromLight, sampler2D shadowSampler, float darkness, float bias)\r\n{\r\n	vec3 depth = vPositionFromLight.xyz / vPositionFromLight.w;\r\n	depth = 0.5 * depth + vec3(0.5);\r\n	vec2 uv = depth.xy;\r\n\r\n	if (uv.x < 0. || uv.x > 1.0 || uv.y < 0. || uv.y > 1.0)\r\n	{\r\n		return 1.0;\r\n	}\r\n\r\n	float shadow = unpack(texture2D(shadowSampler, uv)) + bias;\r\n\r\n	if (depth.z > shadow)\r\n	{\r\n		return darkness;\r\n	}\r\n	return 1.;\r\n}\r\n\r\n// Thanks to http://devmaster.net/\r\nfloat unpackHalf(vec2 color)\r\n{\r\n	return color.x + (color.y / 255.0);\r\n}\r\n\r\nfloat linstep(float low, float high, float v) {\r\n	return clamp((v - low) / (high - low), 0.0, 1.0);\r\n}\r\n\r\nfloat ChebychevInequality(vec2 moments, float compare, float bias)\r\n{\r\n	float p = smoothstep(compare - bias, compare, moments.x);\r\n	float variance = max(moments.y - moments.x * moments.x, 0.02);\r\n	float d = compare - moments.x;\r\n	float p_max = linstep(0.2, 1.0, variance / (variance + d * d));\r\n\r\n	return clamp(max(p, p_max), 0.0, 1.0);\r\n}\r\n\r\nfloat computeShadowWithVSM(vec4 vPositionFromLight, sampler2D shadowSampler, float bias, float darkness)\r\n{\r\n	vec3 depth = vPositionFromLight.xyz / vPositionFromLight.w;\r\n	depth = 0.5 * depth + vec3(0.5);\r\n	vec2 uv = depth.xy;\r\n\r\n	if (uv.x < 0. || uv.x > 1.0 || uv.y < 0. || uv.y > 1.0 || depth.z >= 1.0)\r\n	{\r\n		return 1.0;\r\n	}\r\n\r\n	vec4 texel = texture2D(shadowSampler, uv);\r\n\r\n	vec2 moments = vec2(unpackHalf(texel.xy), unpackHalf(texel.zw));\r\n	return min(1.0, 1.0 - ChebychevInequality(moments, depth.z, bias) + darkness);\r\n}\r\n#endif\r\n#endif\r\n\r\n#ifdef CLIPPLANE\r\nvarying float fClipDistance;\r\n#endif\r\n\r\n// Fog\r\n#ifdef FOG\r\n\r\n#define FOGMODE_NONE    0.\r\n#define FOGMODE_EXP     1.\r\n#define FOGMODE_EXP2    2.\r\n#define FOGMODE_LINEAR  3.\r\n#define E 2.71828\r\n\r\nuniform vec4 vFogInfos;\r\nuniform vec3 vFogColor;\r\nvarying float fFogDistance;\r\n\r\nfloat CalcFogFactor()\r\n{\r\n	float fogCoeff = 1.0;\r\n	float fogStart = vFogInfos.y;\r\n	float fogEnd = vFogInfos.z;\r\n	float fogDensity = vFogInfos.w;\r\n\r\n	if (FOGMODE_LINEAR == vFogInfos.x)\r\n	{\r\n		fogCoeff = (fogEnd - fFogDistance) / (fogEnd - fogStart);\r\n	}\r\n	else if (FOGMODE_EXP == vFogInfos.x)\r\n	{\r\n		fogCoeff = 1.0 / pow(E, fFogDistance * fogDensity);\r\n	}\r\n	else if (FOGMODE_EXP2 == vFogInfos.x)\r\n	{\r\n		fogCoeff = 1.0 / pow(E, fFogDistance * fFogDistance * fogDensity * fogDensity);\r\n	}\r\n\r\n	return clamp(fogCoeff, 0.0, 1.0);\r\n}\r\n#endif\r\n\r\n// Light Computing\r\nmat3 computeLighting(vec3 viewDirectionW, vec3 vNormal, vec4 lightData, vec4 diffuseColor, vec3 specularColor) {\r\n	mat3 result;\r\n\r\n	vec3 lightVectorW;\r\n	if (lightData.w == 0.)\r\n	{\r\n		lightVectorW = normalize(lightData.xyz - vPositionW);\r\n	}\r\n	else\r\n	{\r\n		lightVectorW = normalize(-lightData.xyz);\r\n	}\r\n\r\n	// diffuse\r\n	float ndl = max(0., dot(vNormal, lightVectorW));\r\n\r\n	result[0] = ndl * diffuseColor.rgb;\r\n\r\n#ifdef SPECULARTERM\r\n	// Specular\r\n	vec3 angleW = normalize(viewDirectionW + lightVectorW);\r\n	float specComp = max(0., dot(vNormal, angleW));\r\n	specComp = max(0., pow(specComp, max(1.0, vSpecularColor.a)));\r\n	result[1] = specComp * specularColor;\r\n#else\r\n	result[1] = vec3(0.);\r\n#endif\r\n\r\n	result[2] = vec3(0.);\r\n\r\n	return result;\r\n}\r\n\r\nmat3 computeSpotLighting(vec3 viewDirectionW, vec3 vNormal, vec4 lightData, vec4 lightDirection, vec4 diffuseColor, vec3 specularColor) {\r\n	mat3 result;\r\n\r\n	vec3 lightVectorW = normalize(lightData.xyz - vPositionW);\r\n\r\n	// diffuse\r\n	float cosAngle = max(0., dot(-lightDirection.xyz, lightVectorW));\r\n	float spotAtten = 0.0;\r\n\r\n	if (cosAngle >= lightDirection.w)\r\n	{\r\n		cosAngle = max(0., pow(cosAngle, lightData.w));\r\n		spotAtten = max(0., (cosAngle - lightDirection.w) / (1. - cosAngle));\r\n\r\n		// Diffuse\r\n		float ndl = max(0., dot(vNormal, -lightDirection.xyz));\r\n		result[0] = ndl * spotAtten * diffuseColor.rgb;\r\n\r\n#ifdef SPECULARTERM\r\n		// Specular\r\n		vec3 angleW = normalize(viewDirectionW - lightDirection.xyz);\r\n		float specComp = max(0., dot(vNormal, angleW));\r\n		specComp = pow(specComp, vSpecularColor.a);\r\n		result[1] = specComp * specularColor * spotAtten;\r\n#else\r\n		result[1] = vec3(0.);\r\n#endif\r\n		result[2] = vec3(0.);\r\n\r\n		return result;\r\n	}\r\n\r\n	result[0] = vec3(0.);\r\n	result[1] = vec3(0.);\r\n	result[2] = vec3(0.);\r\n\r\n	return result;\r\n}\r\n\r\nmat3 computeHemisphericLighting(vec3 viewDirectionW, vec3 vNormal, vec4 lightData, vec4 diffuseColor, vec3 specularColor, vec3 groundColor) {\r\n	mat3 result;\r\n\r\n	// Diffuse\r\n	float ndl = dot(vNormal, lightData.xyz) * 0.5 + 0.5;\r\n	result[0] = mix(groundColor, diffuseColor.rgb, ndl);\r\n\r\n#ifdef SPECULARTERM\r\n	// Specular\r\n	vec3 angleW = normalize(viewDirectionW + lightData.xyz);\r\n	float specComp = max(0., dot(vNormal, angleW));\r\n	specComp = pow(specComp, vSpecularColor.a);\r\n	result[1] = specComp * specularColor;\r\n#else\r\n	result[1] = vec3(0.);\r\n#endif\r\n\r\n	result[2] = vec3(0.);\r\n\r\n	return result;\r\n}\r\n\r\nvoid main(void) {\r\n	// Clip plane\r\n#ifdef CLIPPLANE\r\n	if (fClipDistance > 0.0)\r\n		discard;\r\n#endif\r\n\r\n	vec3 viewDirectionW = normalize(vEyePosition - vPositionW);\r\n\r\n	// Base color\r\n	vec4 baseColor = vec4(1., 1., 1., 1.);\r\n	vec3 diffuseColor = vDiffuseColor.rgb;\r\n\r\n#ifdef DIFFUSE\r\n	baseColor = texture2D(diffuseSampler, vDiffuseUV);\r\n\r\n#ifdef ALPHATEST\r\n	if (baseColor.a < 0.4)\r\n		discard;\r\n#endif\r\n\r\n	baseColor.rgb *= vDiffuseInfos.y;\r\n#endif\r\n\r\n#ifdef VERTEXCOLOR\r\n	baseColor.rgb *= vColor.rgb;\r\n#endif\r\n\r\n	// Bump\r\n	vec3 normalW = normalize(vNormalW);\r\n\r\n	// Ambient color\r\n	vec3 baseAmbientColor = vec3(1., 1., 1.);\r\n\r\n#ifdef AMBIENT\r\n	baseAmbientColor = texture2D(ambientSampler, vAmbientUV).rgb * vAmbientInfos.y;\r\n#endif\r\n\r\n	// Lighting\r\n	vec3 diffuseBase = vec3(0., 0., 0.);\r\n#ifdef SPECULARTERM\r\n	vec3 specularBase = vec3(0., 0., 0.);\r\n#endif\r\n	float shadow = 1.;\r\n\r\n#ifdef LIGHT0\r\n#ifndef SPECULARTERM\r\n	vec3 vLightSpecular0 = vec3(0.0);\r\n#endif\r\n#ifdef SPOTLIGHT0\r\n	mat3 info = computeSpotLighting(viewDirectionW, normalW, vLightData0, vLightDirection0, vLightDiffuse0, vLightSpecular0);\r\n#endif\r\n#ifdef HEMILIGHT0\r\n	mat3 info = computeHemisphericLighting(viewDirectionW, normalW, vLightData0, vLightDiffuse0, vLightSpecular0, vLightGround0);\r\n#endif\r\n#if defined(POINTLIGHT0) || defined(DIRLIGHT0)\r\n	mat3 info = computeLighting(viewDirectionW, normalW, vLightData0, vLightDiffuse0, vLightSpecular0);\r\n#endif\r\n#ifdef SHADOW0\r\n#ifdef SHADOWVSM0\r\n	shadow = computeShadowWithVSM(vPositionFromLight0, shadowSampler0, shadowsInfo0.z, shadowsInfo0.x);\r\n#else\r\n#if defined(POINTLIGHT0)\r\n	shadow = computeShadowCube(vLightData0.xyz, shadowSampler0, shadowsInfo0.x, shadowsInfo0.z);\r\n#else\r\n	shadow = computeShadow(vPositionFromLight0, shadowSampler0, shadowsInfo0.x, shadowsInfo0.z);\r\n#endif\r\n#endif\r\n#else\r\n	shadow = 1.;\r\n#endif\r\n	diffuseBase += info[0] * shadow;\r\n#ifdef SPECULARTERM\r\n	specularBase += info[1] * shadow;\r\n#endif\r\n#endif\r\n\r\n#ifdef LIGHT1\r\n#ifndef SPECULARTERM\r\n	vec3 vLightSpecular1 = vec3(0.0);\r\n#endif\r\n#ifdef SPOTLIGHT1\r\n	info = computeSpotLighting(viewDirectionW, normalW, vLightData1, vLightDirection1, vLightDiffuse1, vLightSpecular1);\r\n#endif\r\n#ifdef HEMILIGHT1\r\n	info = computeHemisphericLighting(viewDirectionW, normalW, vLightData1, vLightDiffuse1, vLightSpecular1, vLightGround1);\r\n#endif\r\n#if defined(POINTLIGHT1) || defined(DIRLIGHT1)\r\n	info = computeLighting(viewDirectionW, normalW, vLightData1, vLightDiffuse1, vLightSpecular1);\r\n#endif\r\n#ifdef SHADOW1\r\n#ifdef SHADOWVSM1\r\n	shadow = computeShadowWithVSM(vPositionFromLight1, shadowSampler1, shadowsInfo1.z, shadowsInfo1.x);\r\n#else\r\n#if defined(POINTLIGHT1)\r\n	shadow = computeShadowCube(vLightData1.xyz, shadowSampler1, shadowsInfo1.x, shadowsInfo1.z);\r\n#else\r\n	shadow = computeShadow(vPositionFromLight1, shadowSampler1, shadowsInfo1.x, shadowsInfo1.z);\r\n#endif\r\n#endif\r\n#else\r\n	shadow = 1.;\r\n#endif\r\n	diffuseBase += info[0] * shadow;\r\n#ifdef SPECULARTERM\r\n	specularBase += info[1] * shadow;\r\n#endif\r\n#endif\r\n\r\n#ifdef LIGHT2\r\n#ifndef SPECULARTERM\r\n	vec3 vLightSpecular2 = vec3(0.0);\r\n#endif\r\n#ifdef SPOTLIGHT2\r\n	info = computeSpotLighting(viewDirectionW, normalW, vLightData2, vLightDirection2, vLightDiffuse2, vLightSpecular2);\r\n#endif\r\n#ifdef HEMILIGHT2\r\n	info = computeHemisphericLighting(viewDirectionW, normalW, vLightData2, vLightDiffuse2, vLightSpecular2, vLightGround2);\r\n#endif\r\n#if defined(POINTLIGHT2) || defined(DIRLIGHT2)\r\n	info = computeLighting(viewDirectionW, normalW, vLightData2, vLightDiffuse2, vLightSpecular2);\r\n#endif\r\n#ifdef SHADOW2\r\n#ifdef SHADOWVSM2\r\n	shadow = computeShadowWithVSM(vPositionFromLight2, shadowSampler2, shadowsInfo2.z, shadowsInfo2.x);\r\n#else\r\n#if defined(POINTLIGHT2)\r\n	shadow = computeShadowCube(vLightData2.xyz, shadowSampler2, shadowsInfo2.x, shadowsInfo2.z);\r\n#else\r\n	shadow = computeShadow(vPositionFromLight2, shadowSampler2, shadowsInfo2.x, shadowsInfo2.z);\r\n#endif\r\n#endif\r\n#else\r\n	shadow = 1.;\r\n#endif\r\n	diffuseBase += info[0] * shadow;\r\n#ifdef SPECULARTERM\r\n	specularBase += info[1] * shadow;\r\n#endif\r\n#endif\r\n\r\n#ifdef LIGHT3\r\n#ifndef SPECULARTERM\r\n	vec3 vLightSpecular3 = vec3(0.0);\r\n#endif\r\n#ifdef SPOTLIGHT3\r\n	info = computeSpotLighting(viewDirectionW, normalW, vLightData3, vLightDirection3, vLightDiffuse3, vLightSpecular3);\r\n#endif\r\n#ifdef HEMILIGHT3\r\n	info = computeHemisphericLighting(viewDirectionW, normalW, vLightData3, vLightDiffuse3, vLightSpecular3, vLightGround3);\r\n#endif\r\n#if defined(POINTLIGHT3) || defined(DIRLIGHT3)\r\n	info = computeLighting(viewDirectionW, normalW, vLightData3, vLightDiffuse3, vLightSpecular3);\r\n#endif\r\n#ifdef SHADOW3\r\n#ifdef SHADOWVSM3\r\n	shadow = computeShadowWithVSM(vPositionFromLight3, shadowSampler3, shadowsInfo3.z, shadowsInfo3.x);\r\n#else\r\n#if defined(POINTLIGHT3)\r\n	shadow = computeShadowCube(vLightData3.xyz, shadowSampler3, shadowsInfo3.x, shadowsInfo3.z);\r\n#else\r\n	shadow = computeShadow(vPositionFromLight3, shadowSampler3, shadowsInfo3.x, shadowsInfo3.z);\r\n#endif\r\n#endif\r\n#else\r\n	shadow = 1.;\r\n#endif\r\n	diffuseBase += info[0] * shadow;\r\n#ifdef SPECULARTERM\r\n	specularBase += info[1] * shadow;\r\n#endif\r\n#endif\r\n\r\n	// Reflection\r\n	vec3 reflectionColor = vec3(0., 0., 0.);\r\n\r\n#ifdef REFLECTION\r\n#ifdef REFLECTIONMAP_3D\r\n		reflectionColor = textureCube(reflectionCubeSampler, vReflectionUVW).rgb * vReflectionInfos.x;\r\n#else\r\n		vec2 coords = vReflectionUVW.xy;\r\n\r\n#ifdef REFLECTIONMAP_PROJECTION\r\n		coords /= vReflectionUVW.z;\r\n#endif\r\n\r\n		coords.y = 1.0 - coords.y;\r\n\r\n		reflectionColor = texture2D(reflection2DSampler, coords).rgb * vReflectionInfos.x;\r\n#endif\r\n\r\n#ifdef REFLECTIONFRESNEL\r\n	float reflectionFresnelTerm = computeFresnelTerm(viewDirectionW, normalW, reflectionRightColor.a, reflectionLeftColor.a);\r\n\r\n	reflectionColor *= reflectionLeftColor.rgb * (1.0 - reflectionFresnelTerm) + reflectionFresnelTerm * reflectionRightColor.rgb;\r\n#endif\r\n#endif\r\n\r\n	// Alpha\r\n	float alpha = vDiffuseColor.a;\r\n\r\n#ifdef OPACITY\r\n	vec4 opacityMap = texture2D(opacitySampler, vOpacityUV);\r\n#ifdef OPACITYRGB\r\n	opacityMap.rgb = opacityMap.rgb * vec3(0.3, 0.59, 0.11);\r\n	alpha *= (opacityMap.x + opacityMap.y + opacityMap.z)* vOpacityInfos.y;\r\n#else\r\n	alpha *= opacityMap.a * vOpacityInfos.y;\r\n#endif\r\n#endif\r\n\r\n#ifdef VERTEXALPHA\r\n	alpha *= vColor.a;\r\n#endif\r\n\r\n#ifdef OPACITYFRESNEL\r\n	float opacityFresnelTerm = computeFresnelTerm(viewDirectionW, normalW, opacityParts.z, opacityParts.w);\r\n\r\n	alpha += opacityParts.x * (1.0 - opacityFresnelTerm) + opacityFresnelTerm * opacityParts.y;\r\n#endif\r\n\r\n	// Emissive\r\n	vec3 emissiveColor = vEmissiveColor;\r\n#ifdef EMISSIVE\r\n	emissiveColor += texture2D(emissiveSampler, vEmissiveUV).rgb * vEmissiveInfos.y;\r\n#endif\r\n\r\n#ifdef EMISSIVEFRESNEL\r\n	float emissiveFresnelTerm = computeFresnelTerm(viewDirectionW, normalW, emissiveRightColor.a, emissiveLeftColor.a);\r\n\r\n	emissiveColor *= emissiveLeftColor.rgb * (1.0 - emissiveFresnelTerm) + emissiveFresnelTerm * emissiveRightColor.rgb;\r\n#endif\r\n\r\n	// Specular map\r\n#ifdef SPECULARTERM\r\n	vec3 specularColor = vSpecularColor.rgb;\r\n#ifdef SPECULAR\r\n	specularColor = texture2D(specularSampler, vSpecularUV).rgb * vSpecularInfos.y;\r\n#endif\r\n#endif\r\n\r\n	// Fresnel\r\n#ifdef DIFFUSEFRESNEL\r\n	float diffuseFresnelTerm = computeFresnelTerm(viewDirectionW, normalW, diffuseRightColor.a, diffuseLeftColor.a);\r\n\r\n	diffuseBase *= diffuseLeftColor.rgb * (1.0 - diffuseFresnelTerm) + diffuseFresnelTerm * diffuseRightColor.rgb;\r\n#endif\r\n\r\n	// Composition\r\n	vec3 finalDiffuse = clamp(diffuseBase * diffuseColor + emissiveColor + vAmbientColor, 0.0, 1.0) * baseColor.rgb;\r\n#ifdef SPECULARTERM\r\n	vec3 finalSpecular = specularBase * specularColor;\r\n#else\r\n	vec3 finalSpecular = vec3(0.0);\r\n#endif\r\n\r\n	vec4 color = vec4(finalDiffuse * baseAmbientColor + finalSpecular + reflectionColor, alpha);\r\n\r\n#ifdef FOG\r\n	float fog = CalcFogFactor();\r\n	color.rgb = fog * color.rgb + (1.0 - fog) * vFogColor;\r\n#endif\r\n\r\n	gl_FragColor = color;\r\n}"):r.h["legacydefault.fragment"]="precision highp float;\r\n\r\n#define MAP_PROJECTION	4.\r\n\r\n// Constants\r\nuniform vec3 vEyePosition;\r\nuniform vec3 vAmbientColor;\r\nuniform vec4 vDiffuseColor;\r\n#ifdef SPECULARTERM\r\nuniform vec4 vSpecularColor;\r\n#endif\r\nuniform vec3 vEmissiveColor;\r\n\r\n// Input\r\nvarying vec3 vPositionW;\r\nvarying vec3 vNormalW;\r\n\r\n#ifdef VERTEXCOLOR\r\nvarying vec4 vColor;\r\n#endif\r\n\r\n// Lights\r\n#ifdef LIGHT0\r\nuniform vec4 vLightData0;\r\nuniform vec4 vLightDiffuse0;\r\n#ifdef SPECULARTERM\r\nuniform vec3 vLightSpecular0;\r\n#endif\r\n#ifdef SHADOW0\r\n#if defined(SPOTLIGHT0) || defined(DIRLIGHT0)\r\nvarying vec4 vPositionFromLight0;\r\nuniform sampler2D shadowSampler0;\r\n#else\r\nuniform samplerCube shadowSampler0;\r\n#endif\r\nuniform vec3 shadowsInfo0;\r\n#endif\r\n#ifdef SPOTLIGHT0\r\nuniform vec4 vLightDirection0;\r\n#endif\r\n#ifdef HEMILIGHT0\r\nuniform vec3 vLightGround0;\r\n#endif\r\n#endif\r\n\r\n#ifdef LIGHT1\r\nuniform vec4 vLightData1;\r\nuniform vec4 vLightDiffuse1;\r\n#ifdef SPECULARTERM\r\nuniform vec3 vLightSpecular1;\r\n#endif\r\n#ifdef SHADOW1\r\n#if defined(SPOTLIGHT1) || defined(DIRLIGHT1)\r\nvarying vec4 vPositionFromLight1;\r\nuniform sampler2D shadowSampler1;\r\n#else\r\nuniform samplerCube shadowSampler1;\r\n#endif\r\nuniform vec3 shadowsInfo1;\r\n#endif\r\n#ifdef SPOTLIGHT1\r\nuniform vec4 vLightDirection1;\r\n#endif\r\n#ifdef HEMILIGHT1\r\nuniform vec3 vLightGround1;\r\n#endif\r\n#endif\r\n\r\n#ifdef LIGHT2\r\nuniform vec4 vLightData2;\r\nuniform vec4 vLightDiffuse2;\r\n#ifdef SPECULARTERM\r\nuniform vec3 vLightSpecular2;\r\n#endif\r\n#ifdef SHADOW2\r\n#if defined(SPOTLIGHT2) || defined(DIRLIGHT2)\r\nvarying vec4 vPositionFromLight2;\r\nuniform sampler2D shadowSampler2;\r\n#else\r\nuniform samplerCube shadowSampler2;\r\n#endif\r\nuniform vec3 shadowsInfo2;\r\n#endif\r\n#ifdef SPOTLIGHT2\r\nuniform vec4 vLightDirection2;\r\n#endif\r\n#ifdef HEMILIGHT2\r\nuniform vec3 vLightGround2;\r\n#endif\r\n#endif\r\n\r\n#ifdef LIGHT3\r\nuniform vec4 vLightData3;\r\nuniform vec4 vLightDiffuse3;\r\n#ifdef SPECULARTERM\r\nuniform vec3 vLightSpecular3;\r\n#endif\r\n#ifdef SHADOW3\r\n#if defined(SPOTLIGHT3) || defined(DIRLIGHT3)\r\nvarying vec4 vPositionFromLight3;\r\nuniform sampler2D shadowSampler3;\r\n#else\r\nuniform samplerCube shadowSampler3;\r\n#endif\r\nuniform vec3 shadowsInfo3;\r\n#endif\r\n#ifdef SPOTLIGHT3\r\nuniform vec4 vLightDirection3;\r\n#endif\r\n#ifdef HEMILIGHT3\r\nuniform vec3 vLightGround3;\r\n#endif\r\n#endif\r\n\r\n// Samplers\r\n#ifdef DIFFUSE\r\nvarying vec2 vDiffuseUV;\r\nuniform sampler2D diffuseSampler;\r\nuniform vec2 vDiffuseInfos;\r\n#endif\r\n\r\n#ifdef AMBIENT\r\nvarying vec2 vAmbientUV;\r\nuniform sampler2D ambientSampler;\r\nuniform vec2 vAmbientInfos;\r\n#endif\r\n\r\n#ifdef OPACITY	\r\nvarying vec2 vOpacityUV;\r\nuniform sampler2D opacitySampler;\r\nuniform vec2 vOpacityInfos;\r\n#endif\r\n\r\n#ifdef REFLECTION\r\nvarying vec3 vReflectionUVW;\r\n#ifdef REFLECTIONMAP_3D\r\nuniform samplerCube reflectionCubeSampler;\r\n#else\r\nuniform sampler2D reflection2DSampler;\r\n#endif\r\nuniform vec2 vReflectionInfos;\r\n#endif\r\n\r\n#ifdef EMISSIVE\r\nvarying vec2 vEmissiveUV;\r\nuniform vec2 vEmissiveInfos;\r\nuniform sampler2D emissiveSampler;\r\n#endif\r\n\r\n#if defined(SPECULAR) && defined(SPECULARTERM)\r\nvarying vec2 vSpecularUV;\r\nuniform vec2 vSpecularInfos;\r\nuniform sampler2D specularSampler;\r\n#endif\r\n\r\n// Fresnel\r\n#ifdef FRESNEL\r\nfloat computeFresnelTerm(vec3 viewDirection, vec3 worldNormal, float bias, float power)\r\n{\r\n	float fresnelTerm = pow(bias + abs(dot(viewDirection, worldNormal)), power);\r\n	return clamp(fresnelTerm, 0., 1.);\r\n}\r\n#endif\r\n\r\n#ifdef DIFFUSEFRESNEL\r\nuniform vec4 diffuseLeftColor;\r\nuniform vec4 diffuseRightColor;\r\n#endif\r\n\r\n#ifdef OPACITYFRESNEL\r\nuniform vec4 opacityParts;\r\n#endif\r\n\r\n#ifdef REFLECTIONFRESNEL\r\nuniform vec4 reflectionLeftColor;\r\nuniform vec4 reflectionRightColor;\r\n#endif\r\n\r\n#ifdef EMISSIVEFRESNEL\r\nuniform vec4 emissiveLeftColor;\r\nuniform vec4 emissiveRightColor;\r\n#endif\r\n\r\n// Shadows\r\n#ifdef SHADOWS\r\n\r\nfloat unpack(vec4 color)\r\n{\r\n	const vec4 bit_shift = vec4(1.0 / (255.0 * 255.0 * 255.0), 1.0 / (255.0 * 255.0), 1.0 / 255.0, 1.0);\r\n	return dot(color, bit_shift);\r\n}\r\n\r\n#if defined(POINTLIGHT0) || defined(POINTLIGHT1) || defined(POINTLIGHT2) || defined(POINTLIGHT3)\r\nfloat computeShadowCube(vec3 lightPosition, samplerCube shadowSampler, float darkness, float bias)\r\n{\r\n	vec3 directionToLight = vPositionW - lightPosition;\r\n	float depth = length(directionToLight);\r\n\r\n	depth = clamp(depth, 0., 1.);\r\n\r\n	directionToLight.y = 1.0 - directionToLight.y;\r\n\r\n	float shadow = unpack(textureCube(shadowSampler, directionToLight)) + bias;\r\n\r\n	if (depth > shadow)\r\n	{\r\n		return darkness;\r\n	}\r\n	return 1.0;\r\n}\r\n#endif\r\n\r\n#if defined(SPOTLIGHT0) || defined(SPOTLIGHT1) || defined(SPOTLIGHT2) || defined(SPOTLIGHT3) ||  defined(DIRLIGHT0) || defined(DIRLIGHT1) || defined(DIRLIGHT2) || defined(DIRLIGHT3)\r\nfloat computeShadow(vec4 vPositionFromLight, sampler2D shadowSampler, float darkness, float bias)\r\n{\r\n	vec3 depth = vPositionFromLight.xyz / vPositionFromLight.w;\r\n	depth = 0.5 * depth + vec3(0.5);\r\n	vec2 uv = depth.xy;\r\n\r\n	if (uv.x < 0. || uv.x > 1.0 || uv.y < 0. || uv.y > 1.0)\r\n	{\r\n		return 1.0;\r\n	}\r\n\r\n	float shadow = unpack(texture2D(shadowSampler, uv)) + bias;\r\n\r\n	if (depth.z > shadow)\r\n	{\r\n		return darkness;\r\n	}\r\n	return 1.;\r\n}\r\n\r\n// Thanks to http://devmaster.net/\r\nfloat unpackHalf(vec2 color)\r\n{\r\n	return color.x + (color.y / 255.0);\r\n}\r\n\r\nfloat linstep(float low, float high, float v) {\r\n	return clamp((v - low) / (high - low), 0.0, 1.0);\r\n}\r\n\r\nfloat ChebychevInequality(vec2 moments, float compare, float bias)\r\n{\r\n	float p = smoothstep(compare - bias, compare, moments.x);\r\n	float variance = max(moments.y - moments.x * moments.x, 0.02);\r\n	float d = compare - moments.x;\r\n	float p_max = linstep(0.2, 1.0, variance / (variance + d * d));\r\n\r\n	return clamp(max(p, p_max), 0.0, 1.0);\r\n}\r\n\r\nfloat computeShadowWithVSM(vec4 vPositionFromLight, sampler2D shadowSampler, float bias, float darkness)\r\n{\r\n	vec3 depth = vPositionFromLight.xyz / vPositionFromLight.w;\r\n	depth = 0.5 * depth + vec3(0.5);\r\n	vec2 uv = depth.xy;\r\n\r\n	if (uv.x < 0. || uv.x > 1.0 || uv.y < 0. || uv.y > 1.0 || depth.z >= 1.0)\r\n	{\r\n		return 1.0;\r\n	}\r\n\r\n	vec4 texel = texture2D(shadowSampler, uv);\r\n\r\n	vec2 moments = vec2(unpackHalf(texel.xy), unpackHalf(texel.zw));\r\n	return min(1.0, 1.0 - ChebychevInequality(moments, depth.z, bias) + darkness);\r\n}\r\n#endif\r\n#endif\r\n\r\n#ifdef CLIPPLANE\r\nvarying float fClipDistance;\r\n#endif\r\n\r\n// Fog\r\n#ifdef FOG\r\n\r\n#define FOGMODE_NONE    0.\r\n#define FOGMODE_EXP     1.\r\n#define FOGMODE_EXP2    2.\r\n#define FOGMODE_LINEAR  3.\r\n#define E 2.71828\r\n\r\nuniform vec4 vFogInfos;\r\nuniform vec3 vFogColor;\r\nvarying float fFogDistance;\r\n\r\nfloat CalcFogFactor()\r\n{\r\n	float fogCoeff = 1.0;\r\n	float fogStart = vFogInfos.y;\r\n	float fogEnd = vFogInfos.z;\r\n	float fogDensity = vFogInfos.w;\r\n\r\n	if (FOGMODE_LINEAR == vFogInfos.x)\r\n	{\r\n		fogCoeff = (fogEnd - fFogDistance) / (fogEnd - fogStart);\r\n	}\r\n	else if (FOGMODE_EXP == vFogInfos.x)\r\n	{\r\n		fogCoeff = 1.0 / pow(E, fFogDistance * fogDensity);\r\n	}\r\n	else if (FOGMODE_EXP2 == vFogInfos.x)\r\n	{\r\n		fogCoeff = 1.0 / pow(E, fFogDistance * fFogDistance * fogDensity * fogDensity);\r\n	}\r\n\r\n	return clamp(fogCoeff, 0.0, 1.0);\r\n}\r\n#endif\r\n\r\n// Light Computing\r\nmat3 computeLighting(vec3 viewDirectionW, vec3 vNormal, vec4 lightData, vec4 diffuseColor, vec3 specularColor) {\r\n	mat3 result;\r\n\r\n	vec3 lightVectorW;\r\n	if (lightData.w == 0.)\r\n	{\r\n		lightVectorW = normalize(lightData.xyz - vPositionW);\r\n	}\r\n	else\r\n	{\r\n		lightVectorW = normalize(-lightData.xyz);\r\n	}\r\n\r\n	// diffuse\r\n	float ndl = max(0., dot(vNormal, lightVectorW));\r\n\r\n	result[0] = ndl * diffuseColor.rgb;\r\n\r\n#ifdef SPECULARTERM\r\n	// Specular\r\n	vec3 angleW = normalize(viewDirectionW + lightVectorW);\r\n	float specComp = max(0., dot(vNormal, angleW));\r\n	specComp = max(0., pow(specComp, max(1.0, vSpecularColor.a)));\r\n	result[1] = specComp * specularColor;\r\n#else\r\n	result[1] = vec3(0.);\r\n#endif\r\n\r\n	result[2] = vec3(0.);\r\n\r\n	return result;\r\n}\r\n\r\nmat3 computeSpotLighting(vec3 viewDirectionW, vec3 vNormal, vec4 lightData, vec4 lightDirection, vec4 diffuseColor, vec3 specularColor) {\r\n	mat3 result;\r\n\r\n	vec3 lightVectorW = normalize(lightData.xyz - vPositionW);\r\n\r\n	// diffuse\r\n	float cosAngle = max(0., dot(-lightDirection.xyz, lightVectorW));\r\n	float spotAtten = 0.0;\r\n\r\n	if (cosAngle >= lightDirection.w)\r\n	{\r\n		cosAngle = max(0., pow(cosAngle, lightData.w));\r\n		spotAtten = max(0., (cosAngle - lightDirection.w) / (1. - cosAngle));\r\n\r\n		// Diffuse\r\n		float ndl = max(0., dot(vNormal, -lightDirection.xyz));\r\n		result[0] = ndl * spotAtten * diffuseColor.rgb;\r\n\r\n#ifdef SPECULARTERM\r\n		// Specular\r\n		vec3 angleW = normalize(viewDirectionW - lightDirection.xyz);\r\n		float specComp = max(0., dot(vNormal, angleW));\r\n		specComp = pow(specComp, vSpecularColor.a);\r\n		result[1] = specComp * specularColor * spotAtten;\r\n#else\r\n		result[1] = vec3(0.);\r\n#endif\r\n		result[2] = vec3(0.);\r\n\r\n		return result;\r\n	}\r\n\r\n	result[0] = vec3(0.);\r\n	result[1] = vec3(0.);\r\n	result[2] = vec3(0.);\r\n\r\n	return result;\r\n}\r\n\r\nmat3 computeHemisphericLighting(vec3 viewDirectionW, vec3 vNormal, vec4 lightData, vec4 diffuseColor, vec3 specularColor, vec3 groundColor) {\r\n	mat3 result;\r\n\r\n	// Diffuse\r\n	float ndl = dot(vNormal, lightData.xyz) * 0.5 + 0.5;\r\n	result[0] = mix(groundColor, diffuseColor.rgb, ndl);\r\n\r\n#ifdef SPECULARTERM\r\n	// Specular\r\n	vec3 angleW = normalize(viewDirectionW + lightData.xyz);\r\n	float specComp = max(0., dot(vNormal, angleW));\r\n	specComp = pow(specComp, vSpecularColor.a);\r\n	result[1] = specComp * specularColor;\r\n#else\r\n	result[1] = vec3(0.);\r\n#endif\r\n\r\n	result[2] = vec3(0.);\r\n\r\n	return result;\r\n}\r\n\r\nvoid main(void) {\r\n	// Clip plane\r\n#ifdef CLIPPLANE\r\n	if (fClipDistance > 0.0)\r\n		discard;\r\n#endif\r\n\r\n	vec3 viewDirectionW = normalize(vEyePosition - vPositionW);\r\n\r\n	// Base color\r\n	vec4 baseColor = vec4(1., 1., 1., 1.);\r\n	vec3 diffuseColor = vDiffuseColor.rgb;\r\n\r\n#ifdef DIFFUSE\r\n	baseColor = texture2D(diffuseSampler, vDiffuseUV);\r\n\r\n#ifdef ALPHATEST\r\n	if (baseColor.a < 0.4)\r\n		discard;\r\n#endif\r\n\r\n	baseColor.rgb *= vDiffuseInfos.y;\r\n#endif\r\n\r\n#ifdef VERTEXCOLOR\r\n	baseColor.rgb *= vColor.rgb;\r\n#endif\r\n\r\n	// Bump\r\n	vec3 normalW = normalize(vNormalW);\r\n\r\n	// Ambient color\r\n	vec3 baseAmbientColor = vec3(1., 1., 1.);\r\n\r\n#ifdef AMBIENT\r\n	baseAmbientColor = texture2D(ambientSampler, vAmbientUV).rgb * vAmbientInfos.y;\r\n#endif\r\n\r\n	// Lighting\r\n	vec3 diffuseBase = vec3(0., 0., 0.);\r\n#ifdef SPECULARTERM\r\n	vec3 specularBase = vec3(0., 0., 0.);\r\n#endif\r\n	float shadow = 1.;\r\n\r\n#ifdef LIGHT0\r\n#ifndef SPECULARTERM\r\n	vec3 vLightSpecular0 = vec3(0.0);\r\n#endif\r\n#ifdef SPOTLIGHT0\r\n	mat3 info = computeSpotLighting(viewDirectionW, normalW, vLightData0, vLightDirection0, vLightDiffuse0, vLightSpecular0);\r\n#endif\r\n#ifdef HEMILIGHT0\r\n	mat3 info = computeHemisphericLighting(viewDirectionW, normalW, vLightData0, vLightDiffuse0, vLightSpecular0, vLightGround0);\r\n#endif\r\n#if defined(POINTLIGHT0) || defined(DIRLIGHT0)\r\n	mat3 info = computeLighting(viewDirectionW, normalW, vLightData0, vLightDiffuse0, vLightSpecular0);\r\n#endif\r\n#ifdef SHADOW0\r\n#ifdef SHADOWVSM0\r\n	shadow = computeShadowWithVSM(vPositionFromLight0, shadowSampler0, shadowsInfo0.z, shadowsInfo0.x);\r\n#else\r\n#if defined(POINTLIGHT0)\r\n	shadow = computeShadowCube(vLightData0.xyz, shadowSampler0, shadowsInfo0.x, shadowsInfo0.z);\r\n#else\r\n	shadow = computeShadow(vPositionFromLight0, shadowSampler0, shadowsInfo0.x, shadowsInfo0.z);\r\n#endif\r\n#endif\r\n#else\r\n	shadow = 1.;\r\n#endif\r\n	diffuseBase += info[0] * shadow;\r\n#ifdef SPECULARTERM\r\n	specularBase += info[1] * shadow;\r\n#endif\r\n#endif\r\n\r\n#ifdef LIGHT1\r\n#ifndef SPECULARTERM\r\n	vec3 vLightSpecular1 = vec3(0.0);\r\n#endif\r\n#ifdef SPOTLIGHT1\r\n	info = computeSpotLighting(viewDirectionW, normalW, vLightData1, vLightDirection1, vLightDiffuse1, vLightSpecular1);\r\n#endif\r\n#ifdef HEMILIGHT1\r\n	info = computeHemisphericLighting(viewDirectionW, normalW, vLightData1, vLightDiffuse1, vLightSpecular1, vLightGround1);\r\n#endif\r\n#if defined(POINTLIGHT1) || defined(DIRLIGHT1)\r\n	info = computeLighting(viewDirectionW, normalW, vLightData1, vLightDiffuse1, vLightSpecular1);\r\n#endif\r\n#ifdef SHADOW1\r\n#ifdef SHADOWVSM1\r\n	shadow = computeShadowWithVSM(vPositionFromLight1, shadowSampler1, shadowsInfo1.z, shadowsInfo1.x);\r\n#else\r\n#if defined(POINTLIGHT1)\r\n	shadow = computeShadowCube(vLightData1.xyz, shadowSampler1, shadowsInfo1.x, shadowsInfo1.z);\r\n#else\r\n	shadow = computeShadow(vPositionFromLight1, shadowSampler1, shadowsInfo1.x, shadowsInfo1.z);\r\n#endif\r\n#endif\r\n#else\r\n	shadow = 1.;\r\n#endif\r\n	diffuseBase += info[0] * shadow;\r\n#ifdef SPECULARTERM\r\n	specularBase += info[1] * shadow;\r\n#endif\r\n#endif\r\n\r\n#ifdef LIGHT2\r\n#ifndef SPECULARTERM\r\n	vec3 vLightSpecular2 = vec3(0.0);\r\n#endif\r\n#ifdef SPOTLIGHT2\r\n	info = computeSpotLighting(viewDirectionW, normalW, vLightData2, vLightDirection2, vLightDiffuse2, vLightSpecular2);\r\n#endif\r\n#ifdef HEMILIGHT2\r\n	info = computeHemisphericLighting(viewDirectionW, normalW, vLightData2, vLightDiffuse2, vLightSpecular2, vLightGround2);\r\n#endif\r\n#if defined(POINTLIGHT2) || defined(DIRLIGHT2)\r\n	info = computeLighting(viewDirectionW, normalW, vLightData2, vLightDiffuse2, vLightSpecular2);\r\n#endif\r\n#ifdef SHADOW2\r\n#ifdef SHADOWVSM2\r\n	shadow = computeShadowWithVSM(vPositionFromLight2, shadowSampler2, shadowsInfo2.z, shadowsInfo2.x);\r\n#else\r\n#if defined(POINTLIGHT2)\r\n	shadow = computeShadowCube(vLightData2.xyz, shadowSampler2, shadowsInfo2.x, shadowsInfo2.z);\r\n#else\r\n	shadow = computeShadow(vPositionFromLight2, shadowSampler2, shadowsInfo2.x, shadowsInfo2.z);\r\n#endif\r\n#endif\r\n#else\r\n	shadow = 1.;\r\n#endif\r\n	diffuseBase += info[0] * shadow;\r\n#ifdef SPECULARTERM\r\n	specularBase += info[1] * shadow;\r\n#endif\r\n#endif\r\n\r\n#ifdef LIGHT3\r\n#ifndef SPECULARTERM\r\n	vec3 vLightSpecular3 = vec3(0.0);\r\n#endif\r\n#ifdef SPOTLIGHT3\r\n	info = computeSpotLighting(viewDirectionW, normalW, vLightData3, vLightDirection3, vLightDiffuse3, vLightSpecular3);\r\n#endif\r\n#ifdef HEMILIGHT3\r\n	info = computeHemisphericLighting(viewDirectionW, normalW, vLightData3, vLightDiffuse3, vLightSpecular3, vLightGround3);\r\n#endif\r\n#if defined(POINTLIGHT3) || defined(DIRLIGHT3)\r\n	info = computeLighting(viewDirectionW, normalW, vLightData3, vLightDiffuse3, vLightSpecular3);\r\n#endif\r\n#ifdef SHADOW3\r\n#ifdef SHADOWVSM3\r\n	shadow = computeShadowWithVSM(vPositionFromLight3, shadowSampler3, shadowsInfo3.z, shadowsInfo3.x);\r\n#else\r\n#if defined(POINTLIGHT3)\r\n	shadow = computeShadowCube(vLightData3.xyz, shadowSampler3, shadowsInfo3.x, shadowsInfo3.z);\r\n#else\r\n	shadow = computeShadow(vPositionFromLight3, shadowSampler3, shadowsInfo3.x, shadowsInfo3.z);\r\n#endif\r\n#endif\r\n#else\r\n	shadow = 1.;\r\n#endif\r\n	diffuseBase += info[0] * shadow;\r\n#ifdef SPECULARTERM\r\n	specularBase += info[1] * shadow;\r\n#endif\r\n#endif\r\n\r\n	// Reflection\r\n	vec3 reflectionColor = vec3(0., 0., 0.);\r\n\r\n#ifdef REFLECTION\r\n#ifdef REFLECTIONMAP_3D\r\n		reflectionColor = textureCube(reflectionCubeSampler, vReflectionUVW).rgb * vReflectionInfos.x;\r\n#else\r\n		vec2 coords = vReflectionUVW.xy;\r\n\r\n#ifdef REFLECTIONMAP_PROJECTION\r\n		coords /= vReflectionUVW.z;\r\n#endif\r\n\r\n		coords.y = 1.0 - coords.y;\r\n\r\n		reflectionColor = texture2D(reflection2DSampler, coords).rgb * vReflectionInfos.x;\r\n#endif\r\n\r\n#ifdef REFLECTIONFRESNEL\r\n	float reflectionFresnelTerm = computeFresnelTerm(viewDirectionW, normalW, reflectionRightColor.a, reflectionLeftColor.a);\r\n\r\n	reflectionColor *= reflectionLeftColor.rgb * (1.0 - reflectionFresnelTerm) + reflectionFresnelTerm * reflectionRightColor.rgb;\r\n#endif\r\n#endif\r\n\r\n	// Alpha\r\n	float alpha = vDiffuseColor.a;\r\n\r\n#ifdef OPACITY\r\n	vec4 opacityMap = texture2D(opacitySampler, vOpacityUV);\r\n#ifdef OPACITYRGB\r\n	opacityMap.rgb = opacityMap.rgb * vec3(0.3, 0.59, 0.11);\r\n	alpha *= (opacityMap.x + opacityMap.y + opacityMap.z)* vOpacityInfos.y;\r\n#else\r\n	alpha *= opacityMap.a * vOpacityInfos.y;\r\n#endif\r\n#endif\r\n\r\n#ifdef VERTEXALPHA\r\n	alpha *= vColor.a;\r\n#endif\r\n\r\n#ifdef OPACITYFRESNEL\r\n	float opacityFresnelTerm = computeFresnelTerm(viewDirectionW, normalW, opacityParts.z, opacityParts.w);\r\n\r\n	alpha += opacityParts.x * (1.0 - opacityFresnelTerm) + opacityFresnelTerm * opacityParts.y;\r\n#endif\r\n\r\n	// Emissive\r\n	vec3 emissiveColor = vEmissiveColor;\r\n#ifdef EMISSIVE\r\n	emissiveColor += texture2D(emissiveSampler, vEmissiveUV).rgb * vEmissiveInfos.y;\r\n#endif\r\n\r\n#ifdef EMISSIVEFRESNEL\r\n	float emissiveFresnelTerm = computeFresnelTerm(viewDirectionW, normalW, emissiveRightColor.a, emissiveLeftColor.a);\r\n\r\n	emissiveColor *= emissiveLeftColor.rgb * (1.0 - emissiveFresnelTerm) + emissiveFresnelTerm * emissiveRightColor.rgb;\r\n#endif\r\n\r\n	// Specular map\r\n#ifdef SPECULARTERM\r\n	vec3 specularColor = vSpecularColor.rgb;\r\n#ifdef SPECULAR\r\n	specularColor = texture2D(specularSampler, vSpecularUV).rgb * vSpecularInfos.y;\r\n#endif\r\n#endif\r\n\r\n	// Fresnel\r\n#ifdef DIFFUSEFRESNEL\r\n	float diffuseFresnelTerm = computeFresnelTerm(viewDirectionW, normalW, diffuseRightColor.a, diffuseLeftColor.a);\r\n\r\n	diffuseBase *= diffuseLeftColor.rgb * (1.0 - diffuseFresnelTerm) + diffuseFresnelTerm * diffuseRightColor.rgb;\r\n#endif\r\n\r\n	// Composition\r\n	vec3 finalDiffuse = clamp(diffuseBase * diffuseColor + emissiveColor + vAmbientColor, 0.0, 1.0) * baseColor.rgb;\r\n#ifdef SPECULARTERM\r\n	vec3 finalSpecular = specularBase * specularColor;\r\n#else\r\n	vec3 finalSpecular = vec3(0.0);\r\n#endif\r\n\r\n	vec4 color = vec4(finalDiffuse * baseAmbientColor + finalSpecular + reflectionColor, alpha);\r\n\r\n#ifdef FOG\r\n	float fog = CalcFogFactor();\r\n	color.rgb = fog * color.rgb + (1.0 - fog) * vFogColor;\r\n#endif\r\n\r\n	gl_FragColor = color;\r\n}",
null!=Yr["legacydefault.vertex"]?r.setReserved("legacydefault.vertex","precision highp float;\r\n\r\n// Attributes\r\nattribute vec3 position;\r\nattribute vec3 normal;\r\n#ifdef UV1\r\nattribute vec2 uv;\r\n#endif\r\n#ifdef UV2\r\nattribute vec2 uv2;\r\n#endif\r\n#ifdef VERTEXCOLOR\r\nattribute vec4 color;\r\n#endif\r\n#if NUM_BONE_INFLUENCERS > 0\r\n\r\n	// having bone influencers implies you have bones\r\n	uniform mat4 mBones[BonesPerMesh];\r\n\r\n	attribute vec4 matricesIndices;\r\n	attribute vec4 matricesWeights;\r\n	#if NUM_BONE_INFLUENCERS > 4\r\n		attribute vec4 matricesIndicesExtra;\r\n		attribute vec4 matricesWeightsExtra;\r\n	#endif\r\n#endif\r\n\r\n// Uniforms\r\nuniform mat4 world;\r\nuniform mat4 view;\r\nuniform mat4 viewProjection;\r\n\r\n#ifdef DIFFUSE\r\nvarying vec2 vDiffuseUV;\r\nuniform mat4 diffuseMatrix;\r\nuniform vec2 vDiffuseInfos;\r\n#endif\r\n\r\n#ifdef AMBIENT\r\nvarying vec2 vAmbientUV;\r\nuniform mat4 ambientMatrix;\r\nuniform vec2 vAmbientInfos;\r\n#endif\r\n\r\n#ifdef OPACITY\r\nvarying vec2 vOpacityUV;\r\nuniform mat4 opacityMatrix;\r\nuniform vec2 vOpacityInfos;\r\n#endif\r\n\r\n#ifdef EMISSIVE\r\nvarying vec2 vEmissiveUV;\r\nuniform vec2 vEmissiveInfos;\r\nuniform mat4 emissiveMatrix;\r\n#endif\r\n\r\n#if defined(SPECULAR) && defined(SPECULARTERM)\r\nvarying vec2 vSpecularUV;\r\nuniform vec2 vSpecularInfos;\r\nuniform mat4 specularMatrix;\r\n#endif\r\n\r\n#ifdef BUMP\r\nvarying vec2 vBumpUV;\r\nuniform vec2 vBumpInfos;\r\nuniform mat4 bumpMatrix;\r\n#endif\r\n\r\n// Output\r\nvarying vec3 vPositionW;\r\nvarying vec3 vNormalW;\r\n\r\n#ifdef VERTEXCOLOR\r\nvarying vec4 vColor;\r\n#endif\r\n\r\n#ifdef CLIPPLANE\r\nuniform vec4 vClipPlane;\r\nvarying float fClipDistance;\r\n#endif\r\n\r\n#ifdef FOG\r\nvarying float fFogDistance;\r\n#endif\r\n\r\n#ifdef SHADOWS\r\n#if defined(SPOTLIGHT0) || defined(DIRLIGHT0)\r\nuniform mat4 lightMatrix0;\r\nvarying vec4 vPositionFromLight0;\r\n#endif\r\n#if defined(SPOTLIGHT1) || defined(DIRLIGHT1)\r\nuniform mat4 lightMatrix1;\r\nvarying vec4 vPositionFromLight1;\r\n#endif\r\n#if defined(SPOTLIGHT2) || defined(DIRLIGHT2)\r\nuniform mat4 lightMatrix2;\r\nvarying vec4 vPositionFromLight2;\r\n#endif\r\n#if defined(SPOTLIGHT3) || defined(DIRLIGHT3)\r\nuniform mat4 lightMatrix3;\r\nvarying vec4 vPositionFromLight3;\r\n#endif\r\n#endif\r\n\r\n#ifdef REFLECTION\r\nuniform vec3 vEyePosition;\r\nvarying vec3 vReflectionUVW;\r\nuniform mat4 reflectionMatrix;\r\n\r\nvec3 computeReflectionCoords(vec4 worldPos, vec3 worldNormal)\r\n{\r\n#ifdef REFLECTIONMAP_SPHERICAL\r\n	vec3 coords = vec3(view * vec4(worldNormal, 0.0));\r\n\r\n	return vec3(reflectionMatrix * vec4(coords, 1.0));\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_PLANAR\r\n	vec3 viewDir = worldPos.xyz - vEyePosition;\r\n	vec3 coords = normalize(reflect(viewDir, worldNormal));\r\n\r\n	return vec3(reflectionMatrix * vec4(coords, 1));\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_CUBIC\r\n	vec3 viewDir = worldPos.xyz - vEyePosition;\r\n	vec3 coords = reflect(viewDir, worldNormal);\r\n#ifdef INVERTCUBICMAP\r\n	coords.y = 1.0 - coords.y;\r\n#endif\r\n	return vec3(reflectionMatrix * vec4(coords, 0));\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_PROJECTION\r\n	return vec3(reflectionMatrix * (view * worldPos));\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_SKYBOX\r\n	return position;\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_EXPLICIT\r\n	return vec3(0, 0, 0);\r\n#endif\r\n}\r\n#endif\r\n\r\nvoid main(void) {\r\n	mat4 finalWorld = world;\r\n\r\n#if NUM_BONE_INFLUENCERS > 0\r\n	mat4 influence;\r\n	influence = mBones[int(matricesIndices[0])] * matricesWeights[0];\r\n\r\n	#if NUM_BONE_INFLUENCERS > 1\r\n		influence += mBones[int(matricesIndices[1])] * matricesWeights[1];\r\n	#endif \r\n	#if NUM_BONE_INFLUENCERS > 2\r\n		influence += mBones[int(matricesIndices[2])] * matricesWeights[2];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 3\r\n		influence += mBones[int(matricesIndices[3])] * matricesWeights[3];\r\n	#endif	\r\n\r\n	#if NUM_BONE_INFLUENCERS > 4\r\n		influence += mBones[int(matricesIndicesExtra[0])] * matricesWeightsExtra[0];\r\n	#endif\r\n	#if NUM_BONE_INFLUENCERS > 5\r\n		influence += mBones[int(matricesIndicesExtra[1])] * matricesWeightsExtra[1];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 6\r\n		influence += mBones[int(matricesIndicesExtra[2])] * matricesWeightsExtra[2];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 7\r\n		influence += mBones[int(matricesIndicesExtra[3])] * matricesWeightsExtra[3];\r\n	#endif	\r\n\r\n	finalWorld = finalWorld * influence;\r\n#endif\r\n	gl_Position = viewProjection * finalWorld * vec4(position, 1.0);\r\n\r\n	vec4 worldPos = finalWorld * vec4(position, 1.0);\r\n	vPositionW = vec3(worldPos);\r\n	vNormalW = normalize(vec3(finalWorld * vec4(normal, 0.0)));\r\n\r\n	// Texture coordinates\r\n#ifndef UV1\r\n	vec2 uv = vec2(0., 0.);\r\n#endif\r\n#ifndef UV2\r\n	vec2 uv2 = vec2(0., 0.);\r\n#endif\r\n\r\n#ifdef DIFFUSE\r\n	if (vDiffuseInfos.x == 0.)\r\n	{\r\n		vDiffuseUV = vec2(diffuseMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vDiffuseUV = vec2(diffuseMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n\r\n#ifdef AMBIENT\r\n	if (vAmbientInfos.x == 0.)\r\n	{\r\n		vAmbientUV = vec2(ambientMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vAmbientUV = vec2(ambientMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n\r\n#ifdef OPACITY\r\n	if (vOpacityInfos.x == 0.)\r\n	{\r\n		vOpacityUV = vec2(opacityMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vOpacityUV = vec2(opacityMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n	\r\n#ifdef REFLECTION\r\n	vReflectionUVW = computeReflectionCoords(vec4(vPositionW, 1.0), vNormalW);\r\n#endif\r\n\r\n#ifdef EMISSIVE\r\n	if (vEmissiveInfos.x == 0.)\r\n	{\r\n		vEmissiveUV = vec2(emissiveMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vEmissiveUV = vec2(emissiveMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n\r\n#if defined(SPECULAR) && defined(SPECULARTERM)\r\n	if (vSpecularInfos.x == 0.)\r\n	{\r\n		vSpecularUV = vec2(specularMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vSpecularUV = vec2(specularMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n\r\n#ifdef BUMP\r\n	if (vBumpInfos.x == 0.)\r\n	{\r\n		vBumpUV = vec2(bumpMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vBumpUV = vec2(bumpMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n\r\n	// Clip plane\r\n#ifdef CLIPPLANE\r\n	fClipDistance = dot(worldPos, vClipPlane);\r\n#endif\r\n\r\n	// Fog\r\n#ifdef FOG\r\n	fFogDistance = (view * worldPos).z;\r\n#endif\r\n\r\n	// Shadows\r\n#ifdef SHADOWS\r\n#if defined(SPOTLIGHT0) || defined(DIRLIGHT0)\r\n	vPositionFromLight0 = lightMatrix0 * worldPos;\r\n#endif\r\n#if defined(SPOTLIGHT1) || defined(DIRLIGHT1)\r\n	vPositionFromLight1 = lightMatrix1 * worldPos;\r\n#endif\r\n#if defined(SPOTLIGHT2) || defined(DIRLIGHT2)\r\n	vPositionFromLight2 = lightMatrix2 * worldPos;\r\n#endif\r\n#if defined(SPOTLIGHT3) || defined(DIRLIGHT3)\r\n	vPositionFromLight3 = lightMatrix3 * worldPos;\r\n#endif\r\n#endif\r\n\r\n	// Vertex color\r\n#ifdef VERTEXCOLOR\r\n	vColor = color;\r\n#endif\r\n}"):r.h["legacydefault.vertex"]="precision highp float;\r\n\r\n// Attributes\r\nattribute vec3 position;\r\nattribute vec3 normal;\r\n#ifdef UV1\r\nattribute vec2 uv;\r\n#endif\r\n#ifdef UV2\r\nattribute vec2 uv2;\r\n#endif\r\n#ifdef VERTEXCOLOR\r\nattribute vec4 color;\r\n#endif\r\n#if NUM_BONE_INFLUENCERS > 0\r\n\r\n	// having bone influencers implies you have bones\r\n	uniform mat4 mBones[BonesPerMesh];\r\n\r\n	attribute vec4 matricesIndices;\r\n	attribute vec4 matricesWeights;\r\n	#if NUM_BONE_INFLUENCERS > 4\r\n		attribute vec4 matricesIndicesExtra;\r\n		attribute vec4 matricesWeightsExtra;\r\n	#endif\r\n#endif\r\n\r\n// Uniforms\r\nuniform mat4 world;\r\nuniform mat4 view;\r\nuniform mat4 viewProjection;\r\n\r\n#ifdef DIFFUSE\r\nvarying vec2 vDiffuseUV;\r\nuniform mat4 diffuseMatrix;\r\nuniform vec2 vDiffuseInfos;\r\n#endif\r\n\r\n#ifdef AMBIENT\r\nvarying vec2 vAmbientUV;\r\nuniform mat4 ambientMatrix;\r\nuniform vec2 vAmbientInfos;\r\n#endif\r\n\r\n#ifdef OPACITY\r\nvarying vec2 vOpacityUV;\r\nuniform mat4 opacityMatrix;\r\nuniform vec2 vOpacityInfos;\r\n#endif\r\n\r\n#ifdef EMISSIVE\r\nvarying vec2 vEmissiveUV;\r\nuniform vec2 vEmissiveInfos;\r\nuniform mat4 emissiveMatrix;\r\n#endif\r\n\r\n#if defined(SPECULAR) && defined(SPECULARTERM)\r\nvarying vec2 vSpecularUV;\r\nuniform vec2 vSpecularInfos;\r\nuniform mat4 specularMatrix;\r\n#endif\r\n\r\n#ifdef BUMP\r\nvarying vec2 vBumpUV;\r\nuniform vec2 vBumpInfos;\r\nuniform mat4 bumpMatrix;\r\n#endif\r\n\r\n// Output\r\nvarying vec3 vPositionW;\r\nvarying vec3 vNormalW;\r\n\r\n#ifdef VERTEXCOLOR\r\nvarying vec4 vColor;\r\n#endif\r\n\r\n#ifdef CLIPPLANE\r\nuniform vec4 vClipPlane;\r\nvarying float fClipDistance;\r\n#endif\r\n\r\n#ifdef FOG\r\nvarying float fFogDistance;\r\n#endif\r\n\r\n#ifdef SHADOWS\r\n#if defined(SPOTLIGHT0) || defined(DIRLIGHT0)\r\nuniform mat4 lightMatrix0;\r\nvarying vec4 vPositionFromLight0;\r\n#endif\r\n#if defined(SPOTLIGHT1) || defined(DIRLIGHT1)\r\nuniform mat4 lightMatrix1;\r\nvarying vec4 vPositionFromLight1;\r\n#endif\r\n#if defined(SPOTLIGHT2) || defined(DIRLIGHT2)\r\nuniform mat4 lightMatrix2;\r\nvarying vec4 vPositionFromLight2;\r\n#endif\r\n#if defined(SPOTLIGHT3) || defined(DIRLIGHT3)\r\nuniform mat4 lightMatrix3;\r\nvarying vec4 vPositionFromLight3;\r\n#endif\r\n#endif\r\n\r\n#ifdef REFLECTION\r\nuniform vec3 vEyePosition;\r\nvarying vec3 vReflectionUVW;\r\nuniform mat4 reflectionMatrix;\r\n\r\nvec3 computeReflectionCoords(vec4 worldPos, vec3 worldNormal)\r\n{\r\n#ifdef REFLECTIONMAP_SPHERICAL\r\n	vec3 coords = vec3(view * vec4(worldNormal, 0.0));\r\n\r\n	return vec3(reflectionMatrix * vec4(coords, 1.0));\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_PLANAR\r\n	vec3 viewDir = worldPos.xyz - vEyePosition;\r\n	vec3 coords = normalize(reflect(viewDir, worldNormal));\r\n\r\n	return vec3(reflectionMatrix * vec4(coords, 1));\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_CUBIC\r\n	vec3 viewDir = worldPos.xyz - vEyePosition;\r\n	vec3 coords = reflect(viewDir, worldNormal);\r\n#ifdef INVERTCUBICMAP\r\n	coords.y = 1.0 - coords.y;\r\n#endif\r\n	return vec3(reflectionMatrix * vec4(coords, 0));\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_PROJECTION\r\n	return vec3(reflectionMatrix * (view * worldPos));\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_SKYBOX\r\n	return position;\r\n#endif\r\n\r\n#ifdef REFLECTIONMAP_EXPLICIT\r\n	return vec3(0, 0, 0);\r\n#endif\r\n}\r\n#endif\r\n\r\nvoid main(void) {\r\n	mat4 finalWorld = world;\r\n\r\n#if NUM_BONE_INFLUENCERS > 0\r\n	mat4 influence;\r\n	influence = mBones[int(matricesIndices[0])] * matricesWeights[0];\r\n\r\n	#if NUM_BONE_INFLUENCERS > 1\r\n		influence += mBones[int(matricesIndices[1])] * matricesWeights[1];\r\n	#endif \r\n	#if NUM_BONE_INFLUENCERS > 2\r\n		influence += mBones[int(matricesIndices[2])] * matricesWeights[2];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 3\r\n		influence += mBones[int(matricesIndices[3])] * matricesWeights[3];\r\n	#endif	\r\n\r\n	#if NUM_BONE_INFLUENCERS > 4\r\n		influence += mBones[int(matricesIndicesExtra[0])] * matricesWeightsExtra[0];\r\n	#endif\r\n	#if NUM_BONE_INFLUENCERS > 5\r\n		influence += mBones[int(matricesIndicesExtra[1])] * matricesWeightsExtra[1];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 6\r\n		influence += mBones[int(matricesIndicesExtra[2])] * matricesWeightsExtra[2];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 7\r\n		influence += mBones[int(matricesIndicesExtra[3])] * matricesWeightsExtra[3];\r\n	#endif	\r\n\r\n	finalWorld = finalWorld * influence;\r\n#endif\r\n	gl_Position = viewProjection * finalWorld * vec4(position, 1.0);\r\n\r\n	vec4 worldPos = finalWorld * vec4(position, 1.0);\r\n	vPositionW = vec3(worldPos);\r\n	vNormalW = normalize(vec3(finalWorld * vec4(normal, 0.0)));\r\n\r\n	// Texture coordinates\r\n#ifndef UV1\r\n	vec2 uv = vec2(0., 0.);\r\n#endif\r\n#ifndef UV2\r\n	vec2 uv2 = vec2(0., 0.);\r\n#endif\r\n\r\n#ifdef DIFFUSE\r\n	if (vDiffuseInfos.x == 0.)\r\n	{\r\n		vDiffuseUV = vec2(diffuseMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vDiffuseUV = vec2(diffuseMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n\r\n#ifdef AMBIENT\r\n	if (vAmbientInfos.x == 0.)\r\n	{\r\n		vAmbientUV = vec2(ambientMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vAmbientUV = vec2(ambientMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n\r\n#ifdef OPACITY\r\n	if (vOpacityInfos.x == 0.)\r\n	{\r\n		vOpacityUV = vec2(opacityMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vOpacityUV = vec2(opacityMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n	\r\n#ifdef REFLECTION\r\n	vReflectionUVW = computeReflectionCoords(vec4(vPositionW, 1.0), vNormalW);\r\n#endif\r\n\r\n#ifdef EMISSIVE\r\n	if (vEmissiveInfos.x == 0.)\r\n	{\r\n		vEmissiveUV = vec2(emissiveMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vEmissiveUV = vec2(emissiveMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n\r\n#if defined(SPECULAR) && defined(SPECULARTERM)\r\n	if (vSpecularInfos.x == 0.)\r\n	{\r\n		vSpecularUV = vec2(specularMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vSpecularUV = vec2(specularMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n\r\n#ifdef BUMP\r\n	if (vBumpInfos.x == 0.)\r\n	{\r\n		vBumpUV = vec2(bumpMatrix * vec4(uv, 1.0, 0.0));\r\n	}\r\n	else\r\n	{\r\n		vBumpUV = vec2(bumpMatrix * vec4(uv2, 1.0, 0.0));\r\n	}\r\n#endif\r\n\r\n	// Clip plane\r\n#ifdef CLIPPLANE\r\n	fClipDistance = dot(worldPos, vClipPlane);\r\n#endif\r\n\r\n	// Fog\r\n#ifdef FOG\r\n	fFogDistance = (view * worldPos).z;\r\n#endif\r\n\r\n	// Shadows\r\n#ifdef SHADOWS\r\n#if defined(SPOTLIGHT0) || defined(DIRLIGHT0)\r\n	vPositionFromLight0 = lightMatrix0 * worldPos;\r\n#endif\r\n#if defined(SPOTLIGHT1) || defined(DIRLIGHT1)\r\n	vPositionFromLight1 = lightMatrix1 * worldPos;\r\n#endif\r\n#if defined(SPOTLIGHT2) || defined(DIRLIGHT2)\r\n	vPositionFromLight2 = lightMatrix2 * worldPos;\r\n#endif\r\n#if defined(SPOTLIGHT3) || defined(DIRLIGHT3)\r\n	vPositionFromLight3 = lightMatrix3 * worldPos;\r\n#endif\r\n#endif\r\n\r\n	// Vertex color\r\n#ifdef VERTEXCOLOR\r\n	vColor = color;\r\n#endif\r\n}",null!=Yr["lensFlare.fragment"]?r.setReserved("lensFlare.fragment","precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\n\r\n// Color\r\nuniform vec4 color;\r\n\r\nvoid main(void) {\r\n	vec4 baseColor = texture2D(textureSampler, vUV);\r\n\r\n	gl_FragColor = baseColor * color;\r\n}"):r.h["lensFlare.fragment"]="precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\n\r\n// Color\r\nuniform vec4 color;\r\n\r\nvoid main(void) {\r\n	vec4 baseColor = texture2D(textureSampler, vUV);\r\n\r\n	gl_FragColor = baseColor * color;\r\n}",null!=Yr["lensFlare.vertex"]?r.setReserved("lensFlare.vertex","precision highp float;\r\n\r\n// Attributes\r\nattribute vec2 position;\r\n\r\n// Uniforms\r\nuniform mat4 viewportMatrix;\r\n\r\n// Output\r\nvarying vec2 vUV;\r\n\r\nconst vec2 madd = vec2(0.5, 0.5);\r\n\r\nvoid main(void) {	\r\n\r\n	vUV = position * madd + madd;\r\n	gl_Position = viewportMatrix * vec4(position, 0.0, 1.0);\r\n}"):r.h["lensFlare.vertex"]="precision highp float;\r\n\r\n// Attributes\r\nattribute vec2 position;\r\n\r\n// Uniforms\r\nuniform mat4 viewportMatrix;\r\n\r\n// Output\r\nvarying vec2 vUV;\r\n\r\nconst vec2 madd = vec2(0.5, 0.5);\r\n\r\nvoid main(void) {	\r\n\r\n	vUV = position * madd + madd;\r\n	gl_Position = viewportMatrix * vec4(position, 0.0, 1.0);\r\n}",null!=Yr["lensHighlights.fragment"]?r.setReserved("lensHighlights.fragment","#ifdef GL_ES\r\nprecision highp float;\r\n#endif\r\n\r\n// samplers\r\nuniform sampler2D textureSampler;	// original color\r\n\r\n// uniforms\r\nuniform float gain;\r\nuniform float threshold;\r\nuniform bool pentagon;\r\nuniform float screen_width;\r\nuniform float screen_height;\r\n\r\n// varyings\r\nvarying vec2 vUV;\r\n\r\n// apply luminance filter\r\nvec4 highlightColor(vec4 color) {\r\n	vec4 highlight = color;\r\n	float luminance = dot(highlight.rgb, vec3(0.2125, 0.7154, 0.0721));\r\n	float lum_threshold;\r\n	if (threshold > 1.0) { lum_threshold = 0.94 + 0.01 * threshold; }\r\n	else { lum_threshold = 0.5 + 0.44 * threshold; }\r\n\r\n	luminance = clamp((luminance - lum_threshold) * (1.0 / (1.0 - lum_threshold)), 0.0, 1.0);\r\n\r\n	highlight *= luminance * gain;\r\n	highlight.a = 1.0;\r\n\r\n	return highlight;\r\n}\r\n\r\nvoid main(void)\r\n{\r\n	vec4 original = texture2D(textureSampler, vUV);\r\n\r\n	// quick exit if no highlight computing\r\n	if (gain == -1.0) {\r\n		gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\r\n		return;\r\n	}\r\n\r\n	float w = 2.0 / screen_width;\r\n	float h = 2.0 / screen_height;\r\n\r\n	float weight = 1.0;\r\n\r\n	// compute blurred color\r\n	vec4 blurred = vec4(0.0, 0.0, 0.0, 0.0);\r\n\r\n	if (pentagon) {\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.84*w, 0.43*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.48*w, -1.29*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.61*w, 1.51*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.55*w, -0.74*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.71*w, -0.52*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.94*w, 1.59*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.40*w, -1.87*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.62*w, 1.16*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.09*w, 0.25*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.46*w, -1.71*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.08*w, 2.42*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.85*w, -1.89*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.89*w, 0.16*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.29*w, 1.88*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.40*w, -2.81*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.54*w, 2.26*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.60*w, -0.61*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.31*w, -1.30*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.83*w, 2.53*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.12*w, -2.48*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.60*w, 1.11*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.82*w, 0.99*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.50*w, -2.81*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.85*w, 3.33*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.94*w, -1.92*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(3.27*w, -0.53*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.95*w, 2.48*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.23*w, -3.04*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.17*w, 2.05*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.97*w, -0.04*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.25*w, -2.00*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.31*w, 3.08*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.94*w, -2.59*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(3.37*w, 0.64*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-3.13*w, 1.93*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.03*w, -3.65*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.60*w, 3.17*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-3.14*w, -1.19*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(3.00*w, -1.19*h)));\r\n	}\r\n	else {\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.85*w, 0.36*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.52*w, -1.14*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.46*w, 1.42*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.46*w, -0.83*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.79*w, -0.42*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.11*w, 1.62*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.29*w, -2.07*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.69*w, 1.39*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.28*w, 0.12*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.65*w, -1.69*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.08*w, 2.44*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.63*w, -1.90*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.55*w, 0.31*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.13*w, 1.52*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.56*w, -2.61*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.38*w, 2.34*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.64*w, -0.81*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.53*w, -1.21*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.06*w, 2.63*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.00*w, -2.69*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.59*w, 1.32*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.82*w, 0.78*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.57*w, -2.50*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.54*w, 2.93*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.39*w, -1.81*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(3.01*w, -0.28*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.04*w, 2.25*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.02*w, -3.05*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.09*w, 2.25*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-3.07*w, -0.25*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.44*w, -1.90*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.52*w, 3.05*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.68*w, -2.61*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(3.01*w, 0.79*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.76*w, 1.46*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.05*w, -2.94*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.21*w, 2.88*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.84*w, -1.30*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.98*w, -0.96*h)));\r\n	}\r\n\r\n	blurred /= 39.0;\r\n\r\n	gl_FragColor = blurred;\r\n\r\n	//if(vUV.x > 0.5) { gl_FragColor.rgb *= 0.0; }\r\n}"):r.h["lensHighlights.fragment"]="#ifdef GL_ES\r\nprecision highp float;\r\n#endif\r\n\r\n// samplers\r\nuniform sampler2D textureSampler;	// original color\r\n\r\n// uniforms\r\nuniform float gain;\r\nuniform float threshold;\r\nuniform bool pentagon;\r\nuniform float screen_width;\r\nuniform float screen_height;\r\n\r\n// varyings\r\nvarying vec2 vUV;\r\n\r\n// apply luminance filter\r\nvec4 highlightColor(vec4 color) {\r\n	vec4 highlight = color;\r\n	float luminance = dot(highlight.rgb, vec3(0.2125, 0.7154, 0.0721));\r\n	float lum_threshold;\r\n	if (threshold > 1.0) { lum_threshold = 0.94 + 0.01 * threshold; }\r\n	else { lum_threshold = 0.5 + 0.44 * threshold; }\r\n\r\n	luminance = clamp((luminance - lum_threshold) * (1.0 / (1.0 - lum_threshold)), 0.0, 1.0);\r\n\r\n	highlight *= luminance * gain;\r\n	highlight.a = 1.0;\r\n\r\n	return highlight;\r\n}\r\n\r\nvoid main(void)\r\n{\r\n	vec4 original = texture2D(textureSampler, vUV);\r\n\r\n	// quick exit if no highlight computing\r\n	if (gain == -1.0) {\r\n		gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\r\n		return;\r\n	}\r\n\r\n	float w = 2.0 / screen_width;\r\n	float h = 2.0 / screen_height;\r\n\r\n	float weight = 1.0;\r\n\r\n	// compute blurred color\r\n	vec4 blurred = vec4(0.0, 0.0, 0.0, 0.0);\r\n\r\n	if (pentagon) {\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.84*w, 0.43*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.48*w, -1.29*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.61*w, 1.51*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.55*w, -0.74*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.71*w, -0.52*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.94*w, 1.59*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.40*w, -1.87*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.62*w, 1.16*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.09*w, 0.25*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.46*w, -1.71*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.08*w, 2.42*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.85*w, -1.89*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.89*w, 0.16*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.29*w, 1.88*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.40*w, -2.81*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.54*w, 2.26*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.60*w, -0.61*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.31*w, -1.30*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.83*w, 2.53*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.12*w, -2.48*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.60*w, 1.11*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.82*w, 0.99*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.50*w, -2.81*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.85*w, 3.33*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.94*w, -1.92*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(3.27*w, -0.53*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.95*w, 2.48*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.23*w, -3.04*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.17*w, 2.05*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.97*w, -0.04*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.25*w, -2.00*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.31*w, 3.08*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.94*w, -2.59*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(3.37*w, 0.64*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-3.13*w, 1.93*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.03*w, -3.65*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.60*w, 3.17*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-3.14*w, -1.19*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(3.00*w, -1.19*h)));\r\n	}\r\n	else {\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.85*w, 0.36*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.52*w, -1.14*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.46*w, 1.42*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.46*w, -0.83*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.79*w, -0.42*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.11*w, 1.62*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.29*w, -2.07*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.69*w, 1.39*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.28*w, 0.12*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.65*w, -1.69*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.08*w, 2.44*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.63*w, -1.90*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.55*w, 0.31*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.13*w, 1.52*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.56*w, -2.61*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.38*w, 2.34*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.64*w, -0.81*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.53*w, -1.21*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.06*w, 2.63*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.00*w, -2.69*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.59*w, 1.32*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.82*w, 0.78*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.57*w, -2.50*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(0.54*w, 2.93*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.39*w, -1.81*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(3.01*w, -0.28*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.04*w, 2.25*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.02*w, -3.05*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.09*w, 2.25*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-3.07*w, -0.25*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.44*w, -1.90*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-0.52*w, 3.05*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-1.68*w, -2.61*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(3.01*w, 0.79*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.76*w, 1.46*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.05*w, -2.94*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(1.21*w, 2.88*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(-2.84*w, -1.30*h)));\r\n		blurred += highlightColor(texture2D(textureSampler, vUV + vec2(2.98*w, -0.96*h)));\r\n	}\r\n\r\n	blurred /= 39.0;\r\n\r\n	gl_FragColor = blurred;\r\n\r\n	//if(vUV.x > 0.5) { gl_FragColor.rgb *= 0.0; }\r\n}",
null!=Yr["line.fragment"]?r.setReserved("line.fragment","precision highp float;\r\n\r\nuniform vec4 color;\r\n\r\nvoid main(void) {\r\n	gl_FragColor = color;\r\n}"):r.h["line.fragment"]="precision highp float;\r\n\r\nuniform vec4 color;\r\n\r\nvoid main(void) {\r\n	gl_FragColor = color;\r\n}",null!=Yr["line.vertex"]?r.setReserved("line.vertex","precision highp float;\r\n\r\n// Attributes\r\nattribute vec3 position;\r\nattribute vec4 normal;\r\n\r\n// Uniforms\r\nuniform mat4 worldViewProjection;\r\n\r\nuniform float width;\r\nuniform float aspectRatio;\r\n\r\nvoid main(void) {\r\n	vec4 viewPosition = worldViewProjection * vec4(position, 1.0);\r\n	vec4 viewPositionNext = worldViewProjection * vec4(normal.xyz, 1.0);\r\n\r\n	vec2 currentScreen = viewPosition.xy / viewPosition.w;\r\n	vec2 nextScreen = viewPositionNext.xy / viewPositionNext.w;\r\n\r\n	currentScreen.x *= aspectRatio;\r\n	nextScreen.x *= aspectRatio;\r\n\r\n	vec2 dir = normalize(nextScreen - currentScreen);\r\n	vec2 normalDir = vec2(-dir.y, dir.x);\r\n\r\n	normalDir *= width / 2.0;\r\n	normalDir.x /= aspectRatio;\r\n\r\n	vec4 offset = vec4(normalDir * normal.w, 0.0, 0.0);\r\n	gl_Position = viewPosition + offset;\r\n}"):r.h["line.vertex"]="precision highp float;\r\n\r\n// Attributes\r\nattribute vec3 position;\r\nattribute vec4 normal;\r\n\r\n// Uniforms\r\nuniform mat4 worldViewProjection;\r\n\r\nuniform float width;\r\nuniform float aspectRatio;\r\n\r\nvoid main(void) {\r\n	vec4 viewPosition = worldViewProjection * vec4(position, 1.0);\r\n	vec4 viewPositionNext = worldViewProjection * vec4(normal.xyz, 1.0);\r\n\r\n	vec2 currentScreen = viewPosition.xy / viewPosition.w;\r\n	vec2 nextScreen = viewPositionNext.xy / viewPositionNext.w;\r\n\r\n	currentScreen.x *= aspectRatio;\r\n	nextScreen.x *= aspectRatio;\r\n\r\n	vec2 dir = normalize(nextScreen - currentScreen);\r\n	vec2 normalDir = vec2(-dir.y, dir.x);\r\n\r\n	normalDir *= width / 2.0;\r\n	normalDir.x /= aspectRatio;\r\n\r\n	vec4 offset = vec4(normalDir * normal.w, 0.0, 0.0);\r\n	gl_Position = viewPosition + offset;\r\n}",null!=Yr["marbletexture.fragment"]?r.setReserved("marbletexture.fragment","precision highp float;\r\n\r\nvarying vec2 vPosition;\r\nvarying vec2 vUV;\r\n\r\nuniform float numberOfTilesHeight;\r\nuniform float numberOfTilesWidth;\r\nuniform float amplitude;\r\nuniform vec3 brickColor;\r\nuniform vec3 jointColor;\r\n\r\nconst vec3 tileSize = vec3(1.1, 1.0, 1.1);\r\nconst vec3 tilePct = vec3(0.98, 1.0, 0.98);\r\n\r\nfloat rand(vec2 n) {\r\n	return fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nfloat noise(vec2 n) {\r\n	const vec2 d = vec2(0.0, 1.0);\r\n	vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\r\n	return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat turbulence(vec2 P)\r\n{\r\n	float val = 0.0;\r\n	float freq = 1.0;\r\n	for (int i = 0; i < 4; i++)\r\n	{\r\n		val += abs(noise(P*freq) / freq);\r\n		freq *= 2.07;\r\n	}\r\n	return val;\r\n}\r\n\r\nfloat round(float number){\r\n	return sign(number)*floor(abs(number) + 0.5);\r\n}\r\n\r\nvec3 marble_color(float x)\r\n{\r\n	vec3 col;\r\n	x = 0.5*(x + 1.);\r\n	x = sqrt(x);             \r\n	x = sqrt(x);\r\n	x = sqrt(x);\r\n	col = vec3(.2 + .75*x);  \r\n	col.b *= 0.95;           \r\n	return col;\r\n}\r\n\r\nvoid main()\r\n{\r\n	float brickW = 1.0 / numberOfTilesWidth;\r\n	float brickH = 1.0 / numberOfTilesHeight;\r\n	float jointWPercentage = 0.01;\r\n	float jointHPercentage = 0.01;\r\n	vec3 color = brickColor;\r\n	float yi = vUV.y / brickH;\r\n	float nyi = round(yi);\r\n	float xi = vUV.x / brickW;\r\n\r\n	if (mod(floor(yi), 2.0) == 0.0){\r\n		xi = xi - 0.5;\r\n	}\r\n\r\n	float nxi = round(xi);\r\n	vec2 brickvUV = vec2((xi - floor(xi)) / brickH, (yi - floor(yi)) / brickW);\r\n\r\n	if (yi < nyi + jointHPercentage && yi > nyi - jointHPercentage){\r\n		color = mix(jointColor, vec3(0.37, 0.25, 0.25), (yi - nyi) / jointHPercentage + 0.2);\r\n	}\r\n	else if (xi < nxi + jointWPercentage && xi > nxi - jointWPercentage){\r\n		color = mix(jointColor, vec3(0.44, 0.44, 0.44), (xi - nxi) / jointWPercentage + 0.2);\r\n	}\r\n	else {\r\n		float t = 6.28 * brickvUV.x / (tileSize.x + noise(vec2(vUV)*6.0));\r\n		t += amplitude * turbulence(brickvUV.xy);\r\n		t = sin(t);\r\n		color = marble_color(t);\r\n	}\r\n\r\n	gl_FragColor = vec4(color, 0.0);\r\n}"):r.h["marbletexture.fragment"]="precision highp float;\r\n\r\nvarying vec2 vPosition;\r\nvarying vec2 vUV;\r\n\r\nuniform float numberOfTilesHeight;\r\nuniform float numberOfTilesWidth;\r\nuniform float amplitude;\r\nuniform vec3 brickColor;\r\nuniform vec3 jointColor;\r\n\r\nconst vec3 tileSize = vec3(1.1, 1.0, 1.1);\r\nconst vec3 tilePct = vec3(0.98, 1.0, 0.98);\r\n\r\nfloat rand(vec2 n) {\r\n	return fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nfloat noise(vec2 n) {\r\n	const vec2 d = vec2(0.0, 1.0);\r\n	vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\r\n	return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat turbulence(vec2 P)\r\n{\r\n	float val = 0.0;\r\n	float freq = 1.0;\r\n	for (int i = 0; i < 4; i++)\r\n	{\r\n		val += abs(noise(P*freq) / freq);\r\n		freq *= 2.07;\r\n	}\r\n	return val;\r\n}\r\n\r\nfloat round(float number){\r\n	return sign(number)*floor(abs(number) + 0.5);\r\n}\r\n\r\nvec3 marble_color(float x)\r\n{\r\n	vec3 col;\r\n	x = 0.5*(x + 1.);\r\n	x = sqrt(x);             \r\n	x = sqrt(x);\r\n	x = sqrt(x);\r\n	col = vec3(.2 + .75*x);  \r\n	col.b *= 0.95;           \r\n	return col;\r\n}\r\n\r\nvoid main()\r\n{\r\n	float brickW = 1.0 / numberOfTilesWidth;\r\n	float brickH = 1.0 / numberOfTilesHeight;\r\n	float jointWPercentage = 0.01;\r\n	float jointHPercentage = 0.01;\r\n	vec3 color = brickColor;\r\n	float yi = vUV.y / brickH;\r\n	float nyi = round(yi);\r\n	float xi = vUV.x / brickW;\r\n\r\n	if (mod(floor(yi), 2.0) == 0.0){\r\n		xi = xi - 0.5;\r\n	}\r\n\r\n	float nxi = round(xi);\r\n	vec2 brickvUV = vec2((xi - floor(xi)) / brickH, (yi - floor(yi)) / brickW);\r\n\r\n	if (yi < nyi + jointHPercentage && yi > nyi - jointHPercentage){\r\n		color = mix(jointColor, vec3(0.37, 0.25, 0.25), (yi - nyi) / jointHPercentage + 0.2);\r\n	}\r\n	else if (xi < nxi + jointWPercentage && xi > nxi - jointWPercentage){\r\n		color = mix(jointColor, vec3(0.44, 0.44, 0.44), (xi - nxi) / jointWPercentage + 0.2);\r\n	}\r\n	else {\r\n		float t = 6.28 * brickvUV.x / (tileSize.x + noise(vec2(vUV)*6.0));\r\n		t += amplitude * turbulence(brickvUV.xy);\r\n		t = sin(t);\r\n		color = marble_color(t);\r\n	}\r\n\r\n	gl_FragColor = vec4(color, 0.0);\r\n}",null!=Yr["outline.fragment"]?r.setReserved("outline.fragment","precision highp float;\r\n\r\nuniform vec4 color;\r\n\r\n#ifdef ALPHATEST\r\nvarying vec2 vUV;\r\nuniform sampler2D diffuseSampler;\r\n#endif\r\n\r\nvoid main(void) {\r\n#ifdef ALPHATEST\r\n	if (texture2D(diffuseSampler, vUV).a < 0.4)\r\n		discard;\r\n#endif\r\n\r\n	gl_FragColor = color;\r\n}"):r.h["outline.fragment"]="precision highp float;\r\n\r\nuniform vec4 color;\r\n\r\n#ifdef ALPHATEST\r\nvarying vec2 vUV;\r\nuniform sampler2D diffuseSampler;\r\n#endif\r\n\r\nvoid main(void) {\r\n#ifdef ALPHATEST\r\n	if (texture2D(diffuseSampler, vUV).a < 0.4)\r\n		discard;\r\n#endif\r\n\r\n	gl_FragColor = color;\r\n}",null!=Yr["outline.vertex"]?r.setReserved("outline.vertex","precision highp float;\r\n\r\n// Attribute\r\nattribute vec3 position;\r\nattribute vec3 normal;\r\n\r\n#if NUM_BONE_INFLUENCERS > 0\r\nuniform mat4 mBones[BonesPerMesh];\r\n\r\nattribute vec4 matricesIndices;\r\nattribute vec4 matricesWeights;\r\n#if NUM_BONE_INFLUENCERS > 4\r\nattribute vec4 matricesIndicesExtra;\r\nattribute vec4 matricesWeightsExtra;\r\n#endif\r\n#endif\r\n\r\n// Uniform\r\nuniform float offset;\r\n\r\n#ifdef INSTANCES\r\nattribute vec4 world0;\r\nattribute vec4 world1;\r\nattribute vec4 world2;\r\nattribute vec4 world3;\r\n#else\r\nuniform mat4 world;\r\n#endif\r\n\r\nuniform mat4 viewProjection;\r\n\r\n#ifdef ALPHATEST\r\nvarying vec2 vUV;\r\nuniform mat4 diffuseMatrix;\r\n#ifdef UV1\r\nattribute vec2 uv;\r\n#endif\r\n#ifdef UV2\r\nattribute vec2 uv2;\r\n#endif\r\n#endif\r\n\r\nvoid main(void)\r\n{\r\n	vec3 offsetPosition = position + normal * offset;\r\n\r\n#ifdef INSTANCES\r\n	mat4 finalWorld = mat4(world0, world1, world2, world3);\r\n#else\r\n	mat4 finalWorld = world;\r\n#endif\r\n\r\n#if NUM_BONE_INFLUENCERS > 0\r\n	mat4 influence;\r\n	influence = mBones[int(matricesIndices[0])] * matricesWeights[0];\r\n\r\n#if NUM_BONE_INFLUENCERS > 1\r\n	influence += mBones[int(matricesIndices[1])] * matricesWeights[1];\r\n#endif	\r\n#if NUM_BONE_INFLUENCERS > 2\r\n	influence += mBones[int(matricesIndices[2])] * matricesWeights[2];\r\n#endif	\r\n#if NUM_BONE_INFLUENCERS > 3\r\n	influence += mBones[int(matricesIndices[3])] * matricesWeights[3];\r\n#endif	\r\n\r\n#if NUM_BONE_INFLUENCERS > 4\r\n	influence += mBones[int(matricesIndicesExtra[0])] * matricesWeightsExtra[0];\r\n#endif	\r\n#if NUM_BONE_INFLUENCERS > 5\r\n	influence += mBones[int(matricesIndicesExtra[1])] * matricesWeightsExtra[1];\r\n#endif	\r\n#if NUM_BONE_INFLUENCERS > 6\r\n	influence += mBones[int(matricesIndicesExtra[2])] * matricesWeightsExtra[2];\r\n#endif	\r\n#if NUM_BONE_INFLUENCERS > 7\r\n	influence += mBones[int(matricesIndicesExtra[3])] * matricesWeightsExtra[3];\r\n#endif	\r\n\r\n	finalWorld = finalWorld * influence;\r\n#endif\r\n	gl_Position = viewProjection * finalWorld * vec4(offsetPosition, 1.0);\r\n\r\n#ifdef ALPHATEST\r\n#ifdef UV1\r\n	vUV = vec2(diffuseMatrix * vec4(uv, 1.0, 0.0));\r\n#endif\r\n#ifdef UV2\r\n	vUV = vec2(diffuseMatrix * vec4(uv2, 1.0, 0.0));\r\n#endif\r\n#endif\r\n}\r\n"):r.h["outline.vertex"]="precision highp float;\r\n\r\n// Attribute\r\nattribute vec3 position;\r\nattribute vec3 normal;\r\n\r\n#if NUM_BONE_INFLUENCERS > 0\r\nuniform mat4 mBones[BonesPerMesh];\r\n\r\nattribute vec4 matricesIndices;\r\nattribute vec4 matricesWeights;\r\n#if NUM_BONE_INFLUENCERS > 4\r\nattribute vec4 matricesIndicesExtra;\r\nattribute vec4 matricesWeightsExtra;\r\n#endif\r\n#endif\r\n\r\n// Uniform\r\nuniform float offset;\r\n\r\n#ifdef INSTANCES\r\nattribute vec4 world0;\r\nattribute vec4 world1;\r\nattribute vec4 world2;\r\nattribute vec4 world3;\r\n#else\r\nuniform mat4 world;\r\n#endif\r\n\r\nuniform mat4 viewProjection;\r\n\r\n#ifdef ALPHATEST\r\nvarying vec2 vUV;\r\nuniform mat4 diffuseMatrix;\r\n#ifdef UV1\r\nattribute vec2 uv;\r\n#endif\r\n#ifdef UV2\r\nattribute vec2 uv2;\r\n#endif\r\n#endif\r\n\r\nvoid main(void)\r\n{\r\n	vec3 offsetPosition = position + normal * offset;\r\n\r\n#ifdef INSTANCES\r\n	mat4 finalWorld = mat4(world0, world1, world2, world3);\r\n#else\r\n	mat4 finalWorld = world;\r\n#endif\r\n\r\n#if NUM_BONE_INFLUENCERS > 0\r\n	mat4 influence;\r\n	influence = mBones[int(matricesIndices[0])] * matricesWeights[0];\r\n\r\n#if NUM_BONE_INFLUENCERS > 1\r\n	influence += mBones[int(matricesIndices[1])] * matricesWeights[1];\r\n#endif	\r\n#if NUM_BONE_INFLUENCERS > 2\r\n	influence += mBones[int(matricesIndices[2])] * matricesWeights[2];\r\n#endif	\r\n#if NUM_BONE_INFLUENCERS > 3\r\n	influence += mBones[int(matricesIndices[3])] * matricesWeights[3];\r\n#endif	\r\n\r\n#if NUM_BONE_INFLUENCERS > 4\r\n	influence += mBones[int(matricesIndicesExtra[0])] * matricesWeightsExtra[0];\r\n#endif	\r\n#if NUM_BONE_INFLUENCERS > 5\r\n	influence += mBones[int(matricesIndicesExtra[1])] * matricesWeightsExtra[1];\r\n#endif	\r\n#if NUM_BONE_INFLUENCERS > 6\r\n	influence += mBones[int(matricesIndicesExtra[2])] * matricesWeightsExtra[2];\r\n#endif	\r\n#if NUM_BONE_INFLUENCERS > 7\r\n	influence += mBones[int(matricesIndicesExtra[3])] * matricesWeightsExtra[3];\r\n#endif	\r\n\r\n	finalWorld = finalWorld * influence;\r\n#endif\r\n	gl_Position = viewProjection * finalWorld * vec4(offsetPosition, 1.0);\r\n\r\n#ifdef ALPHATEST\r\n#ifdef UV1\r\n	vUV = vec2(diffuseMatrix * vec4(uv, 1.0, 0.0));\r\n#endif\r\n#ifdef UV2\r\n	vUV = vec2(diffuseMatrix * vec4(uv2, 1.0, 0.0));\r\n#endif\r\n#endif\r\n}\r\n",null!=Yr["particles.fragment"]?r.setReserved("particles.fragment","precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nvarying vec4 vColor;\r\nuniform vec4 textureMask;\r\nuniform sampler2D diffuseSampler;\r\n\r\n#ifdef CLIPPLANE\r\nvarying float fClipDistance;\r\n#endif\r\n\r\nvoid main(void) {\r\n#ifdef CLIPPLANE\r\n	if (fClipDistance > 0.0)\r\n		discard;\r\n#endif\r\n	vec4 baseColor = texture2D(diffuseSampler, vUV);\r\n\r\n	gl_FragColor = (baseColor * textureMask + (vec4(1., 1., 1., 1.) - textureMask)) * vColor;\r\n}"):r.h["particles.fragment"]="precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nvarying vec4 vColor;\r\nuniform vec4 textureMask;\r\nuniform sampler2D diffuseSampler;\r\n\r\n#ifdef CLIPPLANE\r\nvarying float fClipDistance;\r\n#endif\r\n\r\nvoid main(void) {\r\n#ifdef CLIPPLANE\r\n	if (fClipDistance > 0.0)\r\n		discard;\r\n#endif\r\n	vec4 baseColor = texture2D(diffuseSampler, vUV);\r\n\r\n	gl_FragColor = (baseColor * textureMask + (vec4(1., 1., 1., 1.) - textureMask)) * vColor;\r\n}",null!=Yr["particles.vertex"]?r.setReserved("particles.vertex","precision highp float;\r\n\r\n// Attributes\r\nattribute vec3 position;\r\nattribute vec4 color;\r\nattribute vec4 options;\r\n\r\n// Uniforms\r\nuniform mat4 view;\r\nuniform mat4 projection;\r\n\r\n// Output\r\nvarying vec2 vUV;\r\nvarying vec4 vColor;\r\n\r\n#ifdef CLIPPLANE\r\nuniform vec4 vClipPlane;\r\nuniform mat4 invView;\r\nvarying float fClipDistance;\r\n#endif\r\n\r\nvoid main(void) {	\r\n	vec3 viewPos = (view * vec4(position, 1.0)).xyz; \r\n	vec3 cornerPos;\r\n	float size = options.y;\r\n	float angle = options.x;\r\n	vec2 offset = options.zw;\r\n\r\n	cornerPos = vec3(offset.x - 0.5, offset.y  - 0.5, 0.) * size;\r\n\r\n	// Rotate\r\n	vec3 rotatedCorner;\r\n	rotatedCorner.x = cornerPos.x * cos(angle) - cornerPos.y * sin(angle);\r\n	rotatedCorner.y = cornerPos.x * sin(angle) + cornerPos.y * cos(angle);\r\n	rotatedCorner.z = 0.;\r\n\r\n	// Position\r\n	viewPos += rotatedCorner;\r\n	gl_Position = projection * vec4(viewPos, 1.0);   \r\n	\r\n	vColor = color;\r\n	vUV = offset;\r\n\r\n	// Clip plane\r\n#ifdef CLIPPLANE\r\n	vec4 worldPos = invView * vec4(viewPos, 1.0);\r\n	fClipDistance = dot(worldPos, vClipPlane);\r\n#endif\r\n}"):r.h["particles.vertex"]="precision highp float;\r\n\r\n// Attributes\r\nattribute vec3 position;\r\nattribute vec4 color;\r\nattribute vec4 options;\r\n\r\n// Uniforms\r\nuniform mat4 view;\r\nuniform mat4 projection;\r\n\r\n// Output\r\nvarying vec2 vUV;\r\nvarying vec4 vColor;\r\n\r\n#ifdef CLIPPLANE\r\nuniform vec4 vClipPlane;\r\nuniform mat4 invView;\r\nvarying float fClipDistance;\r\n#endif\r\n\r\nvoid main(void) {	\r\n	vec3 viewPos = (view * vec4(position, 1.0)).xyz; \r\n	vec3 cornerPos;\r\n	float size = options.y;\r\n	float angle = options.x;\r\n	vec2 offset = options.zw;\r\n\r\n	cornerPos = vec3(offset.x - 0.5, offset.y  - 0.5, 0.) * size;\r\n\r\n	// Rotate\r\n	vec3 rotatedCorner;\r\n	rotatedCorner.x = cornerPos.x * cos(angle) - cornerPos.y * sin(angle);\r\n	rotatedCorner.y = cornerPos.x * sin(angle) + cornerPos.y * cos(angle);\r\n	rotatedCorner.z = 0.;\r\n\r\n	// Position\r\n	viewPos += rotatedCorner;\r\n	gl_Position = projection * vec4(viewPos, 1.0);   \r\n	\r\n	vColor = color;\r\n	vUV = offset;\r\n\r\n	// Clip plane\r\n#ifdef CLIPPLANE\r\n	vec4 worldPos = invView * vec4(viewPos, 1.0);\r\n	fClipDistance = dot(worldPos, vClipPlane);\r\n#endif\r\n}",null!=Yr["pass.fragment"]?r.setReserved("pass.fragment","precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\n\r\nvoid main(void) \r\n{\r\n	gl_FragColor = texture2D(textureSampler, vUV);\r\n}"):r.h["pass.fragment"]="precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\n\r\nvoid main(void) \r\n{\r\n	gl_FragColor = texture2D(textureSampler, vUV);\r\n}",null!=Yr["pbr.fragment"]?r.setReserved("pbr.fragment","precision highp float;\r\n\r\n// Constants\r\nuniform vec3 vEyePosition;\r\nuniform vec4 vAlbedoColor;\r\n\r\n// Input\r\nvarying vec3 vPositionW;\r\n\r\n#ifdef NORMAL\r\nvarying vec3 vNormalW;\r\n#endif\r\n\r\n#ifdef VERTEXCOLOR\r\nvarying vec4 vColor;\r\n#endif\r\n\r\n#ifdef CLIPPLANE\r\nvarying float fClipDistance;\r\n#endif\r\n\r\n// Fog\r\n#ifdef FOG\r\n\r\n#define FOGMODE_NONE    0.\r\n#define FOGMODE_EXP     1.\r\n#define FOGMODE_EXP2    2.\r\n#define FOGMODE_LINEAR  3.\r\n#define E 2.71828\r\n\r\nuniform vec4 vFogInfos;\r\nuniform vec3 vFogColor;\r\nvarying float fFogDistance;\r\n\r\nfloat CalcFogFactor()\r\n{\r\n	float fogCoeff = 1.0;\r\n	float fogStart = vFogInfos.y;\r\n	float fogEnd = vFogInfos.z;\r\n	float fogDensity = vFogInfos.w;\r\n\r\n	if (FOGMODE_LINEAR == vFogInfos.x)\r\n	{\r\n		fogCoeff = (fogEnd - fFogDistance) / (fogEnd - fogStart);\r\n	}\r\n	else if (FOGMODE_EXP == vFogInfos.x)\r\n	{\r\n		fogCoeff = 1.0 / pow(E, fFogDistance * fogDensity);\r\n	}\r\n	else if (FOGMODE_EXP2 == vFogInfos.x)\r\n	{\r\n		fogCoeff = 1.0 / pow(E, fFogDistance * fFogDistance * fogDensity * fogDensity);\r\n	}\r\n\r\n	return clamp(fogCoeff, 0.0, 1.0);\r\n}\r\n#endif\r\n\r\nvoid main(void) {\r\n	// Clip plane\r\n#ifdef CLIPPLANE\r\n	if (fClipDistance > 0.0)\r\n		discard;\r\n#endif\r\n\r\n	vec3 viewDirectionW = normalize(vEyePosition - vPositionW);\r\n\r\n	// Base color\r\n	vec3 baseColor = vAlbedoColor.rgb;\r\n\r\n	// Alpha\r\n	float alpha = vAlbedoColor.a;\r\n\r\n#ifdef VERTEXCOLOR\r\n	baseColor *= vColor.rgb;\r\n#endif\r\n\r\n#ifdef VERTEXALPHA\r\n	alpha *= vColor.a;\r\n#endif\r\n\r\n	// Composition\r\n    vec4 color = vec4(clamp(baseColor, 0.0, 1.0), alpha);\r\n\r\n#ifdef FOG\r\n	float fog = CalcFogFactor();\r\n	color.rgb = fog * color.rgb + (1.0 - fog) * vFogColor;\r\n#endif\r\n\r\n	gl_FragColor = color;\r\n}"):r.h["pbr.fragment"]="precision highp float;\r\n\r\n// Constants\r\nuniform vec3 vEyePosition;\r\nuniform vec4 vAlbedoColor;\r\n\r\n// Input\r\nvarying vec3 vPositionW;\r\n\r\n#ifdef NORMAL\r\nvarying vec3 vNormalW;\r\n#endif\r\n\r\n#ifdef VERTEXCOLOR\r\nvarying vec4 vColor;\r\n#endif\r\n\r\n#ifdef CLIPPLANE\r\nvarying float fClipDistance;\r\n#endif\r\n\r\n// Fog\r\n#ifdef FOG\r\n\r\n#define FOGMODE_NONE    0.\r\n#define FOGMODE_EXP     1.\r\n#define FOGMODE_EXP2    2.\r\n#define FOGMODE_LINEAR  3.\r\n#define E 2.71828\r\n\r\nuniform vec4 vFogInfos;\r\nuniform vec3 vFogColor;\r\nvarying float fFogDistance;\r\n\r\nfloat CalcFogFactor()\r\n{\r\n	float fogCoeff = 1.0;\r\n	float fogStart = vFogInfos.y;\r\n	float fogEnd = vFogInfos.z;\r\n	float fogDensity = vFogInfos.w;\r\n\r\n	if (FOGMODE_LINEAR == vFogInfos.x)\r\n	{\r\n		fogCoeff = (fogEnd - fFogDistance) / (fogEnd - fogStart);\r\n	}\r\n	else if (FOGMODE_EXP == vFogInfos.x)\r\n	{\r\n		fogCoeff = 1.0 / pow(E, fFogDistance * fogDensity);\r\n	}\r\n	else if (FOGMODE_EXP2 == vFogInfos.x)\r\n	{\r\n		fogCoeff = 1.0 / pow(E, fFogDistance * fFogDistance * fogDensity * fogDensity);\r\n	}\r\n\r\n	return clamp(fogCoeff, 0.0, 1.0);\r\n}\r\n#endif\r\n\r\nvoid main(void) {\r\n	// Clip plane\r\n#ifdef CLIPPLANE\r\n	if (fClipDistance > 0.0)\r\n		discard;\r\n#endif\r\n\r\n	vec3 viewDirectionW = normalize(vEyePosition - vPositionW);\r\n\r\n	// Base color\r\n	vec3 baseColor = vAlbedoColor.rgb;\r\n\r\n	// Alpha\r\n	float alpha = vAlbedoColor.a;\r\n\r\n#ifdef VERTEXCOLOR\r\n	baseColor *= vColor.rgb;\r\n#endif\r\n\r\n#ifdef VERTEXALPHA\r\n	alpha *= vColor.a;\r\n#endif\r\n\r\n	// Composition\r\n    vec4 color = vec4(clamp(baseColor, 0.0, 1.0), alpha);\r\n\r\n#ifdef FOG\r\n	float fog = CalcFogFactor();\r\n	color.rgb = fog * color.rgb + (1.0 - fog) * vFogColor;\r\n#endif\r\n\r\n	gl_FragColor = color;\r\n}",null!=Yr["pbr.vertex"]?r.setReserved("pbr.vertex","precision highp float;\r\n\r\n// Attributes\r\nattribute vec3 position;\r\n#ifdef NORMAL\r\nattribute vec3 normal;\r\n#endif\r\n#ifdef UV1\r\nattribute vec2 uv;\r\n#endif\r\n#ifdef UV2\r\nattribute vec2 uv2;\r\n#endif\r\n#ifdef VERTEXCOLOR\r\nattribute vec4 color;\r\n#endif\r\n#if NUM_BONE_INFLUENCERS > 0\r\n\r\n	// having bone influencers implies you have bones\r\n	uniform mat4 mBones[BonesPerMesh];\r\n\r\n	attribute vec4 matricesIndices;\r\n	attribute vec4 matricesWeights;\r\n	#if NUM_BONE_INFLUENCERS > 4\r\n		attribute vec4 matricesIndicesExtra;\r\n		attribute vec4 matricesWeightsExtra;\r\n	#endif\r\n#endif\r\n\r\n// Uniforms\r\n#ifdef INSTANCES\r\nattribute vec4 world0;\r\nattribute vec4 world1;\r\nattribute vec4 world2;\r\nattribute vec4 world3;\r\n#else\r\nuniform mat4 world;\r\n#endif\r\n\r\nuniform mat4 view;\r\nuniform mat4 viewProjection;\r\n\r\n#ifdef POINTSIZE\r\nuniform float pointSize;\r\n#endif\r\n\r\n// Output\r\nvarying vec3 vPositionW;\r\n#ifdef NORMAL\r\nvarying vec3 vNormalW;\r\n#endif\r\n\r\n#ifdef VERTEXCOLOR\r\nvarying vec4 vColor;\r\n#endif\r\n\r\n#ifdef CLIPPLANE\r\nuniform vec4 vClipPlane;\r\nvarying float fClipDistance;\r\n#endif\r\n\r\n#ifdef FOG\r\nvarying float fFogDistance;\r\n#endif\r\n\r\nvoid main(void) {\r\n#ifdef INSTANCES\r\n	mat4 finalWorld = mat4(world0, world1, world2, world3);\r\n#else\r\n	mat4 finalWorld = world;\r\n#endif\r\n\r\n#if NUM_BONE_INFLUENCERS > 0\r\n	mat4 influence;\r\n	influence = mBones[int(matricesIndices[0])] * matricesWeights[0];\r\n\r\n	#if NUM_BONE_INFLUENCERS > 1\r\n		influence += mBones[int(matricesIndices[1])] * matricesWeights[1];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 2\r\n		influence += mBones[int(matricesIndices[2])] * matricesWeights[2];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 3\r\n		influence += mBones[int(matricesIndices[3])] * matricesWeights[3];\r\n	#endif	\r\n	\r\n	#if NUM_BONE_INFLUENCERS > 4\r\n		influence += mBones[int(matricesIndicesExtra[0])] * matricesWeightsExtra[0];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 5\r\n		influence += mBones[int(matricesIndicesExtra[1])] * matricesWeightsExtra[1];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 6\r\n		influence += mBones[int(matricesIndicesExtra[2])] * matricesWeightsExtra[2];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 7\r\n		influence += mBones[int(matricesIndicesExtra[3])] * matricesWeightsExtra[3];\r\n	#endif	\r\n\r\n	finalWorld = finalWorld * influence;\r\n#endif\r\n	gl_Position = viewProjection * finalWorld * vec4(position, 1.0);\r\n\r\n	vec4 worldPos = finalWorld * vec4(position, 1.0);\r\n	vPositionW = vec3(worldPos);\r\n\r\n#ifdef NORMAL\r\n	vNormalW = normalize(vec3(finalWorld * vec4(normal, 0.0)));\r\n#endif\r\n\r\n	// Texture coordinates\r\n#ifndef UV1\r\n	vec2 uv = vec2(0., 0.);\r\n#endif\r\n#ifndef UV2\r\n	vec2 uv2 = vec2(0., 0.);\r\n#endif\r\n\r\n	// Clip plane\r\n#ifdef CLIPPLANE\r\n	fClipDistance = dot(worldPos, vClipPlane);\r\n#endif\r\n\r\n	// Fog\r\n#ifdef FOG\r\n	fFogDistance = (view * worldPos).z;\r\n#endif\r\n\r\n	// Vertex color\r\n#ifdef VERTEXCOLOR\r\n	vColor = color;\r\n#endif\r\n\r\n	// Point size\r\n#ifdef POINTSIZE\r\n	gl_PointSize = pointSize;\r\n#endif\r\n}"):r.h["pbr.vertex"]="precision highp float;\r\n\r\n// Attributes\r\nattribute vec3 position;\r\n#ifdef NORMAL\r\nattribute vec3 normal;\r\n#endif\r\n#ifdef UV1\r\nattribute vec2 uv;\r\n#endif\r\n#ifdef UV2\r\nattribute vec2 uv2;\r\n#endif\r\n#ifdef VERTEXCOLOR\r\nattribute vec4 color;\r\n#endif\r\n#if NUM_BONE_INFLUENCERS > 0\r\n\r\n	// having bone influencers implies you have bones\r\n	uniform mat4 mBones[BonesPerMesh];\r\n\r\n	attribute vec4 matricesIndices;\r\n	attribute vec4 matricesWeights;\r\n	#if NUM_BONE_INFLUENCERS > 4\r\n		attribute vec4 matricesIndicesExtra;\r\n		attribute vec4 matricesWeightsExtra;\r\n	#endif\r\n#endif\r\n\r\n// Uniforms\r\n#ifdef INSTANCES\r\nattribute vec4 world0;\r\nattribute vec4 world1;\r\nattribute vec4 world2;\r\nattribute vec4 world3;\r\n#else\r\nuniform mat4 world;\r\n#endif\r\n\r\nuniform mat4 view;\r\nuniform mat4 viewProjection;\r\n\r\n#ifdef POINTSIZE\r\nuniform float pointSize;\r\n#endif\r\n\r\n// Output\r\nvarying vec3 vPositionW;\r\n#ifdef NORMAL\r\nvarying vec3 vNormalW;\r\n#endif\r\n\r\n#ifdef VERTEXCOLOR\r\nvarying vec4 vColor;\r\n#endif\r\n\r\n#ifdef CLIPPLANE\r\nuniform vec4 vClipPlane;\r\nvarying float fClipDistance;\r\n#endif\r\n\r\n#ifdef FOG\r\nvarying float fFogDistance;\r\n#endif\r\n\r\nvoid main(void) {\r\n#ifdef INSTANCES\r\n	mat4 finalWorld = mat4(world0, world1, world2, world3);\r\n#else\r\n	mat4 finalWorld = world;\r\n#endif\r\n\r\n#if NUM_BONE_INFLUENCERS > 0\r\n	mat4 influence;\r\n	influence = mBones[int(matricesIndices[0])] * matricesWeights[0];\r\n\r\n	#if NUM_BONE_INFLUENCERS > 1\r\n		influence += mBones[int(matricesIndices[1])] * matricesWeights[1];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 2\r\n		influence += mBones[int(matricesIndices[2])] * matricesWeights[2];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 3\r\n		influence += mBones[int(matricesIndices[3])] * matricesWeights[3];\r\n	#endif	\r\n	\r\n	#if NUM_BONE_INFLUENCERS > 4\r\n		influence += mBones[int(matricesIndicesExtra[0])] * matricesWeightsExtra[0];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 5\r\n		influence += mBones[int(matricesIndicesExtra[1])] * matricesWeightsExtra[1];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 6\r\n		influence += mBones[int(matricesIndicesExtra[2])] * matricesWeightsExtra[2];\r\n	#endif	\r\n	#if NUM_BONE_INFLUENCERS > 7\r\n		influence += mBones[int(matricesIndicesExtra[3])] * matricesWeightsExtra[3];\r\n	#endif	\r\n\r\n	finalWorld = finalWorld * influence;\r\n#endif\r\n	gl_Position = viewProjection * finalWorld * vec4(position, 1.0);\r\n\r\n	vec4 worldPos = finalWorld * vec4(position, 1.0);\r\n	vPositionW = vec3(worldPos);\r\n\r\n#ifdef NORMAL\r\n	vNormalW = normalize(vec3(finalWorld * vec4(normal, 0.0)));\r\n#endif\r\n\r\n	// Texture coordinates\r\n#ifndef UV1\r\n	vec2 uv = vec2(0., 0.);\r\n#endif\r\n#ifndef UV2\r\n	vec2 uv2 = vec2(0., 0.);\r\n#endif\r\n\r\n	// Clip plane\r\n#ifdef CLIPPLANE\r\n	fClipDistance = dot(worldPos, vClipPlane);\r\n#endif\r\n\r\n	// Fog\r\n#ifdef FOG\r\n	fFogDistance = (view * worldPos).z;\r\n#endif\r\n\r\n	// Vertex color\r\n#ifdef VERTEXCOLOR\r\n	vColor = color;\r\n#endif\r\n\r\n	// Point size\r\n#ifdef POINTSIZE\r\n	gl_PointSize = pointSize;\r\n#endif\r\n}",null!=Yr["postprocess.vertex"]?r.setReserved("postprocess.vertex","precision highp float;\r\n\r\n// Attributes\r\nattribute vec2 position;\r\n\r\n// Output\r\nvarying vec2 vUV;\r\n\r\nconst vec2 madd = vec2(0.5, 0.5);\r\n\r\nvoid main(void) {	\r\n\r\n	vUV = position * madd + madd;\r\n	gl_Position = vec4(position, 0.0, 1.0);\r\n}"):r.h["postprocess.vertex"]="precision highp float;\r\n\r\n// Attributes\r\nattribute vec2 position;\r\n\r\n// Output\r\nvarying vec2 vUV;\r\n\r\nconst vec2 madd = vec2(0.5, 0.5);\r\n\r\nvoid main(void) {	\r\n\r\n	vUV = position * madd + madd;\r\n	gl_Position = vec4(position, 0.0, 1.0);\r\n}",null!=Yr["procedural.vertex"]?r.setReserved("procedural.vertex","precision highp float;\r\n\r\n// Attributes\r\nattribute vec2 position;\r\n\r\n// Output\r\nvarying vec2 vPosition;\r\nvarying vec2 vUV;\r\n\r\nconst vec2 madd = vec2(0.5, 0.5);\r\n\r\nvoid main(void) {	\r\n	vPosition = position;\r\n	vUV = position * madd + madd;\r\n	gl_Position = vec4(position, 0.0, 1.0);\r\n}"):r.h["procedural.vertex"]="precision highp float;\r\n\r\n// Attributes\r\nattribute vec2 position;\r\n\r\n// Output\r\nvarying vec2 vPosition;\r\nvarying vec2 vUV;\r\n\r\nconst vec2 madd = vec2(0.5, 0.5);\r\n\r\nvoid main(void) {	\r\n	vPosition = position;\r\n	vUV = position * madd + madd;\r\n	gl_Position = vec4(position, 0.0, 1.0);\r\n}",null!=Yr["refraction.fragment"]?r.setReserved("refraction.fragment","precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\nuniform sampler2D refractionSampler;\r\n\r\n// Parameters\r\nuniform vec3 baseColor;\r\nuniform float depth;\r\nuniform float colorLevel;\r\n\r\nvoid main() {\r\n	float ref = 1.0 - texture2D(refractionSampler, vUV).r;\r\n\r\n	vec2 uv = vUV - vec2(0.5);\r\n	vec2 offset = uv * depth * ref;\r\n	vec3 sourceColor = texture2D(textureSampler, vUV - offset).rgb;\r\n\r\n	gl_FragColor = vec4(sourceColor + sourceColor * ref * colorLevel, 1.0);\r\n}"):r.h["refraction.fragment"]="precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\nuniform sampler2D refractionSampler;\r\n\r\n// Parameters\r\nuniform vec3 baseColor;\r\nuniform float depth;\r\nuniform float colorLevel;\r\n\r\nvoid main() {\r\n	float ref = 1.0 - texture2D(refractionSampler, vUV).r;\r\n\r\n	vec2 uv = vUV - vec2(0.5);\r\n	vec2 offset = uv * depth * ref;\r\n	vec3 sourceColor = texture2D(textureSampler, vUV - offset).rgb;\r\n\r\n	gl_FragColor = vec4(sourceColor + sourceColor * ref * colorLevel, 1.0);\r\n}",null!=Yr["roadtexture.fragment"]?r.setReserved("roadtexture.fragment","precision highp float;\r\n\r\nvarying vec2 vUV;                    \r\nuniform vec3 roadColor;\r\n\r\nfloat rand(vec2 n) {\r\n	return fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nfloat noise(vec2 n) {\r\n	const vec2 d = vec2(0.0, 1.0);\r\n	vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\r\n	return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat fbm(vec2 n) {\r\n	float total = 0.0, amplitude = 1.0;\r\n	for (int i = 0; i < 4; i++) {\r\n		total += noise(n) * amplitude;\r\n		n += n;\r\n		amplitude *= 0.5;\r\n	}\r\n	return total;\r\n}\r\n\r\nvoid main(void) {\r\n	float ratioy = mod(gl_FragCoord.y * 100.0 , fbm(vUV * 2.0));\r\n	vec3 color = roadColor * ratioy;\r\n	gl_FragColor = vec4(color, 1.0);\r\n}"):r.h["roadtexture.fragment"]="precision highp float;\r\n\r\nvarying vec2 vUV;                    \r\nuniform vec3 roadColor;\r\n\r\nfloat rand(vec2 n) {\r\n	return fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nfloat noise(vec2 n) {\r\n	const vec2 d = vec2(0.0, 1.0);\r\n	vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\r\n	return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat fbm(vec2 n) {\r\n	float total = 0.0, amplitude = 1.0;\r\n	for (int i = 0; i < 4; i++) {\r\n		total += noise(n) * amplitude;\r\n		n += n;\r\n		amplitude *= 0.5;\r\n	}\r\n	return total;\r\n}\r\n\r\nvoid main(void) {\r\n	float ratioy = mod(gl_FragCoord.y * 100.0 , fbm(vUV * 2.0));\r\n	vec3 color = roadColor * ratioy;\r\n	gl_FragColor = vec4(color, 1.0);\r\n}",null!=Yr["shadowMap.fragment"]?r.setReserved("shadowMap.fragment","precision highp float;\r\n\r\nvec4 pack(float depth)\r\n{\r\n	const vec4 bit_shift = vec4(255.0 * 255.0 * 255.0, 255.0 * 255.0, 255.0, 1.0);\r\n	const vec4 bit_mask = vec4(0.0, 1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0);\r\n\r\n	vec4 res = fract(depth * bit_shift);\r\n	res -= res.xxyz * bit_mask;\r\n\r\n	return res;\r\n}\r\n\r\n// Thanks to http://devmaster.net/\r\nvec2 packHalf(float depth) \r\n{ \r\n	const vec2 bitOffset = vec2(1.0 / 255., 0.);\r\n	vec2 color = vec2(depth, fract(depth * 255.));\r\n\r\n	return color - (color.yy * bitOffset);\r\n}\r\n\r\nvarying vec4 vPosition;\r\n\r\n#ifdef ALPHATEST\r\nvarying vec2 vUV;\r\nuniform sampler2D diffuseSampler;\r\n#endif\r\n\r\nvoid main(void)\r\n{\r\n#ifdef ALPHATEST\r\n	if (texture2D(diffuseSampler, vUV).a < 0.4)\r\n		discard;\r\n#endif\r\n	float depth = vPosition.z / vPosition.w;\r\n	depth = depth * 0.5 + 0.5;\r\n\r\n#ifdef VSM\r\n	float moment1 = depth;\r\n	float moment2 = moment1 * moment1;\r\n\r\n	gl_FragColor = vec4(packHalf(moment1), packHalf(moment2));\r\n#else\r\n	gl_FragColor = pack(depth);\r\n#endif\r\n}"):r.h["shadowMap.fragment"]="precision highp float;\r\n\r\nvec4 pack(float depth)\r\n{\r\n	const vec4 bit_shift = vec4(255.0 * 255.0 * 255.0, 255.0 * 255.0, 255.0, 1.0);\r\n	const vec4 bit_mask = vec4(0.0, 1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0);\r\n\r\n	vec4 res = fract(depth * bit_shift);\r\n	res -= res.xxyz * bit_mask;\r\n\r\n	return res;\r\n}\r\n\r\n// Thanks to http://devmaster.net/\r\nvec2 packHalf(float depth) \r\n{ \r\n	const vec2 bitOffset = vec2(1.0 / 255., 0.);\r\n	vec2 color = vec2(depth, fract(depth * 255.));\r\n\r\n	return color - (color.yy * bitOffset);\r\n}\r\n\r\nvarying vec4 vPosition;\r\n\r\n#ifdef ALPHATEST\r\nvarying vec2 vUV;\r\nuniform sampler2D diffuseSampler;\r\n#endif\r\n\r\nvoid main(void)\r\n{\r\n#ifdef ALPHATEST\r\n	if (texture2D(diffuseSampler, vUV).a < 0.4)\r\n		discard;\r\n#endif\r\n	float depth = vPosition.z / vPosition.w;\r\n	depth = depth * 0.5 + 0.5;\r\n\r\n#ifdef VSM\r\n	float moment1 = depth;\r\n	float moment2 = moment1 * moment1;\r\n\r\n	gl_FragColor = vec4(packHalf(moment1), packHalf(moment2));\r\n#else\r\n	gl_FragColor = pack(depth);\r\n#endif\r\n}",
null!=Yr["shadowMap.vertex"]?r.setReserved("shadowMap.vertex","precision highp float;\r\n\r\n// Attribute\r\nattribute vec3 position;\r\n#if NUM_BONE_INFLUENCERS > 0\r\n\r\n// having bone influencers implies you have bones\r\nuniform mat4 mBones[BonesPerMesh];\r\n\r\nattribute vec4 matricesIndices;\r\nattribute vec4 matricesWeights;\r\n#if NUM_BONE_INFLUENCERS > 4\r\nattribute vec4 matricesIndicesExtra;\r\nattribute vec4 matricesWeightsExtra;\r\n#endif\r\n#endif\r\n\r\n// Uniform\r\n#ifdef INSTANCES\r\nattribute vec4 world0;\r\nattribute vec4 world1;\r\nattribute vec4 world2;\r\nattribute vec4 world3;\r\n#else\r\nuniform mat4 world;\r\n#endif\r\n\r\nuniform mat4 viewProjection;\r\n\r\nvarying vec4 vPosition;\r\n\r\n#ifdef ALPHATEST\r\nvarying vec2 vUV;\r\nuniform mat4 diffuseMatrix;\r\n#ifdef UV1\r\nattribute vec2 uv;\r\n#endif\r\n#ifdef UV2\r\nattribute vec2 uv2;\r\n#endif\r\n#endif\r\n\r\nvoid main(void)\r\n{\r\n#ifdef INSTANCES\r\n	mat4 finalWorld = mat4(world0, world1, world2, world3);\r\n#else\r\n	mat4 finalWorld = world;\r\n#endif\r\n\r\n#if NUM_BONE_INFLUENCERS > 0\r\n	mat4 influence;\r\n	influence = mBones[int(matricesIndices[0])] * matricesWeights[0];\r\n\r\n#if NUM_BONE_INFLUENCERS > 1\r\n	influence += mBones[int(matricesIndices[1])] * matricesWeights[1];\r\n#endif	\r\n#if NUM_BONE_INFLUENCERS > 2\r\n	influence += mBones[int(matricesIndices[2])] * matricesWeights[2];\r\n#endif	\r\n#if NUM_BONE_INFLUENCERS > 3\r\n	influence += mBones[int(matricesIndices[3])] * matricesWeights[3];\r\n#endif	\r\n\r\n#if NUM_BONE_INFLUENCERS > 4\r\n	influence += mBones[int(matricesIndicesExtra[0])] * matricesWeightsExtra[0];\r\n#endif	\r\n#if NUM_BONE_INFLUENCERS > 5\r\n	influence += mBones[int(matricesIndicesExtra[1])] * matricesWeightsExtra[1];\r\n#endif	\r\n#if NUM_BONE_INFLUENCERS > 6\r\n	influence += mBones[int(matricesIndicesExtra[2])] * matricesWeightsExtra[2];\r\n#endif	\r\n#if NUM_BONE_INFLUENCERS > 7\r\n	influence += mBones[int(matricesIndicesExtra[3])] * matricesWeightsExtra[3];\r\n#endif	\r\n\r\n	finalWorld = finalWorld * influence;\r\n#endif\r\n	vPosition = viewProjection * finalWorld * vec4(position, 1.0);\r\n	gl_Position = vPosition;\r\n\r\n#ifdef ALPHATEST\r\n#ifdef UV1\r\n	vUV = vec2(diffuseMatrix * vec4(uv, 1.0, 0.0));\r\n#endif\r\n#ifdef UV2\r\n	vUV = vec2(diffuseMatrix * vec4(uv2, 1.0, 0.0));\r\n#endif\r\n#endif\r\n}"):r.h["shadowMap.vertex"]="precision highp float;\r\n\r\n// Attribute\r\nattribute vec3 position;\r\n#if NUM_BONE_INFLUENCERS > 0\r\n\r\n// having bone influencers implies you have bones\r\nuniform mat4 mBones[BonesPerMesh];\r\n\r\nattribute vec4 matricesIndices;\r\nattribute vec4 matricesWeights;\r\n#if NUM_BONE_INFLUENCERS > 4\r\nattribute vec4 matricesIndicesExtra;\r\nattribute vec4 matricesWeightsExtra;\r\n#endif\r\n#endif\r\n\r\n// Uniform\r\n#ifdef INSTANCES\r\nattribute vec4 world0;\r\nattribute vec4 world1;\r\nattribute vec4 world2;\r\nattribute vec4 world3;\r\n#else\r\nuniform mat4 world;\r\n#endif\r\n\r\nuniform mat4 viewProjection;\r\n\r\nvarying vec4 vPosition;\r\n\r\n#ifdef ALPHATEST\r\nvarying vec2 vUV;\r\nuniform mat4 diffuseMatrix;\r\n#ifdef UV1\r\nattribute vec2 uv;\r\n#endif\r\n#ifdef UV2\r\nattribute vec2 uv2;\r\n#endif\r\n#endif\r\n\r\nvoid main(void)\r\n{\r\n#ifdef INSTANCES\r\n	mat4 finalWorld = mat4(world0, world1, world2, world3);\r\n#else\r\n	mat4 finalWorld = world;\r\n#endif\r\n\r\n#if NUM_BONE_INFLUENCERS > 0\r\n	mat4 influence;\r\n	influence = mBones[int(matricesIndices[0])] * matricesWeights[0];\r\n\r\n#if NUM_BONE_INFLUENCERS > 1\r\n	influence += mBones[int(matricesIndices[1])] * matricesWeights[1];\r\n#endif	\r\n#if NUM_BONE_INFLUENCERS > 2\r\n	influence += mBones[int(matricesIndices[2])] * matricesWeights[2];\r\n#endif	\r\n#if NUM_BONE_INFLUENCERS > 3\r\n	influence += mBones[int(matricesIndices[3])] * matricesWeights[3];\r\n#endif	\r\n\r\n#if NUM_BONE_INFLUENCERS > 4\r\n	influence += mBones[int(matricesIndicesExtra[0])] * matricesWeightsExtra[0];\r\n#endif	\r\n#if NUM_BONE_INFLUENCERS > 5\r\n	influence += mBones[int(matricesIndicesExtra[1])] * matricesWeightsExtra[1];\r\n#endif	\r\n#if NUM_BONE_INFLUENCERS > 6\r\n	influence += mBones[int(matricesIndicesExtra[2])] * matricesWeightsExtra[2];\r\n#endif	\r\n#if NUM_BONE_INFLUENCERS > 7\r\n	influence += mBones[int(matricesIndicesExtra[3])] * matricesWeightsExtra[3];\r\n#endif	\r\n\r\n	finalWorld = finalWorld * influence;\r\n#endif\r\n	vPosition = viewProjection * finalWorld * vec4(position, 1.0);\r\n	gl_Position = vPosition;\r\n\r\n#ifdef ALPHATEST\r\n#ifdef UV1\r\n	vUV = vec2(diffuseMatrix * vec4(uv, 1.0, 0.0));\r\n#endif\r\n#ifdef UV2\r\n	vUV = vec2(diffuseMatrix * vec4(uv2, 1.0, 0.0));\r\n#endif\r\n#endif\r\n}",null!=Yr["sprites.fragment"]?r.setReserved("sprites.fragment","precision highp float;\r\n\r\nuniform bool alphaTest;\r\n\r\nvarying vec4 vColor;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D diffuseSampler;\r\n\r\n// Fog\r\n#ifdef FOG\r\n\r\n#define FOGMODE_NONE    0.\r\n#define FOGMODE_EXP     1.\r\n#define FOGMODE_EXP2    2.\r\n#define FOGMODE_LINEAR  3.\r\n#define E 2.71828\r\n\r\nuniform vec4 vFogInfos;\r\nuniform vec3 vFogColor;\r\nvarying float fFogDistance;\r\n\r\nfloat CalcFogFactor()\r\n{\r\n	float fogCoeff = 1.0;\r\n	float fogStart = vFogInfos.y;\r\n	float fogEnd = vFogInfos.z;\r\n	float fogDensity = vFogInfos.w;\r\n\r\n	if (FOGMODE_LINEAR == vFogInfos.x)\r\n	{\r\n		fogCoeff = (fogEnd - fFogDistance) / (fogEnd - fogStart);\r\n	}\r\n	else if (FOGMODE_EXP == vFogInfos.x)\r\n	{\r\n		fogCoeff = 1.0 / pow(E, fFogDistance * fogDensity);\r\n	}\r\n	else if (FOGMODE_EXP2 == vFogInfos.x)\r\n	{\r\n		fogCoeff = 1.0 / pow(E, fFogDistance * fFogDistance * fogDensity * fogDensity);\r\n	}\r\n\r\n	return min(1., max(0., fogCoeff));\r\n}\r\n#endif\r\n\r\n\r\nvoid main(void) {\r\n	vec4 baseColor = texture2D(diffuseSampler, vUV);\r\n\r\n	if (alphaTest) \r\n	{\r\n		if (baseColor.a < 0.95)\r\n			discard;\r\n	}\r\n\r\n	baseColor *= vColor;\r\n\r\n#ifdef FOG\r\n	float fog = CalcFogFactor();\r\n	baseColor.rgb = fog * baseColor.rgb + (1.0 - fog) * vFogColor;\r\n#endif\r\n\r\n	gl_FragColor = baseColor;\r\n}"):r.h["sprites.fragment"]="precision highp float;\r\n\r\nuniform bool alphaTest;\r\n\r\nvarying vec4 vColor;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D diffuseSampler;\r\n\r\n// Fog\r\n#ifdef FOG\r\n\r\n#define FOGMODE_NONE    0.\r\n#define FOGMODE_EXP     1.\r\n#define FOGMODE_EXP2    2.\r\n#define FOGMODE_LINEAR  3.\r\n#define E 2.71828\r\n\r\nuniform vec4 vFogInfos;\r\nuniform vec3 vFogColor;\r\nvarying float fFogDistance;\r\n\r\nfloat CalcFogFactor()\r\n{\r\n	float fogCoeff = 1.0;\r\n	float fogStart = vFogInfos.y;\r\n	float fogEnd = vFogInfos.z;\r\n	float fogDensity = vFogInfos.w;\r\n\r\n	if (FOGMODE_LINEAR == vFogInfos.x)\r\n	{\r\n		fogCoeff = (fogEnd - fFogDistance) / (fogEnd - fogStart);\r\n	}\r\n	else if (FOGMODE_EXP == vFogInfos.x)\r\n	{\r\n		fogCoeff = 1.0 / pow(E, fFogDistance * fogDensity);\r\n	}\r\n	else if (FOGMODE_EXP2 == vFogInfos.x)\r\n	{\r\n		fogCoeff = 1.0 / pow(E, fFogDistance * fFogDistance * fogDensity * fogDensity);\r\n	}\r\n\r\n	return min(1., max(0., fogCoeff));\r\n}\r\n#endif\r\n\r\n\r\nvoid main(void) {\r\n	vec4 baseColor = texture2D(diffuseSampler, vUV);\r\n\r\n	if (alphaTest) \r\n	{\r\n		if (baseColor.a < 0.95)\r\n			discard;\r\n	}\r\n\r\n	baseColor *= vColor;\r\n\r\n#ifdef FOG\r\n	float fog = CalcFogFactor();\r\n	baseColor.rgb = fog * baseColor.rgb + (1.0 - fog) * vFogColor;\r\n#endif\r\n\r\n	gl_FragColor = baseColor;\r\n}",null!=Yr["sprites.vertex"]?r.setReserved("sprites.vertex","precision highp float;\r\n\r\n// Attributes\r\nattribute vec4 position;\r\nattribute vec4 options;\r\nattribute vec4 cellInfo;\r\nattribute vec4 color;\r\n\r\n// Uniforms\r\nuniform vec2 textureInfos;\r\nuniform mat4 view;\r\nuniform mat4 projection;\r\n\r\n// Output\r\nvarying vec2 vUV;\r\nvarying vec4 vColor;\r\n\r\n#ifdef FOG\r\nvarying float fFogDistance;\r\n#endif\r\n\r\nvoid main(void) {	\r\n	vec3 viewPos = (view * vec4(position.xyz, 1.0)).xyz; \r\n	vec2 cornerPos;\r\n	\r\n	float angle = position.w;\r\n	vec2 size = vec2(options.x, options.y);\r\n	vec2 offset = options.zw;\r\n	vec2 uvScale = textureInfos.xy;\r\n\r\n	cornerPos = vec2(offset.x - 0.5, offset.y  - 0.5) * size;\r\n\r\n	// Rotate\r\n	vec3 rotatedCorner;\r\n	rotatedCorner.x = cornerPos.x * cos(angle) - cornerPos.y * sin(angle);\r\n	rotatedCorner.y = cornerPos.x * sin(angle) + cornerPos.y * cos(angle);\r\n	rotatedCorner.z = 0.;\r\n\r\n	// Position\r\n	viewPos += rotatedCorner;\r\n	gl_Position = projection * vec4(viewPos, 1.0);   \r\n\r\n	// Color\r\n	vColor = color;\r\n	\r\n	// Texture\r\n	vec2 uvOffset = vec2(abs(offset.x - cellInfo.x), 1.0 - abs(offset.y - cellInfo.y));\r\n\r\n	vUV = (uvOffset + cellInfo.zw) * uvScale;\r\n\r\n	// Fog\r\n#ifdef FOG\r\n	fFogDistance = viewPos.z;\r\n#endif\r\n}"):r.h["sprites.vertex"]="precision highp float;\r\n\r\n// Attributes\r\nattribute vec4 position;\r\nattribute vec4 options;\r\nattribute vec4 cellInfo;\r\nattribute vec4 color;\r\n\r\n// Uniforms\r\nuniform vec2 textureInfos;\r\nuniform mat4 view;\r\nuniform mat4 projection;\r\n\r\n// Output\r\nvarying vec2 vUV;\r\nvarying vec4 vColor;\r\n\r\n#ifdef FOG\r\nvarying float fFogDistance;\r\n#endif\r\n\r\nvoid main(void) {	\r\n	vec3 viewPos = (view * vec4(position.xyz, 1.0)).xyz; \r\n	vec2 cornerPos;\r\n	\r\n	float angle = position.w;\r\n	vec2 size = vec2(options.x, options.y);\r\n	vec2 offset = options.zw;\r\n	vec2 uvScale = textureInfos.xy;\r\n\r\n	cornerPos = vec2(offset.x - 0.5, offset.y  - 0.5) * size;\r\n\r\n	// Rotate\r\n	vec3 rotatedCorner;\r\n	rotatedCorner.x = cornerPos.x * cos(angle) - cornerPos.y * sin(angle);\r\n	rotatedCorner.y = cornerPos.x * sin(angle) + cornerPos.y * cos(angle);\r\n	rotatedCorner.z = 0.;\r\n\r\n	// Position\r\n	viewPos += rotatedCorner;\r\n	gl_Position = projection * vec4(viewPos, 1.0);   \r\n\r\n	// Color\r\n	vColor = color;\r\n	\r\n	// Texture\r\n	vec2 uvOffset = vec2(abs(offset.x - cellInfo.x), 1.0 - abs(offset.y - cellInfo.y));\r\n\r\n	vUV = (uvOffset + cellInfo.zw) * uvScale;\r\n\r\n	// Fog\r\n#ifdef FOG\r\n	fFogDistance = viewPos.z;\r\n#endif\r\n}",null!=Yr["ssao.fragment"]?r.setReserved("ssao.fragment","precision highp float;\r\n\r\nuniform sampler2D textureSampler;\r\nuniform sampler2D randomSampler;\r\n\r\nuniform float randTextureTiles;\r\nuniform float samplesFactor;\r\nuniform vec3 sampleSphere[SAMPLES];\r\n\r\nuniform float totalStrength;\r\nuniform float radius;\r\nuniform float area;\r\nuniform float fallOff;\r\nuniform float base;\r\n\r\nvarying vec2 vUV;\r\n\r\nvec3 normalFromDepth(float depth, vec2 coords) {\r\n	vec2 offset1 = vec2(0.0, radius);\r\n	vec2 offset2 = vec2(radius, 0.0);\r\n\r\n	float depth1 = texture2D(textureSampler, coords + offset1).r;\r\n	float depth2 = texture2D(textureSampler, coords + offset2).r;\r\n\r\n    vec3 p1 = vec3(offset1, depth1 - depth);\r\n    vec3 p2 = vec3(offset2, depth2 - depth);\r\n\r\n    vec3 normal = cross(p1, p2);\r\n	normal.z = -normal.z;\r\n\r\n    return normalize(normal);\r\n}\r\n\r\nvoid main()\r\n{\r\n	vec3 random = normalize(texture2D(randomSampler, vUV * randTextureTiles).rgb);\r\n	float depth = texture2D(textureSampler, vUV).r;\r\n	vec3 position = vec3(vUV, depth);\r\n	vec3 normal = normalFromDepth(depth, vUV);\r\n	float radiusDepth = radius / depth;\r\n	float occlusion = 0.0;\r\n\r\n	vec3 ray;\r\n	vec3 hemiRay;\r\n	float occlusionDepth;\r\n	float difference;\r\n\r\n	for (int i = 0; i < SAMPLES; i++)\r\n	{\r\n		ray = radiusDepth * reflect(sampleSphere[i], random);\r\n		hemiRay = position + sign(dot(ray, normal)) * ray;\r\n\r\n		occlusionDepth = texture2D(textureSampler, clamp(hemiRay.xy, vec2(0.001, 0.001), vec2(0.999, 0.999))).r;\r\n		difference = depth - occlusionDepth;\r\n\r\n		occlusion += step(fallOff, difference) * (1.0 - smoothstep(fallOff, area, difference));\r\n	}\r\n\r\n	float ao = 1.0 - totalStrength * occlusion * samplesFactor;\r\n\r\n	float result = clamp(ao + base, 0.0, 1.0);\r\n	gl_FragColor.r = result;\r\n	gl_FragColor.g = result;\r\n	gl_FragColor.b = result;\r\n	gl_FragColor.a = 1.0;\r\n}\r\n"):r.h["ssao.fragment"]="precision highp float;\r\n\r\nuniform sampler2D textureSampler;\r\nuniform sampler2D randomSampler;\r\n\r\nuniform float randTextureTiles;\r\nuniform float samplesFactor;\r\nuniform vec3 sampleSphere[SAMPLES];\r\n\r\nuniform float totalStrength;\r\nuniform float radius;\r\nuniform float area;\r\nuniform float fallOff;\r\nuniform float base;\r\n\r\nvarying vec2 vUV;\r\n\r\nvec3 normalFromDepth(float depth, vec2 coords) {\r\n	vec2 offset1 = vec2(0.0, radius);\r\n	vec2 offset2 = vec2(radius, 0.0);\r\n\r\n	float depth1 = texture2D(textureSampler, coords + offset1).r;\r\n	float depth2 = texture2D(textureSampler, coords + offset2).r;\r\n\r\n    vec3 p1 = vec3(offset1, depth1 - depth);\r\n    vec3 p2 = vec3(offset2, depth2 - depth);\r\n\r\n    vec3 normal = cross(p1, p2);\r\n	normal.z = -normal.z;\r\n\r\n    return normalize(normal);\r\n}\r\n\r\nvoid main()\r\n{\r\n	vec3 random = normalize(texture2D(randomSampler, vUV * randTextureTiles).rgb);\r\n	float depth = texture2D(textureSampler, vUV).r;\r\n	vec3 position = vec3(vUV, depth);\r\n	vec3 normal = normalFromDepth(depth, vUV);\r\n	float radiusDepth = radius / depth;\r\n	float occlusion = 0.0;\r\n\r\n	vec3 ray;\r\n	vec3 hemiRay;\r\n	float occlusionDepth;\r\n	float difference;\r\n\r\n	for (int i = 0; i < SAMPLES; i++)\r\n	{\r\n		ray = radiusDepth * reflect(sampleSphere[i], random);\r\n		hemiRay = position + sign(dot(ray, normal)) * ray;\r\n\r\n		occlusionDepth = texture2D(textureSampler, clamp(hemiRay.xy, vec2(0.001, 0.001), vec2(0.999, 0.999))).r;\r\n		difference = depth - occlusionDepth;\r\n\r\n		occlusion += step(fallOff, difference) * (1.0 - smoothstep(fallOff, area, difference));\r\n	}\r\n\r\n	float ao = 1.0 - totalStrength * occlusion * samplesFactor;\r\n\r\n	float result = clamp(ao + base, 0.0, 1.0);\r\n	gl_FragColor.r = result;\r\n	gl_FragColor.g = result;\r\n	gl_FragColor.b = result;\r\n	gl_FragColor.a = 1.0;\r\n}\r\n",null!=Yr["ssaoCombine.fragment"]?r.setReserved("ssaoCombine.fragment","precision highp float;\r\n\r\nuniform sampler2D textureSampler;\r\nuniform sampler2D originalColor;\r\n\r\nvarying vec2 vUV;\r\n\r\nvoid main(void) {\r\n	vec4 ssaoColor = texture2D(textureSampler, vUV);\r\n	vec4 sceneColor = texture2D(originalColor, vUV);\r\n\r\n	gl_FragColor = sceneColor * ssaoColor;\r\n}\r\n"):r.h["ssaoCombine.fragment"]="precision highp float;\r\n\r\nuniform sampler2D textureSampler;\r\nuniform sampler2D originalColor;\r\n\r\nvarying vec2 vUV;\r\n\r\nvoid main(void) {\r\n	vec4 ssaoColor = texture2D(textureSampler, vUV);\r\n	vec4 sceneColor = texture2D(originalColor, vUV);\r\n\r\n	gl_FragColor = sceneColor * ssaoColor;\r\n}\r\n",null!=Yr["stereoscopicInterlace.fragment"]?r.setReserved("stereoscopicInterlace.fragment","precision highp float;\r\n\r\nconst vec3 TWO = vec3(2.0, 2.0, 2.0);\r\n\r\nvarying vec2 vUV;\r\nuniform sampler2D camASampler;\r\nuniform sampler2D textureSampler;\r\nuniform vec2 stepSize;\r\n\r\nvoid main(void)\r\n{\r\n    bool useCamB;\r\n    vec2 texCoord1;\r\n    vec2 texCoord2;\r\n    \r\n    vec3 frag1;\r\n    vec3 frag2;\r\n    \r\n#ifdef IS_STEREOSCOPIC_HORIZ\r\n	    useCamB = vUV.x > 0.5;\r\n	    texCoord1 = vec2(useCamB ? (vUV.x - 0.5) * 2.0 : vUV.x * 2.0, vUV.y);\r\n	    texCoord2 = vec2(texCoord1.x + stepSize.x, vUV.y);\r\n#else\r\n	    useCamB = vUV.y > 0.5;\r\n	    texCoord1 = vec2(vUV.x, useCamB ? (vUV.y - 0.5) * 2.0 : vUV.y * 2.0);\r\n	    texCoord2 = vec2(vUV.x, texCoord1.y + stepSize.y);\r\n#endif\r\n    \r\n    // cannot assign a sampler to a variable, so must duplicate texture accesses\r\n    if (useCamB){\r\n        frag1 = texture2D(textureSampler, texCoord1).rgb;\r\n        frag2 = texture2D(textureSampler, texCoord2).rgb;\r\n    }else{\r\n        frag1 = texture2D(camASampler   , texCoord1).rgb;\r\n        frag2 = texture2D(camASampler   , texCoord2).rgb;\r\n    }\r\n    \r\n    gl_FragColor = vec4((frag1 + frag2) / TWO, 1.0);\r\n}"):r.h["stereoscopicInterlace.fragment"]="precision highp float;\r\n\r\nconst vec3 TWO = vec3(2.0, 2.0, 2.0);\r\n\r\nvarying vec2 vUV;\r\nuniform sampler2D camASampler;\r\nuniform sampler2D textureSampler;\r\nuniform vec2 stepSize;\r\n\r\nvoid main(void)\r\n{\r\n    bool useCamB;\r\n    vec2 texCoord1;\r\n    vec2 texCoord2;\r\n    \r\n    vec3 frag1;\r\n    vec3 frag2;\r\n    \r\n#ifdef IS_STEREOSCOPIC_HORIZ\r\n	    useCamB = vUV.x > 0.5;\r\n	    texCoord1 = vec2(useCamB ? (vUV.x - 0.5) * 2.0 : vUV.x * 2.0, vUV.y);\r\n	    texCoord2 = vec2(texCoord1.x + stepSize.x, vUV.y);\r\n#else\r\n	    useCamB = vUV.y > 0.5;\r\n	    texCoord1 = vec2(vUV.x, useCamB ? (vUV.y - 0.5) * 2.0 : vUV.y * 2.0);\r\n	    texCoord2 = vec2(vUV.x, texCoord1.y + stepSize.y);\r\n#endif\r\n    \r\n    // cannot assign a sampler to a variable, so must duplicate texture accesses\r\n    if (useCamB){\r\n        frag1 = texture2D(textureSampler, texCoord1).rgb;\r\n        frag2 = texture2D(textureSampler, texCoord2).rgb;\r\n    }else{\r\n        frag1 = texture2D(camASampler   , texCoord1).rgb;\r\n        frag2 = texture2D(camASampler   , texCoord2).rgb;\r\n    }\r\n    \r\n    gl_FragColor = vec4((frag1 + frag2) / TWO, 1.0);\r\n}",null!=Yr["tonemap.fragment"]?r.setReserved("tonemap.fragment","precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\n\r\n// Constants\r\nuniform float _ExposureAdjustment;\r\n\r\n#if defined(HABLE_TONEMAPPING)\r\n    const float A = 0.15;\r\n    const float B = 0.50;\r\n    const float C = 0.10;\r\n    const float D = 0.20;\r\n    const float E = 0.02;\r\n    const float F = 0.30;\r\n    const float W = 11.2;\r\n#endif\r\n\r\nfloat Luminance(vec3 c)\r\n{\r\n    return dot(c, vec3(0.22, 0.707, 0.071));\r\n}\r\n\r\nvoid main(void) \r\n{\r\n    vec3 colour = texture2D(textureSampler, vUV).rgb;\r\n\r\n#if defined(REINHARD_TONEMAPPING)\r\n\r\n    float lum = Luminance(colour.rgb); \r\n    float lumTm = lum * _ExposureAdjustment;\r\n    float scale = lumTm / (1.0 + lumTm);  \r\n\r\n    colour *= scale / lum;\r\n\r\n#elif defined(HABLE_TONEMAPPING)\r\n\r\n    colour *= _ExposureAdjustment;\r\n\r\n    const float ExposureBias = 2.0;\r\n    vec3 x = ExposureBias * colour;\r\n\r\n    vec3 curr = ((x * (A * x + C * B) + D * E) / (x * (A * x + B) + D * F)) - E / F;\r\n    \r\n    x = vec3(W, W, W);\r\n    vec3 whiteScale = 1.0 / (((x * (A * x + C * B) + D * E) / (x * (A * x + B) + D * F)) - E / F);\r\n    colour = curr * whiteScale;\r\n\r\n#elif defined(OPTIMIZED_HEJIDAWSON_TONEMAPPING)\r\n\r\n    colour *= _ExposureAdjustment;\r\n    \r\n    vec3 X = max(vec3(0.0, 0.0, 0.0), colour - 0.004);\r\n    vec3 retColor = (X * (6.2 * X + 0.5)) / (X * (6.2 * X + 1.7) + 0.06);\r\n\r\n    colour = retColor * retColor;\r\n\r\n#elif defined(PHOTOGRAPHIC_TONEMAPPING)\r\n\r\n    colour =  vec3(1.0, 1.0, 1.0) - exp2(-_ExposureAdjustment * colour);\r\n\r\n#endif\r\n\r\n	gl_FragColor = vec4(colour.rgb, 1.0);\r\n}"):r.h["tonemap.fragment"]="precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\n\r\n// Constants\r\nuniform float _ExposureAdjustment;\r\n\r\n#if defined(HABLE_TONEMAPPING)\r\n    const float A = 0.15;\r\n    const float B = 0.50;\r\n    const float C = 0.10;\r\n    const float D = 0.20;\r\n    const float E = 0.02;\r\n    const float F = 0.30;\r\n    const float W = 11.2;\r\n#endif\r\n\r\nfloat Luminance(vec3 c)\r\n{\r\n    return dot(c, vec3(0.22, 0.707, 0.071));\r\n}\r\n\r\nvoid main(void) \r\n{\r\n    vec3 colour = texture2D(textureSampler, vUV).rgb;\r\n\r\n#if defined(REINHARD_TONEMAPPING)\r\n\r\n    float lum = Luminance(colour.rgb); \r\n    float lumTm = lum * _ExposureAdjustment;\r\n    float scale = lumTm / (1.0 + lumTm);  \r\n\r\n    colour *= scale / lum;\r\n\r\n#elif defined(HABLE_TONEMAPPING)\r\n\r\n    colour *= _ExposureAdjustment;\r\n\r\n    const float ExposureBias = 2.0;\r\n    vec3 x = ExposureBias * colour;\r\n\r\n    vec3 curr = ((x * (A * x + C * B) + D * E) / (x * (A * x + B) + D * F)) - E / F;\r\n    \r\n    x = vec3(W, W, W);\r\n    vec3 whiteScale = 1.0 / (((x * (A * x + C * B) + D * E) / (x * (A * x + B) + D * F)) - E / F);\r\n    colour = curr * whiteScale;\r\n\r\n#elif defined(OPTIMIZED_HEJIDAWSON_TONEMAPPING)\r\n\r\n    colour *= _ExposureAdjustment;\r\n    \r\n    vec3 X = max(vec3(0.0, 0.0, 0.0), colour - 0.004);\r\n    vec3 retColor = (X * (6.2 * X + 0.5)) / (X * (6.2 * X + 1.7) + 0.06);\r\n\r\n    colour = retColor * retColor;\r\n\r\n#elif defined(PHOTOGRAPHIC_TONEMAPPING)\r\n\r\n    colour =  vec3(1.0, 1.0, 1.0) - exp2(-_ExposureAdjustment * colour);\r\n\r\n#endif\r\n\r\n	gl_FragColor = vec4(colour.rgb, 1.0);\r\n}",null!=Yr["volumetricLightScattering.fragment"]?r.setReserved("volumetricLightScattering.fragment","precision highp float;\r\n\r\nuniform sampler2D textureSampler;\r\nuniform sampler2D lightScatteringSampler;\r\n\r\nuniform float decay;\r\nuniform float exposure;\r\nuniform float weight;\r\nuniform float density;\r\nuniform vec2 meshPositionOnScreen;\r\n\r\nvarying vec2 vUV;\r\n\r\nvoid main(void) {\r\n    vec2 tc = vUV;\r\n	vec2 deltaTexCoord = (tc - meshPositionOnScreen.xy);\r\n    deltaTexCoord *= 1.0 / float(NUM_SAMPLES) * density;\r\n\r\n    float illuminationDecay = 1.0;\r\n\r\n	vec4 color = texture2D(lightScatteringSampler, tc) * 0.4;\r\n\r\n    for(int i=0; i < NUM_SAMPLES; i++) {\r\n        tc -= deltaTexCoord;\r\n		vec4 sample = texture2D(lightScatteringSampler, tc) * 0.4;\r\n        sample *= illuminationDecay * weight;\r\n        color += sample;\r\n        illuminationDecay *= decay;\r\n    }\r\n\r\n    vec4 realColor = texture2D(textureSampler, vUV);\r\n    gl_FragColor = ((vec4((vec3(color.r, color.g, color.b) * exposure), 1)) + (realColor * (1.5 - 0.4)));\r\n}\r\n"):r.h["volumetricLightScattering.fragment"]="precision highp float;\r\n\r\nuniform sampler2D textureSampler;\r\nuniform sampler2D lightScatteringSampler;\r\n\r\nuniform float decay;\r\nuniform float exposure;\r\nuniform float weight;\r\nuniform float density;\r\nuniform vec2 meshPositionOnScreen;\r\n\r\nvarying vec2 vUV;\r\n\r\nvoid main(void) {\r\n    vec2 tc = vUV;\r\n	vec2 deltaTexCoord = (tc - meshPositionOnScreen.xy);\r\n    deltaTexCoord *= 1.0 / float(NUM_SAMPLES) * density;\r\n\r\n    float illuminationDecay = 1.0;\r\n\r\n	vec4 color = texture2D(lightScatteringSampler, tc) * 0.4;\r\n\r\n    for(int i=0; i < NUM_SAMPLES; i++) {\r\n        tc -= deltaTexCoord;\r\n		vec4 sample = texture2D(lightScatteringSampler, tc) * 0.4;\r\n        sample *= illuminationDecay * weight;\r\n        color += sample;\r\n        illuminationDecay *= decay;\r\n    }\r\n\r\n    vec4 realColor = texture2D(textureSampler, vUV);\r\n    gl_FragColor = ((vec4((vec3(color.r, color.g, color.b) * exposure), 1)) + (realColor * (1.5 - 0.4)));\r\n}\r\n",null!=Yr["volumetricLightScatteringPass.fragment"]?r.setReserved("volumetricLightScatteringPass.fragment","precision highp float;\r\n\r\n#if defined(ALPHATEST) || defined(NEED_UV)\r\nvarying vec2 vUV;\r\n#endif\r\n\r\n#if defined(ALPHATEST) || defined(BASIC_RENDER)\r\nuniform sampler2D diffuseSampler;\r\n#endif\r\n\r\n#if defined(DIFFUSE_COLOR_RENDER)\r\nuniform vec3 color;\r\n#endif\r\n\r\n#if defined(OPACITY)\r\nuniform sampler2D opacitySampler;\r\nuniform float opacityLevel;\r\n#endif\r\n\r\nvoid main(void)\r\n{\r\n#if defined(ALPHATEST) || defined(BASIC_RENDER)\r\n	vec4 diffuseColor = texture2D(diffuseSampler, vUV);\r\n#endif\r\n\r\n#ifdef ALPHATEST\r\n	if (diffuseColor.a < 0.4)\r\n		discard;\r\n#endif\r\n\r\n#ifdef OPACITY\r\n	vec4 opacityColor = texture2D(opacitySampler, vUV);\r\n	float alpha = 1.0;\r\n\r\n	#ifdef OPACITYRGB\r\n	opacityColor.rgb = opacityColor.rgb * vec3(0.3, 0.59, 0.11);\r\n	alpha *= (opacityColor.x + opacityColor.y + opacityColor.z) * opacityLevel;\r\n	#else\r\n	alpha *= opacityColor.a * opacityLevel;\r\n	#endif\r\n\r\n	#if defined(BASIC_RENDER)\r\n	gl_FragColor = vec4(diffuseColor.rgb, alpha);\r\n	#elif defined(DIFFUSE_COLOR_RENDER)\r\n	gl_FragColor = vec4(color.rgb, alpha);\r\n	#else\r\n	gl_FragColor = vec4(0.0, 0.0, 0.0, alpha);\r\n	#endif\r\n\r\n	gl_FragColor.a = alpha;\r\n#else\r\n\r\n	#if defined(BASIC_RENDER)\r\n	gl_FragColor = diffuseColor;\r\n	#elif defined(DIFFUSE_COLOR_RENDER)\r\n	gl_FragColor = vec4(color.rgb, 1.0);\r\n	#else\r\n	gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\r\n	#endif\r\n#endif\r\n\r\n}\r\n"):r.h["volumetricLightScatteringPass.fragment"]="precision highp float;\r\n\r\n#if defined(ALPHATEST) || defined(NEED_UV)\r\nvarying vec2 vUV;\r\n#endif\r\n\r\n#if defined(ALPHATEST) || defined(BASIC_RENDER)\r\nuniform sampler2D diffuseSampler;\r\n#endif\r\n\r\n#if defined(DIFFUSE_COLOR_RENDER)\r\nuniform vec3 color;\r\n#endif\r\n\r\n#if defined(OPACITY)\r\nuniform sampler2D opacitySampler;\r\nuniform float opacityLevel;\r\n#endif\r\n\r\nvoid main(void)\r\n{\r\n#if defined(ALPHATEST) || defined(BASIC_RENDER)\r\n	vec4 diffuseColor = texture2D(diffuseSampler, vUV);\r\n#endif\r\n\r\n#ifdef ALPHATEST\r\n	if (diffuseColor.a < 0.4)\r\n		discard;\r\n#endif\r\n\r\n#ifdef OPACITY\r\n	vec4 opacityColor = texture2D(opacitySampler, vUV);\r\n	float alpha = 1.0;\r\n\r\n	#ifdef OPACITYRGB\r\n	opacityColor.rgb = opacityColor.rgb * vec3(0.3, 0.59, 0.11);\r\n	alpha *= (opacityColor.x + opacityColor.y + opacityColor.z) * opacityLevel;\r\n	#else\r\n	alpha *= opacityColor.a * opacityLevel;\r\n	#endif\r\n\r\n	#if defined(BASIC_RENDER)\r\n	gl_FragColor = vec4(diffuseColor.rgb, alpha);\r\n	#elif defined(DIFFUSE_COLOR_RENDER)\r\n	gl_FragColor = vec4(color.rgb, alpha);\r\n	#else\r\n	gl_FragColor = vec4(0.0, 0.0, 0.0, alpha);\r\n	#endif\r\n\r\n	gl_FragColor.a = alpha;\r\n#else\r\n\r\n	#if defined(BASIC_RENDER)\r\n	gl_FragColor = diffuseColor;\r\n	#elif defined(DIFFUSE_COLOR_RENDER)\r\n	gl_FragColor = vec4(color.rgb, 1.0);\r\n	#else\r\n	gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\r\n	#endif\r\n#endif\r\n\r\n}\r\n",null!=Yr["vrDistortionCorrection.fragment"]?r.setReserved("vrDistortionCorrection.fragment","precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\nuniform vec2 LensCenter;\r\nuniform vec2 Scale;\r\nuniform vec2 ScaleIn;\r\nuniform vec4 HmdWarpParam;\r\n\r\nvec2 HmdWarp(vec2 in01) {\r\n\r\n	vec2 theta = (in01 - LensCenter) * ScaleIn; // Scales to [-1, 1]\r\n	float rSq = theta.x * theta.x + theta.y * theta.y;\r\n	vec2 rvector = theta * (HmdWarpParam.x + HmdWarpParam.y * rSq + HmdWarpParam.z * rSq * rSq + HmdWarpParam.w * rSq * rSq * rSq);\r\n	return LensCenter + Scale * rvector;\r\n}\r\n\r\nvoid main(void)\r\n{\r\n	vec2 tc = HmdWarp(vUV);\r\n	if (tc.x <0.0 || tc.x>1.0 || tc.y<0.0 || tc.y>1.0)\r\n		gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\r\n	else{\r\n		gl_FragColor = vec4(texture2D(textureSampler, tc).rgb, 1.0);\r\n	}\r\n}"):r.h["vrDistortionCorrection.fragment"]="precision highp float;\r\n\r\n// Samplers\r\nvarying vec2 vUV;\r\nuniform sampler2D textureSampler;\r\nuniform vec2 LensCenter;\r\nuniform vec2 Scale;\r\nuniform vec2 ScaleIn;\r\nuniform vec4 HmdWarpParam;\r\n\r\nvec2 HmdWarp(vec2 in01) {\r\n\r\n	vec2 theta = (in01 - LensCenter) * ScaleIn; // Scales to [-1, 1]\r\n	float rSq = theta.x * theta.x + theta.y * theta.y;\r\n	vec2 rvector = theta * (HmdWarpParam.x + HmdWarpParam.y * rSq + HmdWarpParam.z * rSq * rSq + HmdWarpParam.w * rSq * rSq * rSq);\r\n	return LensCenter + Scale * rvector;\r\n}\r\n\r\nvoid main(void)\r\n{\r\n	vec2 tc = HmdWarp(vUV);\r\n	if (tc.x <0.0 || tc.x>1.0 || tc.y<0.0 || tc.y>1.0)\r\n		gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\r\n	else{\r\n		gl_FragColor = vec4(texture2D(textureSampler, tc).rgb, 1.0);\r\n	}\r\n}",null!=Yr["woodtexture.fragment"]?r.setReserved("woodtexture.fragment","precision highp float;\r\n\r\nvarying vec2 vPosition;\r\nvarying vec2 vUV;\r\n\r\nuniform float ampScale;\r\nuniform vec3 woodColor;\r\n\r\nfloat rand(vec2 n) {\r\n	return fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nfloat noise(vec2 n) {\r\n	const vec2 d = vec2(0.0, 1.0);\r\n	vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\r\n	return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat fbm(vec2 n) {\r\n	float total = 0.0, amplitude = 1.0;\r\n	for (int i = 0; i < 4; i++) {\r\n		total += noise(n) * amplitude;\r\n		n += n;\r\n		amplitude *= 0.5;\r\n	}\r\n	return total;\r\n}\r\n\r\nvoid main(void) {\r\n	float ratioy = mod(vUV.x * ampScale, 2.0 + fbm(vUV * 0.8));\r\n	vec3 wood = woodColor * ratioy;\r\n	gl_FragColor = vec4(wood, 1.0);\r\n}"):r.h["woodtexture.fragment"]="precision highp float;\r\n\r\nvarying vec2 vPosition;\r\nvarying vec2 vUV;\r\n\r\nuniform float ampScale;\r\nuniform vec3 woodColor;\r\n\r\nfloat rand(vec2 n) {\r\n	return fract(cos(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\r\n}\r\n\r\nfloat noise(vec2 n) {\r\n	const vec2 d = vec2(0.0, 1.0);\r\n	vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\r\n	return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\r\n}\r\n\r\nfloat fbm(vec2 n) {\r\n	float total = 0.0, amplitude = 1.0;\r\n	for (int i = 0; i < 4; i++) {\r\n		total += noise(n) * amplitude;\r\n		n += n;\r\n		amplitude *= 0.5;\r\n	}\r\n	return total;\r\n}\r\n\r\nvoid main(void) {\r\n	float ratioy = mod(vUV.x * ampScale, 2.0 + fbm(vUV * 0.8));\r\n	vec3 wood = woodColor * ratioy;\r\n	gl_FragColor = vec4(wood, 1.0);\r\n}",null!=Yr["compose.fragment"]?r.setReserved("compose.fragment","#ifdef GL_ES\nprecision highp float;\n#endif\n\n// Samplers\nvarying vec2 vUV;\nuniform sampler2D textureSampler;\nuniform sampler2D sceneSampler;\n\n// Parameters\nuniform vec2 screenSize;\nuniform float sceneIntensity;\nuniform float glowIntensity;\nuniform float highlightIntensity;\n\nvoid main(void) \n{\n	vec4 orig = texture2D(sceneSampler, vUV);\n	vec4 blur = texture2D(textureSampler, vUV);\n\n	vec4 final = sceneIntensity * orig + glowIntensity * blur + highlightIntensity * blur.a;\n	final.a = 1.0;\n\n	gl_FragColor = final;\n}"):r.h["compose.fragment"]="#ifdef GL_ES\nprecision highp float;\n#endif\n\n// Samplers\nvarying vec2 vUV;\nuniform sampler2D textureSampler;\nuniform sampler2D sceneSampler;\n\n// Parameters\nuniform vec2 screenSize;\nuniform float sceneIntensity;\nuniform float glowIntensity;\nuniform float highlightIntensity;\n\nvoid main(void) \n{\n	vec4 orig = texture2D(sceneSampler, vUV);\n	vec4 blur = texture2D(textureSampler, vUV);\n\n	vec4 final = sceneIntensity * orig + glowIntensity * blur + highlightIntensity * blur.a;\n	final.a = 1.0;\n\n	gl_FragColor = final;\n}",null!=Yr["downsample.fragment"]?r.setReserved("downsample.fragment","#ifdef GL_ES\nprecision highp float;\n#endif\n\n// Samplers\nvarying vec2 vUV;\nuniform sampler2D textureSampler;\n\n// Parameters\nuniform vec2 screenSize;\nuniform float highlightThreshold;\n\nfloat highlights(vec3 color)\n{\n	return smoothstep(highlightThreshold, 1.0, dot(color, vec3(0.3, 0.59, 0.11)));\n}\n\nvoid main(void) \n{\n	vec2 texelSize = vec2(1.0 / screenSize.x, 1.0 / screenSize.y);\n	vec4 baseColor = texture2D(textureSampler, vUV + vec2(-1.0, -1.0) * texelSize) * 0.25;\n	baseColor += texture2D(textureSampler, vUV + vec2(1.0, -1.0) * texelSize) * 0.25;\n	baseColor += texture2D(textureSampler, vUV + vec2(1.0, 1.0) * texelSize) * 0.25;\n	baseColor += texture2D(textureSampler, vUV + vec2(-1.0, 1.0) * texelSize) * 0.25;\n	\n	baseColor.a = highlights(baseColor.rgb);\n\n	gl_FragColor = baseColor;\n}"):r.h["downsample.fragment"]="#ifdef GL_ES\nprecision highp float;\n#endif\n\n// Samplers\nvarying vec2 vUV;\nuniform sampler2D textureSampler;\n\n// Parameters\nuniform vec2 screenSize;\nuniform float highlightThreshold;\n\nfloat highlights(vec3 color)\n{\n	return smoothstep(highlightThreshold, 1.0, dot(color, vec3(0.3, 0.59, 0.11)));\n}\n\nvoid main(void) \n{\n	vec2 texelSize = vec2(1.0 / screenSize.x, 1.0 / screenSize.y);\n	vec4 baseColor = texture2D(textureSampler, vUV + vec2(-1.0, -1.0) * texelSize) * 0.25;\n	baseColor += texture2D(textureSampler, vUV + vec2(1.0, -1.0) * texelSize) * 0.25;\n	baseColor += texture2D(textureSampler, vUV + vec2(1.0, 1.0) * texelSize) * 0.25;\n	baseColor += texture2D(textureSampler, vUV + vec2(-1.0, 1.0) * texelSize) * 0.25;\n	\n	baseColor.a = highlights(baseColor.rgb);\n\n	gl_FragColor = baseColor;\n}",
null!=Yr["cellShading.vertex"]?r.setReserved("cellShading.vertex","\n #ifdef GL_ES \n precision highp float; \n #endif \n attribute vec3 position; \n attribute vec3 normal; \n attribute vec2 uv; \n uniform mat4 world; \n uniform mat4 viewProjection; \n varying vec3 vPositionW; \n varying vec3 vNormalW; \n varying vec2 vUV; \n void main(void) { \n vec4 outPosition = viewProjection * world * vec4(position, 1.0); \n gl_Position = outPosition; \n vPositionW = vec3(world * vec4(position, 1.0)); \n vNormalW = normalize(vec3(world * vec4(normal, 0.0))); \n vUV = uv; \n } \n"):r.h["cellShading.vertex"]="\n #ifdef GL_ES \n precision highp float; \n #endif \n attribute vec3 position; \n attribute vec3 normal; \n attribute vec2 uv; \n uniform mat4 world; \n uniform mat4 viewProjection; \n varying vec3 vPositionW; \n varying vec3 vNormalW; \n varying vec2 vUV; \n void main(void) { \n vec4 outPosition = viewProjection * world * vec4(position, 1.0); \n gl_Position = outPosition; \n vPositionW = vec3(world * vec4(position, 1.0)); \n vNormalW = normalize(vec3(world * vec4(normal, 0.0))); \n vUV = uv; \n } \n",null!=Yr["cellShading.fragment"]?r.setReserved("cellShading.fragment","\n #ifdef GL_ES \n precision highp float; \n #endif \n varying vec3 vPositionW; \n varying vec3 vNormalW; \n varying vec2 vUV; \n uniform float ToonThresholds[4]; \n uniform float ToonBrightnessLevels[5]; \n uniform vec3 vLightPosition; \n uniform vec3 vLightColor; \n uniform sampler2D textureSampler; \n void main(void) { \n vec3 lightVectorW = normalize(vLightPosition - vPositionW); \n float ndl = max(0., dot(vNormalW, lightVectorW)); \n vec3 color = texture2D(textureSampler, vUV).rgb * vLightColor; \n if (ndl > ToonThresholds[0]) { color *= ToonBrightnessLevels[0]; } \n else if (ndl > ToonThresholds[1]) { \n color *= ToonBrightnessLevels[1]; } \n else if (ndl > ToonThresholds[2]) { color *= ToonBrightnessLevels[2]; } \n else if (ndl > ToonThresholds[3]) { color *= ToonBrightnessLevels[3]; } \n else { color *= ToonBrightnessLevels[4]; } \n gl_FragColor = vec4(color, 1.); \n } \n"):r.h["cellShading.fragment"]="\n #ifdef GL_ES \n precision highp float; \n #endif \n varying vec3 vPositionW; \n varying vec3 vNormalW; \n varying vec2 vUV; \n uniform float ToonThresholds[4]; \n uniform float ToonBrightnessLevels[5]; \n uniform vec3 vLightPosition; \n uniform vec3 vLightColor; \n uniform sampler2D textureSampler; \n void main(void) { \n vec3 lightVectorW = normalize(vLightPosition - vPositionW); \n float ndl = max(0., dot(vNormalW, lightVectorW)); \n vec3 color = texture2D(textureSampler, vUV).rgb * vLightColor; \n if (ndl > ToonThresholds[0]) { color *= ToonBrightnessLevels[0]; } \n else if (ndl > ToonThresholds[1]) { \n color *= ToonBrightnessLevels[1]; } \n else if (ndl > ToonThresholds[2]) { color *= ToonBrightnessLevels[2]; } \n else if (ndl > ToonThresholds[3]) { color *= ToonBrightnessLevels[3]; } \n else { color *= ToonBrightnessLevels[4]; } \n gl_FragColor = vec4(color, 1.); \n } \n",null!=Yr["clouds.fragment"]?r.setReserved("clouds.fragment","\n#ifdef GL_ES\nprecision mediump float;\n#endif\nvarying vec2 vUV;\nuniform vec3 fogColor;\nuniform float fogNear;\nuniform float fogFar;\nuniform sampler2D textureSampler;\nvoid main(void) {\n	float depth = gl_FragCoord.z / gl_FragCoord.w;\n	float fogFactor = smoothstep(fogNear, fogFar, depth);\n	gl_FragColor = texture2D(textureSampler, vUV);\n	gl_FragColor.w *= pow(abs(gl_FragCoord.z), 20.0);\n	gl_FragColor = mix(gl_FragColor, vec4(fogColor, gl_FragColor.w), fogFactor);\n}"):r.h["clouds.fragment"]="\n#ifdef GL_ES\nprecision mediump float;\n#endif\nvarying vec2 vUV;\nuniform vec3 fogColor;\nuniform float fogNear;\nuniform float fogFar;\nuniform sampler2D textureSampler;\nvoid main(void) {\n	float depth = gl_FragCoord.z / gl_FragCoord.w;\n	float fogFactor = smoothstep(fogNear, fogFar, depth);\n	gl_FragColor = texture2D(textureSampler, vUV);\n	gl_FragColor.w *= pow(abs(gl_FragCoord.z), 20.0);\n	gl_FragColor = mix(gl_FragColor, vec4(fogColor, gl_FragColor.w), fogFactor);\n}",null!=Yr["clouds.vertex"]?r.setReserved("clouds.vertex","\n#ifdef GL_ES\nprecision mediump float;\n#endif\nattribute vec3 position;\nattribute vec2 uv;\nuniform mat4 worldViewProjection;\nvarying vec2 vUV;\nvoid main(void) {\n	gl_Position = worldViewProjection * vec4(position, 1.0);\n	vUV = uv;\n}"):r.h["clouds.vertex"]="\n#ifdef GL_ES\nprecision mediump float;\n#endif\nattribute vec3 position;\nattribute vec2 uv;\nuniform mat4 worldViewProjection;\nvarying vec2 vUV;\nvoid main(void) {\n	gl_Position = worldViewProjection * vec4(position, 1.0);\n	vUV = uv;\n}",null!=Yr["voxel.fragment"]?r.setReserved("voxel.fragment","//fragment\nprecision highp float;\n\nuniform float tileSize;\nuniform sampler2D tileMap;\nuniform float tileCount;\n\n// Varying\nvarying vec3  _normal;\nvarying vec2  tileCoord;\nvarying vec2  texCoord;\nvarying float ambientOcclusion;\n\n\n\n\n\nvoid main() {\n\n  vec2 uv      = texCoord;\n  vec4 color   = vec4(0,0,0,0);\n  float weight = 0.0;\n\n  vec2 tileOffset = 2.0 * tileSize * tileCoord;\n  float denom     = 2.0 * tileSize * tileCount;\n\n  for(int dx=0; dx<2; ++dx) {\n    for(int dy=0; dy<2; ++dy) {\n      vec2 offset = 2.0 * fract(0.5 * (uv + vec2(dx, dy)));\n      float w = pow(1.0 - max(abs(offset.x-1.0), abs(offset.y-1.0)), 16.0);\n      \n      vec2 tc = (tileOffset + tileSize * offset) / denom;\n      color  += w * texture2D(tileMap, tc);\n      weight += w;\n    }\n  }\n  color /= weight;\n  \n  if(color.w < 0.5) {\n    discard;\n  }\n  \n  float light = ambientOcclusion + max(0.15*dot(_normal, vec3(1,1,1)), 0.0);\n  \n  gl_FragColor = vec4(color.xyz * light, 1.0);\n}"):r.h["voxel.fragment"]="//fragment\nprecision highp float;\n\nuniform float tileSize;\nuniform sampler2D tileMap;\nuniform float tileCount;\n\n// Varying\nvarying vec3  _normal;\nvarying vec2  tileCoord;\nvarying vec2  texCoord;\nvarying float ambientOcclusion;\n\n\n\n\n\nvoid main() {\n\n  vec2 uv      = texCoord;\n  vec4 color   = vec4(0,0,0,0);\n  float weight = 0.0;\n\n  vec2 tileOffset = 2.0 * tileSize * tileCoord;\n  float denom     = 2.0 * tileSize * tileCount;\n\n  for(int dx=0; dx<2; ++dx) {\n    for(int dy=0; dy<2; ++dy) {\n      vec2 offset = 2.0 * fract(0.5 * (uv + vec2(dx, dy)));\n      float w = pow(1.0 - max(abs(offset.x-1.0), abs(offset.y-1.0)), 16.0);\n      \n      vec2 tc = (tileOffset + tileSize * offset) / denom;\n      color  += w * texture2D(tileMap, tc);\n      weight += w;\n    }\n  }\n  color /= weight;\n  \n  if(color.w < 0.5) {\n    discard;\n  }\n  \n  float light = ambientOcclusion + max(0.15*dot(_normal, vec3(1,1,1)), 0.0);\n  \n  gl_FragColor = vec4(color.xyz * light, 1.0);\n}",null!=Yr["voxel.vertex"]?r.setReserved("voxel.vertex","//vertex\n// still rought with bugs :(\n\nattribute vec3 position;\nattribute vec4 normal;\n\nuniform mat4 worldViewProjection;\nuniform mat4 world;\n\n\nuniform mat4 view;\nuniform mat4 model;\nuniform float tileCount;\n\nvarying vec3  _normal;\nvarying vec2  tileCoord;\nvarying vec2  texCoord;\nvarying float ambientOcclusion;\n\nvoid main() {\n  //Compute position\n  vec3 position = position.xyz;\n  \n  //Compute ambient occlusion\n  //ambientOcclusion = position.w / 255.0;\n  //ambientOcclusion =  50.0 / 255.0;\n\n\n  //Compute normal\n  _normal = 1.0 - normal.xyz;\n  \n  //Compute texture coordinate\n  texCoord = vec2(dot(position, vec3((1.0 - _normal.y) - _normal.z , 0, _normal.x  )),\n                  dot(position, vec3(0, -abs(_normal.x+_normal.z) , _normal.y)));\n  \n  //Compute tile coordinate\n  float tx    = normal.w / tileCount;\n  //float tx    = 14.0/ 16.0;\n\n  tileCoord.x = floor(tx);\n  tileCoord.y = fract(tx) * tileCount;\n  \n  gl_Position = worldViewProjection * view * model * vec4(position, 1.0);\n}\n"):r.h["voxel.vertex"]="//vertex\n// still rought with bugs :(\n\nattribute vec3 position;\nattribute vec4 normal;\n\nuniform mat4 worldViewProjection;\nuniform mat4 world;\n\n\nuniform mat4 view;\nuniform mat4 model;\nuniform float tileCount;\n\nvarying vec3  _normal;\nvarying vec2  tileCoord;\nvarying vec2  texCoord;\nvarying float ambientOcclusion;\n\nvoid main() {\n  //Compute position\n  vec3 position = position.xyz;\n  \n  //Compute ambient occlusion\n  //ambientOcclusion = position.w / 255.0;\n  //ambientOcclusion =  50.0 / 255.0;\n\n\n  //Compute normal\n  _normal = 1.0 - normal.xyz;\n  \n  //Compute texture coordinate\n  texCoord = vec2(dot(position, vec3((1.0 - _normal.y) - _normal.z , 0, _normal.x  )),\n                  dot(position, vec3(0, -abs(_normal.x+_normal.z) , _normal.y)));\n  \n  //Compute tile coordinate\n  float tx    = normal.w / tileCount;\n  //float tx    = 14.0/ 16.0;\n\n  tileCoord.x = floor(tx);\n  tileCoord.y = fract(tx) * tileCount;\n  \n  gl_Position = worldViewProjection * view * model * vec4(position, 1.0);\n}\n",t=r}(this),_t.DIFFUSE=0,_t.AMBIENT=1,_t.OPACITY=2,_t.OPACITYRGB=3,_t.REFLECTION=4,_t.EMISSIVE=5,_t.SPECULAR=6,_t.BUMP=7,_t.SPECULAROVERALPHA=8,_t.CLIPPLANE=9,_t.ALPHATEST=10,_t.ALPHAFROMDIFFUSE=11,_t.POINTSIZE=12,_t.FOG=13,_t.LIGHT0=14,_t.LIGHT1=15,_t.LIGHT2=16,_t.LIGHT3=17,_t.SPOTLIGHT0=18,_t.SPOTLIGHT1=19,_t.SPOTLIGHT2=20,_t.SPOTLIGHT3=21,_t.HEMILIGHT0=22,_t.HEMILIGHT1=23,_t.HEMILIGHT2=24,_t.HEMILIGHT3=25,_t.POINTLIGHT0=26,_t.POINTLIGHT1=27,_t.POINTLIGHT2=28,_t.POINTLIGHT3=29,_t.DIRLIGHT0=30,_t.DIRLIGHT1=31,_t.DIRLIGHT2=32,_t.DIRLIGHT3=33,_t.SPECULARTERM=34,_t.SHADOW0=35,_t.SHADOW1=36,_t.SHADOW2=37,_t.SHADOW3=38,_t.SHADOWS=39,_t.SHADOWVSM0=40,_t.SHADOWVSM1=41,_t.SHADOWVSM2=42,_t.SHADOWVSM3=43,_t.SHADOWPCF0=44,_t.SHADOWPCF1=45,_t.SHADOWPCF2=46,_t.SHADOWPCF3=47,_t.DIFFUSEFRESNEL=48,_t.OPACITYFRESNEL=49,_t.REFLECTIONFRESNEL=50,_t.EMISSIVEFRESNEL=51,_t.FRESNEL=52,_t.NORMAL=53,_t.UV1=54,_t.UV2=55,_t.VERTEXCOLOR=56,_t.VERTEXALPHA=57,_t.INSTANCES=58,_t.GLOSSINESS=59,_t.ROUGHNESS=60,_t.EMISSIVEASILLUMINATION=61,_t.LINKEMISSIVEWITHDIFFUSE=62,_t.REFLECTIONFRESNELFROMSPECULAR=63,_t.LIGHTMAP=64,_t.USELIGHTMAPASSHADOWMAP=65,_t.REFLECTIONMAP_3D=66,_t.REFLECTIONMAP_SPHERICAL=67,_t.REFLECTIONMAP_PLANAR=68,_t.REFLECTIONMAP_CUBIC=69,_t.REFLECTIONMAP_PROJECTION=70,_t.REFLECTIONMAP_SKYBOX=71,_t.REFLECTIONMAP_EXPLICIT=72,_t.REFLECTIONMAP_EQUIRECTANGULAR=73,_t.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=74,_t.INVERTCUBICMAP=75,_t.LOGARITHMICDEPTH=76,xt.X=new L(1,0,0),xt.Y=new L(0,1,0),xt.Z=new L(0,0,1),Pt.vector2=[new Mt(0,0),new Mt(0,0),new Mt(0,0)],Pt.vector3=[new L(0,0,0),new L(0,0,0),new L(0,0,0),new L(0,0,0),new L(0,0,0),new L(0,0,0)],Pt.vector4=[new lt(0,0,0,0),new lt(0,0,0,0),new lt(0,0,0,0)],Pt.quaternion=[new R(0,0,0,0),new R(0,0,0,0)],Pt.matrix=[Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),Le.FromValues(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)],Rt.CreateDecal_target=new L(0,0,1),Rt.CreateDecal_cameraWorldTarget=new L(0,0,0),Rt.decalWorldMatrix=new Le,Rt.inverseDecalWorldMatrix=new Le,Rt.CreateDecal_indices=[],Rt.CreateDecal_positions=[],Rt.CreateDecal_normals=[],Rt.CreateDecal_meshWorldMatrix=new Le,Rt.CreateDecal_transformMatrix=new Le,Rt.CreateDecal_vertexData=new Fe,Ft.PositionKind="position",Ft.NormalKind="normal",Ft.UVKind="uv",Ft.UV2Kind="uv2",Ft.UV3Kind="uv3",Ft.UV4Kind="uv4",Ft.UV5Kind="uv5",Ft.UV6Kind="uv6",Ft.ColorKind="color",Ft.MatricesIndicesKind="matricesIndices",Ft.MatricesWeightsKind="matricesWeights",Ft.MatricesIndicesExtraKind="matricesIndicesExtra",Ft.MatricesWeightsExtraKind="matricesWeightsExtra",Ft.count=0,Xt.QUADRATIC=0,Qt.NoImpostor=0,Qt.SphereImpostor=1,Qt.BoxImpostor=2,Qt.PlaneImpostor=3,Qt.MeshImpostor=4,Qt.CapsuleImpostor=5,Qt.ConeImpostor=6,Qt.CylinderImpostor=7,Qt.ConvexHullImpostor=8,Qt.Epsilon=.001,ir.PASS_EFFECT_NAME="passEffect",ir.PASS_SAMPLER_NAME="passSampler",pr._GlobalId=0,gr._timeouts=new Mr,gr._intervals=new Mr,gr._nextTimerId=1,xr.ACTIVE_ATTRIBUTES=35721,xr.ACTIVE_TEXTURE=34016,xr.ACTIVE_UNIFORMS=35718,xr.ALIASED_LINE_WIDTH_RANGE=33902,xr.ALIASED_POINT_SIZE_RANGE=33901,xr.ALPHA=6406,xr.ALPHA_BITS=3413,xr.ALWAYS=519,xr.ARRAY_BUFFER=34962,xr.ARRAY_BUFFER_BINDING=34964,xr.ATTACHED_SHADERS=35717,xr.BACK=1029,xr.BLEND=3042,xr.BLEND_COLOR=32773,xr.BLEND_DST_ALPHA=32970,xr.BLEND_DST_RGB=32968,xr.BLEND_EQUATION=32777,xr.BLEND_EQUATION_ALPHA=34877,xr.BLEND_EQUATION_RGB=32777,xr.BLEND_SRC_ALPHA=32971,xr.BLEND_SRC_RGB=32969,xr.BLUE_BITS=3412,xr.BOOL=35670,xr.BOOL_VEC2=35671,xr.BOOL_VEC3=35672,xr.BOOL_VEC4=35673,xr.BROWSER_DEFAULT_WEBGL=37444,xr.BUFFER_SIZE=34660,xr.BUFFER_USAGE=34661,xr.BYTE=5120,xr.CCW=2305,xr.CLAMP_TO_EDGE=33071,xr.COLOR_ATTACHMENT0=36064,xr.COLOR_BUFFER_BIT=16384,xr.COLOR_CLEAR_VALUE=3106,xr.COLOR_WRITEMASK=3107,xr.COMPILE_STATUS=35713,xr.COMPRESSED_TEXTURE_FORMATS=34467,xr.CONSTANT_ALPHA=32771,xr.CONSTANT_COLOR=32769,xr.CONTEXT_LOST_WEBGL=37442,xr.CULL_FACE=2884,xr.CULL_FACE_MODE=2885,xr.CURRENT_PROGRAM=35725,xr.CURRENT_VERTEX_ATTRIB=34342,xr.CW=2304,xr.DECR=7683,xr.DECR_WRAP=34056,xr.DELETE_STATUS=35712,xr.DEPTH_ATTACHMENT=36096,xr.DEPTH_BITS=3414,xr.DEPTH_BUFFER_BIT=256,xr.DEPTH_CLEAR_VALUE=2931,xr.DEPTH_COMPONENT=6402,xr.DEPTH_COMPONENT16=33189,xr.DEPTH_FUNC=2932,xr.DEPTH_RANGE=2928,xr.DEPTH_STENCIL=34041,xr.DEPTH_STENCIL_ATTACHMENT=33306,xr.DEPTH_TEST=2929,xr.DEPTH_WRITEMASK=2930,xr.DITHER=3024,xr.DONT_CARE=4352,xr.DST_ALPHA=772,xr.DST_COLOR=774,xr.DYNAMIC_DRAW=35048,xr.ELEMENT_ARRAY_BUFFER=34963,xr.ELEMENT_ARRAY_BUFFER_BINDING=34965,xr.EQUAL=514,xr.FASTEST=4353,xr.FLOAT=5126,xr.FLOAT_MAT2=35674,xr.FLOAT_MAT3=35675,xr.FLOAT_MAT4=35676,xr.FLOAT_VEC2=35664,xr.FLOAT_VEC3=35665,xr.FLOAT_VEC4=35666,xr.FRAGMENT_SHADER=35632,xr.FRAMEBUFFER=36160,xr.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME=36049,xr.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE=36048,xr.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE=36051,xr.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL=36050,xr.FRAMEBUFFER_BINDING=36006,xr.FRAMEBUFFER_COMPLETE=36053,xr.FRAMEBUFFER_INCOMPLETE_ATTACHMENT=36054,xr.FRAMEBUFFER_INCOMPLETE_DIMENSIONS=36057,xr.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT=36055,xr.FRAMEBUFFER_UNSUPPORTED=36061,xr.FRONT=1028,xr.FRONT_AND_BACK=1032,xr.FRONT_FACE=2886,xr.FUNC_ADD=32774,xr.FUNC_REVERSE_SUBTRACT=32779,xr.FUNC_SUBTRACT=32778,xr.GENERATE_MIPMAP_HINT=33170,xr.GEQUAL=518,xr.GREATER=516,xr.GREEN_BITS=3411,xr.HIGH_FLOAT=36338,xr.HIGH_INT=36341,xr.INCR=7682,xr.INCR_WRAP=34055,xr.INT=5124,xr.INT_VEC2=35667,xr.INT_VEC3=35668,xr.INT_VEC4=35669,xr.INVALID_ENUM=1280,xr.INVALID_FRAMEBUFFER_OPERATION=1286,xr.INVALID_OPERATION=1282,xr.INVALID_VALUE=1281,xr.INVERT=5386,xr.KEEP=7680,xr.LEQUAL=515,xr.LESS=513,xr.LINEAR=9729,xr.LINEAR_MIPMAP_LINEAR=9987,xr.LINEAR_MIPMAP_NEAREST=9985,xr.LINES=1,xr.LINE_LOOP=2,xr.LINE_STRIP=3,xr.LINE_WIDTH=2849,xr.LINK_STATUS=35714,xr.LOW_FLOAT=36336,xr.LOW_INT=36339,xr.LUMINANCE=6409,xr.LUMINANCE_ALPHA=6410,xr.MAX_COMBINED_TEXTURE_IMAGE_UNITS=35661,xr.MAX_CUBE_MAP_TEXTURE_SIZE=34076,xr.MAX_FRAGMENT_UNIFORM_VECTORS=36349,xr.MAX_RENDERBUFFER_SIZE=34024,xr.MAX_TEXTURE_IMAGE_UNITS=34930,xr.MAX_TEXTURE_SIZE=3379,xr.MAX_VARYING_VECTORS=36348,xr.MAX_VERTEX_ATTRIBS=34921,xr.MAX_VERTEX_TEXTURE_IMAGE_UNITS=35660,xr.MAX_VERTEX_UNIFORM_VECTORS=36347,xr.MAX_VIEWPORT_DIMS=3386,xr.MEDIUM_FLOAT=36337,xr.MEDIUM_INT=36340,xr.MIRRORED_REPEAT=33648,xr.NEAREST=9728,xr.NEAREST_MIPMAP_LINEAR=9986,xr.NEAREST_MIPMAP_NEAREST=9984,xr.NEVER=512,xr.NICEST=4354,xr.NONE=0,xr.NOTEQUAL=517,xr.NO_ERROR=0,xr.ONE=1,xr.ONE_MINUS_CONSTANT_ALPHA=32772,xr.ONE_MINUS_CONSTANT_COLOR=32770,xr.ONE_MINUS_DST_ALPHA=773,xr.ONE_MINUS_DST_COLOR=775,xr.ONE_MINUS_SRC_ALPHA=771,xr.ONE_MINUS_SRC_COLOR=769,xr.OUT_OF_MEMORY=1285,xr.PACK_ALIGNMENT=3333,xr.POINTS=0,xr.POLYGON_OFFSET_FACTOR=32824,xr.POLYGON_OFFSET_FILL=32823,xr.POLYGON_OFFSET_UNITS=10752,xr.RED_BITS=3410,xr.RENDERBUFFER=36161,xr.RENDERBUFFER_ALPHA_SIZE=36179,xr.RENDERBUFFER_BINDING=36007,xr.RENDERBUFFER_BLUE_SIZE=36178,xr.RENDERBUFFER_DEPTH_SIZE=36180,xr.RENDERBUFFER_GREEN_SIZE=36177,xr.RENDERBUFFER_HEIGHT=36163,xr.RENDERBUFFER_INTERNAL_FORMAT=36164,xr.RENDERBUFFER_RED_SIZE=36176,xr.RENDERBUFFER_STENCIL_SIZE=36181,xr.RENDERBUFFER_WIDTH=36162,xr.RENDERER=7937,xr.REPEAT=10497,xr.REPLACE=7681,xr.RGB=6407,xr.RGB565=36194,xr.RGB5_A1=32855,xr.RGBA=6408,xr.RGBA4=32854,xr.SAMPLER_2D=35678,xr.SAMPLER_CUBE=35680,xr.SAMPLES=32937,xr.SAMPLE_ALPHA_TO_COVERAGE=32926,xr.SAMPLE_BUFFERS=32936,xr.SAMPLE_COVERAGE=32928,xr.SAMPLE_COVERAGE_INVERT=32939,xr.SAMPLE_COVERAGE_VALUE=32938,xr.SCISSOR_BOX=3088,xr.SCISSOR_TEST=3089,xr.SHADER_TYPE=35663,xr.SHADING_LANGUAGE_VERSION=35724,xr.SHORT=5122,xr.SRC_ALPHA=770,xr.SRC_ALPHA_SATURATE=776,xr.SRC_COLOR=768,xr.STATIC_DRAW=35044,xr.STENCIL_ATTACHMENT=36128,xr.STENCIL_BACK_FAIL=34817,xr.STENCIL_BACK_FUNC=34816,xr.STENCIL_BACK_PASS_DEPTH_FAIL=34818,xr.STENCIL_BACK_PASS_DEPTH_PASS=34819,xr.STENCIL_BACK_REF=36003,xr.STENCIL_BACK_VALUE_MASK=36004,xr.STENCIL_BACK_WRITEMASK=36005,xr.STENCIL_BITS=3415,xr.STENCIL_BUFFER_BIT=1024,xr.STENCIL_CLEAR_VALUE=2961,xr.STENCIL_FAIL=2964,xr.STENCIL_FUNC=2962,xr.STENCIL_INDEX=6401,xr.STENCIL_INDEX8=36168,xr.STENCIL_PASS_DEPTH_FAIL=2965,xr.STENCIL_PASS_DEPTH_PASS=2966,xr.STENCIL_REF=2967,xr.STENCIL_TEST=2960,xr.STENCIL_VALUE_MASK=2963,xr.STENCIL_WRITEMASK=2968,xr.STREAM_DRAW=35040,xr.SUBPIXEL_BITS=3408,xr.TEXTURE=5890,xr.TEXTURE0=33984,xr.TEXTURE1=33985,xr.TEXTURE10=33994,xr.TEXTURE11=33995,xr.TEXTURE12=33996,xr.TEXTURE13=33997,xr.TEXTURE14=33998,xr.TEXTURE15=33999,xr.TEXTURE16=34e3,xr.TEXTURE17=34001,xr.TEXTURE18=34002,xr.TEXTURE19=34003,xr.TEXTURE2=33986,xr.TEXTURE20=34004,xr.TEXTURE21=34005,xr.TEXTURE22=34006,xr.TEXTURE23=34007,xr.TEXTURE24=34008,xr.TEXTURE25=34009,xr.TEXTURE26=34010,xr.TEXTURE27=34011,xr.TEXTURE28=34012,xr.TEXTURE29=34013,xr.TEXTURE3=33987,xr.TEXTURE30=34014,xr.TEXTURE31=34015,xr.TEXTURE4=33988,xr.TEXTURE5=33989,xr.TEXTURE6=33990,xr.TEXTURE7=33991,xr.TEXTURE8=33992,xr.TEXTURE9=33993,xr.TEXTURE_2D=3553,xr.TEXTURE_BINDING_2D=32873,xr.TEXTURE_BINDING_CUBE_MAP=34068,xr.TEXTURE_CUBE_MAP=34067,xr.TEXTURE_CUBE_MAP_NEGATIVE_X=34070,xr.TEXTURE_CUBE_MAP_NEGATIVE_Y=34072,xr.TEXTURE_CUBE_MAP_NEGATIVE_Z=34074,xr.TEXTURE_CUBE_MAP_POSITIVE_X=34069,xr.TEXTURE_CUBE_MAP_POSITIVE_Y=34071,xr.TEXTURE_CUBE_MAP_POSITIVE_Z=34073,xr.TEXTURE_MAG_FILTER=10240,xr.TEXTURE_MIN_FILTER=10241,xr.TEXTURE_WRAP_S=10242,xr.TEXTURE_WRAP_T=10243,xr.TRIANGLES=4,xr.TRIANGLE_FAN=6,xr.TRIANGLE_STRIP=5,xr.UNPACK_ALIGNMENT=3317,xr.UNPACK_COLORSPACE_CONVERSION_WEBGL=37443,xr.UNPACK_FLIP_Y_WEBGL=37440,xr.UNPACK_PREMULTIPLY_ALPHA_WEBGL=37441,xr.UNSIGNED_BYTE=5121,xr.UNSIGNED_INT=5125,xr.UNSIGNED_SHORT=5123,xr.UNSIGNED_SHORT_4_4_4_4=32819,xr.UNSIGNED_SHORT_5_5_5_1=32820,xr.UNSIGNED_SHORT_5_6_5=33635,xr.VALIDATE_STATUS=35715,xr.VENDOR=7936,xr.VERSION=7938,xr.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING=34975,xr.VERTEX_ATTRIB_ARRAY_ENABLED=34338,xr.VERTEX_ATTRIB_ARRAY_NORMALIZED=34922,xr.VERTEX_ATTRIB_ARRAY_POINTER=34373,xr.VERTEX_ATTRIB_ARRAY_SIZE=34339,xr.VERTEX_ATTRIB_ARRAY_STRIDE=34340,xr.VERTEX_ATTRIB_ARRAY_TYPE=34341,xr.VERTEX_SHADER=35633,xr.VIEWPORT=2978,xr.ZERO=0,br.MASK=1073741824,br.unknown=0,br.key_a=4,br.key_b=5,br.key_c=6,br.key_d=7,br.key_e=8,br.key_f=9,br.key_g=10,br.key_h=11,br.key_i=12,br.key_j=13,br.key_k=14,br.key_l=15,br.key_m=16,br.key_n=17,br.key_o=18,br.key_p=19,br.key_q=20,br.key_r=21,br.key_s=22,br.key_t=23,br.key_u=24,br.key_v=25,br.key_w=26,br.key_x=27,br.key_y=28,br.key_z=29,br.key_1=30,br.key_2=31,br.key_3=32,br.key_4=33,br.key_5=34,br.key_6=35,br.key_7=36,br.key_8=37,br.key_9=38,br.key_0=39,br.enter=40,br.escape=41,br.backspace=42,br.tab=43,br.space=44,br.minus=45,br.equals=46,br.leftbracket=47,br.rightbracket=48,br.backslash=49,br.nonushash=50,br.semicolon=51,br.apostrophe=52,br.grave=53,br.comma=54,br.period=55,br.slash=56,br.capslock=57,br.f1=58,br.f2=59,br.f3=60,br.f4=61,br.f5=62,br.f6=63,br.f7=64,br.f8=65,br.f9=66,br.f10=67,br.f11=68,br.f12=69,br.printscreen=70,br.scrolllock=71,br.pause=72,br.insert=73,br.home=74,br.pageup=75,br["delete"]=76,br.end=77,br.pagedown=78,br.right=79,br.left=80,br.down=81,br.up=82,br.numlockclear=83,br.kp_divide=84,br.kp_multiply=85,br.kp_minus=86,br.kp_plus=87,br.kp_enter=88,br.kp_1=89,br.kp_2=90,br.kp_3=91,br.kp_4=92,br.kp_5=93,br.kp_6=94,br.kp_7=95,br.kp_8=96,br.kp_9=97,br.kp_0=98,br.kp_period=99,br.nonusbackslash=100,br.application=101,br.power=102,br.kp_equals=103,br.f13=104,br.f14=105,br.f15=106,br.f16=107,br.f17=108,br.f18=109,br.f19=110,br.f20=111,br.f21=112,br.f22=113,br.f23=114,br.f24=115,br.execute=116,br.help=117,br.menu=118,br.select=119,br.stop=120,br.again=121,br.undo=122,br.cut=123,br.copy=124,br.paste=125,br.find=126,br.mute=127,br.volumeup=128,br.volumedown=129,br.kp_comma=133,br.kp_equalsas400=134,br.international1=135,br.international2=136,br.international3=137,br.international4=138,br.international5=139,br.international6=140,br.international7=141,br.international8=142,br.international9=143,br.lang1=144,br.lang2=145,br.lang3=146,br.lang4=147,br.lang5=148,br.lang6=149,br.lang7=150,br.lang8=151,br.lang9=152,br.alterase=153,br.sysreq=154,br.cancel=155,br.clear=156,br.prior=157,br.return2=158,br.separator=159,br.out=160,br.oper=161,br.clearagain=162,br.crsel=163,br.exsel=164,br.kp_00=176,br.kp_000=177,br.thousandsseparator=178,br.decimalseparator=179,br.currencyunit=180,br.currencysubunit=181,br.kp_leftparen=182,br.kp_rightparen=183,br.kp_leftbrace=184,br.kp_rightbrace=185,br.kp_tab=186,br.kp_backspace=187,br.kp_a=188,br.kp_b=189,br.kp_c=190,br.kp_d=191,br.kp_e=192,br.kp_f=193,br.kp_xor=194,br.kp_power=195,br.kp_percent=196,br.kp_less=197,br.kp_greater=198,br.kp_ampersand=199,br.kp_dblampersand=200,br.kp_verticalbar=201,br.kp_dblverticalbar=202,br.kp_colon=203,br.kp_hash=204,br.kp_space=205,br.kp_at=206,br.kp_exclam=207,br.kp_memstore=208,br.kp_memrecall=209,br.kp_memclear=210,br.kp_memadd=211,br.kp_memsubtract=212,br.kp_memmultiply=213,br.kp_memdivide=214,br.kp_plusminus=215,br.kp_clear=216,br.kp_clearentry=217,br.kp_binary=218,br.kp_octal=219,br.kp_decimal=220,br.kp_hexadecimal=221,br.lctrl=224,br.lshift=225,br.lalt=226,br.lmeta=227,br.rctrl=228,br.rshift=229,br.ralt=230,br.rmeta=231,br.mode=257,br.audionext=258,br.audioprev=259,br.audiostop=260,br.audioplay=261,br.audiomute=262,br.mediaselect=263,br.www=264,br.mail=265,br.calculator=266,br.computer=267,br.ac_search=268,br.ac_home=269,br.ac_back=270,br.ac_forward=271,br.ac_stop=272,br.ac_refresh=273,br.ac_bookmarks=274,br.brightnessdown=275,br.brightnessup=276,br.displayswitch=277,br.kbdillumtoggle=278,br.kbdillumdown=279,br.kbdillumup=280,br.eject=281,br.sleep=282,br.app1=283,br.app2=284,br.scancode_names=[null,null,null,null,"A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","1","2","3","4","5","6","7","8","9","0","Enter","Escape","Backspace","Tab","Space","-","=","[","]","\\","#",";","'","`",",",".","/","CapsLock","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","PrintScreen","ScrollLock","Pause","Insert","Home","PageUp","Delete","End","PageDown","Right","Left","Down","Up","Numlock","Keypad /","Keypad *","Keypad -","Keypad +","Keypad Enter","Keypad 1","Keypad 2","Keypad 3","Keypad 4","Keypad 5","Keypad 6","Keypad 7","Keypad 8","Keypad 9","Keypad 0","Keypad .",null,"Application","Power","Keypad =","F13","F14","F15","F16","F17","F18","F19","F20","F21","F22","F23","F24","Execute","Help","Menu","Select","Stop","Again","Undo","Cut","Copy","Paste","Find","Mute","VolumeUp","VolumeDown",null,null,null,"Keypad ,","Keypad = (AS400)",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"AltErase","SysReq","Cancel","Clear","Prior","Enter","Separator","Out","Oper","Clear / Again","CrSel","ExSel",null,null,null,null,null,null,null,null,null,null,null,"Keypad 00","Keypad 000","ThousandsSeparator","DecimalSeparator","CurrencyUnit","CurrencySubUnit","Keypad (","Keypad )","Keypad {","Keypad }","Keypad Tab","Keypad Backspace","Keypad A","Keypad B","Keypad C","Keypad D","Keypad E","Keypad F","Keypad XOR","Keypad ^","Keypad %","Keypad <","Keypad >","Keypad &","Keypad &&","Keypad |","Keypad ||","Keypad :","Keypad #","Keypad Space","Keypad @","Keypad !","Keypad MemStore","Keypad MemRecall","Keypad MemClear","Keypad MemAdd","Keypad MemSubtract","Keypad MemMultiply","Keypad MemDivide","Keypad +/-","Keypad Clear","Keypad ClearEntry","Keypad Binary","Keypad Octal","Keypad Decimal","Keypad Hexadecimal",null,null,"Left Ctrl","Left Shift","Left Alt","Left Meta","Right Ctrl","Right Shift","Right Alt","Right Meta",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"ModeSwitch","AudioNext","AudioPrev","AudioStop","AudioPlay","AudioMute","MediaSelect","WWW","Mail","Calculator","Computer","AC Search","AC Home","AC Back","AC Forward","AC Stop","AC Refresh","AC Bookmarks","BrightnessDown","BrightnessUp","DisplaySwitch","KBDIllumToggle","KBDIllumDown","KBDIllumUp","Eject","Sleep"],Sr.unknown=0,Sr.enter=13,Sr.escape=27,Sr.backspace=8,Sr.tab=9,Sr.space=32,Sr.exclaim=33,Sr.quotedbl=34,Sr.hash=35,Sr.percent=37,Sr.dollar=36,Sr.ampersand=38,Sr.quote=39,Sr.leftparen=40,Sr.rightparen=41,Sr.asterisk=42,Sr.plus=43,Sr.comma=44,Sr.minus=45,Sr.period=46,Sr.slash=47,Sr.key_0=48,Sr.key_1=49,Sr.key_2=50,Sr.key_3=51,Sr.key_4=52,Sr.key_5=53,Sr.key_6=54,Sr.key_7=55,Sr.key_8=56,Sr.key_9=57,Sr.colon=58,Sr.semicolon=59,Sr.less=60,Sr.equals=61,Sr.greater=62,Sr.question=63,Sr.at=64,Sr.leftbracket=91,Sr.backslash=92,Sr.rightbracket=93,Sr.caret=94,Sr.underscore=95,Sr.backquote=96,Sr.key_a=97,Sr.key_b=98,Sr.key_c=99,Sr.key_d=100,Sr.key_e=101,Sr.key_f=102,Sr.key_g=103,Sr.key_h=104,Sr.key_i=105,Sr.key_j=106,Sr.key_k=107,Sr.key_l=108,Sr.key_m=109,Sr.key_n=110,Sr.key_o=111,Sr.key_p=112,Sr.key_q=113,Sr.key_r=114,Sr.key_s=115,Sr.key_t=116,Sr.key_u=117,Sr.key_v=118,Sr.key_w=119,Sr.key_x=120,Sr.key_y=121,Sr.key_z=122,Sr.capslock=Sr.from_scan(br.capslock),Sr.f1=Sr.from_scan(br.f1),Sr.f2=Sr.from_scan(br.f2),Sr.f3=Sr.from_scan(br.f3),Sr.f4=Sr.from_scan(br.f4),Sr.f5=Sr.from_scan(br.f5),Sr.f6=Sr.from_scan(br.f6),Sr.f7=Sr.from_scan(br.f7),Sr.f8=Sr.from_scan(br.f8),Sr.f9=Sr.from_scan(br.f9),Sr.f10=Sr.from_scan(br.f10),Sr.f11=Sr.from_scan(br.f11),Sr.f12=Sr.from_scan(br.f12),Sr.printscreen=Sr.from_scan(br.printscreen),Sr.scrolllock=Sr.from_scan(br.scrolllock),Sr.pause=Sr.from_scan(br.pause),Sr.insert=Sr.from_scan(br.insert),Sr.home=Sr.from_scan(br.home),Sr.pageup=Sr.from_scan(br.pageup),Sr["delete"]=127,Sr.end=Sr.from_scan(br.end),Sr.pagedown=Sr.from_scan(br.pagedown),Sr.right=Sr.from_scan(br.right),Sr.left=Sr.from_scan(br.left),Sr.down=Sr.from_scan(br.down),Sr.up=Sr.from_scan(br.up),Sr.numlockclear=Sr.from_scan(br.numlockclear),Sr.kp_divide=Sr.from_scan(br.kp_divide),Sr.kp_multiply=Sr.from_scan(br.kp_multiply),Sr.kp_minus=Sr.from_scan(br.kp_minus),Sr.kp_plus=Sr.from_scan(br.kp_plus),Sr.kp_enter=Sr.from_scan(br.kp_enter),Sr.kp_1=Sr.from_scan(br.kp_1),Sr.kp_2=Sr.from_scan(br.kp_2),Sr.kp_3=Sr.from_scan(br.kp_3),Sr.kp_4=Sr.from_scan(br.kp_4),Sr.kp_5=Sr.from_scan(br.kp_5),Sr.kp_6=Sr.from_scan(br.kp_6),Sr.kp_7=Sr.from_scan(br.kp_7),Sr.kp_8=Sr.from_scan(br.kp_8),Sr.kp_9=Sr.from_scan(br.kp_9),Sr.kp_0=Sr.from_scan(br.kp_0),Sr.kp_period=Sr.from_scan(br.kp_period),Sr.application=Sr.from_scan(br.application),Sr.power=Sr.from_scan(br.power),Sr.kp_equals=Sr.from_scan(br.kp_equals),Sr.f13=Sr.from_scan(br.f13),Sr.f14=Sr.from_scan(br.f14),Sr.f15=Sr.from_scan(br.f15),Sr.f16=Sr.from_scan(br.f16),Sr.f17=Sr.from_scan(br.f17),Sr.f18=Sr.from_scan(br.f18),Sr.f19=Sr.from_scan(br.f19),Sr.f20=Sr.from_scan(br.f20),Sr.f21=Sr.from_scan(br.f21),Sr.f22=Sr.from_scan(br.f22),Sr.f23=Sr.from_scan(br.f23),Sr.f24=Sr.from_scan(br.f24),Sr.execute=Sr.from_scan(br.execute),Sr.help=Sr.from_scan(br.help),Sr.menu=Sr.from_scan(br.menu),Sr.select=Sr.from_scan(br.select),Sr.stop=Sr.from_scan(br.stop),Sr.again=Sr.from_scan(br.again),Sr.undo=Sr.from_scan(br.undo),Sr.cut=Sr.from_scan(br.cut),Sr.copy=Sr.from_scan(br.copy),Sr.paste=Sr.from_scan(br.paste),Sr.find=Sr.from_scan(br.find),Sr.mute=Sr.from_scan(br.mute),Sr.volumeup=Sr.from_scan(br.volumeup),Sr.volumedown=Sr.from_scan(br.volumedown),Sr.kp_comma=Sr.from_scan(br.kp_comma),Sr.kp_equalsas400=Sr.from_scan(br.kp_equalsas400),Sr.alterase=Sr.from_scan(br.alterase),Sr.sysreq=Sr.from_scan(br.sysreq),Sr.cancel=Sr.from_scan(br.cancel),Sr.clear=Sr.from_scan(br.clear),Sr.prior=Sr.from_scan(br.prior),Sr.return2=Sr.from_scan(br.return2),Sr.separator=Sr.from_scan(br.separator),Sr.out=Sr.from_scan(br.out),Sr.oper=Sr.from_scan(br.oper),Sr.clearagain=Sr.from_scan(br.clearagain),Sr.crsel=Sr.from_scan(br.crsel),Sr.exsel=Sr.from_scan(br.exsel),Sr.kp_00=Sr.from_scan(br.kp_00),Sr.kp_000=Sr.from_scan(br.kp_000),Sr.thousandsseparator=Sr.from_scan(br.thousandsseparator),Sr.decimalseparator=Sr.from_scan(br.decimalseparator),Sr.currencyunit=Sr.from_scan(br.currencyunit),Sr.currencysubunit=Sr.from_scan(br.currencysubunit),Sr.kp_leftparen=Sr.from_scan(br.kp_leftparen),Sr.kp_rightparen=Sr.from_scan(br.kp_rightparen),Sr.kp_leftbrace=Sr.from_scan(br.kp_leftbrace),Sr.kp_rightbrace=Sr.from_scan(br.kp_rightbrace),Sr.kp_tab=Sr.from_scan(br.kp_tab),Sr.kp_backspace=Sr.from_scan(br.kp_backspace),Sr.kp_a=Sr.from_scan(br.kp_a),Sr.kp_b=Sr.from_scan(br.kp_b),Sr.kp_c=Sr.from_scan(br.kp_c),Sr.kp_d=Sr.from_scan(br.kp_d),Sr.kp_e=Sr.from_scan(br.kp_e),Sr.kp_f=Sr.from_scan(br.kp_f),Sr.kp_xor=Sr.from_scan(br.kp_xor),Sr.kp_power=Sr.from_scan(br.kp_power),Sr.kp_percent=Sr.from_scan(br.kp_percent),Sr.kp_less=Sr.from_scan(br.kp_less),Sr.kp_greater=Sr.from_scan(br.kp_greater),Sr.kp_ampersand=Sr.from_scan(br.kp_ampersand),Sr.kp_dblampersand=Sr.from_scan(br.kp_dblampersand),Sr.kp_verticalbar=Sr.from_scan(br.kp_verticalbar),Sr.kp_dblverticalbar=Sr.from_scan(br.kp_dblverticalbar),Sr.kp_colon=Sr.from_scan(br.kp_colon),Sr.kp_hash=Sr.from_scan(br.kp_hash),Sr.kp_space=Sr.from_scan(br.kp_space),Sr.kp_at=Sr.from_scan(br.kp_at),Sr.kp_exclam=Sr.from_scan(br.kp_exclam),Sr.kp_memstore=Sr.from_scan(br.kp_memstore),Sr.kp_memrecall=Sr.from_scan(br.kp_memrecall),Sr.kp_memclear=Sr.from_scan(br.kp_memclear),Sr.kp_memadd=Sr.from_scan(br.kp_memadd),Sr.kp_memsubtract=Sr.from_scan(br.kp_memsubtract),Sr.kp_memmultiply=Sr.from_scan(br.kp_memmultiply),Sr.kp_memdivide=Sr.from_scan(br.kp_memdivide),Sr.kp_plusminus=Sr.from_scan(br.kp_plusminus),Sr.kp_clear=Sr.from_scan(br.kp_clear),Sr.kp_clearentry=Sr.from_scan(br.kp_clearentry),Sr.kp_binary=Sr.from_scan(br.kp_binary),Sr.kp_octal=Sr.from_scan(br.kp_octal),Sr.kp_decimal=Sr.from_scan(br.kp_decimal),Sr.kp_hexadecimal=Sr.from_scan(br.kp_hexadecimal),Sr.lctrl=Sr.from_scan(br.lctrl),Sr.lshift=Sr.from_scan(br.lshift),Sr.lalt=Sr.from_scan(br.lalt),Sr.lmeta=Sr.from_scan(br.lmeta),Sr.rctrl=Sr.from_scan(br.rctrl),Sr.rshift=Sr.from_scan(br.rshift),Sr.ralt=Sr.from_scan(br.ralt),Sr.rmeta=Sr.from_scan(br.rmeta),Sr.mode=Sr.from_scan(br.mode),Sr.audionext=Sr.from_scan(br.audionext),Sr.audioprev=Sr.from_scan(br.audioprev),Sr.audiostop=Sr.from_scan(br.audiostop),Sr.audioplay=Sr.from_scan(br.audioplay),Sr.audiomute=Sr.from_scan(br.audiomute),Sr.mediaselect=Sr.from_scan(br.mediaselect),Sr.www=Sr.from_scan(br.www),Sr.mail=Sr.from_scan(br.mail),Sr.calculator=Sr.from_scan(br.calculator),Sr.computer=Sr.from_scan(br.computer),Sr.ac_search=Sr.from_scan(br.ac_search),Sr.ac_home=Sr.from_scan(br.ac_home),Sr.ac_back=Sr.from_scan(br.ac_back),Sr.ac_forward=Sr.from_scan(br.ac_forward),Sr.ac_stop=Sr.from_scan(br.ac_stop),Sr.ac_refresh=Sr.from_scan(br.ac_refresh),Sr.ac_bookmarks=Sr.from_scan(br.ac_bookmarks),Sr.brightnessdown=Sr.from_scan(br.brightnessdown),Sr.brightnessup=Sr.from_scan(br.brightnessup),Sr.displayswitch=Sr.from_scan(br.displayswitch),Sr.kbdillumtoggle=Sr.from_scan(br.kbdillumtoggle),Sr.kbdillumdown=Sr.from_scan(br.kbdillumdown),Sr.kbdillumup=Sr.from_scan(br.kbdillumup),Sr.eject=Sr.from_scan(br.eject),Sr.sleep=Sr.from_scan(br.sleep),Pr.count=0,Dr.i64tmp=function(e){var t,r=new Cr(0,0);return t=r}(this),Fr.BYTES_PER_ELEMENT=1,h.main();
}("undefined"!=typeof console?console:{log:function(){}},"undefined"!=typeof window?window:"undefined"!=typeof e?e:"undefined"!=typeof self?self:void 0);t.BABYLON}).call(t,function(){return this}())}]),angular.module("cloudbox").run(["$templateCache",function(e){e.put("app/home/home.html",'<div class="soundscape" style="display:none"><div class="row"><div class="col-xs-12 col-sm-6 col-md-4" data-ng-repeat="x in tracks"><div data-id="{{x.id}}" style="display:block; float: left; width: 700px; background-color:#fff;height: 140px;" class="soundCloudCard" ng-click="goVisualize(x.id)"><div style="width:100%; float:left"><div style="width:20%; float:left;"><img src="{{x.user.avatar_url}}" style="width:100%; float:left"></div><div style="width:80%; float:left;"><h4><i></i> {{x.title}}</h4><img src="{{x.waveform_url}}" style="width:100%; float:left"></div></div></div></div></div></div>'),e.put("app/main/main.html",'<div class="container"><form ng-submit="submit(tracksearch)" id="tracksearch" style="z-index:9999999; position:absolute; top:10px; left:10px;"><input type="text" ng-model="tracksearch" name="tracksearch" id="tracksearchInput" placeholder="{{placeHolder}}"> <input type="submit" id="submit" value="Submit"></form><div class="soundscape" ng-controller="HomeController"><div class="soundBlockContainer"><div class="soundBlock" data-ng-repeat="x in tracks" ng-click="goVisualize(x)"><div data-id="{{x.id}}" data-index="{{$index}}" class="soundCloudCard"><div class="soundBlockImgContainer"><img src="{{x.user.avatar_url}}" class="width100"></div><div class="soudBlockMetaContainer"><h4 class="width100"><i></i> {{x.title}}</h4><img src="{{x.waveform_url}}" class="width100"></div></div></div></div></div></div>'),e.put("app/play/play.html",'<div class="container"><form ng-submit="submit(tracksearch)" id="tracksearch" style="z-index:9999999; position:absolute; top:10px; left:10px;"><input type="text" ng-model="tracksearch" name="tracksearch" id="tracksearchInput" placeholder="{{placeHolder}}"> <input type="submit" id="submit" value="Submit"></form></div>'),e.put("app/components/navbar/navbar.html",'<nav class="navbar"><a href="https://github.com/Swiip/generator-gulp-angular">Gulp Angular</a><ul><li class="active"><a ng-href="#">Home</a></li><li><a ng-href="#">About</a></li><li><a ng-href="#">Contact</a></li></ul><ul class="acme-navbar-text"><li>Application was created {{ vm.relativeDate }}.</li></ul></nav>')}]);
//# sourceMappingURL=../maps/scripts/app-46c72cd499.js.map
